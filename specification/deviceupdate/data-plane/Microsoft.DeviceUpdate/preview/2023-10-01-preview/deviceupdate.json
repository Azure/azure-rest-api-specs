{
  "swagger": "2.0",
  "info": {
    "title": "DeviceUpdateClient",
    "description": "Device Update for IoT Hub is an Azure service that enables customers to publish updates for their IoT devices to the cloud, and then deploy that update to their devices (approve updates to groups of devices managed and provisioned in IoT Hub). It leverages the proven security and reliability of the Windows Update platform, optimized for IoT devices. It works globally and knows when and how to update devices, enabling customers to focus on their business goals and let Device Update for IoT Hub handle the updates.",
    "version": "2023-10-01-preview"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": true,
    "parameters": [
      {
        "$ref": "#/parameters/EndpointParameter"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "https://api.adu.microsoft.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "https://api.adu.microsoft.com/.default": "Default authorization scope."
      }
    }
  },
  "paths": {
    "/deviceUpdate/{instanceId}/updates": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a list of all updates that have been imported to Device Update for IoT Hub.",
        "operationId": "DeviceUpdate_ListUpdates",
        "x-ms-examples": {
          "DeviceUpdate_ListUpdates": {
            "$ref": "./examples/DeviceUpdate_ListUpdates.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Request updates matching a free-text search expression."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional to filter updates by isDeployable property."
          }
        ],
        "responses": {
          "200": {
            "description": "All imported updates, or empty list if there is none.",
            "schema": {
              "$ref": "#/definitions/UpdateList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/UpdateFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates:import": {
      "post": {
        "tags": [
          "Update management"
        ],
        "operationId": "DeviceUpdate_ImportUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceUpdate_ImportUpdate": {
            "$ref": "./examples/DeviceUpdate_ImportUpdate.json"
          }
        },
        "description": "Import new update version. This is a long-running-operation; use Operation-Location response header value to check for operation status.",
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "updateToImport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportUpdateInput"
            },
            "description": "The update to be imported (see schema https://json.schemastore.org/azure-deviceupdate-import-manifest-5.0.json for details)."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted update import request; background operation location to track status is specified in Operation-Location response header.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "Url to retrieve the import operation status."
              }
            }
          },
          "200": {
            "description": "The requested update version.",
            "schema": {
              "$ref": "#/definitions/Update"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers/{provider}/names/{name}/versions/{version}": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a specific update version.",
        "operationId": "DeviceUpdate_GetUpdate",
        "x-ms-examples": {
          "DeviceUpdate_GetUpdate": {
            "$ref": "./examples/DeviceUpdate_GetUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateVersionParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested update version.",
            "schema": {
              "$ref": "#/definitions/Update"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Update management"
        ],
        "description": "Delete a specific update version. This is a long-running-operation; use Operation-Location response header value to check for operation status.",
        "operationId": "DeviceUpdate_DeleteUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceUpdate_DeleteUpdate": {
            "$ref": "./examples/DeviceUpdate_DeleteUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateVersionParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted update deletion request; background operation location to track status is specified in Operation-Location response header.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "Url to retrieve the operation status"
              }
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a list of all update providers that have been imported to Device Update for IoT Hub.",
        "operationId": "DeviceUpdate_ListProviders",
        "x-ms-examples": {
          "DeviceUpdate_ListProviders": {
            "$ref": "./examples/DeviceUpdate_ListProviders.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All imported update providers, or empty list if there is none.",
            "schema": {
              "$ref": "#/definitions/StringsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers/{provider}/names": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a list of all update names that match the specified provider.",
        "operationId": "DeviceUpdate_ListNames",
        "x-ms-examples": {
          "DeviceUpdate_ListNames": {
            "$ref": "./examples/DeviceUpdate_ListNames.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All update names that match the specified provider, or empty list if there is none.",
            "schema": {
              "$ref": "#/definitions/StringsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers/{provider}/names/{name}/versions": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a list of all update versions that match the specified provider and name.",
        "operationId": "DeviceUpdate_ListVersions",
        "x-ms-examples": {
          "DeviceUpdate_ListVersions": {
            "$ref": "./examples/DeviceUpdate_ListVersions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional to filter updates by isDeployable property."
          }
        ],
        "responses": {
          "200": {
            "description": "All update versions that match the specified provider and name, or empty list if there is none.",
            "schema": {
              "$ref": "#/definitions/StringsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/UpdateFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers/{provider}/names/{name}/versions/{version}/files": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a list of all update file identifiers for the specified version.",
        "operationId": "DeviceUpdate_ListFiles",
        "x-ms-examples": {
          "DeviceUpdate_ListFiles": {
            "$ref": "./examples/DeviceUpdate_ListFiles.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateVersionParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All update file identifiers for the specified version.",
            "schema": {
              "$ref": "#/definitions/StringsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/providers/{provider}/names/{name}/versions/{version}/files/{fileId}": {
      "get": {
        "tags": [
          "Update management"
        ],
        "description": "Get a specific update file from the version.",
        "operationId": "DeviceUpdate_GetFile",
        "x-ms-examples": {
          "DeviceUpdate_GetFile": {
            "$ref": "./examples/DeviceUpdate_GetFile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/UpdateProviderParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateVersionParameter"
          },
          {
            "$ref": "#/parameters/FileIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested file entity.",
            "schema": {
              "$ref": "#/definitions/UpdateFile"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/operations": {
      "get": {
        "tags": [
          "Update management"
        ],
        "operationId": "DeviceUpdate_ListOperationStatuses",
        "description": "Get a list of all import update operations. Completed operations are kept for 7 days before auto-deleted. Delete operations are not returned by this API version.",
        "x-ms-examples": {
          "DeviceUpdate_ListOperationStatuses": {
            "$ref": "./examples/DeviceUpdate_ListOperationStatuses.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional to filter operations by status property. Only one specific filter is supported: \"status eq 'NotStarted' or status eq 'Running'\""
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/UpdateOperationsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/OperationFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/updates/operations/{operationId}": {
      "get": {
        "tags": [
          "Update management"
        ],
        "operationId": "DeviceUpdate_GetOperationStatus",
        "description": "Retrieve operation status.",
        "x-ms-examples": {
          "DeviceUpdate_GetOperationStatus": {
            "$ref": "./examples/DeviceUpdate_GetOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation status.",
            "headers": {
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before checking the operation status again."
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateOperation"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceClasses": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of all device classes (sets of devices compatible with the same updates based on the model Id and compat properties reported in the Device Update PnP interface in IoT Hub) for all devices connected to Device Update for IoT Hub.",
        "operationId": "DeviceManagement_ListDeviceClasses",
        "x-ms-examples": {
          "DeviceManagement_ListDeviceClasses": {
            "$ref": "./examples/DeviceManagement_ListDeviceClasses.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of device classes returned. You can filter on friendly name."
          }
        ],
        "responses": {
          "200": {
            "description": "All device classes.",
            "schema": {
              "$ref": "#/definitions/DeviceClassesList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeviceClassFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceClasses/{deviceClassId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the properties of a device class.",
        "operationId": "DeviceManagement_GetDeviceClass",
        "x-ms-examples": {
          "DeviceManagement_GetDeviceClass": {
            "$ref": "./examples/DeviceManagement_GetDeviceClass.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device class properties.",
            "schema": {
              "$ref": "#/definitions/DeviceClass"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Update device class details.",
        "operationId": "DeviceManagement_UpdateDeviceClass",
        "consumes": [
          "application/merge-patch+json"
        ],
        "x-ms-examples": {
          "DeviceManagement_UpdateDeviceClass": {
            "$ref": "./examples/DeviceManagement_UpdateDeviceClass.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deviceClassPatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchBody"
            },
            "description": "The device class json merge patch body. Currently only supports patching friendlyName."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated device class subgroup details.",
            "schema": {
              "$ref": "#/definitions/DeviceClass"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Deletes a device class. Device classes are created automatically when Device Update-enabled devices are connected to the hub but are not automatically cleaned up since they are referenced by DeviceClassSubgroups. If the user has deleted all DeviceClassSubgroups for a device class they can also delete the device class to remove the records from the system and to stop checking the compatibility of this device class with new updates. If a device is ever reconnected for this device class it will be re-created.",
        "operationId": "DeviceManagement_DeleteDeviceClass",
        "x-ms-examples": {
          "DeviceManagement_DeleteDeviceClass": {
            "$ref": "./examples/DeviceManagement_DeleteDeviceClass.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceClasses/{deviceClassId}/installableUpdates": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of installable updates for a device class.",
        "operationId": "DeviceManagement_ListInstallableUpdatesForDeviceClass",
        "x-ms-examples": {
          "DeviceManagement_ListInstallableUpdatesForDeviceClass": {
            "$ref": "./examples/DeviceManagement_ListInstallableUpdatesForDeviceClass.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The installable update information for the device class.  Returns empty list in case of no installable updates",
            "schema": {
              "$ref": "#/definitions/UpdateInfoList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/devices": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of devices connected to Device Update for IoT Hub.",
        "operationId": "DeviceManagement_ListDevices",
        "x-ms-examples": {
          "DeviceManagement_ListDevices": {
            "$ref": "./examples/DeviceManagement_ListDevices.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of devices returned. You can filter on GroupId, DeviceClassId, or GroupId and DeploymentStatus. Use DeploymentStatus eq null to query for devices with no deployment status (that have never been deployed to)."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All devices connected to Device Update for IoT Hub.",
            "schema": {
              "$ref": "#/definitions/DevicesList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeviceFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/devices:import": {
      "post": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_ImportDevices",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceManagement_ImportDevices": {
            "$ref": "./examples/DeviceManagement_ImportDevices.json"
          }
        },
        "description": "Import existing devices from IoT Hub. This is a long-running-operation; use Operation-Location response header value to check for operation status.",
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "importType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportType"
            },
            "description": "The types of devices to import."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted device import request; background operation location to track status is specified in Operation-Location response header.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "Url to retrieve the device import operation status."
              }
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/devices/{deviceId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the device properties and latest deployment status for a device connected to Device Update for IoT Hub.",
        "operationId": "DeviceManagement_GetDevice",
        "x-ms-examples": {
          "DeviceManagement_GetDevice": {
            "$ref": "./examples/DeviceManagement_GetDevice.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device properties and latest deployment status.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/devices/{deviceId}/modules/{moduleId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the device module properties and latest deployment status for a device module connected to Device Update for IoT Hub.",
        "operationId": "DeviceManagement_GetDeviceModule",
        "x-ms-examples": {
          "DeviceManagement_GetDevice": {
            "$ref": "./examples/DeviceManagement_GetDeviceModule.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceIdParameter"
          },
          {
            "$ref": "#/parameters/ModuleIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device properties and latest deployment status.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/updateCompliance": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the breakdown of how many devices are on their latest update, have new updates available, or are in progress receiving new updates.",
        "operationId": "DeviceManagement_GetUpdateCompliance",
        "x-ms-examples": {
          "DeviceManagement_GetUpdateCompliance": {
            "$ref": "./examples/DeviceManagement_GetUpdateCompliance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The count of devices that have the latest update, have updates available, or are in progress receiving new updates.",
            "schema": {
              "$ref": "#/definitions/UpdateCompliance"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/limits": {
      "get": {
        "tags": [
          "Instance management"
        ],
        "description": "Gets the instance limits for active deployments, devices, device classes, and groups.",
        "operationId": "InstanceManagement_GetLimits",
        "x-ms-examples": {
          "InstanceManagement_GetLimits": {
            "$ref": "./examples/InstanceManagement_GetLimits.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The instance limits for active deployments, devices, device classes, and groups.",
            "schema": {
              "$ref": "#/definitions/LimitsResponse"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of all device groups.  The $default group will always be returned first.",
        "operationId": "DeviceManagement_ListGroups",
        "x-ms-examples": {
          "DeviceManagement_ListGroups": {
            "$ref": "./examples/DeviceManagement_ListGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "name": "orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-client-name": "orderBy",
            "description": "Orders the set of groups returned. You can order by groupId, deviceCount, createdDate, subgroupsWithNewUpdatesAvailableCount, subgroupsWithUpdatesInProgressCount, or subgroupsOnLatestUpdateCount."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device groups.",
            "schema": {
              "$ref": "#/definitions/GroupsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/GroupOrderBy",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the device group properties.",
        "operationId": "DeviceManagement_GetGroup",
        "x-ms-examples": {
          "DeviceManagement_GetGroup": {
            "$ref": "./examples/DeviceManagement_GetGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device group properties.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Deletes a device group. This group is automatically created when a Device Update-enabled device is connected to the hub and reports its properties. Groups, subgroups, and deployments are not automatically cleaned up but are retained for history purposes. Users can call this method to delete a group if they do not need to retain any of the history of the group and no longer need it. If a device is ever connected again for this group after the group was deleted it will be automatically re-created but there will be no history.",
        "operationId": "DeviceManagement_DeleteGroup",
        "x-ms-examples": {
          "DeviceManagement_DeleteGroup": {
            "$ref": "./examples/DeviceManagement_DeleteGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/updateCompliance": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Get device group update compliance information such as how many devices are on their latest update, how many need new updates, and how many are in progress on receiving a new update.",
        "operationId": "DeviceManagement_GetUpdateComplianceForGroup",
        "x-ms-examples": {
          "DeviceManagement_GetUpdateComplianceForGroup": {
            "$ref": "./examples/DeviceManagement_GetUpdateComplianceForGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device group update compliance information.",
            "schema": {
              "$ref": "#/definitions/UpdateCompliance"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/bestUpdates": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Get the best available updates for a device group and a count of how many devices need each update.",
        "operationId": "DeviceManagement_ListBestUpdatesForGroup",
        "x-ms-examples": {
          "DeviceManagement_ListBestUpdatesForGroup": {
            "$ref": "./examples/DeviceManagement_ListBestUpdatesForGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The best available updates for a device group, the device class subgroup, and a count of how many devices need each update.",
            "schema": {
              "$ref": "#/definitions/DeviceClassSubgroupUpdatableDevicesList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deployments": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of deployments for a device group.",
        "operationId": "DeviceManagement_ListDeploymentsForGroup",
        "x-ms-examples": {
          "DeviceManagement_ListDeploymentsForGroup": {
            "$ref": "./examples/DeviceManagement_ListDeploymentsForGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-client-name": "orderBy",
            "description": "Orders the set of deployments returned. You can order by start date."
          }
        ],
        "responses": {
          "200": {
            "description": "All deployments for the group.",
            "schema": {
              "$ref": "#/definitions/DeploymentsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentOrderBy",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the deployment properties.",
        "operationId": "DeviceManagement_GetDeployment",
        "x-ms-examples": {
          "DeviceManagement_GetDeployment": {
            "$ref": "./examples/DeviceManagement_GetDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment properties.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Creates or updates a deployment.",
        "operationId": "DeviceManagement_CreateOrUpdateDeployment",
        "x-ms-examples": {
          "DeviceManagement_CreateOrUpdateDeployment": {
            "$ref": "./examples/DeviceManagement_CreateOrUpdateDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deployment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "The deployment properties."
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment properties.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployment management"
        ],
        "description": "Deletes a deployment.",
        "operationId": "DeviceManagement_DeleteDeployment",
        "x-ms-examples": {
          "DeviceManagement_DeleteDeployment": {
            "$ref": "./examples/DeviceManagement_DeleteDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deployments/{deploymentId}/status": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the status of a deployment including a breakdown of how many devices in the deployment are in progress, completed, or failed.",
        "operationId": "DeviceManagement_GetDeploymentStatus",
        "x-ms-examples": {
          "DeviceManagement_GetDeploymentStatus": {
            "$ref": "./examples/DeviceManagement_GetDeploymentStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the deployment.",
            "schema": {
              "$ref": "#/definitions/DeploymentStatus"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Get the device class subgroups for the group. A device class subgroup is the set of devices within the group that share the same device class. All devices within the same device class are compatible with the same updates.",
        "operationId": "DeviceManagement_ListDeviceClassSubgroupsForGroup",
        "x-ms-examples": {
          "DeviceManagement_ListDeviceClassSubgroupsForGroup": {
            "$ref": "./examples/DeviceManagement_ListDeviceClassSubgroupsForGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of device class subgroups returned. You can filter on compat properties by name and value. (i.e. filter=compatProperties/propertyName1 eq 'value1' and compatProperties/propertyName2 eq 'value2')"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device class subgroup details.",
            "schema": {
              "$ref": "#/definitions/DeviceClassSubgroupsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeviceClassSubgroupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets device class subgroup details. A device class subgroup is the set of devices within the group that share the same device class. All devices within the same device class are compatible with the same updates.",
        "operationId": "DeviceManagement_GetDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_GetGroupUpdateCompliance": {
            "$ref": "./examples/DeviceManagement_GetDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device class subgroup details.",
            "schema": {
              "$ref": "#/definitions/DeviceClassSubgroup"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Deletes a device class subgroup. This subgroup is automatically created when a Device Update-enabled device is connected to the hub and reports its properties. Groups, subgroups, and deployments are not automatically cleaned up but are retained for history purposes. Users can call this method to delete a subgroup if they do not need to retain any of the history of the subgroup and no longer need it. If a device is ever connected again for this subgroup after the subgroup was deleted it will be automatically re-created but there will be no history.",
        "operationId": "DeviceManagement_DeleteDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_DeleteDeviceClassSubgroup": {
            "$ref": "./examples/DeviceManagement_DeleteDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/updateCompliance": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Get device class subgroup update compliance information such as how many devices are on their latest update, how many need new updates, and how many are in progress on receiving a new update.",
        "operationId": "DeviceManagement_GetDeviceClassSubgroupUpdateCompliance",
        "x-ms-examples": {
          "DeviceManagement_GetDeviceClassSubgroupUpdateCompliance": {
            "$ref": "./examples/DeviceManagement_GetDeviceClassSubgroupUpdateCompliance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device class subgroup update compliance information.",
            "schema": {
              "$ref": "#/definitions/UpdateCompliance"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/bestUpdates": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Get the best available update for a device class subgroup and a count of how many devices need this update.",
        "operationId": "DeviceManagement_GetBestUpdatesForDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_ListBestUpdatesForDeviceClassSubgroup": {
            "$ref": "./examples/DeviceManagement_GetBestUpdatesForDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The best available update for a device class subgroup and a count of how many devices need this update.",
            "schema": {
              "$ref": "#/definitions/DeviceClassSubgroupUpdatableDevices"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of deployments for a device class subgroup.",
        "operationId": "DeviceManagement_ListDeploymentsForDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_ListDeploymentsForDeviceClassSubgroup": {
            "$ref": "./examples/DeviceManagement_ListDeploymentsForDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-client-name": "orderBy",
            "description": "Orders the set of deployments returned. You can order by start date."
          }
        ],
        "responses": {
          "200": {
            "description": "All deployments for the device class subgroup.",
            "schema": {
              "$ref": "#/definitions/DeploymentsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentOrderBy",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the deployment properties.",
        "operationId": "DeviceManagement_GetDeploymentForDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_GetDeploymentForDeviceClassSubgroup": {
            "$ref": "./examples/DeviceManagement_GetDeploymentForDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment properties.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployment management"
        ],
        "description": "Deletes a device class subgroup deployment.",
        "operationId": "DeviceManagement_DeleteDeploymentForDeviceClassSubgroup",
        "x-ms-examples": {
          "DeviceManagement_DeleteDeploymentForDeviceClassSubgroup": {
            "$ref": "./examples/DeviceManagement_DeleteDeploymentForDeviceClassSubgroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments/{deploymentId}:cancel": {
      "post": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Stops a deployment.",
        "operationId": "DeviceManagement_StopDeployment",
        "x-ms-examples": {
          "DeviceManagement_CancelOrRetryDeployment": {
            "$ref": "./examples/DeviceManagement_StopDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment properties.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments/{deploymentId}:retry": {
      "post": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Retries a deployment with failed devices.",
        "operationId": "DeviceManagement_RetryDeployment",
        "x-ms-examples": {
          "DeviceManagement_CancelOrRetryDeployment": {
            "$ref": "./examples/DeviceManagement_RetryDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment properties.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments/{deploymentId}/status": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets the status of a deployment including a breakdown of how many devices in the deployment are in progress, completed, or failed.",
        "operationId": "DeviceManagement_GetDeviceClassSubgroupDeploymentStatus",
        "x-ms-examples": {
          "DeviceManagement_GetDeviceClassSubgroupDeploymentStatus": {
            "$ref": "./examples/DeviceManagement_GetDeviceClassSubgroupDeploymentStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the device class subgroup deployment.",
            "schema": {
              "$ref": "#/definitions/DeviceClassSubgroupDeploymentStatus"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/groups/{groupId}/deviceClassSubgroups/{deviceClassId}/deployments/{deploymentId}/devicestates": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "description": "Gets a list of devices in a deployment along with their state. Useful for getting a list of failed devices.",
        "operationId": "DeviceManagement_ListDeviceStatesForDeviceClassSubgroupDeployment",
        "x-ms-examples": {
          "DeviceManagement_ListDeviceStatesForDeviceClassSubgroupDeployment": {
            "$ref": "./examples/DeviceManagement_ListDeviceStatesForDeviceClassSubgroupDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceClassIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentIdParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of deployment device states returned. You can filter on deviceId and moduleId and/or deviceState."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The devices in the deployment along with their states.",
            "schema": {
              "$ref": "#/definitions/DeploymentDeviceStatesList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeploymentDeviceStatesFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/operations/{operationId}": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_GetOperationStatus",
        "description": "Retrieve operation status.",
        "x-ms-examples": {
          "DeviceManagement_GetOperationStatus": {
            "$ref": "./examples/DeviceManagement_GetOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation status.",
            "headers": {
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before checking the operation status again."
              }
            },
            "schema": {
              "$ref": "#/definitions/DeviceOperation"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/operations": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_ListOperationStatuses",
        "description": "Get a list of all device import operations. Completed operations are kept for 7 days before auto-deleted.",
        "x-ms-examples": {
          "DeviceManagement_ListOperationStatuses": {
            "$ref": "./examples/DeviceManagement_ListOperationStatuses.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of operations returned. Only one specific filter is supported: \"status eq 'NotStarted' or status eq 'Running'\""
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/DeviceOperationsList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/OperationFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceDiagnostics/logCollections/{operationId}": {
      "put": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_StartLogCollection",
        "description": "Start the device diagnostics log collection on specified devices.",
        "x-ms-examples": {
          "DeviceManagement_StartLogCollection": {
            "$ref": "./examples/DeviceManagement_StartLogCollection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/LogCollectionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "logCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogCollection"
            },
            "description": "The log collection properties."
          }
        ],
        "responses": {
          "201": {
            "description": "Log collection created.",
            "schema": {
              "$ref": "#/definitions/LogCollection"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_GetLogCollection",
        "description": "Get the device diagnostics log collection",
        "x-ms-examples": {
          "DeviceManagement_GetLogCollection": {
            "$ref": "./examples/DeviceManagement_GetLogCollection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/LogCollectionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation resource",
            "schema": {
              "$ref": "#/definitions/LogCollection"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceDiagnostics/logCollections": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_ListLogCollections",
        "description": "Get all device diagnostics log collections",
        "x-ms-examples": {
          "DeviceManagement_ListLogCollections": {
            "$ref": "./examples/DeviceManagement_ListLogCollections.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all log collections",
            "schema": {
              "$ref": "#/definitions/LogCollectionList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceDiagnostics/logCollections/{operationId}/detailedStatus": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_GetLogCollectionDetailedStatus",
        "description": "Get log collection with detailed status",
        "x-ms-examples": {
          "DeviceManagement_GetLogCollectionDetailedStatus": {
            "$ref": "./examples/DeviceManagement_GetLogCollectionDetailedStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/LogCollectionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Device diagnostics operation with detailed status",
            "schema": {
              "$ref": "#/definitions/LogCollectionOperationDetailedStatus"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deviceUpdate/{instanceId}/management/deviceDiagnostics/deviceHealth": {
      "get": {
        "tags": [
          "Device and deployment management"
        ],
        "operationId": "DeviceManagement_ListHealthOfDevices",
        "description": "Get list of device health",
        "x-ms-examples": {
          "DeviceManagement_ListHealthOfDevices": {
            "$ref": "./examples/DeviceManagement_ListHealthOfDevices.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/InstanceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Restricts the set of devices for which device health is returned. You can filter on status, device id and module id."
          }
        ],
        "responses": {
          "200": {
            "description": "Agent check response list",
            "schema": {
              "$ref": "#/definitions/DeviceHealthList"
            }
          },
          "default": {
            "description": "Default response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/DeviceHealthFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ArrayOfStrings": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of strings."
    },
    "StringsList": {
      "description": "The list of strings with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "ImportUpdateInput": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportUpdateInputItem"
      },
      "minItems": 1,
      "maxItems": 11,
      "description": "Import update input metadata."
    },
    "ImportUpdateInputItem": {
      "type": "object",
      "properties": {
        "importManifest": {
          "$ref": "#/definitions/ImportManifestMetadata",
          "description": "Import manifest metadata like source URL, file size/hashes, etc."
        },
        "friendlyName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "description": "Friendly update name."
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileImportMetadata"
          },
          "minItems": 1,
          "maxItems": 5,
          "description": "One or more update file properties like filename and source URL."
        }
      },
      "required": [
        "importManifest"
      ],
      "description": "Import update input item metadata."
    },
    "ImportManifestMetadata": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Azure Blob location from which the import manifest can be downloaded by Device Update for IoT Hub. This is typically a read-only SAS-protected blob URL with an expiration set to at least 4 hours."
        },
        "sizeInBytes": {
          "type": "integer",
          "description": "File size in number of bytes.",
          "format": "int64"
        },
        "hashes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "minItems": 1
          },
          "description": "A JSON object containing the hash(es) of the file. At least SHA256 hash is required. This object can be thought of as a set of key-value pairs where the key is the hash algorithm, and the value is the hash of the file calculated using that algorithm."
        }
      },
      "required": [
        "url",
        "sizeInBytes",
        "hashes"
      ],
      "description": "Metadata describing the import manifest, a document which describes the files and other metadata about an update version."
    },
    "FileImportMetadata": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "Update file name as specified inside import manifest."
        },
        "url": {
          "type": "string",
          "description": "Azure Blob location from which the update file can be downloaded by Device Update for IoT Hub. This is typically a read-only SAS-protected blob URL with an expiration set to at least 4 hours."
        }
      },
      "required": [
        "filename",
        "url"
      ],
      "description": "Metadata describing an update file."
    },
    "Update": {
      "type": "object",
      "properties": {
        "updateId": {
          "$ref": "#/definitions/UpdateId",
          "description": "Update identity."
        },
        "description": {
          "type": "string",
          "description": "Update description specified by creator.",
          "minLength": 1,
          "maxLength": 512
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly update name specified by importer.",
          "minLength": 1,
          "maxLength": 512
        },
        "isDeployable": {
          "type": "boolean",
          "description": "Whether the update can be deployed to a device on its own.",
          "default": true
        },
        "updateType": {
          "type": "string",
          "description": "Update type. Deprecated in latest import manifest schema."
        },
        "installedCriteria": {
          "type": "string",
          "description": "String interpreted by Device Update client to determine if the update is installed on the device. Deprecated in latest import manifest schema."
        },
        "compatibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Compatibility"
          },
          "minItems": 1,
          "maxItems": 10,
          "description": "List of update compatibility information."
        },
        "instructions": {
          "$ref": "#/definitions/Instructions",
          "description": "Update install instructions."
        },
        "referencedBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateId"
          },
          "minItems": 1,
          "description": "List of update identities that reference this update."
        },
        "scanResult": {
          "type": "string",
          "description": "Update aggregate scan result (calculated from payload file scan results)."
        },
        "manifestVersion": {
          "type": "string",
          "description": "Schema version of manifest used to import the update."
        },
        "importedDateTime": {
          "type": "string",
          "description": "Date and time in UTC when the update was imported.",
          "format": "date-time"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC when the update was created."
        },
        "etag": {
          "type": "string",
          "description": "Update ETag."
        }
      },
      "required": [
        "updateId",
        "compatibility",
        "manifestVersion",
        "importedDateTime",
        "createdDateTime"
      ],
      "description": "Update metadata."
    },
    "UpdateList": {
      "description": "The list of updates.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Update"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateId": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Update provider."
        },
        "name": {
          "type": "string",
          "description": "Update name."
        },
        "version": {
          "type": "string",
          "description": "Update version."
        }
      },
      "required": [
        "provider",
        "name",
        "version"
      ],
      "description": "Update identifier."
    },
    "UpdateInfo": {
      "type": "object",
      "properties": {
        "updateId": {
          "$ref": "#/definitions/UpdateId",
          "description": "Update identifier."
        },
        "description": {
          "type": "string",
          "description": "Update description.",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly update name.",
          "readOnly": true
        }
      },
      "required": [
        "updateId"
      ],
      "description": "Update information."
    },
    "UpdateInfoList": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateInfo"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "description": "List of update information."
    },
    "Compatibility": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "minItems": 1,
        "maxItems": 5
      },
      "description": "Key-value pairs representing update compatibility information."
    },
    "Instructions": {
      "type": "object",
      "properties": {
        "steps": {
          "description": "Collection of installation steps.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          },
          "minItems": 1,
          "maxItems": 10
        }
      },
      "required": [
        "steps"
      ]
    },
    "Step": {
      "description": "Update install instruction step.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Step type.",
          "type": "string",
          "enum": [
            "inline",
            "reference"
          ],
          "default": "inline",
          "x-ms-enum": {
            "name": "StepType",
            "modelAsString": true,
            "values": [
              {
                "value": "Inline",
                "name": "Inline",
                "description": "Step type that performs code execution."
              },
              {
                "value": "Reference",
                "name": "Reference",
                "description": "Step type that installs another update."
              }
            ]
          }
        },
        "description": {
          "description": "Step description.",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "handler": {
          "description": "Identity of handler that will execute this step. Required if step type is inline.",
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "handlerProperties": {
          "description": "Parameters to be passed to handler during execution.",
          "type": "object"
        },
        "files": {
          "description": "Collection of file names to be passed to handler during execution. Required if step type is inline.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 5
        },
        "updateId": {
          "description": "Referenced child update identity.  Required if step type is reference.",
          "$ref": "#/definitions/UpdateId"
        }
      },
      "minProperties": 2
    },
    "UpdateFileBase": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "File name."
        },
        "sizeInBytes": {
          "type": "integer",
          "description": "File size in number of bytes.",
          "format": "int64"
        },
        "hashes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "minItems": 1
          },
          "description": "Mapping of hashing algorithm to base64 encoded hash values."
        },
        "mimeType": {
          "type": "string",
          "description": "File MIME type."
        },
        "scanResult": {
          "type": "string",
          "description": "Anti-malware scan result."
        },
        "scanDetails": {
          "type": "string",
          "description": "Anti-malware scan details."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "minItems": 0
          },
          "description": "Optional file properties (not consumed by service but pass-through to device)."
        }
      },
      "required": [
        "fileName",
        "sizeInBytes",
        "hashes"
      ],
      "description": "Update file basic metadata."
    },
    "UpdateFile": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateFileBase"
        }
      ],
      "properties": {
        "fileId": {
          "type": "string",
          "description": "File identity, generated by server at import time."
        },
        "relatedFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateFileBase"
          },
          "description": "Optional related files metadata used together DownloadHandler metadata to download payload file."
        },
        "downloadHandler": {
          "$ref": "#/definitions/UpdateFileDownloadHandler",
          "description": "Optional download handler for utilizing related files to download payload file."
        },
        "etag": {
          "type": "string",
          "description": "File ETag."
        }
      },
      "required": [
        "fileId"
      ],
      "description": "Update file metadata."
    },
    "UpdateFileDownloadHandler": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Download handler identifier."
        }
      },
      "required": [
        "id"
      ],
      "description": "Download handler for utilizing related files to download payload file."
    },
    "UpdateOperation": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Operation Id."
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "Operation status."
        },
        "update": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "The update being imported or deleted. For import, this property will only be populated after import manifest is processed successfully."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of the imported update when operation is successful."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Operation error encountered, if any."
        },
        "traceId": {
          "type": "string",
          "description": "Operation correlation identity that can used by Microsoft Support for troubleshooting."
        },
        "lastActionDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC when the operation status was last updated."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC when the operation was created."
        },
        "etag": {
          "type": "string",
          "description": "Operation ETag."
        }
      },
      "required": [
        "operationId",
        "status",
        "lastActionDateTime",
        "createdDateTime"
      ],
      "description": "Operation metadata."
    },
    "DeviceOperation": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Operation Id."
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "Operation status."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Operation error encountered, if any."
        },
        "traceId": {
          "type": "string",
          "description": "Operation correlation identity that can used by Microsoft Support for troubleshooting."
        },
        "lastActionDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC when the operation status was last updated."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC when the operation was created."
        },
        "etag": {
          "type": "string",
          "description": "Operation ETag."
        }
      },
      "required": [
        "operationId",
        "status",
        "lastActionDateTime",
        "createdDateTime"
      ],
      "description": "Operation metadata."
    },
    "OperationStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "NotStarted",
            "name": "NotStarted",
            "description": "Background operation created but not started yet."
          },
          {
            "value": "Running",
            "name": "Running",
            "description": "Background operation is currently running."
          },
          {
            "value": "Succeeded",
            "name": "Succeeded",
            "description": "Background operation finished with success."
          },
          {
            "value": "Failed",
            "name": "Failed",
            "description": "Background operation finished with failure."
          }
        ]
      },
      "description": "Operation status."
    },
    "OperationStatusWithoutUndefinedOption": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "NotStarted",
            "name": "NotStarted",
            "description": "Background operation created but not started yet."
          },
          {
            "value": "Running",
            "name": "Running",
            "description": "Background operation is currently running."
          },
          {
            "value": "Succeeded",
            "name": "Succeeded",
            "description": "Background operation finished with success."
          },
          {
            "value": "Failed",
            "name": "Failed",
            "description": "Background operation finished with failure."
          }
        ]
      },
      "description": "Operation status."
    },
    "ErrorResponse": {
      "description": "Common error response.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error details."
        }
      },
      "required": [
        "error"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Server defined error code."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "An array of errors that led to the reported error."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "An object containing more specific information than the current object about the error."
        },
        "occurredDateTime": {
          "type": "string",
          "description": "Date and time in UTC when the error occurred.",
          "format": "date-time"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "description": "Error details."
    },
    "InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "A more specific error code than what was provided by the containing error."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "errorDetail": {
          "type": "string",
          "description": "The internal error or exception message."
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code"
      ],
      "description": "An object containing more specific information than the current object about the error."
    },
    "LimitsResponse": {
      "type": "object",
      "description": "The list of limits of how many of each resource are currently in use and how many are allowed.",
      "properties": {
        "counters": {
          "$ref": "#/definitions/Counters",
          "description": "The list of current counts of each limited resource and the maximum quota that are allowed."
        }
      }
    },
    "Counters": {
      "type": "object",
      "description": "The list of counts of each limited resource with both current usage and overall quota.",
      "properties": {
        "deviceCount": {
          "$ref": "#/definitions/UsageQuotaCounter",
          "description": "The current usage and quota of devices."
        },
        "deviceClassCount": {
          "$ref": "#/definitions/UsageQuotaCounter",
          "description": "The current usage and quota of device classes."
        },
        "deviceGroupCount": {
          "$ref": "#/definitions/UsageQuotaCounter",
          "description": "The current usage and quota of device groups."
        },
        "activeDeploymentCount": {
          "$ref": "#/definitions/UsageQuotaCounter",
          "description": "The current usage and quota of active deployments."
        },
        "deploymentCount": {
          "$ref": "#/definitions/UsageQuotaCounter",
          "description": "The current usage and quota of deployments."
        }
      }
    },
    "UsageQuotaCounter": {
      "type": "object",
      "description": "A counter with both usage and quota information.",
      "properties": {
        "usage": {
          "type": "integer",
          "format": "int32",
          "description": "The current number of the resource that exist"
        },
        "quota": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of the resource that can be created"
        }
      }
    },
    "UpdateOperationsList": {
      "description": "The list of operations with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateOperation"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceOperationsList": {
      "description": "The list of device operations with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceOperation"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceClass": {
      "type": "object",
      "properties": {
        "deviceClassId": {
          "type": "string",
          "description": "The device class identifier. This is generated from the model Id and the compat properties reported by the device update agent in the Device Update PnP interface in IoT Hub. It is a hex-encoded SHA1 hash."
        },
        "friendlyName": {
          "type": "string",
          "description": "The device class friendly name. This can be updated by callers after the device class has been automatically created."
        },
        "deviceClassProperties": {
          "$ref": "#/definitions/DeviceClassProperties",
          "description": "The device class properties that are used to calculate the device class Id"
        },
        "bestCompatibleUpdate": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "Update that is the highest version compatible with this device class."
        }
      },
      "required": [
        "deviceClassId",
        "deviceClassProperties"
      ],
      "description": "Device class metadata."
    },
    "DeviceClassProperties": {
      "type": "object",
      "description": "The device class properties that are used to calculate the device class Id",
      "properties": {
        "contractModel": {
          "$ref": "#/definitions/ContractModel",
          "description": "The Device Update agent contract model."
        },
        "compatProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The compat properties of the device class. This object can be thought of as a set of key-value pairs where the key is the name of the compatibility property and the value is the value of the compatibility property. There will always be at least 1 compat property"
        }
      },
      "required": [
        "compatProperties"
      ]
    },
    "ContractModel": {
      "type": "object",
      "description": "The Device Update agent contract model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Device Update agent contract model Id of the device class. This is also used to calculate the device class Id."
        },
        "name": {
          "type": "string",
          "description": "The Device Update agent contract model name of the device class. Intended to be a more readable form of the contract model Id."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "DeviceClassesList": {
      "description": "The list of device classes.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceClass"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "PatchBody": {
      "type": "object",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "The device class friendly name. Friendly name can be 1-100 characters, alphanumeric, dot, and dash."
        }
      },
      "required": [
        "friendlyName"
      ],
      "description": "Device Class JSON Merge Patch request body"
    },
    "Device": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device identity."
        },
        "moduleId": {
          "type": "string",
          "description": "Device module identity."
        },
        "deviceClassId": {
          "type": "string",
          "description": "Device class identity."
        },
        "groupId": {
          "type": "string",
          "description": "Device group identity."
        },
        "lastAttemptedUpdate": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "The update that device last attempted to install."
        },
        "deploymentStatus": {
          "$ref": "#/definitions/DeviceDeploymentState",
          "description": "State of the device in its last deployment."
        },
        "installedUpdate": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "Currently installed update on device."
        },
        "onLatestUpdate": {
          "type": "boolean",
          "description": "Boolean flag indicating whether the latest update (the best compatible update for the device's device class and group) is installed on the device"
        },
        "lastDeploymentId": {
          "type": "string",
          "description": "The deployment identifier for the last deployment to the device"
        },
        "lastInstallResult": {
          "$ref": "#/definitions/InstallResult",
          "description": "Last install result."
        }
      },
      "required": [
        "deviceId",
        "deviceClassId",
        "onLatestUpdate"
      ],
      "description": "Device metadata."
    },
    "DeviceDeploymentState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "InProgress",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DeviceDeploymentState",
        "modelAsString": true,
        "values": [
          {
            "value": "Succeeded",
            "name": "Succeeded",
            "description": "Deployment has completed with success."
          },
          {
            "value": "InProgress",
            "name": "InProgress",
            "description": "Deployment is in progress."
          },
          {
            "value": "Canceled",
            "name": "Canceled",
            "description": "Deployment was canceled."
          },
          {
            "value": "Failed",
            "name": "Failed",
            "description": "Deployment has completed with failure."
          }
        ]
      },
      "description": "Deployment state."
    },
    "DeviceFilter": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Device group identity."
        },
        "deviceClassId": {
          "type": "string",
          "description": "Device class identity."
        },
        "deploymentStatus": {
          "$ref": "#/definitions/DeviceDeploymentState",
          "description": "State of the device in its last deployment."
        }
      },
      "description": "Device filter."
    },
    "DeviceClassSubgroupFilter": {
      "type": "object",
      "properties": {
        "compatPropertyName": {
          "type": "string",
          "description": "The name of the compat property to use in the filter. E.g. compatProperties/manufacturer"
        },
        "compatPropertyValue": {
          "type": "string",
          "description": "The value the compat property to use in the filter. E.g. Contoso"
        }
      },
      "description": "Device class subgroups filter. Filters device class subgroups based on device class compat property names and values"
    },
    "DeviceClassFilter": {
      "type": "object",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "The friendly name of the device class to use in the filter"
        }
      },
      "description": "Device class filter. Filters device classes based on device class friendly name"
    },
    "DevicesList": {
      "description": "The list of devices.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateCompliance": {
      "type": "object",
      "properties": {
        "totalDeviceCount": {
          "type": "integer",
          "description": "Total number of devices."
        },
        "onLatestUpdateDeviceCount": {
          "type": "integer",
          "description": "Number of devices on the latest update."
        },
        "newUpdatesAvailableDeviceCount": {
          "type": "integer",
          "description": "Number of devices with a newer update available."
        },
        "updatesInProgressDeviceCount": {
          "type": "integer",
          "description": "Number of devices with update in-progress."
        }
      },
      "required": [
        "totalDeviceCount",
        "onLatestUpdateDeviceCount",
        "newUpdatesAvailableDeviceCount",
        "updatesInProgressDeviceCount"
      ],
      "description": "Update compliance information."
    },
    "DeviceClassSubgroupUpdatableDevices": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group Id"
        },
        "deviceClassId": {
          "type": "string",
          "description": "The device class subgroup's device class Id"
        },
        "update": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "Update information."
        },
        "deviceCount": {
          "type": "integer",
          "description": "Total number of devices for which the update is applicable."
        }
      },
      "required": [
        "groupId",
        "deviceClassId",
        "update",
        "deviceCount"
      ],
      "description": "Device class subgroup, update information, and the number of devices for which the update is applicable."
    },
    "DeviceClassSubgroupUpdatableDevicesList": {
      "description": "The list of updatable devices for a device class subgroup.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceClassSubgroupUpdatableDevices"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "Group": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Group identity. This is created from the value of the ADUGroup tag in the Iot Hub's device/module twin or $default for devices with no tag."
        },
        "groupType": {
          "$ref": "#/definitions/GroupType",
          "description": "Group type."
        },
        "createdDateTime": {
          "type": "string",
          "description": "Date and time when the update was created."
        },
        "deviceCount": {
          "type": "integer",
          "description": "The number of devices in the group."
        },
        "subgroupsWithNewUpdatesAvailableCount": {
          "type": "integer",
          "description": "The count of subgroups with new updates available."
        },
        "subgroupsWithUpdatesInProgressCount": {
          "type": "integer",
          "description": "The count of subgroups with updates in progress."
        },
        "subgroupsWithOnLatestUpdateCount": {
          "type": "integer",
          "description": "The count of subgroups with devices on the latest update."
        },
        "deployments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The active deployment Ids for the group"
        }
      },
      "required": [
        "groupId",
        "groupType",
        "createdDateTime"
      ],
      "description": "Group details."
    },
    "GroupType": {
      "type": "string",
      "enum": [
        "IoTHubTag",
        "DefaultNoTag"
      ],
      "x-ms-enum": {
        "name": "GroupType",
        "modelAsString": true,
        "values": [
          {
            "value": "IoTHubTag",
            "name": "IoTHubTag",
            "description": "IoT Hub tag based group, all devices in the group share an ADUGroup tag value."
          },
          {
            "value": "DefaultNoTag",
            "name": "DefaultNoTag",
            "description": "Default group for untagged devices."
          }
        ]
      },
      "description": "Supported group types."
    },
    "GroupsList": {
      "description": "The list of groups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceClassSubgroup": {
      "type": "object",
      "properties": {
        "deviceClassId": {
          "type": "string",
          "description": "Device class subgroup identity. This is generated from the model Id and the compat properties reported by the device update agent in the Device Update PnP interface in IoT Hub. It is a hex-encoded SHA1 hash."
        },
        "groupId": {
          "type": "string",
          "description": "Group identity."
        },
        "createdDateTime": {
          "type": "string",
          "description": "Date and time when the device class subgroup was created."
        },
        "deviceCount": {
          "type": "integer",
          "description": "The number of devices in the device class subgroup."
        },
        "deploymentId": {
          "type": "string",
          "description": "The active deployment Id for the device class subgroup."
        }
      },
      "required": [
        "deviceClassId",
        "groupId",
        "createdDateTime"
      ],
      "description": "Device class subgroup details. A device class subgroup is a subset of devices in a group that share the same device class id."
    },
    "DeviceClassSubgroupsList": {
      "description": "The list of device class subgroups within a group.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceClassSubgroup"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "description": "The caller-provided deployment identifier. This cannot be longer than 73 characters, must be all lower-case, and cannot contain '&', '^', '[', ']', '{', '}', '|', '<', '>', forward slash, backslash, or double quote. The Updates view in the Azure Portal IoT Hub resource generates a GUID for deploymentId when you create a deployment."
        },
        "startDateTime": {
          "type": "string",
          "description": "The deployment start datetime.",
          "format": "date-time"
        },
        "update": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "Update information for the update in the deployment."
        },
        "groupId": {
          "type": "string",
          "description": "The group identity for the devices the deployment is intended to update."
        },
        "deviceClassSubgroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The device class subgroups the deployment is compatible with and subgroup deployments have been created for. This is not provided by the caller during CreateOrUpdateDeployment but is automatically determined by Device Update"
        },
        "isCanceled": {
          "type": "boolean",
          "description": "Boolean flag indicating whether the deployment was canceled."
        },
        "isRetried": {
          "type": "boolean",
          "description": "Boolean flag indicating whether the deployment has been retried."
        },
        "rollbackPolicy": {
          "$ref": "#/definitions/CloudInitiatedRollbackPolicy",
          "description": "The rollback policy for the deployment."
        },
        "isCloudInitiatedRollback": {
          "type": "boolean",
          "description": "Boolean flag indicating whether the deployment is a rollback deployment."
        }
      },
      "required": [
        "deploymentId",
        "startDateTime",
        "update",
        "groupId"
      ],
      "description": "Deployment metadata."
    },
    "DeploymentsList": {
      "description": "The list of deployments.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentStatus": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group identity"
        },
        "deploymentState": {
          "$ref": "#/definitions/DeploymentState",
          "description": "The state of the deployment."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error details of the Failed state.  This is not present if the deployment state is not Failed."
        },
        "subgroupStatus": {
          "type": "array",
          "description": "The collection of device class subgroup status objects",
          "items": {
            "$ref": "#/definitions/DeviceClassSubgroupDeploymentStatus"
          }
        }
      },
      "required": [
        "groupId",
        "deploymentState",
        "subgroupStatus"
      ],
      "description": "Deployment status metadata."
    },
    "DeploymentState": {
      "type": "string",
      "enum": [
        "Active",
        "ActiveWithSubgroupFailures",
        "Failed",
        "Inactive",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "DeploymentState",
        "modelAsString": true,
        "values": [
          {
            "value": "Active",
            "name": "Active",
            "description": "The deployment can be sent to devices targeted in the deployment."
          },
          {
            "value": "ActiveWithSubgroupFailures",
            "name": "ActiveWithSubgroupFailures",
            "description": "The deployment can be sent to some devices targeted in the deployment but at least 1 subgroup is in a failed state."
          },
          {
            "value": "Failed",
            "name": "Failed",
            "description": "The deployment will not be sent to any devices.  Consult error for more details about what failed."
          },
          {
            "value": "Inactive",
            "name": "Inactive",
            "description": "A newer deployment for this group has been created and no devices in the group will receive this deployment."
          },
          {
            "value": "Canceled",
            "name": "Canceled",
            "description": "The deployment has been canceled and no devices will receive it."
          }
        ]
      },
      "description": "Deployment state."
    },
    "DeviceClassSubgroupDeploymentStatus": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group identity"
        },
        "deviceClassId": {
          "type": "string",
          "description": "The device class subgroup identity"
        },
        "deploymentState": {
          "$ref": "#/definitions/DeviceClassSubgroupDeploymentState",
          "description": "The state of the subgroup deployment."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error details of the Failed state.  This is not present if the deployment state is not Failed."
        },
        "totalDevices": {
          "type": "integer",
          "description": "The total number of devices in the deployment.",
          "format": "int32"
        },
        "devicesInProgressCount": {
          "type": "integer",
          "description": "The number of devices that are currently in deployment.",
          "format": "int32"
        },
        "devicesCompletedFailedCount": {
          "type": "integer",
          "description": "The number of devices that have completed deployment with a failure.",
          "format": "int32"
        },
        "devicesCompletedSucceededCount": {
          "type": "integer",
          "description": "The number of devices which have successfully completed deployment.",
          "format": "int32"
        },
        "devicesCanceledCount": {
          "type": "integer",
          "description": "The number of devices which have had their deployment canceled.",
          "format": "int32"
        }
      },
      "required": [
        "groupId",
        "deviceClassId",
        "deploymentState"
      ],
      "description": "Device class subgroup deployment status metadata."
    },
    "DeviceClassSubgroupDeploymentState": {
      "type": "string",
      "enum": [
        "Active",
        "Failed",
        "Inactive",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "DeviceClassSubgroupDeploymentState",
        "modelAsString": true,
        "values": [
          {
            "value": "Active",
            "name": "Active",
            "description": "The subgroup deployment can be sent to devices targeted in the deployment."
          },
          {
            "value": "Failed",
            "name": "Failed",
            "description": "The subgroup deployment failed and will not be sent to any devices."
          },
          {
            "value": "Inactive",
            "name": "Inactive",
            "description": "A newer deployment for this subgroup has been created and no devices in the subgroup will receive this deployment."
          },
          {
            "value": "Canceled",
            "name": "Canceled",
            "description": "The subgroup deployment has been canceled and no devices will receive it."
          }
        ]
      },
      "description": "Device class subgroup deployment state."
    },
    "DeploymentDeviceState": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device identity."
        },
        "moduleId": {
          "type": "string",
          "description": "Device module identity."
        },
        "retryCount": {
          "type": "integer",
          "description": "The number of times this deployment has been retried on this device.",
          "format": "int32"
        },
        "movedOnToNewDeployment": {
          "type": "boolean",
          "description": "Boolean flag indicating whether this device is in a newer deployment and can no longer retry this deployment."
        },
        "deviceState": {
          "$ref": "#/definitions/DeviceDeploymentState",
          "description": "Deployment device state."
        }
      },
      "required": [
        "deviceId",
        "retryCount",
        "movedOnToNewDeployment",
        "deviceState"
      ],
      "description": "Deployment device status."
    },
    "DeploymentDeviceStatesList": {
      "description": "The list of deployment device states.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentDeviceState"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudInitiatedRollbackPolicyFailure": {
      "type": "object",
      "properties": {
        "devicesFailedPercentage": {
          "type": "integer",
          "description": "Percentage of devices that failed."
        },
        "devicesFailedCount": {
          "type": "integer",
          "description": "Number of devices that failed."
        }
      },
      "required": [
        "devicesFailedPercentage",
        "devicesFailedCount"
      ],
      "description": "Failure conditions to initiate rollback policy"
    },
    "CloudInitiatedRollbackPolicy": {
      "type": "object",
      "properties": {
        "update": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "Update to rollback to."
        },
        "failure": {
          "$ref": "#/definitions/CloudInitiatedRollbackPolicyFailure",
          "description": "Failure conditions to initiate rollback policy."
        }
      },
      "required": [
        "update",
        "failure"
      ],
      "description": "Rollback policy for deployment"
    },
    "UpdateFilter": {
      "type": "object",
      "properties": {
        "isDeployable": {
          "type": "boolean",
          "description": "Update isDeployable property."
        }
      },
      "description": "Update filter."
    },
    "OperationFilterStatus": {
      "type": "string",
      "enum": [
        "Running",
        "NotStarted"
      ],
      "x-ms-enum": {
        "name": "OperationFilterStatus",
        "modelAsString": true
      },
      "description": "Operation status filter."
    },
    "OperationFilter": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationFilterStatus",
          "description": "Operation status filter."
        }
      },
      "description": "Operation status filter."
    },
    "GroupOrderBy": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group Id."
        },
        "deviceCount": {
          "type": "string",
          "description": "The group device count."
        },
        "createdDate": {
          "type": "string",
          "description": "The group created date."
        },
        "subgroupsWithNewUpdatesAvailableCount": {
          "type": "string",
          "description": "The number of subgroups with new updates available"
        },
        "subgroupsWithUpdatesInProgressCount": {
          "type": "string",
          "description": "The number of subgroups with updates in progress"
        },
        "subgroupsOnLatestUpdateCount": {
          "type": "string",
          "description": "The number of subgroups with devices on the latest update"
        }
      },
      "description": "Groups order by."
    },
    "DeploymentOrderBy": {
      "type": "object",
      "properties": {
        "startDateTime": {
          "type": "string",
          "description": "The deployment start datetime.",
          "format": "date-time"
        }
      },
      "description": "Deployment order by."
    },
    "DeploymentDeviceStatesFilter": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device Identifier."
        },
        "moduleId": {
          "type": "string",
          "description": "Device module Identifier."
        },
        "deviceState": {
          "$ref": "#/definitions/DeviceDeploymentState",
          "description": "The deployment device state."
        }
      },
      "description": "Deployment device state filter."
    },
    "ImportType": {
      "type": "string",
      "description": "The device import type.",
      "enum": [
        "Devices",
        "Modules",
        "All"
      ],
      "x-ms-enum": {
        "name": "ImportType",
        "modelAsString": true,
        "values": [
          {
            "value": "Devices",
            "name": "Devices",
            "description": "Import only devices but not modules."
          },
          {
            "value": "Modules",
            "name": "Modules",
            "description": "Import only modules but not devices."
          },
          {
            "value": "All",
            "name": "All",
            "description": "Import both devices and modules."
          }
        ]
      }
    },
    "StepResult": {
      "type": "object",
      "properties": {
        "update": {
          "$ref": "#/definitions/UpdateInfo",
          "description": "The update that this step installs if it is of reference type."
        },
        "description": {
          "type": "string",
          "description": "Step description."
        },
        "resultCode": {
          "type": "integer",
          "description": "Install result code."
        },
        "extendedResultCode": {
          "type": "integer",
          "description": "Install extended result code"
        },
        "resultDetails": {
          "type": "string",
          "description": "A string containing further details about the install result"
        }
      },
      "required": [
        "resultCode",
        "extendedResultCode"
      ],
      "description": "The step result under an update."
    },
    "InstallResult": {
      "type": "object",
      "properties": {
        "resultCode": {
          "type": "integer",
          "description": "Install result code."
        },
        "extendedResultCode": {
          "type": "integer",
          "description": "Install extended result code"
        },
        "resultDetails": {
          "type": "string",
          "description": "A string containing further details about the install result"
        },
        "stepResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepResult",
            "description": "Step results"
          },
          "description": "Array of step results"
        }
      },
      "required": [
        "resultCode",
        "extendedResultCode"
      ],
      "description": "The install result of an update and any step results under it."
    },
    "DeviceUpdateAgentId": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device Id"
        },
        "moduleId": {
          "type": "string",
          "description": "Module Id"
        }
      },
      "required": [
        "deviceId"
      ],
      "description": "Device Update agent id"
    },
    "LogCollection": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The log collection id.",
          "x-ms-client-name": "logCollectionId"
        },
        "deviceList": {
          "type": "array",
          "description": "Array of Device Update agent ids",
          "items": {
            "$ref": "#/definitions/DeviceUpdateAgentId"
          }
        },
        "description": {
          "type": "string",
          "maxLength": 512,
          "description": "Description of the diagnostics operation."
        },
        "createdDateTime": {
          "type": "string",
          "description": "The timestamp when the operation was created.",
          "readOnly": true
        },
        "lastActionDateTime": {
          "type": "string",
          "description": "A timestamp for when the current state was entered.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/OperationStatusWithoutUndefinedOption",
          "description": "Operation status.",
          "readOnly": true
        }
      },
      "required": [
        "deviceList"
      ],
      "description": "Diagnostics request body"
    },
    "LogCollectionOperationDetailedStatus": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The device diagnostics operation id.",
          "x-ms-client-name": "logCollectionId"
        },
        "createdDateTime": {
          "type": "string",
          "description": "The timestamp when the operation was created."
        },
        "lastActionDateTime": {
          "type": "string",
          "description": "A timestamp for when the current state was entered."
        },
        "status": {
          "$ref": "#/definitions/OperationStatusWithoutUndefinedOption",
          "description": "Operation status."
        },
        "deviceStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogCollectionOperationDeviceStatus"
          },
          "description": "Status of the devices in the operation"
        },
        "description": {
          "type": "string",
          "description": "Device diagnostics operation description."
        }
      },
      "description": "Device diagnostics operation detailed status"
    },
    "LogCollectionList": {
      "description": "The list of log collections with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogCollection"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "LogCollectionDetailedStatusList": {
      "description": "The list of log collections with detailed status, with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogCollectionOperationDetailedStatus"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "LogCollectionOperationDeviceStatus": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device id"
        },
        "moduleId": {
          "type": "string",
          "description": "Module id."
        },
        "status": {
          "$ref": "#/definitions/OperationStatusWithoutUndefinedOption",
          "description": "Log upload status"
        },
        "resultCode": {
          "type": "string",
          "description": "Log upload result code"
        },
        "extendedResultCode": {
          "type": "string",
          "description": "Log upload extended result code"
        },
        "logLocation": {
          "type": "string",
          "description": "Log upload location"
        }
      },
      "required": [
        "deviceId",
        "status"
      ],
      "description": "Diagnostics operation device status"
    },
    "HealthCheckResult": {
      "type": "string",
      "enum": [
        "success",
        "userError"
      ],
      "x-ms-enum": {
        "name": "HealthCheckResult",
        "modelAsString": true,
        "values": [
          {
            "value": "success",
            "name": "success",
            "description": "Health check succeeded"
          },
          {
            "value": "userError",
            "name": "userError",
            "description": "Health check failed due to user error"
          }
        ]
      },
      "description": "Health check result"
    },
    "DeviceHealth": {
      "description": "Device Health",
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device id"
        },
        "moduleId": {
          "type": "string",
          "description": "Module id"
        },
        "state": {
          "$ref": "#/definitions/DeviceHealthState",
          "description": "Aggregate device health state"
        },
        "digitalTwinModelId": {
          "type": "string",
          "description": "Digital twin model Id"
        },
        "healthChecks": {
          "type": "array",
          "description": "Array of health checks and their results",
          "items": {
            "$ref": "#/definitions/HealthCheck"
          }
        }
      },
      "required": [
        "deviceId",
        "state",
        "healthChecks"
      ]
    },
    "DeviceHealthState": {
      "description": "Device health states",
      "type": "string",
      "enum": [
        "healthy",
        "unhealthy"
      ],
      "x-ms-enum": {
        "name": "DeviceHealthState",
        "modelAsString": true,
        "values": [
          {
            "value": "healthy",
            "name": "healthy",
            "description": "Agent is healthy"
          },
          {
            "value": "unhealthy",
            "name": "unhealthy",
            "description": "Agent is in an unhealthy state"
          }
        ]
      }
    },
    "DeviceHealthList": {
      "description": "Array of Device Health, with server paging support.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of pageable items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceHealth"
          }
        },
        "nextLink": {
          "description": "The link to the next page of items.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthCheck": {
      "description": "Health check",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Health check name"
        },
        "result": {
          "$ref": "#/definitions/HealthCheckResult",
          "description": "Health check result"
        }
      }
    },
    "DeviceHealthFilter": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/DeviceHealthState",
          "description": "Device health state"
        },
        "deviceId": {
          "type": "string",
          "description": "Device Id"
        },
        "moduleId": {
          "type": "string",
          "description": "Module Id"
        }
      },
      "description": "Device health filter."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "EndpointParameter": {
      "name": "endpoint",
      "in": "path",
      "required": true,
      "format": "url",
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "description": "The Device Update for IoT Hub account endpoint (hostname only, no protocol).",
      "x-ms-parameter-location": "client",
      "x-ms-parameter-grouping": {
        "name": "account-options"
      }
    },
    "InstanceIdParameter": {
      "name": "instanceId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "description": "The Device Update for IoT Hub account instance identifier.",
      "x-ms-parameter-location": "client",
      "x-ms-parameter-grouping": {
        "name": "account-options"
      }
    },
    "UpdateProviderParameter": {
      "name": "provider",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Update provider.",
      "x-ms-parameter-location": "method"
    },
    "UpdateNameParameter": {
      "name": "name",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Update name.",
      "x-ms-parameter-location": "method"
    },
    "UpdateVersionParameter": {
      "name": "version",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Update version.",
      "x-ms-parameter-location": "method"
    },
    "FileIdParameter": {
      "name": "fileId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "File identifier.",
      "x-ms-parameter-location": "method"
    },
    "IfNoneMatchParameter": {
      "name": "If-None-Match",
      "in": "header",
      "required": false,
      "description": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.",
      "type": "string",
      "x-ms-parameter-grouping": {
        "name": "access-condition"
      },
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "Operation identifier.",
      "minLength": 1,
      "maxLength": 256,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LogCollectionIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "Log collection identifier.",
      "minLength": 1,
      "maxLength": 256,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "logCollectionId"
    },
    "DeviceIdParameter": {
      "name": "deviceId",
      "in": "path",
      "description": "Device identifier in Azure IoT Hub.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ModuleIdParameter": {
      "name": "moduleId",
      "in": "path",
      "description": "Device module identifier in Azure IoT Hub.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DeviceClassIdParameter": {
      "name": "deviceClassId",
      "in": "path",
      "description": "Device class identifier.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GroupIdParameter": {
      "name": "groupId",
      "in": "path",
      "description": "Group identifier.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DeploymentIdParameter": {
      "name": "deploymentId",
      "in": "path",
      "description": "Deployment identifier.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DevicesImportActionParameter": {
      "name": "action",
      "in": "query",
      "required": true,
      "description": "Devices action.",
      "type": "string",
      "enum": [
        "import"
      ],
      "x-ms-enum": {
        "name": "ImportAction",
        "modelAsString": true,
        "values": [
          {
            "value": "import",
            "name": "import",
            "description": "Import action."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    }
  }
}
