{
  "swagger": "2.0",
  "host": "management.azure.com",
  "info": {
    "version": "2024-02-01-preview",
    "title": "Groups RP APIs",
    "description": "The Groups RP provides Service Groups as a construct to group multiple resources, resource groups, subscriptions and other service groups into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "ServiceGroups",
      "description": "A ServiceGroup is a customer created scope, where multiple subscriptions or serviceGroups can be grouped by"
    }
  ],
  "paths": {
    "/providers/Microsoft.Management/serviceGroups/{serviceGroupName}": {
      "get": {
        "tags": [
          "ServiceGroups"
        ],
        "operationId": "ServiceGroups_Get",
        "description": "Get the details of the serviceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ServiceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the serviceGroup response",
            "schema": {
              "$ref": "#/definitions/ServiceGroup"
            }
          },
          "default": {
            "description": "Error Response in making the request",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetServiceGroup": {
            "$ref": "./examples/ServiceGroup_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ServiceGroups"
        ],
        "operationId": "CreateOrUpdateServiceGroup",
        "description": "Create or Update a serviceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ServiceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "createServiceGroupRequest",
            "description": "ServiceGroup creation parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service Group creation request is completed",
            "schema": {
              "$ref": "#/definitions/ServiceGroup"
            }
          },
          "201": {
            "description": "Service Group creation request initialized",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation. To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ServiceGroup"
            }
          },
          "default": {
            "description": "Error Response in making the request",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PutServiceGroup": {
            "$ref": "./examples/ServiceGroup_Put.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ServiceGroups"
        ],
        "operationId": "DeleteServiceGroup",
        "description": "Delete a ServiceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ServiceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response for delete request",
            "headers": {
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content response for delete request"
          },
          "default": {
            "description": "Error Response in making the request",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteServiceGroup": {
            "$ref": "./examples/ServiceGroup_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Management/serviceGroups/{serviceGroupName}/listAncestors": {
      "post": {
        "tags": [
          "ServiceGroups"
        ],
        "operationId": "ServiceGroups_ListAncestors",
        "description": "Get the details of the serviceGroup's ancestors",
        "parameters": [
          {
            "$ref": "#/parameters/ServiceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceGroupCollectionResponse"
            }
          },
          "default": {
            "description": "Error Response in making the request.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListServiceGroupAncestors": {
            "$ref": "./examples/ServiceGroup_ListAncestors.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ServiceGroup": {
      "description": "The serviceGroup details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "title": "properties",
          "$ref": "#/definitions/ServiceGroupProperties"
        }
      }
    },
    "ServiceGroupProperties": {
      "description": "ServiceGroup creation request body parameters.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the serviceGroup. For example, Running",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the serviceGroup. For example, ServiceGroupTest1"
        },
        "parent": {
          "title": "parent",
          "$ref": "#/definitions/ParentServiceGroupProperties"
        }
      }
    },
    "ParentServiceGroupProperties": {
      "description": "The details of the parent serviceGroup.",
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The fully qualified ID of the parent serviceGroup.  For example, '/providers/Microsoft.Management/serviceGroups/TestServiceGroup'",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Management/serviceGroups"
              }
            ]
          }
        }
      }
    },
    "ServiceGroupCollectionResponse": {
      "description": "Response holding an array of service groups and a nextLink that supports pagination",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of service groups based on the request criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceGroup"
          }
        },
        "nextLink": {
          "description": "URL to query the next page of results for this request",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ServiceGroupNameParameter": {
      "name": "serviceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9\\-_().]{1,90}$",
      "description": "ServiceGroup Name.",
      "x-ms-parameter-location": "method"
    }
  }
}
