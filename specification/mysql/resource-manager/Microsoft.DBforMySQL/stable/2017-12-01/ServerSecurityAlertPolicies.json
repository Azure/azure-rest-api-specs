{
  "swagger": "2.0",
  "info": {
    "version": "2017-12-01",
    "title": "MySQLManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files, encryption keys, active directory administrator and configurations."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Get a server's security alert policy.",
        "operationId": "ServerSecurityAlertPolicies_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server threat detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation of getting security alert policies failed."
          }
        },
        "x-ms-examples": {
          "Get a server's threat detection policy": {
            "$ref": "./examples/ServerSecurityAlertsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Creates or updates a threat detection policy.",
        "operationId": "ServerSecurityAlertPolicies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the threat detection policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server security alert policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the threat detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation of setting security alert policies failed."
          },
          "202": {
            "description": "Created request to set the server threat detection policy."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a server's threat detection policy with all parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMax.json"
          },
          "Update a server's threat detection policy with minimal parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMin.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies": {
      "get": {
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Get the server's threat detection policies.",
        "operationId": "ServerSecurityAlertPolicies_ListByServer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server threat detection policies.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicyListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress\n\n * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List the server's threat detection policies": {
            "$ref": "./examples/ServerSecurityAlertsListByServer.json"
          }
        }
      }
    }
  },
  "definitions": {
    "SecurityAlertPolicyProperties": {
      "description": "Properties of a security alert policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy, whether it is enabled or disabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServerSecurityAlertPolicyState",
            "modelAsString": false
          }
        },
        "disabledAlerts": {
          "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAddresses": {
          "description": "Specifies an array of e-mail addresses to which the alert is sent.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "type": "boolean"
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer"
        }
      }
    },
    "ServerSecurityAlertPolicy": {
      "description": "A server security alert policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityAlertPolicyProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServerSecurityAlertPolicyListResult": {
      "description": "A list of the server's security alert policies.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerSecurityAlertPolicy"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "SecurityAlertPolicyNameParameter": {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the security alert policy.",
      "required": true,
      "type": "string",
      "enum": [
        "default"
      ],
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
