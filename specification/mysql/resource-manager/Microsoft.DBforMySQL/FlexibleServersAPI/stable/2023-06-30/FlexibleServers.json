{
  "swagger": "2.0",
  "info": {
    "title": "MySQLManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules and configurations.",
    "version": "2023-06-30"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Create",
        "x-ms-examples": {
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a server as a point in time restore": {
            "$ref": "./examples/ServerCreateWithPointInTimeRestore.json"
          },
          "Create a replica server": {
            "$ref": "./examples/ServerCreateReplica.json"
          },
          "Create a server with byok": {
            "$ref": "./examples/ServerCreateWithBYOK.json"
          }
        },
        "description": "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "x-ms-examples": {
          "Update a server": {
            "$ref": "./examples/ServerUpdate.json"
          },
          "Update server customer maintenance window": {
            "$ref": "./examples/ServerUpdateWithCustomerMaintenanceWindow.json"
          },
          "Update server with byok": {
            "$ref": "./examples/ServerUpdateWithBYOK.json"
          }
        },
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForUpdate"
            },
            "description": "The required parameters for updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "Delete a server": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "description": "Deletes a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "Get a server": {
            "$ref": "./examples/ServerGet.json"
          },
          "Get a server with vnet": {
            "$ref": "./examples/ServerGetWithVnet.json"
          }
        },
        "description": "Gets information about a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "List servers in a resource group": {
            "$ref": "./examples/ServersListByResourceGroup.json"
          }
        },
        "description": "List all the servers in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "x-ms-examples": {
          "List servers in a subscription": {
            "$ref": "./examples/ServersList.json"
          }
        },
        "description": "List all the servers in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover": {
      "post": {
        "tags": [
          "ServerFailover"
        ],
        "operationId": "Servers_Failover",
        "x-ms-examples": {
          "Restart a server": {
            "$ref": "./examples/ServerFailover.json"
          }
        },
        "description": "Manual failover a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart": {
      "post": {
        "tags": [
          "ServerRestart"
        ],
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "Restart a server": {
            "$ref": "./examples/ServerRestart.json"
          }
        },
        "description": "Restarts a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerRestartParameter"
            },
            "description": "The required parameters for restarting a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start": {
      "post": {
        "tags": [
          "ServerStart"
        ],
        "operationId": "Servers_Start",
        "x-ms-examples": {
          "Start a server": {
            "$ref": "./examples/ServerStart.json"
          }
        },
        "description": "Starts a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop": {
      "post": {
        "tags": [
          "ServerStop"
        ],
        "operationId": "Servers_Stop",
        "x-ms-examples": {
          "Stop a server": {
            "$ref": "./examples/ServerStop.json"
          }
        },
        "description": "Stops a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/resetGtid": {
      "post": {
        "tags": [
          "ServerResetGtid"
        ],
        "operationId": "Servers_ResetGtid",
        "x-ms-examples": {
          "Reset GTID on a server": {
            "$ref": "./examples/ServerResetGtid.json"
          }
        },
        "description": "Resets GTID on a server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerGtidSetParameter"
            },
            "description": "The required parameters for resetting GTID on a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "List replicas for a server": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "description": "List all the replicas for a given server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/cutoverMigration": {
      "post": {
        "tags": [
          "ServerMigration"
        ],
        "operationId": "ServersMigration_CutoverMigration",
        "x-ms-examples": {
          "Cutover migration for MySQL import": {
            "$ref": "./examples/CutoverMigration.json"
          }
        },
        "description": "Cutover migration for MySQL import, it will switch source elastic server DNS to flexible server.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common-types/v1/common-types.json#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    }
  },
  "definitions": {
    "ServerVersion": {
      "type": "string",
      "description": "The version of a server.",
      "enum": [
        "5.7",
        "8.0.21"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "EnableStatusEnum": {
      "type": "string",
      "description": "Enum to indicate whether value is 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnableStatusEnum",
        "modelAsString": true
      }
    },
    "ReplicationRole": {
      "type": "string",
      "enum": [
        "None",
        "Source",
        "Replica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true
      },
      "description": "The replication role."
    },
    "DataEncryption": {
      "type": "object",
      "description": "The date encryption for cmk.",
      "properties": {
        "primaryUserAssignedIdentityId": {
          "type": "string",
          "description": "Primary user identity resource id"
        },
        "primaryKeyURI": {
          "type": "string",
          "description": "Primary key uri"
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string",
          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
        },
        "geoBackupKeyURI": {
          "type": "string",
          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
        },
        "type": {
          "type": "string",
          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
          "enum": [
            "AzureKeyVault",
            "SystemManaged"
          ],
          "x-ms-enum": {
            "name": "DataEncryptionType",
            "modelAsString": false
          }
        }
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "description": "indicates whether custom window is enabled or disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "description": "start hour for maintenance window"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "description": "start minute for maintenance window"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "description": "day of week for maintenance window"
        }
      }
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention days for the server."
        },
        "geoRedundantBackup": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not geo redundant backup is enabled.",
          "default": "Disabled"
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Earliest restore point creation time (ISO8601 format)"
        }
      },
      "description": "Storage Profile properties of a server"
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage size allowed for a server."
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Storage IOPS for a server."
        },
        "autoGrow": {
          "description": "Enable Storage Auto Grow or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Disabled"
        },
        "logOnDisk": {
          "description": "Enable Log On Disk or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Disabled"
        },
        "storageSku": {
          "type": "string",
          "readOnly": true,
          "description": "The sku name of the server storage."
        },
        "autoIoScaling": {
          "description": "Enable IO Auto Scaling or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Disabled"
        }
      },
      "description": "Storage Profile properties of a server"
    },
    "MySQLServerSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, e.g. Standard_D32s_v3."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "ServerSkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "tier"
      ],
      "description": "Billing information related properties of a server."
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration."
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "description": "Delegated subnet resource id used to setup vnet for a server."
        },
        "privateDnsZoneResourceId": {
          "type": "string",
          "description": "Private DNS zone resource id."
        }
      },
      "description": "Network related properties of a server"
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          },
          "description": "High availability mode for a server."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of server high availability.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "Healthy",
            "FailingOver",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true
          }
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "description": "Availability zone of the standby server."
        }
      },
      "description": "Network related properties of a server"
    },
    "ImportSourceProperties": {
      "type": "object",
      "properties": {
        "storageType": {
          "type": "string",
          "enum": [
            "AzureBlob"
          ],
          "x-ms-enum": {
            "name": "ImportSourceStorageType",
            "modelAsString": true
          },
          "description": "Storage type of import source.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageUrl": {
          "type": "string",
          "description": "Uri of the import source storage.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sasToken": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "dataDirPath": {
          "type": "string",
          "description": "Relative path of data directory in storage.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "description": "Import source related properties."
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "The password of the administrator login (required for server creation).",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "availabilityZone": {
          "type": "string",
          "description": "availability Zone information of the server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "The mode to create a new MySQL server.",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "Replica",
            "GeoRestore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceServerResourceId": {
          "type": "string",
          "description": "The source MySQL server id.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "The replication role."
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "description": "The maximum number of replicas that a primary server can have."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "description": "The Data Encryption for CMK."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of a server.",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "description": "Storage related properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "description": "Backup related properties of a server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "description": "High availability related properties of a server."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "description": "Network related properties of a server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "../../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "description": "PrivateEndpointConnections related properties of a server.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "importSourceProperties": {
          "$ref": "#/definitions/ImportSourceProperties",
          "description": "Source properties for import from storage."
        }
      },
      "description": "The properties of a server."
    },
    "Server": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/MySQLServerIdentity",
          "description": "The cmk identity for the server."
        },
        "sku": {
          "$ref": "#/definitions/MySQLServerSku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server."
    },
    "ServerPropertiesForUpdate": {
      "type": "object",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "The password of the administrator login."
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "description": "Storage related properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "description": "Backup related properties of a server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "description": "High availability related properties of a server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a server."
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "The replication role of the server."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "description": "The Data Encryption for CMK."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "description": "Network related properties of a server"
        }
      },
      "description": "The properties that can be updated for a server."
    },
    "ServerForUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/MySQLServerIdentity",
          "description": "The cmk identity for the server."
        },
        "sku": {
          "$ref": "#/definitions/MySQLServerSku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForUpdate",
          "x-ms-client-flatten": true,
          "description": "The properties that can be updated for a server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Parameters allowed to update for a server."
    },
    "ServerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of servers"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of servers."
    },
    "ServerRestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not failover to standby server when restarting a server with high availability enabled."
        },
        "maxFailoverSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed failover time in seconds."
        }
      },
      "description": "Server restart parameters."
    },
    "ServerGtidSetParameter": {
      "type": "object",
      "properties": {
        "gtidSet": {
          "type": "string",
          "description": "The Gtid set of server."
        }
      },
      "description": "Server Gtid set parameters."
    },
    "MySQLServerIdentity": {
      "x-ms-client-flatten": true,
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of managed service identity.",
          "enum": [
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "",
            "items": {
              "$ref": "#/definitions/UserAssignedIdentity"
            }
          },
          "description": "Metadata of user assigned identity."
        }
      },
      "description": "Properties to configure Identity for Bring your Own Keys"
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "PrincipalId",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "ClientId",
          "readOnly": true
        }
      },
      "description": "Metadata of user assigned identity."
    }
  }
}
