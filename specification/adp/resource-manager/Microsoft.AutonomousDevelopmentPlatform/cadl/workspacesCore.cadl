import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@cadl-lang/versioning";

using Cadl.Versioning;

@armProviderNamespace
@serviceTitle("adp")

@serviceVersion("2022-09-01-preview")
@doc("Microsoft.AutonomousDevelopmentPlatform resource management API.")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.AutonomousDevelopmentPlatform;


using OpenAPI;
using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;

@doc("Microsoft.AutonomousDevelopmentPlatform Workspace")
model Workspace is TrackedResource<WorkspaceProperties> {
  @doc("Workspace Name")
  @key("workspaceName")
  @segment("workspaces")
  @pattern("^[a-z0-9][-a-z0-9]{0,45}$")
  @maxLength(46)
  @extension("x-ms-parameter-location", "method")
  @path
  @visibility("read")
  name: string;
  @doc("The managed service identities assigned to this resource.")
  identity?: ManagedServiceIdentity;
}

@armResourceOperations
interface Workspaces extends ResourceOperations<Workspace, WorkspaceProperties> {
}

@doc("Workspace Properties Base")
model WorkspacePropertiesBase {
  @doc("The scope for the FQDN label generation. If not provided, defaults to TenantReuse.")
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;

  @doc("The Workspace's data location. If not provided, defaults to the resource's location.")
  dataLocation?: string;

  @doc("The encryption configuration.")
  encryption?: Encryption;

  @doc("The Storage SKU. If not provided, defaults to Standard_ZRS.")
  storageSku?: StorageSku;

  @doc("The amount of storage accounts provisioned per Workspace. If not provided, defaults to 5.")
  @minValue(1)
  storageAccountCount?: int32;

  @doc("Enables direct data plane read access to the Workspace's underlying Azure resources according to Azure RBAC (thus bypassing the Autonomous Development Platform's authorization systems).")
  directReadAccess?: DirectReadAccessState;

  @doc("The Data Catalog configuration.")
  dataCatalog?: DataCatalog;

  @doc("The Resim configuration.")
  resim?: Resim;

  @doc("The Azure Batch Accounts associated with the Workspace for Resim and Compute jobs.")
  batchAccounts?: BatchAccount[];

  @doc("The ARM Id of the source resource that originated the data for this Workspace")
  sourceResourceId?: string;
}

@doc("Encryption Configuration")
model Encryption {
  @doc("The customer-managed key encryption properties.")
  @extension("x-ms-client-flatten", true)
  customerManagedKeyEncryption?: CustomerManagedKeyEncryption;
}

@doc("Customer-Managed Key Encryption Properties")
model CustomerManagedKeyEncryption {
  @doc("The key encryption key Url, versioned or not. Example: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.")
  keyEncryptionKeyUrl: string;

  @doc("The identity configuration for Customer-managed key settings defining which identity should be used to authenticate to Key Vault.")
  @extension("x-ms-client-flatten", true)
  keyEncryptionKeyIdentity: KeyEncryptionKeyIdentity;
}

@doc("Key Encryption Key Identity")
model KeyEncryptionKeyIdentity {
  @doc("User assigned identity to use for accessing key encryption key Url. Example: /subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.")
  userAssignedIdentityResourceId: string;
}

@doc("Storage SKU")
model StorageSku {
  @doc("The SKU name.")
  name: StorageSkuName;
}

@doc("Provisioning State")
@knownValues(ProvisioningStateKV)
model ProvisioningState is string {}

enum ProvisioningStateKV {
  Succeeded,
  Failed,
  Canceled,
  Provisioning,
  Deleting,
  Accepted,
}

@doc("Scope for FQDN generation")
@knownValues(AutoGeneratedDomainNameLabelScopeKV)
model AutoGeneratedDomainNameLabelScope is string {}

enum AutoGeneratedDomainNameLabelScopeKV {
  TenantReuse,
  SubscriptionReuse,
  ResourceGroupReuse,
  NoReuse,
}

@doc("Storage SKU Name")
@knownValues(StorageSkuNameKV)
model StorageSkuName is string {}

enum StorageSkuNameKV {
  Standard_LRS,
  Standard_GRS,
  Standard_RAGRS,
  Standard_ZRS,
  Premium_LRS,
  Premium_ZRS,
  Standard_GZRS,
  Standard_RAGZRS,
}

@doc("Data Catalog Configuration")
model DataCatalog {
  @doc("The Data Catalog state.")
  state: DataCatalogState;

  @doc("The resource ID of the external Workspaces which will be used as Data Catalogs. A non empty value is expected only when the Data Catalog state is External. The target Workspaces must be configured with Data Catalog state Enabled.")
  externalWorkspaceIds?: string[];

  @doc("Configuration for the Azure Data Explorer instance. A non empty value is expected only when the Data Catalog state is Enabled. If not provided, defaults to: {tier: 'Standard', name: 'Standard_D13_v2', capacity: 2}.")
  dataExplorer?: DataExplorer;
}

@doc("Data Catalog State")
@knownValues(DataCatalogStateKV)
model DataCatalogState is string {}

enum DataCatalogStateKV {
  Disabled,
  Enabled,
  External
}

@doc("Data Explorer Configuration")
model DataExplorer {
  @doc("The Azure DataExplorer SKU")
  @extension("x-ms-client-flatten", true)
  azureSku: AzureSku;
}

// src: https://github.com/Azure/azure-rest-api-specs-pr/blob/df70965d3a207eb2a628c96aa6ed935edc6b7911/specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/kusto.json#L3959
@doc("The Data Explorer Azure SKU")
model AzureSku {
  @doc("The DataExplorer SKU tier (optional).")
  tier?: SkuTier;

  @doc("The DataExplorer SKU name (optional).")
  name?: string;

  @doc("The DataExplorer SKU capacity (optional).")
  capacity?: int32;
}

@doc("Data Catalog SKU tier")
@knownValues(SkuTierKV)
model SkuTier is string {}

enum SkuTierKV {
  Basic,
  Standard
}

@doc("Resim Configuration")
model Resim {
  @doc("The state defines whether Resim is enabled for this Workspace or not, and accordingly whether to provision a resim dedicated Storage Account. Once enabled, this toggle cannot be turned off.")
  state: ResimStateKV;
}

@doc("Resim State")
enum ResimStateKV {
  Disabled,
  Enabled
}

@doc("BatchAccount Configuration")
model BatchAccount {
  @doc("The Batch Account ARM resource id.")
  batchAccountResourceId: string;

  @doc("User assigned identity to use for accessing the Batch Account. Example: /subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. If not provided, the 'Autonomous Development Platform' service principle will be used.")
  userAssignedIdentityResourceId?: string;
}


@doc("Direct read access state")
@knownValues(DirectReadAccessStateKV)
model DirectReadAccessState is string {}

@doc("Direct read access state")
enum DirectReadAccessStateKV {
  Disabled,
  Enabled
}
