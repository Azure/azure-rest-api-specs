{
  "swagger": "2.0",
  "info": {
    "title": "KustoManagementClient",
    "version": "2018-09-07-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "KustoClustersGet": {
            "$ref": "./examples/KustoClustersGet.json"
          }
        },
        "description": "Gets a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto cluster.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CreateOrUpdate",
        "x-ms-examples": {
          "KustoClustersCreateOrUpdate": {
            "$ref": "./examples/KustoClustersCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "description": "The Kusto cluster parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Cluster.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Successfully created the cluster.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "x-ms-examples": {
          "KustoClustersUpdate": {
            "$ref": "./examples/KustoClustersUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            },
            "description": "The Kusto cluster parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Cluster.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Successfully updated the cluster.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "x-ms-examples": {
          "KustoClustersDelete": {
            "$ref": "./examples/KustoClustersDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Deletes a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- cluster deleted successfully."
          },
          "202": {
            "description": "Accepted the delete cluster request."
          },
          "204": {
            "description": "NoContent -- cluster does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/stop": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Stop",
        "x-ms-examples": {
          "KustoClustersStop": {
            "$ref": "./examples/KustoClustersStop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Stops a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/start": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Start",
        "x-ms-examples": {
          "KustoClustersStart": {
            "$ref": "./examples/KustoClustersStart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Starts a Kusto cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "KustoClustersListByResourceGroup": {
            "$ref": "./examples/KustoClustersListByResourceGroup.json"
          }
        },
        "description": "Lists all Kusto clusters within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_List",
        "x-ms-examples": {
          "KustoClustersList": {
            "$ref": "./examples/KustoClustersList.json"
          }
        },
        "description": "Lists all Kusto clusters within a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/skus": {
      "get": {
        "description": "Lists eligible SKUs for Kusto resource provider.",
        "x-ms-examples": {
          "KustoClustersListSkus": {
            "$ref": "./examples/KustoClustersListSkus.json"
          }
        },
        "operationId": "Clusters_ListSkus",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ListSkusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/checkNameAvailability": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CheckNameAvailability",
        "x-ms-examples": {
          "KustoClustersCheckNameAvailability": {
            "$ref": "./examples/KustoClustersCheckNameAvailability.json"
          }
        },
        "description": "Checks that the cluster name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Azure location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterCheckNameRequest"
            },
            "description": "The name of the cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkNameAvailability": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_CheckNameAvailability",
        "x-ms-examples": {
          "KustoDatabaseCheckNameAvailability": {
            "$ref": "./examples/KustoDatabasesCheckNameAvailability.json"
          }
        },
        "description": "Checks that the database name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "databaseName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseCheckNameRequest"
            },
            "description": "The name of the database."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/skus": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListSkusByResource",
        "x-ms-examples": {
          "KustoClustersListResourceSkus": {
            "$ref": "./examples/KustoClustersListResourceSkus.json"
          }
        },
        "description": "Returns the SKUs available for the provided resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ListResourceSkusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns the list of databases of the given Kusto cluster.",
        "operationId": "Databases_ListByCluster",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoDatabasesListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of databases.",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "KustoDatabasesGet": {
            "$ref": "./examples/KustoDatabasesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a database.",
        "operationId": "Databases_CreateOrUpdate",
        "x-ms-examples": {
          "KustoDatabasesCreateOrUpdate": {
            "$ref": "./examples/KustoDatabasesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "The database parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Successfully created the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Accepted the create database request."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Databases"
        ],
        "description": "Updates a database.",
        "operationId": "Databases_Update",
        "x-ms-examples": {
          "KustoDatabasesUpdate": {
            "$ref": "./examples/KustoDatabasesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseUpdate"
            },
            "description": "The database parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Accepted the update database request."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "description": "Deletes the database with the given name.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "KustoDatabasesDelete": {
            "$ref": "./examples/KustoDatabasesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified database does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "description": "Returns a list of database principals of the given Kusto cluster and database.",
        "operationId": "Databases_ListPrincipals",
        "x-ms-examples": {
          "KustoDatabaseListPrincipals": {
            "$ref": "./examples/KustoDatabaseListPrincipals.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of database principals.",
            "schema": {
              "$ref": "#/definitions/DatabasePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_AddPrincipals",
        "x-ms-examples": {
          "KustoDatabaseAddPrincipals": {
            "$ref": "./examples/KustoDatabaseAddPrincipals.json"
          }
        },
        "description": "Add Database principals permissions.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "databasePrincipalsToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabasePrincipalListRequest"
            },
            "description": "List of database principals to add."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully added the list of database principals. Returns the updated list of principals.",
            "schema": {
              "$ref": "#/definitions/DatabasePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_RemovePrincipals",
        "x-ms-examples": {
          "KustoDatabaseRemovePrincipals": {
            "$ref": "./examples/KustoDatabaseRemovePrincipals.json"
          }
        },
        "description": "Remove Database principals permissions.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "databasePrincipalsToRemove",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabasePrincipalListRequest"
            },
            "description": "List of database principals to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully removed the list of database principals. Returns the updated list of principals.",
            "schema": {
              "$ref": "#/definitions/DatabasePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubconnections": {
      "get": {
        "tags": [
          "EventHubConnections"
        ],
        "description": "Returns the list of Event Hub connections of the given Kusto database.",
        "operationId": "EventHubConnections_ListByDatabase",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoEventHubConnectionsListByDatabase.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Event Hub connections.",
            "schema": {
              "$ref": "#/definitions/EventHubConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubConnectionValidation": {
      "post": {
        "tags": [
          "EventHubConnections"
        ],
        "operationId": "EventHubConnections_eventhubConnectionValidation",
        "x-ms-examples": {
          "KustoDataConnectionValidation": {
            "$ref": "./examples/KustoDataConnectionValidation.json"
          }
        },
        "description": "Checks that the Event Hub data connection parameters are valid.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubConnectionValidation"
            },
            "description": "The Event Hub connection parameters supplied to the CreateOrUpdate operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "$ref": "#/definitions/EventHubConnectionValidationListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubconnections/{eventHubConnectionName}": {
      "get": {
        "tags": [
          "EventHubConnections"
        ],
        "description": "Returns an Event Hub connection.",
        "operationId": "EventHubConnections_Get",
        "x-ms-examples": {
          "KustoEventHubConnectionsGet": {
            "$ref": "./examples/KustoEventHubConnectionsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified Event Hub connection.",
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventHubConnections"
        ],
        "description": "Creates or updates a Event Hub connection.",
        "operationId": "EventHubConnections_CreateOrUpdate",
        "x-ms-examples": {
          "KustoEventHubConnectionsCreateOrUpdate": {
            "$ref": "./examples/KustoEventHubConnectionsCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            },
            "description": "The Event Hub connection parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Event Hub connection.",
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            }
          },
          "201": {
            "description": "Successfully created the Event Hub connection.",
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            }
          },
          "202": {
            "description": "Accepted the create Event Hub connection request."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "EventHubConnections"
        ],
        "description": "Updates a Event Hub connection.",
        "operationId": "EventHubConnections_Update",
        "x-ms-examples": {
          "KustoEventHubConnectionsUpdate": {
            "$ref": "./examples/KustoEventHubConnectionsUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubConnectionUpdate"
            },
            "description": "The Event Hub connection parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Event Hub connection.",
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            }
          },
          "201": {
            "description": "Successfully updated the Event Hub connection.",
            "schema": {
              "$ref": "#/definitions/EventHubConnection"
            }
          },
          "202": {
            "description": "Accepted the update Event Hub connection request."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "EventHubConnections"
        ],
        "description": "Deletes the Event Hub connection with the given name.",
        "operationId": "EventHubConnections_Delete",
        "x-ms-examples": {
          "KustoEventHubConnectionsDelete": {
            "$ref": "./examples/KustoEventHubConnectionsDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Event Hub connection."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified Event Hub connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Kusto/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "KustoOperationsList": {
            "$ref": "./examples/KustoOperationsList.json"
          }
        },
        "description": "Lists available operations for the Microsoft.Kusto provider.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of available operations.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ClusterProperties": {
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the resource.",
          "enum": [
            "Creating",
            "Unavailable",
            "Running",
            "Deleting",
            "Deleted",
            "Stopping",
            "Stopped",
            "Starting"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "uri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster URI."
        },
        "dataIngestionUri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster data ingestion URI."
        },
        "trustedExternalTenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedExternalTenant"
          },
          "description": "The cluster's external tenants."
        }
      },
      "description": "Class representing the Kusto cluster properties."
    },
    "TrustedExternalTenant": {
      "properties": {
        "value": {
          "type": "string",
          "description": "GUID representing an external tenant."
        }
      }
    },
    "AzureResourceSku": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource Namespace and Type."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU details."
        },
        "capacity": {
          "$ref": "#/definitions/AzureCapacity",
          "description": "The SKU capacity."
        }
      }
    },
    "AzureCapacity": {
      "type": "object",
      "required": [
        "minimum",
        "maximum",
        "default",
        "scaleType"
      ],
      "properties": {
        "scaleType": {
          "description": "Scale type.",
          "type": "string",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "x-ms-enum": {
            "name": "AzureScaleType",
            "modelAsString": true
          }
        },
        "minimum": {
          "description": "Minimum allowed capacity.",
          "type": "integer"
        },
        "maximum": {
          "description": "Maximum allowed capacity.",
          "type": "integer"
        },
        "default": {
          "description": "The default capacity that would be used.",
          "type": "integer"
        }
      }
    },
    "AzureSku": {
      "type": "object",
      "required": [
        "name",
        "tier"
      ],
      "properties": {
        "name": {
          "description": "SKU name.",
          "type": "string",
          "enum": [
            "KC8",
            "KC16",
            "KS8",
            "KS16",
            "D13_v2",
            "D14_v2",
            "L8",
            "L16"
          ],
          "x-ms-enum": {
            "name": "AzureSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "description": "SKU capacity.",
          "type": "integer"
        },
        "tier": {
          "description": "SKU tier.",
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "AzureSkuTier",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseStatistics": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "size": {
          "type": "number",
          "description": "The database size - the total size of compressed data and index in bytes."
        }
      }
    },
    "DatabaseProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "softDeletePeriodInDays": {
          "type": "integer",
          "description": "The number of days data should be kept before it stops being accessible to queries."
        },
        "hotCachePeriodInDays": {
          "type": "integer",
          "description": "The number of days of data that should be kept in cache for fast queries."
        },
        "statistics": {
          "$ref": "#/definitions/DatabaseStatistics",
          "description": "The statistics of the database."
        }
      },
      "required": [
        "softDeletePeriodInDays"
      ],
      "description": "Class representing the Kusto database properties."
    },
    "EventHubConnectionValidation": {
      "properties": {
        "eventhubConnectionName": {
          "type": "string",
          "description": "The name of the event hub connection."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EventHubConnectionProperties"
        }
      },
      "description": "Class representing an event hub connection validation."
    },
    "EventHubConnectionProperties": {
      "properties": {
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID of the event hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "description": "The data format of the message. Optionally the data format can be added to each message.",
          "type": "string",
          "enum": [
            "MULTIJSON",
            "JSON",
            "CSV"
          ],
          "x-ms-enum": {
            "name": "dataFormat",
            "modelAsString": true
          }
        }
      },
      "required": [
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event hub connection properties."
    },
    "Cluster": {
      "required": [
        "sku"
      ],
      "properties": {
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "An ETag of the resource created."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the cluster."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Class representing a Kusto cluster."
    },
    "ClusterUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "An ETag of the resource updated."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the cluster."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "description": "Class representing an update to a Kusto cluster."
    },
    "Database": {
      "properties": {
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "An ETag of the resource created."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Class representing a Kusto database."
    },
    "DatabaseUpdate": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "An ETag of the resource updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "description": "Class representing an update to a Kusto database."
    },
    "DatabasePrincipal": {
      "type": "object",
      "required": [
        "name",
        "role",
        "type"
      ],
      "properties": {
        "role": {
          "description": "Database principal role.",
          "type": "string",
          "enum": [
            "Admin",
            "Ingestor",
            "Monitor",
            "User",
            "UnrestrictedViewers",
            "Viewer"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalRole",
            "modelAsString": true
          }
        },
        "name": {
          "description": "Database principal name.",
          "type": "string"
        },
        "type": {
          "description": "Database principal type.",
          "type": "string",
          "enum": [
            "App",
            "Group",
            "User"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalType",
            "modelAsString": true
          }
        },
        "fqn": {
          "description": "Database principal fully qualified name.",
          "type": "string"
        },
        "email": {
          "description": "Database principal email if exists.",
          "type": "string"
        },
        "appId": {
          "description": "Application id - relevant only for application principal type.",
          "type": "string"
        }
      }
    },
    "EventHubConnectionUpdate": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EventHubConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing an update to event hub connection."
    },
    "EventHubConnection": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EventHubConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing an event hub connection."
    },
    "EventHubConnectionValidationResult": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A message which indicates a problem in event hub connection validation."
        }
      }
    },
    "ClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "The list of Kusto clusters."
        }
      },
      "description": "The list Kusto clusters operation response."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of Kusto databases."
        }
      },
      "description": "The list Kusto databases operation response."
    },
    "DatabasePrincipalListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabasePrincipal"
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation response."
    },
    "DatabasePrincipalListRequest": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabasePrincipal"
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation request."
    },
    "EventHubConnectionValidationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventHubConnectionValidationResult"
          },
          "description": "The list of Kusto event hub connection validation errors."
        }
      },
      "description": "The list Kusto event hub connection validation result."
    },
    "EventHubConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventHubConnection"
          },
          "description": "The list of Kusto event hub connections."
        }
      },
      "description": "The list Kusto event hub connections operation response."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from Kusto."
    },
    "ClusterCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "DatabaseCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Database name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameResult": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies a Boolean value that indicates if the name is available."
        },
        "name": {
          "type": "string",
          "description": "The name that was checked."
        },
        "message": {
          "type": "string",
          "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
        }
      }
    },
    "ListResourceSkusResult": {
      "description": "List of available SKUs for an existing Kusto Cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureResourceSku"
          },
          "description": "The collection of available SKUs for an existing resource."
        }
      }
    },
    "ListSkusResult": {
      "description": "List of available SKUs for a new Kusto Cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureSku"
          },
          "description": "The collection of available SKUs for new resources."
        }
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for displaying in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from Kusto."
    },
    "OperationListResult": {
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "title": "The list of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "title": "The URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "title": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "title": "The operation name.",
          "description": "This is of the format {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "title": "The object that describes the operation.",
          "properties": {
            "provider": {
              "title": "Friendly name of the resource provider.",
              "type": "string"
            },
            "operation": {
              "title": "The operation type.",
              "description": "For example: read, write, delete.",
              "type": "string"
            },
            "resource": {
              "title": "The resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "title": "The friendly name of the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "title": "The intended executor of the operation.",
          "type": "string"
        },
        "properties": {
          "title": "Properties of the operation.",
          "type": "object"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API Version."
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "description": "The name of the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group containing the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database in the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "EventHubConnectionNameParameter": {
      "name": "eventHubConnectionName",
      "in": "path",
      "description": "The name of the event hub connection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
