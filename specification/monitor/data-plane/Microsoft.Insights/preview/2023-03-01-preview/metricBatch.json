{
  "openapi": "3.0.3",
  "info": {
    "title": "Azure Monitor Metric Batch",
    "version": "2023-03-01-preview"
  },
  "servers": [
    {
      "url": "https://{region}.metrics.monitor.azure.com",
      "variables": {
        "region": {
          "default": "eastus",
          "description": "The Azure region code (westus, eastus, northeurope, etc) for all of the resourceIds specified."
        }
      }
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/metricBatch": {
      "post": {
        "tags": [
          "Metrics"
        ],
        "operationId": "Metrics_Batch",
        "description": "**Lists the metric values for multiple resources**.",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/TimespanParameter"
          },
          {
            "$ref": "#/components/parameters/IntervalParameter"
          },
          {
            "$ref": "#/components/parameters/MetricNamespaceParameter"
          },
          {
            "$ref": "#/components/parameters/MetricNamesParameter"
          },
          {
            "$ref": "#/components/parameters/RegionParameter"
          },
          {
            "$ref": "#/components/parameters/AggregationsParameter"
          },
          {
            "$ref": "#/components/parameters/TopParameter"
          },
          {
            "$ref": "#/components/parameters/OrderByParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "requestBody": {
          "description": "List of resources to query metric namespaces for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricBatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MetricBatchBody": {
        "description": "List of resource ids to fetch metric namespaces for",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage1",
          "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage2"
        ]
      },
      "LocalizableString": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "the invariant value."
          },
          "localizedValue": {
            "type": "string",
            "description": "the locale specific value."
          }
        },
        "description": "The localizable string class."
      },
      "Unit": {
        "type": "string",
        "description": "the unit of the metric.",
        "enum": [
          "Count",
          "Bytes",
          "Seconds",
          "CountPerSecond",
          "BytesPerSecond",
          "Percent",
          "MilliSeconds",
          "ByteSeconds",
          "Unspecified",
          "Cores",
          "MilliCores",
          "NanoCores",
          "BitsPerSecond"
        ],
        "x-ms-enum": {
          "name": "Unit",
          "modelAsString": false
        }
      },
      "MetricValue": {
        "required": [
          "timeStamp"
        ],
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time",
            "description": "the timestamp for the metric value in ISO 8601 format."
          },
          "average": {
            "type": "number",
            "format": "double",
            "description": "the average value in the time range."
          },
          "minimum": {
            "type": "number",
            "format": "double",
            "description": "the least value in the time range."
          },
          "maximum": {
            "type": "number",
            "format": "double",
            "description": "the greatest value in the time range."
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "the sum of all of the values in the time range."
          },
          "count": {
            "type": "number",
            "format": "double",
            "description": "the number of samples in the time range. Can be used to determine the number of values that contributed to the average value."
          }
        },
        "description": "Represents a metric value."
      },
      "MetadataValue": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizableString",
            "description": "the name of the metadata."
          },
          "value": {
            "type": "string",
            "description": "the value of the metadata."
          }
        },
        "description": "Represents a metric metadata value."
      },
      "Result": {
        "description": "The metrics result for a resource.",
        "type": "object",
        "properties": {
          "timespan": {
            "type": "string",
            "description": "The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested."
          },
          "interval": {
            "type": "string",
            "format": "duration",
            "description": "The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made."
          },
          "namespace": {
            "type": "string",
            "description": "The namespace of the metrics been queried"
          },
          "resourceregion": {
            "type": "string",
            "description": "The region of the resource been queried for metrics."
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            },
            "description": "the value of the collection."
          }
        },
        "required": [
          "timespan",
          "value"
        ]
      },
      "Metric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the metric Id."
          },
          "name": {
            "$ref": "#/components/schemas/LocalizableString",
            "description": "the name and the display name of the metric, i.e. it is localizable string."
          },
          "displayDescription": {
            "type": "string",
            "description": "Description of this metric"
          },
          "type": {
            "type": "string",
            "description": "the resource type of the metric resource."
          },
          "unit": {
            "$ref": "#/components/schemas/Unit",
            "description": "the unit of the metric."
          },
          "timeseries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSeriesElement"
            },
            "description": "the time series returned when a data query is performed."
          }
        },
        "required": [
          "id",
          "name",
          "displayDescription",
          "type",
          "unit",
          "timeseries"
        ],
        "description": "The result data of a query."
      },
      "TimeSeriesElement": {
        "type": "object",
        "properties": {
          "metadatavalues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataValue"
            },
            "description": "the metadata values returned if $filter was specified in the call."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricValue"
            },
            "description": "An array of data points representing the metric values.  This is only returned if a result type of data is specified."
          }
        },
        "description": "A time series result type. The discriminator value is always TimeSeries in this case."
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Describes the format of Error response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Error code",
                  "type": "string"
                },
                "message": {
                  "description": "Error message indicating why the operation failed.",
                  "type": "string"
                }
              }
            },
            "examples": {
              "expired_token_example": {
                "$ref": "#/components/examples/expired_token_example"
              }
            }
          }
        }
      },
      "Response": {
        "description": "The response to a metrics query.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Result"
              }
            },
            "examples": {
              "storage": {
                "$ref": "#/components/examples/storage_example"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The subscription identifier for the resources in this batch.",
        "example": "123456728-abcd-1234-abcd-123456789abc"
      },
      "TimespanParameter": {
        "name": "timespan",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.",
        "example": "2020-08-01T20:00:00.123Z/2020-08-01T23:00:00.345Z"
      },
      "IntervalParameter": {
        "name": "interval",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "duration"
        },
        "description": "The interval (i.e. timegrain) of the query.",
        "example": "PT15M"
      },
      "MetricNamespaceParameter": {
        "name": "metricnamespace",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Metric namespace to query metric definitions for.",
        "example": "microsoft.storage/storageaccounts"
      },
      "MetricNamesParameter": {
        "name": "metricnames",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The names of the metrics (comma separated) to retrieve.",
        "example": "Ingress,Egress"
      },
      "AggregationsParameter": {
        "name": "aggregation",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The list of aggregation types (comma separated) to retrieve.",
        "example": "average,maximum,minimum"
      },
      "TopParameter": {
        "name": "top",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        },
        "description": "The maximum number of records to retrieve.\nValid only if $filter is specified.\nDefaults to 10.",
        "example": 10
      },
      "OrderByParameter": {
        "name": "orderby",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The aggregation to use for sorting results and the direction of the sort.\nOnly one order can be specified.\nExamples: sum asc.",
        "example": "average desc"
      },
      "FilterParameter": {
        "name": "$filter",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The **$filter** is used to reduce the set of metric data returned.<br>Example:<br>Metric contains metadata A, B and C.<br>- Return all time series of C where A = a1 and B = b1 or b2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>- Invalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**<br>This is invalid because the logical or operator cannot separate two different metadata names.<br>- Return all time series where A = a1, B = b1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>- Return all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**.",
        "example": "ApiName eq 'GetBlob' or ApiName eq 'GetBlobServiceProperties' and Authentication eq '*'"
      },
      "RegionParameter": {
        "name": "region",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The Azure region code (westus, eastus, northeurope, etc) for all of the resourceIds specified. Not required if the region is in the host name.",
        "example": "eastus"
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Client Api Version.",
        "example": "2020-08-01-preview"
      }
    },
    "examples": {
      "storage_example": {
        "summary": "Example response from a storage batch call",
        "value": [
          {
            "timespan": "2020-08-01T20:00:00Z/2020-08-01T23:00:00Z",
            "interval": "PT15M",
            "value": [
              {
                "id": "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage1/providers/Microsoft.Insights/metrics/Ingress",
                "type": "Microsoft.Insights/metrics",
                "name": {
                  "value": "Ingress",
                  "localizedValue": "Ingress"
                },
                "displayDescription": "The amount of ingress data, in bytes. This number includes ingress from an external client into Azure Storage as well as ingress within Azure.",
                "unit": "Bytes",
                "timeseries": [
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlob"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "SAS"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z",
                        "average": 438.0735294117647,
                        "minimum": 437,
                        "maximum": 583
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z",
                        "average": 437.54477611940297,
                        "minimum": 437,
                        "maximum": 583
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z",
                        "average": 438.0735294117647,
                        "minimum": 437,
                        "maximum": 583
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z",
                        "average": 437.54477611940297,
                        "minimum": 437,
                        "maximum": 583
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z",
                        "average": 438.0735294117647,
                        "minimum": 437,
                        "maximum": 583
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z",
                        "average": 437,
                        "minimum": 437,
                        "maximum": 437
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z",
                        "average": 437.542750929368,
                        "minimum": 437,
                        "maximum": 583
                      }
                    ]
                  },
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlobServiceProperties"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "AccountKey"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 342,
                        "minimum": 342,
                        "maximum": 342
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z"
                      }
                    ]
                  }
                ],
                "errorCode": "Success"
              },
              {
                "id": "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage1/providers/Microsoft.Insights/metrics/Egress",
                "type": "Microsoft.Insights/metrics",
                "name": {
                  "value": "Egress",
                  "localizedValue": "Egress"
                },
                "displayDescription": "The amount of egress data. This number includes egress to external client from Azure Storage as well as egress within Azure. As a result, this number does not reflect billable egress.",
                "unit": "Bytes",
                "timeseries": [
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlobServiceProperties"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "AccountKey"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 796,
                        "minimum": 796,
                        "maximum": 796
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z"
                      }
                    ]
                  },
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlob"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "SAS"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z",
                        "average": 365.83088235294116,
                        "minimum": 361,
                        "maximum": 1018
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z",
                        "average": 363.4514925373134,
                        "minimum": 361,
                        "maximum": 1018
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z",
                        "average": 365.83088235294116,
                        "minimum": 361,
                        "maximum": 1018
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z",
                        "average": 363.4514925373134,
                        "minimum": 361,
                        "maximum": 1018
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z",
                        "average": 365.83088235294116,
                        "minimum": 361,
                        "maximum": 1018
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z",
                        "average": 361,
                        "minimum": 361,
                        "maximum": 361
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z",
                        "average": 363.4423791821561,
                        "minimum": 361,
                        "maximum": 1018
                      }
                    ]
                  }
                ],
                "errorCode": "Success"
              }
            ],
            "namespace": "microsoft.storage/storageaccounts",
            "resourceregion": "eastus"
          },
          {
            "timespan": "2020-08-01T20:00:00Z/2020-08-01T23:00:00Z",
            "interval": "PT15M",
            "value": [
              {
                "id": "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage2/providers/Microsoft.Insights/metrics/Ingress",
                "type": "Microsoft.Insights/metrics",
                "name": {
                  "value": "Ingress",
                  "localizedValue": "Ingress"
                },
                "displayDescription": "The amount of ingress data, in bytes. This number includes ingress from an external client into Azure Storage as well as ingress within Azure.",
                "unit": "Bytes",
                "timeseries": [
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlobServiceProperties"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "AccountKey"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 330,
                        "minimum": 330,
                        "maximum": 330
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z"
                      }
                    ]
                  }
                ],
                "errorCode": "Success"
              },
              {
                "id": "/subscriptions/123456728-abcd-1234-abcd-123456789abc/resourceGroups/TestGroup/providers/Microsoft.Storage/storageAccounts/TestStorage2/providers/Microsoft.Insights/metrics/Egress",
                "type": "Microsoft.Insights/metrics",
                "name": {
                  "value": "Egress",
                  "localizedValue": "Egress"
                },
                "displayDescription": "The amount of egress data. This number includes egress to external client from Azure Storage as well as egress within Azure. As a result, this number does not reflect billable egress.",
                "unit": "Bytes",
                "timeseries": [
                  {
                    "metadatavalues": [
                      {
                        "name": {
                          "value": "apiname",
                          "localizedValue": "apiname"
                        },
                        "value": "GetBlobServiceProperties"
                      },
                      {
                        "name": {
                          "value": "authentication",
                          "localizedValue": "authentication"
                        },
                        "value": "AccountKey"
                      }
                    ],
                    "data": [
                      {
                        "timeStamp": "2020-08-01T20:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T20:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:00:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T21:45:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:00:00Z",
                        "average": 880,
                        "minimum": 880,
                        "maximum": 880
                      },
                      {
                        "timeStamp": "2020-08-01T22:15:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:30:00Z"
                      },
                      {
                        "timeStamp": "2020-08-01T22:45:00Z"
                      }
                    ]
                  }
                ],
                "errorCode": "Success"
              }
            ],
            "namespace": "microsoft.storage/storageaccounts",
            "resourceregion": "eastus"
          }
        ]
      },
      "expired_token_example": {
        "summary": "Example error response for an expired auth token",
        "value": {
          "code": "ExpiredAuthenticationToken",
          "message": "The access token expiry UTC time '8/6/2020 8:25:30 AM' is earlier than current UTC time '8/6/2020 4:06:04 PM'."
        }
      }
    }
  }
}