{
  "openapi": "3.0.0",
  "info": {
    "version": "2024-03-01-preview",
    "title": "MonitorManagementClient",
    "x-ms-code-generation-settings": {
      "name": "MonitorManagementClient"
    },
    "description": "Azure Monitor client to create/update/delete metric based alerts."
  },
  "servers": [
    {
      "url": "https://management.azure.com"
    }
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "components": {
    "securitySchemes": {
      "azure_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "description": "Azure Active Directory OAuth2 Flow"
      }
    },
    "schemas": {
      "MetricAlertAction": {
        "type": "object",
        "description": "An alert action.",
        "properties": {
          "actionGroupId": {
            "type": "string",
            "description": "the id of the action group to use."
          },
          "webHookProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload."
            },
            "description": "This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook."
          }
        }
      },
      "MetricAlertsMetricProperties": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertPropertiesBase"
          }
        ],
        "required": [
          "windowSize",
          "criteria"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Metric"
            ],
            "default": "Metric"
          },
          "windowSize": {
            "type": "string",
            "description": "The period of time that is used to monitor alert activity"
          },
          "criteria": {
            "$ref": "#/components/schemas/MetricAlertCriteria"
          },
          "autoMitigate": {
            "type": "boolean",
            "description": "the flag that indicates whether the alert should be auto resolved or not. The default is true."
          }
        }
      },
      "MetricAlertsMetricPropertiesForPatch": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertPropertiesBaseForPatch"
          }
        ],
        "required": [
          "windowSize",
          "criteria"
        ],
        "properties": {
          "windowSize": {
            "type": "string",
            "format": "duration",
            "description": "The period of time that is used to monitor alert activity"
          },
          "criteria": {
            "$ref": "#/components/schemas/MetricAlertCriteria",
            "description": "defines the specific alert criteria information."
          },
          "autoMitigate": {
            "type": "boolean",
            "description": "the flag that indicates whether the alert should be auto resolved or not. The default is true."
          }
        }
      },
      "MetricAlertsQueryProperties": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertPropertiesBase"
          }
        ],
        "required": [
          "criteria"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Query"
            ],
            "default": "Query"
          },
          "resolveConfiguration": {
            "$ref": "#/components/schemas/QueryResolveConfiguration"
          },
          "criteria": {
            "$ref": "#/components/schemas/MetricQueryCriteria"
          }
        }
      },
      "MetricAlertPropertiesBase": {
        "type": "object",
        "description": "The base properties for a metric alert rule.",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Metric",
              "Query"
            ],
            "default": "Metric",
            "description": "Indicates the type of metric alert. Defaults to 'Metric' if not specified."
          },
          "description": {
            "type": "string",
            "maxLength": 2048,
            "description": "Description of the alert rule. Maximum length is 2048 characters."
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "Alert severity (0-4).",
            "minimum": 0,
            "maximum": 4
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates if the alert rule is enabled."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of resource IDs that this metric alert rule is scoped to."
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricAlertAction"
            },
            "x-ms-identifiers": [
              "actionGroupId"
            ],
            "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved."
          },
          "lastUpdatedTime": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "Last time the rule was updated in ISO8601 format."
          },
          "isMigrated": {
            "type": "boolean",
            "description": "the value indicating whether this alert rule is migrated.",
            "readOnly": true
          },
          "evaluationFrequency": {
            "type": "string",
            "format": "duration",
            "description": "how often the metric alert is evaluated represented in ISO 8601 duration format."
          },
          "targetResourceType": {
            "type": "string",
            "description": "the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."
          },
          "targetResourceRegion": {
            "type": "string",
            "description": "the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "minProperties": 1,
            "description": "Custom properties for the alert"
          },
          "actionProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "minProperties": 1,
            "description": "Properties to customize alert actions"
          }
        },
        "required": [
          "severity",
          "enabled",
          "scopes",
          "evaluationFrequency",
          "criteria"
        ]
      },
      "MetricAlertsQueryPropertiesForPatch": {
        "type": "object",
        "description": "An alert rule properties for patch.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertPropertiesBaseForPatch"
          }
        ],
        "required": [
          "criteria"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Query"
            ],
            "default": "Query"
          },
          "resolveConfiguration": {
            "$ref": "#/components/schemas/QueryResolveConfiguration"
          },
          "criteria": {
            "$ref": "#/components/schemas/MetricQueryCriteria"
          }
        }
      },
      "MetricAlertPropertiesBaseForPatch": {
        "type": "object",
        "description": "The base properties for a metric alert rule for patch operations.",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Metric",
              "Query"
            ],
            "default": "Metric",
            "description": "Indicates the type of metric alert. Defaults to 'Metric' if not specified."
          },
          "description": {
            "type": "string",
            "description": "Description of the alert rule."
          },
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "Alert severity (0-4).",
            "minimum": 0,
            "maximum": 4
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates if the alert rule is enabled."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of resource IDs that this metric alert rule is scoped to."
          },
          "evaluationFrequency": {
            "type": "string",
            "format": "duration",
            "description": "how often the metric alert is evaluated represented in ISO 8601 duration format."
          },
          "targetResourceType": {
            "type": "string",
            "description": "the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."
          },
          "targetResourceRegion": {
            "type": "string",
            "description": "the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricAlertAction"
            },
            "x-ms-identifiers": [
              "actionGroupId"
            ],
            "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved."
          },
          "lastUpdatedTime": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "description": "Last time the rule was updated in ISO8601 format."
          },
          "isMigrated": {
            "type": "boolean",
            "description": "the value indicating whether this alert rule is migrated.",
            "readOnly": true
          },
          "customProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Custom properties for the alert"
          },
          "actionProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Properties to customize alert actions"
          }
        }
      },
      "MetricQueryCriteria": {
        "type": "object",
        "description": "Criteria for query-based metric alerts.",
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricQueryCriterionBase"
            },
            "description": "List of criteria that must all be met for the alert to fire."
          },
          "failingPeriods": {
            "$ref": "#/components/schemas/QueryFailingPeriods"
          }
        },
        "required": [
          "allOf"
        ]
      },
      "QueryResolveConfiguration": {
        "type": "object",
        "description": "Configuration for auto resolving fired alerts.",
        "properties": {
          "autoResolved": {
            "type": "boolean",
            "description": "Indicates whether the alert should be auto resolved"
          },
          "timeToResolve": {
            "type": "string",
            "description": "The time after which the alert should be auto resolved"
          }
        }
      },
      "MetricAlertResource": {
        "type": "object",
        "description": "A metric alert rule resource.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Azure resource Id"
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "Azure resource name"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "Azure resource type"
          },
          "location": {
            "type": "string",
            "description": "Resource location."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the resource."
          },
          "properties": {
            "x-ms-client-flatten": true,
            "description": "The alert rule properties of the resource.",
            "oneOf": [
              {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MetricAlertsMetricProperties"
                  },
                  {
                    "required": [
                      "windowSize"
                    ],
                    "not": {
                      "required": [
                        "resolveConfiguration"
                      ]
                    }
                  }
                ]
              },
              {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MetricAlertsQueryProperties"
                  },
                  {
                    "not": {
                      "required": [
                        "windowSize"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "location",
          "properties"
        ],
        "x-ms-azure-resource": true
      },
      "MetricAlertResourcePatch": {
        "type": "object",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the resource."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "properties": {
            "x-ms-client-flatten": true,
            "description": "The alert rule properties for patch operations.",
            "oneOf": [
              {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MetricAlertsMetricPropertiesForPatch"
                  },
                  {
                    "not": {
                      "required": [
                        "resolveConfiguration"
                      ]
                    }
                  },
                  {
                    "required": [
                      "windowSize"
                    ]
                  }
                ]
              },
              {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MetricAlertsQueryPropertiesForPatch"
                  },
                  {
                    "not": {
                      "required": [
                        "windowSize"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        "description": "The metric alert resource for patch operations."
      },
      "MetricAlertResourceCollection": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricAlertResource"
            },
            "description": "The values for the alert rule resources.",
            "x-ms-identifiers": [
              "id"
            ]
          }
        },
        "description": "Represents a collection of alert rule resources."
      },
      "MetricAlertCriteria": {
        "type": "object",
        "discriminator": {
          "propertyName": "odata.type",
          "mapping": {
            "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria": "#/components/schemas/MetricAlertSingleResourceMultipleMetricCriteria",
            "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria": "#/components/schemas/MetricAlertMultipleResourceMultipleMetricCriteria",
            "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria": "#/components/schemas/WebtestLocationAvailabilityCriteria"
          }
        },
        "properties": {
          "odata.type": {
            "type": "string",
            "enum": [
              "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
              "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
              "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria"
            ],
            "x-ms-enum": {
              "name": "odatatype",
              "modelAsString": true
            },
            "description": "Specifies the type of the alert criteria"
          }
        },
        "required": [
          "odata.type"
        ],
        "description": "The base type for all metric alert criteria. Discriminated by odata.type field to determine the specific criteria type."
      },
      "MetricAlertSingleResourceMultipleMetricCriteria": {
        "x-ms-discriminator-value": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertCriteria"
          }
        ],
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricCriteria"
            },
            "x-ms-identifiers": [
              "name"
            ],
            "description": "The list of metric criteria for this 'all of' operation."
          }
        },
        "description": "Specifies the metric alert criteria for a single resource that has multiple metric criteria."
      },
      "WebtestLocationAvailabilityCriteria": {
        "x-ms-discriminator-value": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertCriteria"
          }
        ],
        "properties": {
          "webTestId": {
            "type": "string",
            "description": "The Application Insights web test Id."
          },
          "componentId": {
            "type": "string",
            "description": "The Application Insights resource Id."
          },
          "failedLocationCount": {
            "type": "number",
            "description": "The number of failed locations."
          }
        },
        "required": [
          "webTestId",
          "componentId",
          "failedLocationCount"
        ],
        "description": "Specifies the metric alert rule criteria for a web test resource."
      },
      "MetricCriteria": {
        "x-ms-discriminator-value": "StaticThresholdCriterion",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MultiMetricCriteria"
          }
        ],
        "required": [
          "operator",
          "threshold"
        ],
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "Equals",
              "GreaterThan",
              "GreaterThanOrEqual",
              "LessThan",
              "LessThanOrEqual"
            ],
            "x-ms-enum": {
              "name": "Operator",
              "modelAsString": true
            },
            "description": "The operator used to compare the metric value against the threshold."
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "description": "The criteria threshold value that activates the alert."
          }
        },
        "description": "Static threshold metric alert criterion. This type inherits from MultiMetricCriteria and represents criteria using static thresholds."
      },
      "MetricDimension": {
        "type": "object",
        "required": [
          "name",
          "operator",
          "values"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the dimension"
          },
          "operator": {
            "type": "string",
            "enum": [
              "Include",
              "Exclude",
              "StartsWith"
            ],
            "description": "Operator for dimension values"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(?!\\s*$).+",
              "description": "Non-empty string value"
            },
            "minItems": 1,
            "uniqueItems": true,
            "description": "List of dimension values. Must contain at least one value and all values must be unique and non-empty."
          }
        },
        "description": "Specifies a metric dimension"
      },
      "MetricAlertMultipleResourceMultipleMetricCriteria": {
        "x-ms-discriminator-value": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetricAlertCriteria"
          }
        ],
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiMetricCriteria"
            },
            "x-ms-identifiers": [
              "name"
            ],
            "description": "The list of multiple metric criteria for this 'all of' operation."
          }
        },
        "description": "Specifies the metric alert criteria for multiple resources that have multiple metric criteria."
      },
      "MultiMetricCriteria": {
        "type": "object",
        "discriminator": {
          "propertyName": "criterionType",
          "mapping": {
            "StaticThresholdCriterion": "#/components/schemas/MetricCriteria",
            "DynamicThresholdCriterion": "#/components/schemas/DynamicMetricCriteria"
          }
        },
        "properties": {
          "criterionType": {
            "type": "string",
            "enum": [
              "StaticThresholdCriterion",
              "DynamicThresholdCriterion"
            ],
            "x-ms-enum": {
              "name": "criterionType",
              "modelAsString": true
            },
            "description": "Specifies the type of threshold criteria"
          },
          "name": {
            "type": "string",
            "description": "Name of the criteria."
          },
          "metricName": {
            "type": "string",
            "maxLength": 256,
            "description": "Name of the metric."
          },
          "metricNamespace": {
            "type": "string",
            "description": "Namespace of the metric."
          },
          "timeAggregation": {
            "type": "string",
            "enum": [
              "Average",
              "Count",
              "Minimum",
              "Maximum",
              "Total"
            ],
            "x-ms-enum": {
              "name": "AggregationTypeEnum",
              "modelAsString": true
            },
            "description": "The criteria time aggregation types."
          },
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricDimension"
            },
            "maxItems": 6,
            "x-ms-identifiers": [
              "name"
            ],
            "description": "List of dimension conditions. Maximum 6 dimensions per metric allowed."
          },
          "skipMetricValidation": {
            "type": "boolean",
            "description": "Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped."
          }
        },
        "required": [
          "criterionType",
          "name",
          "metricName",
          "timeAggregation"
        ],
        "description": "The types of conditions for a multi resource alert."
      },
      "DynamicMetricCriteria": {
        "x-ms-discriminator-value": "DynamicThresholdCriterion",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MultiMetricCriteria"
          }
        ],
        "required": [
          "operator",
          "alertSensitivity",
          "failingPeriods"
        ],
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "GreaterThan",
              "LessThan",
              "GreaterOrLessThan"
            ],
            "x-ms-enum": {
              "name": "DynamicThresholdOperator",
              "modelAsString": true
            },
            "description": "The operator used to compare the metric value against the dynamically calculated threshold."
          },
          "alertSensitivity": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High"
            ],
            "x-ms-enum": {
              "name": "DynamicThresholdSensitivity",
              "modelAsString": true
            },
            "description": "The sensitivity of the dynamic baseline calculation. Low means less sensitive thresholds, High means more sensitive thresholds."
          },
          "failingPeriods": {
            "$ref": "#/components/schemas/DynamicThresholdFailingPeriods",
            "description": "The number of evaluation periods that must meet the dynamic threshold conditions to trigger an alert."
          },
          "ignoreDataBefore": {
            "type": "string",
            "format": "date-time",
            "description": "ISO8601 date from which to start learning the metric historical data and calculate the dynamic thresholds (optional)"
          }
        },
        "description": "Dynamic threshold metric alert criterion. This type inherits from MultiMetricCriteria and represents criteria using machine learning-based dynamic thresholds."
      },
      "DynamicThresholdFailingPeriods": {
        "type": "object",
        "required": [
          "numberOfEvaluationPeriods",
          "minFailingPeriodsToAlert"
        ],
        "properties": {
          "numberOfEvaluationPeriods": {
            "type": "number",
            "description": "The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points."
          },
          "minFailingPeriodsToAlert": {
            "type": "number",
            "description": "The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods."
          }
        },
        "description": "The minimum number of violations required within the selected lookback time window required to raise an alert."
      },
      "ErrorResponse": {
        "description": "Error response for failed operations.",
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "description": "Unlocalized string which can be used to programmatically identify the error.",
                "type": "string"
              },
              "message": {
                "description": "Describes the error in detail and provides debugging information. If Accept-Language is set in the request, it must be localized to that language.",
                "type": "string"
              },
              "target": {
                "description": "The target of the particular error (for example, the name of the property in error).",
                "type": "string"
              },
              "details": {
                "description": "An array of additional nested error response info objects, as described by this contract.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              },
              "additionalInfo": {
                "description": "An array of objects with 'type' and 'info' properties. The schema of 'info' is service-specific and dependent on the 'type' string.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of additional information.",
                      "type": "string"
                    },
                    "info": {
                      "description": "The additional information specific to the type.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ErrorDetail": {
        "description": "Describes details of an error response.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Unlocalized string which can be used to programmatically identify the error.",
            "type": "string"
          },
          "message": {
            "description": "Describes the error in detail and provides debugging information.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error (for example, the name of the property in error).",
            "type": "string"
          }
        }
      },
      "Identity": {
        "type": "object",
        "description": "Identity for the resource.",
        "properties": {
          "principalId": {
            "readOnly": true,
            "type": "string",
            "description": "The principal ID of resource identity."
          },
          "tenantId": {
            "readOnly": true,
            "type": "string",
            "description": "The tenant ID of resource."
          },
          "type": {
            "type": "string",
            "description": "Type of managed service identity.",
            "enum": [
              "SystemAssigned",
              "UserAssigned",
              "None"
            ],
            "x-ms-enum": {
              "name": "IdentityType",
              "modelAsString": false
            }
          },
          "userAssignedIdentities": {
            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserIdentityProperties"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "UserIdentityProperties": {
        "type": "object",
        "properties": {
          "principalId": {
            "readOnly": true,
            "type": "string",
            "description": "The principal ID of user-assigned identity."
          },
          "clientId": {
            "readOnly": true,
            "type": "string",
            "description": "The client ID of user-assigned identity."
          }
        },
        "description": "The properties of a user-assigned identity."
      },
      "MetricQueryCriterionBase": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The query used to evaluate the alert rule"
          },
          "name": {
            "type": "string"
          },
          "criterionType": {
            "type": "string"
          }
        }
      },
      "QueryFailingPeriods": {
        "type": "object",
        "description": "Configuration for failing periods in query-based alerts.",
        "properties": {
          "for": {
            "type": "string",
            "description": "The minimum number of failing periods required to trigger an alert."
          }
        },
        "required": [
          "for"
        ]
      }
    },
    "parameters": {
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1
        },
        "description": "The ID of the target subscription."
      },
      "ResourceGroupNameParameter": {
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 90
        },
        "description": "The name of the resource group. The name is case insensitive."
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1
        },
        "description": "The API version to use for this operation."
      },
      "RuleNameParameter": {
        "name": "ruleName",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "description": "The name of the rule."
        }
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts": {
      "get": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Retrieve alert rule definitions in a subscription.",
        "operationId": "MetricAlerts_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of metric alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAlertResourceCollection"
                }
              }
            }
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List metric alert rules": {
            "$ref": "./examples/listMetricAlert.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts": {
      "get": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Retrieve alert rule definitions in a resource group.",
        "operationId": "MetricAlerts_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of metric alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAlertResourceCollection"
                }
              }
            }
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "List metric alert rules": {
            "$ref": "./examples/listMetricAlert.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}": {
      "get": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Retrieve an alert rule definition.",
        "operationId": "MetricAlerts_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a metric alert",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAlertResource"
                }
              }
            }
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Get a query based alert rule": {
            "$ref": "./examples/getMetricAlertQuery.json"
          },
          "Get an alert rule for single resource": {
            "$ref": "./examples/getMetricAlertSingleResource.json"
          },
          "Get an alert rule for multiple resources": {
            "$ref": "./examples/getMetricAlertMultipleResource.json"
          },
          "Get an alert rule on resource group(s)": {
            "$ref": "./examples/getMetricAlertResourceGroup.json"
          },
          "Get an alert rule on subscription": {
            "$ref": "./examples/getMetricAlertSubscription.json"
          },
          "Get a dynamic alert rule for single resource": {
            "$ref": "./examples/getDynamicMetricAlertSingleResource.json"
          },
          "Get a dynamic alert rule for multiple resources": {
            "$ref": "./examples/getDynamicMetricAlertMultipleResource.json"
          },
          "Get a web test alert rule": {
            "$ref": "./examples/getWebTestMetricAlert.json"
          }
        }
      },
      "put": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Create or update a metric alert definition.",
        "operationId": "MetricAlerts_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "requestBody": {
          "description": "The parameters of the rule to create or update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAlertResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAlertResource"
                }
              }
            }
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Create or update a query based alert rule": {
            "$ref": "./examples/createOrUpdateMetricAlertQuery.json"
          },
          "Create or update an alert rule for Single Resource": {
            "$ref": "./examples/createOrUpdateMetricAlertSingleResource.json"
          },
          "Create or update an alert rule for Multiple Resource": {
            "$ref": "./examples/createOrUpdateMetricAlertMultipleResource.json"
          },
          "Create or update an alert rule on Resource group(s)": {
            "$ref": "./examples/createOrUpdateMetricAlertResourceGroup.json"
          },
          "Create or update an alert rule on Subscription": {
            "$ref": "./examples/createOrUpdateMetricAlertSubscription.json"
          },
          "Create or update a dynamic alert rule for Single Resource": {
            "$ref": "./examples/createOrUpdateDynamicMetricAlertSingleResource.json"
          },
          "Create or update a dynamic alert rule for Multiple Resources": {
            "$ref": "./examples/createOrUpdateDynamicMetricAlertMultipleResource.json"
          },
          "Create or update a web test alert rule": {
            "$ref": "./examples/createOrUpdateWebTestMetricAlert.json"
          },
          "Create or update an alert rules with dimensions": {
            "$ref": "./examples/createOrUpdateMetricAlertWithDimensions.json"
          }
        }
      },
      "patch": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Update an metric alert definition.",
        "operationId": "MetricAlerts_Update",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "requestBody": {
          "description": "The parameters of the rule to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAlertResourcePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAlertResource"
                }
              }
            }
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Update an alert rule": {
            "$ref": "./examples/UpdateMetricAlert.json"
          }
        }
      },
      "delete": {
        "tags": [
          "MetricAlerts"
        ],
        "description": "Delete an alert rule definition.",
        "operationId": "MetricAlerts_Delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete an metric alert rule"
          },
          "204": {
            "description": "No content: the request was successful, but the response is empty"
          },
          "default": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete an alert rule": {
            "$ref": "./examples/deleteMetricAlert.json"
          }
        }
      }
    }
  }
}
