{
  "swagger": "2.0",
  "info": {
    "title": "MonitorManagementClient",
    "x-ms-code-generation-settings": {
      "name": "MonitorManagementClient"
    },
    "version": "2015-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/microsoft.insights/eventtypes/management/values": {
      "get": {
        "tags": [
          "TenantActivityLogs"
        ],
        "operationId": "TenantActivityLogs_List",
        "description": "Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Reduces the set of data collected. <br>The **$filter** is very restricted and allows only the following patterns.<br>- List events for a resource group: $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and resourceGroupName eq '<ResourceGroupName>'.<br>- List events for resource: $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and resourceUri eq '<ResourceURI>'.<br>- List events for a subscription: $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation'.<br>- List events for a resource provider: $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and resourceProvider eq '<ResourceProviderName>'.<br>- List events for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and correlationId eq '<CorrelationID>'.<br>**NOTE**: No other syntax is allowed."
          },
          {
            "$ref": "#/parameters/SelectParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./activityLogs_API.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Successful request to get a page of events in the tenant activity logs",
            "schema": {
              "$ref": "./activityLogs_API.json#/definitions/EventDataCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./activityLogs_API.json#/definitions/EventData",
        "x-ms-examples": {
          "Get Tenant Activity Logs without filter or select": {
            "$ref": "./examples/GetTenantActivityLogsNoParams.json"
          },
          "Get Tenant Activity Logs with filter": {
            "$ref": "./examples/GetTenantActivityLogsFiltered.json"
          },
          "Get Tenant Activity Logs with select": {
            "$ref": "./examples/GetTenantActivityLogsSelected.json"
          },
          "Get Tenant Activity Logs with filter and select": {
            "$ref": "./examples/GetTenantActivityLogsFilteredAndSelected.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "SelectParameter": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Used to fetch events with only the given properties.<br>The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*",
      "x-ms-parameter-location": "method"
    }
  }
}
