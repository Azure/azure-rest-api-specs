{
  "swagger": "2.0",
  "info": {
    "title": "MonitorManagementClient",
    "version": "2022-10-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings": {
      "get": {
        "description": "Lists the autoscale settings for a resource group",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request for a list of autoscale settings",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List autoscale settings": {
            "$ref": "./examples/listAutoscaleSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}": {
      "put": {
        "description": "Creates or updates an autoscale setting.",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request to create or update an autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          },
          "201": {
            "description": "Created autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an autoscale setting": {
            "$ref": "./examples/createOrUpdateAutoscaleSetting.json"
          }
        }
      },
      "delete": {
        "description": "Deletes and autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request to delete an autoscale setting"
          },
          "204": {
            "description": "No content: Successful request to delete an autoscale setting, but the response is intentionally empty"
          }
        },
        "x-ms-examples": {
          "Delete an autoscale setting": {
            "$ref": "./examples/deleteAutoscaleSetting.json"
          }
        }
      },
      "get": {
        "description": "Gets an autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request to get one autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        },
        "x-ms-examples": {
          "Get an autoscale setting": {
            "$ref": "./examples/getAutoscaleSetting.json"
          }
        }
      },
      "patch": {
        "description": "Updates an existing AutoscaleSettingsResource. To update other fields use the CreateOrUpdate method.",
        "operationId": "AutoscaleSettings_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "autoscaleSettingResource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResourcePatch"
            },
            "description": "Parameters supplied to the operation."
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "An existing autoscale setting resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        },
        "x-ms-examples": {
          "Patch an autoscale setting": {
            "$ref": "./examples/patchAutoscaleSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}/predictiveMetrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "operationId": "PredictiveMetric_Get",
        "description": "get predictive autoscale metric future data",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "#/parameters/TimespanParameter"
          },
          {
            "$ref": "#/parameters/IntervalParameter"
          },
          {
            "$ref": "#/parameters/MetricNamespaceParameter"
          },
          {
            "$ref": "#/parameters/MetricNamesParameter"
          },
          {
            "$ref": "#/parameters/AggregationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request to get the list of metric values.",
            "schema": {
              "$ref": "#/definitions/PredictiveResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Metric for data": {
            "$ref": "./examples/GetPredictiveMetric.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings": {
      "get": {
        "description": "Lists the autoscale settings for a subscription",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AutoscaleErrorResponse"
            }
          },
          "200": {
            "description": "Successful request for a list of autoscale settings",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List autoscale settings by subs": {
            "$ref": "./examples/listAutoscaleSettingBySubscription.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ScaleCapacity": {
      "type": "object",
      "required": [
        "minimum",
        "maximum",
        "default"
      ],
      "properties": {
        "minimum": {
          "type": "string",
          "description": "the minimum number of instances for the resource."
        },
        "maximum": {
          "type": "string",
          "description": "the maximum number of instances for the resource. The actual maximum number of instances is limited by the cores that are available in the subscription."
        },
        "default": {
          "type": "string",
          "description": "the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default."
        }
      },
      "description": "The number of instances that can be used during this profile."
    },
    "MetricTrigger": {
      "type": "object",
      "required": [
        "metricName",
        "metricResourceUri",
        "timeGrain",
        "statistic",
        "timeWindow",
        "timeAggregation",
        "operator",
        "threshold"
      ],
      "properties": {
        "metricName": {
          "type": "string",
          "description": "the name of the metric that defines what the rule monitors."
        },
        "metricNamespace": {
          "type": "string",
          "description": "the namespace of the metric that defines what the rule monitors."
        },
        "metricResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource the rule monitors."
        },
        "metricResourceLocation": {
          "type": "string",
          "description": "the location of the resource the rule monitors."
        },
        "timeGrain": {
          "type": "string",
          "format": "duration",
          "description": "the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute."
        },
        "statistic": {
          "type": "string",
          "description": "the metric statistic type. How the metrics from multiple instances are combined.",
          "enum": [
            "Average",
            "Min",
            "Max",
            "Sum",
            "Count"
          ],
          "x-ms-enum": {
            "name": "MetricStatisticType",
            "modelAsString": false
          }
        },
        "timeWindow": {
          "type": "string",
          "format": "duration",
          "description": "the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes."
        },
        "timeAggregation": {
          "type": "string",
          "description": "time aggregation type. How the data that is collected should be combined over time. The default value is Average.",
          "enum": [
            "Average",
            "Minimum",
            "Maximum",
            "Total",
            "Count",
            "Last"
          ],
          "x-ms-enum": {
            "name": "TimeAggregationType",
            "modelAsString": false
          }
        },
        "operator": {
          "type": "string",
          "description": "the operator that is used to compare the metric data and the threshold.",
          "enum": [
            "Equals",
            "NotEquals",
            "GreaterThan",
            "GreaterThanOrEqual",
            "LessThan",
            "LessThanOrEqual"
          ],
          "x-ms-enum": {
            "name": "ComparisonOperationType",
            "modelAsString": false
          }
        },
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "the threshold of the metric that triggers the scale action."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleMetricDimension"
          },
          "x-ms-identifiers": [],
          "description": "List of dimension conditions. For example: [{\"DimensionName\":\"AppName\",\"Operator\":\"Equals\",\"Values\":[\"App1\"]},{\"DimensionName\":\"Deployment\",\"Operator\":\"Equals\",\"Values\":[\"default\"]}]."
        },
        "dividePerInstance": {
          "type": "boolean",
          "description": "a value indicating whether metric should divide per instance."
        }
      },
      "description": "The trigger that results in a scaling action."
    },
    "ScaleAction": {
      "type": "object",
      "required": [
        "direction",
        "type",
        "cooldown"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "description": "the scale direction. Whether the scaling action increases or decreases the number of instances.",
          "enum": [
            "None",
            "Increase",
            "Decrease"
          ],
          "x-ms-enum": {
            "name": "ScaleDirection",
            "modelAsString": false
          }
        },
        "type": {
          "type": "string",
          "description": "the type of action that should occur when the scale rule fires.",
          "enum": [
            "ChangeCount",
            "PercentChangeCount",
            "ExactCount",
            "ServiceAllowedNextValue"
          ],
          "x-ms-enum": {
            "name": "ScaleType",
            "modelAsString": false
          }
        },
        "value": {
          "type": "string",
          "description": "the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1.",
          "default": "1"
        },
        "cooldown": {
          "type": "string",
          "format": "duration",
          "description": "the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute in ISO 8601 format."
        }
      },
      "description": "The parameters for the scaling action."
    },
    "ScaleRule": {
      "type": "object",
      "required": [
        "scaleAction",
        "metricTrigger"
      ],
      "properties": {
        "metricTrigger": {
          "$ref": "#/definitions/MetricTrigger",
          "description": "the trigger that results in a scaling action."
        },
        "scaleAction": {
          "$ref": "#/definitions/ScaleAction",
          "description": "the parameters for the scaling action."
        }
      },
      "description": "A rule that provide the triggers and parameters for the scaling action."
    },
    "TimeWindow": {
      "type": "object",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the timezone of the start and end times for the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "the start time for the profile in ISO 8601 format."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "the end time for the profile in ISO 8601 format."
        }
      },
      "required": [
        "start",
        "end"
      ],
      "description": "A specific date-time for the profile."
    },
    "RecurrentSchedule": {
      "type": "object",
      "required": [
        "timeZone",
        "days",
        "hours",
        "minutes"
      ],
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the collection of days that the profile takes effect on. Possible values are Sunday through Saturday."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported)."
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A collection of minutes at which the profile takes effect at."
        }
      },
      "description": "The scheduling constraints for when the profile begins."
    },
    "Recurrence": {
      "type": "object",
      "required": [
        "frequency",
        "schedule"
      ],
      "properties": {
        "frequency": {
          "type": "string",
          "description": "the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly.",
          "enum": [
            "None",
            "Second",
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": false
          }
        },
        "schedule": {
          "$ref": "#/definitions/RecurrentSchedule",
          "description": "the scheduling constraints for when the profile begins."
        }
      },
      "description": "The repeating times at which this profile begins. This element is not used if the FixedDate element is used."
    },
    "AutoscaleProfile": {
      "type": "object",
      "required": [
        "rules",
        "name",
        "capacity"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the profile."
        },
        "capacity": {
          "$ref": "#/definitions/ScaleCapacity",
          "description": "the number of instances that can be used during this profile."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "x-ms-identifiers": [],
          "description": "the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified."
        },
        "fixedDate": {
          "$ref": "#/definitions/TimeWindow",
          "description": "the specific date-time for the profile. This element is not used if the Recurrence element is used."
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence",
          "description": "the repeating times at which this profile begins. This element is not used if the FixedDate element is used."
        }
      },
      "description": "Autoscale profile."
    },
    "PredictiveAutoscalePolicy": {
      "type": "object",
      "required": [
        "scaleMode"
      ],
      "properties": {
        "scaleMode": {
          "type": "string",
          "description": "the predictive autoscale mode",
          "enum": [
            "Disabled",
            "ForecastOnly",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "PredictiveAutoscalePolicyScaleMode",
            "modelAsString": false
          }
        },
        "scaleLookAheadTime": {
          "type": "string",
          "format": "duration",
          "description": "the amount of time to specify by which instances are launched in advance. It must be between 1 minute and 60 minutes in ISO 8601 format."
        }
      },
      "description": "The parameters for enabling predictive autoscale."
    },
    "EmailNotification": {
      "type": "object",
      "properties": {
        "sendToSubscriptionAdministrator": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription administrator.",
          "default": false
        },
        "sendToSubscriptionCoAdministrators": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription co-administrators.",
          "default": false
        },
        "customEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the custom e-mails list. This value can be null or empty, in which case this attribute will be ignored."
        }
      },
      "description": "Email notification of an autoscale event."
    },
    "WebhookNotification": {
      "type": "object",
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "the service address to receive the notification."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "a property bag of settings. This value can be empty."
        }
      },
      "description": "Webhook notification of an autoscale event."
    },
    "AutoscaleNotification": {
      "type": "object",
      "required": [
        "operation"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "description": "the operation associated with the notification and its value must be \"scale\"",
          "enum": [
            "Scale"
          ],
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": false
          }
        },
        "email": {
          "$ref": "#/definitions/EmailNotification",
          "description": "the email notification."
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebhookNotification"
          },
          "x-ms-identifiers": [],
          "description": "the collection of webhook notifications."
        }
      },
      "description": "Autoscale notification."
    },
    "AutoscaleSetting": {
      "type": "object",
      "required": [
        "profiles"
      ],
      "properties": {
        "profiles": {
          "type": "array",
          "maxItems": 20,
          "items": {
            "$ref": "#/definitions/AutoscaleProfile"
          },
          "x-ms-identifiers": [],
          "description": "the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified."
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleNotification"
          },
          "x-ms-identifiers": [],
          "description": "the collection of notifications."
        },
        "enabled": {
          "type": "boolean",
          "description": "the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is 'false'.",
          "default": false
        },
        "predictiveAutoscalePolicy": {
          "$ref": "#/definitions/PredictiveAutoscalePolicy",
          "description": "the predictive autoscale policy mode."
        },
        "name": {
          "type": "string",
          "description": "the name of the autoscale setting."
        },
        "targetResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource that the autoscale setting should be added to."
        },
        "targetResourceLocation": {
          "type": "string",
          "description": "the location of the resource that the autoscale setting should be added to."
        }
      },
      "description": "A setting that contains all of the configuration for the automatic scaling of a resource."
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to the response.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "The autoscale setting resource."
    },
    "AutoscaleSettingResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AutoscaleSetting",
          "description": "The autoscale setting of the resource."
        }
      },
      "description": "The autoscale setting resource."
    },
    "AutoscaleSettingResourcePatch": {
      "type": "object",
      "description": "The autoscale setting object for patch operations.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AutoscaleSetting",
          "description": "The autoscale setting properties of the update operation."
        }
      }
    },
    "AutoscaleSettingResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleSettingResource"
          },
          "description": "the values for the autoscale setting resources."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents a collection of autoscale setting resources."
    },
    "AutoscaleErrorResponse": {
      "description": "Describes the format of Error response.",
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "description": "The error object.",
          "properties": {
            "code": {
              "description": "One of a server-defined set of error codes.",
              "type": "string"
            },
            "message": {
              "description": "A human-readable representation of the error.",
              "type": "string"
            },
            "target": {
              "description": "The target of the particular error.",
              "type": "string"
            },
            "details": {
              "description": "A human-readable representation of the error's details.",
              "type": "string"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to the response.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "ScaleRuleMetricDimension": {
      "type": "object",
      "required": [
        "DimensionName",
        "Operator",
        "Values"
      ],
      "properties": {
        "DimensionName": {
          "type": "string",
          "description": "Name of the dimension."
        },
        "Operator": {
          "type": "string",
          "description": "the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to any of the values. 'NotEquals' being not equal to all of the values",
          "enum": [
            "Equals",
            "NotEquals"
          ],
          "x-ms-enum": {
            "name": "ScaleRuleMetricDimensionOperationType",
            "modelAsString": true
          }
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "list of dimension values. For example: [\"App1\",\"App2\"]."
        }
      },
      "description": "Specifies an auto scale rule metric dimension."
    },
    "PredictiveResponse": {
      "type": "object",
      "properties": {
        "timespan": {
          "type": "string",
          "description": "The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested."
        },
        "interval": {
          "type": "string",
          "format": "duration",
          "description": "The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made."
        },
        "metricName": {
          "type": "string",
          "description": "The metrics being queried"
        },
        "targetResourceId": {
          "type": "string",
          "description": "resource of the predictive metric."
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictiveValue"
          },
          "x-ms-identifiers": [],
          "description": "the value of the collection."
        }
      },
      "description": "The response to a metrics query."
    },
    "PredictiveValue": {
      "type": "object",
      "required": [
        "timeStamp",
        "value"
      ],
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "the timestamp for the metric value in ISO 8601 format."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "Predictive value in this time bucket."
        }
      },
      "description": "Represents a predictive metric value in the given bucket."
    }
  },
  "parameters": {
    "AutoscaleSettingNameParameter": {
      "name": "autoscaleSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The autoscale setting name.",
      "x-ms-parameter-location": "method"
    },
    "TimespanParameter": {
      "name": "timespan",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.",
      "x-ms-parameter-location": "method"
    },
    "IntervalParameter": {
      "name": "interval",
      "in": "query",
      "required": true,
      "type": "string",
      "format": "duration",
      "description": "The interval (i.e. timegrain) of the query.",
      "x-ms-parameter-location": "method"
    },
    "MetricNamesParameter": {
      "name": "metricName",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'**",
      "x-ms-parameter-location": "method"
    },
    "AggregationParameter": {
      "name": "aggregation",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The list of aggregation types (comma separated) to retrieve.",
      "x-ms-parameter-location": "method"
    },
    "MetricNamespaceParameter": {
      "name": "metricNamespace",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Metric namespace to query metric definitions for.",
      "x-ms-parameter-location": "method"
    }
  }
}
