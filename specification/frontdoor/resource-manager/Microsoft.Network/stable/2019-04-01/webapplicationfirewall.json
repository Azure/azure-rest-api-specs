{
  "swagger": "2.0",
  "info": {
    "version": "2018-08-01",
    "title": "WebApplicationFirewallManagement",
    "description": "APIs to manage web application firewall rules"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
      "get": {
        "tags": [
          "ListWebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "operationId": "Policies_List",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/WafListPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}": {
      "get": {
        "tags": [
          "GetWebapplicationfirewallPolicy"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "operationId": "Policies_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "policy get": {
            "$ref": "./examples/WafPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "CreateOrUpdateWebApplicationFirewallPolicy"
        ],
        "description": "Creates or update policy with specified rule set name within a resource group.",
        "operationId": "Policies_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Policy to be created.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "201": {
            "description": "Created. The request has been fulfilled and a new protection policy has been created.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/WafPolicyCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DeleteWebApplicationFirewallPolicy"
        ],
        "description": "Deletes Policy",
        "operationId": "Policies_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 128,
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content. The request has been accepted but the policy was not found."
          },
          "200": {
            "description": "Delete successful."
          }
        },
        "x-ms-examples": {
          "Delete protection policy": {
            "$ref": "./examples/WafPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "WebApplicationFirewallPolicy": {
      "description": "Defines web application firewall policy.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebApplicationFirewallPolicyPropertiesFormat",
          "description": "Properties of the web application firewall policy."
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ]
    },
    "WebApplicationFirewallPolicyPropertiesFormat": {
      "description": "Defines web application firewall policy properties",
      "properties": {
        "policySettings": {
          "description": "Describes  policySettings for policy",
          "$ref": "#/definitions/policySettings"
        },
        "customRules": {
          "description": "Describes custom rules inside the policy",
          "$ref": "#/definitions/CustomRules"
        },
        "managedRules": {
          "description": "Describes managed rules inside the policy",
          "$ref": "#/definitions/ManagedRuleSets"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the WebApplicationFirewallPolicy."
        },
        "resourceState": {
          "title": "Resource status of the policy.",
          "readOnly": true,
          "enum": [
            "Creating",
            "Enabling",
            "Enabled",
            "Disabling",
            "Disabled",
            "Deleting"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WebApplicationFirewallPolicy",
            "modelAsString": true
          }
        }
      }
    },
    "WebApplicationFirewallPolicyListResult": {
      "description": "Result of the request to list WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallPolicy"
          },
          "description": "List of WebApplicationFirewallPolicies within a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of WebApplicationFirewallPolicy objects if there are any."
        }
      }
    },
    "policySettings": {
      "description": "Defines contents of a web application firewall global configuration",
      "properties": {
        "enabledState": {
          "description": "describes if the policy is in enabled state or disabled state",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "enabledState",
            "modelAsString": true
          }
        },
        "mode": {
          "description": "Describes if it is in detection mode  or prevention mode at policy level",
          "type": "string",
          "enum": [
            "Prevention",
            "Detection"
          ],
          "x-ms-enum": {
            "name": "mode",
            "modelAsString": true
          }
        }
      }
    },
    "CustomRules": {
      "description": "Defines contents of custom rules",
      "properties": {
        "rules": {
          "description": "List of rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRule"
          }
        }
      }
    },
    "CustomRule": {
      "description": "Defines contents of a web application rule",
      "required": [
        "priority",
        "ruleType",
        "matchConditions",
        "action"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a policy. This name can be used to access the resource.",
          "maxLength": 128
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        },
        "priority": {
          "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value",
          "type": "integer"
        },
        "ruleType": {
          "description": "Describes type of rule",
          "type": "string",
          "enum": [
            "MatchRule",
            "RateLimitRule"
          ],
          "x-ms-enum": {
            "name": "ruleType",
            "modelAsString": true
          }
        },
        "rateLimitDurationInMinutes": {
          "description": "Defines rate limit duration. Default - 1 minute",
          "type": "integer"
        },
        "rateLimitThreshold": {
          "description": "Defines rate limit threshold",
          "type": "integer"
        },
        "matchConditions": {
          "description": "List of match conditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchCondition"
          }
        },
        "action": {
          "description": "Type of Actions",
          "type": "string",
          "enum": [
            "Allow",
            "Block",
            "Log"
          ],
          "x-ms-enum": {
            "name": "action",
            "modelAsString": true
          }
        },
        "transforms": {
          "description": "List of transforms",
          "type": "array",
          "items": {
            "$ref": "#/definitions/transform"
          }
        }
      }
    },
    "transform": {
      "description": "Describes what transforms applied before matching",
      "type": "string",
      "enum": [
        "Lowercase",
        "Uppercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls",
        "HtmlEntityDecode"
      ],
      "x-ms-enum": {
        "name": "transform",
        "modelAsString": true
      }
    },
    "MatchCondition": {
      "description": "Define match conditions",
      "required": [
        "matchVariable",
        "operator",
        "matchValue"
      ],
      "properties": {
        "matchVariable": {
          "description": "Match Variable",
          "type": "string",
          "enum": [
            "RemoteAddr",
            "RequestMethod",
            "QueryString",
            "PostArgs",
            "RequestUri",
            "RequestHeader",
            "RequestBody"
          ],
          "x-ms-enum": {
            "name": "MatchCondition",
            "modelAsString": true
          }
        },
        "selector": {
          "description": "Name of selector in RequestHeader or RequestBody to be matched",
          "type": "string"
        },
        "operator": {
          "description": "Describes operator to be matched",
          "type": "string",
          "enum": [
            "Any",
            "IPMatch",
            "GeoMatch",
            "Equal",
            "Contains",
            "LessThan",
            "GreaterThan",
            "LessThanOrEqual",
            "GreaterThanOrEqual",
            "BeginsWith",
            "EndsWith"
          ],
          "x-ms-enum": {
            "name": "operator",
            "modelAsString": true
          }
        },
        "negateCondition": {
          "description": "Describes if this is negate condition or not",
          "type": "boolean"
        },
        "matchValue": {
          "description": "Match value",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ManagedRuleSets": {
      "description": "Defines ManagedRuleSets - array of managedRuleSet",
      "properties": {
        "ruleSets": {
          "description": "List of rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          }
        }
      }
    },
    "ManagedRuleSet": {
      "type": "object",
      "description": "Base class for all types of ManagedRuleSet.",
      "x-ms-discriminator-value": "Unknown",
      "properties": {
        "priority": {
          "description": "Describes priority of the rule",
          "type": "integer"
        },
        "version": {
          "description": "defines version of the rule set",
          "type": "integer"
        },
        "ruleSetType": {
          "description": "RuleSetType - AzureManagedRuleSet or OWASP RuleSets.",
          "type": "string"
        }
      },
      "required": [
        "ruleSetType"
      ],
      "discriminator": "ruleSetType"
    },
    "AzureManagedRuleSet": {
      "type": "object",
      "description": "Describes azure managed provider.",
      "x-ms-discriminator-value": "AzureManagedRuleSet",
      "properties": {
        "ruleGroupOverrides": {
          "description": "List of azure managed provider override configuration (optional)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureManagedOverrideRuleGroup"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedRuleSet"
        }
      ]
    },
    "AzureManagedOverrideRuleGroup": {
      "description": "Defines contents of a web application rule",
      "required": [
        "ruleGroupOverride",
        "action"
      ],
      "properties": {
        "ruleGroupOverride": {
          "description": "Describes override rule group",
          "type": "string",
          "enum": [
            "SqlInjection",
            "XSS"
          ],
          "x-ms-enum": {
            "name": "ruleGroupOverride",
            "modelAsString": true
          }
        },
        "action": {
          "description": "Type of Actions",
          "type": "string",
          "enum": [
            "Allow",
            "Block",
            "Log"
          ],
          "x-ms-enum": {
            "name": "action",
            "modelAsString": true
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}
