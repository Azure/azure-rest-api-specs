{
  "swagger": "2.0",
  "info": {
    "version": "2017-10-01-preview",
    "title": "ContainerInstanceManagementClient",
    "description": "The Azure Container Instance connector."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "List subscriptions",
        "description": "Gets a list of all the subscriptions to which the principal has access.",
        "operationId": "Subscriptions_List",
        "parameters": [
          {
            "name": "x-ms-api-version",
            "in": "query",
            "x-ms-summary": "API Version",
            "x-ms-test-value": "2017-06-01",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "2017-06-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubscriptionListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "List resource groups",
        "description": "Lists all the resource groups within the subscription. Paginates at 1,000 records.",
        "operationId": "ResourceGroups_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroupListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "internal"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups": {
      "get": {
        "operationId": "ContainerGroups_List",
        "summary": "Get a list of container groups in subscription",
        "description": "Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-no-generic-test": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups": {
      "get": {
        "operationId": "ContainerGroups_ListByResourceGroup",
        "summary": "Get a list of container groups in resource group",
        "description": "Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-no-generic-test": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}": {
      "get": {
        "operationId": "ContainerGroups_Get",
        "summary": "Get properties of a container group",
        "description": "Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-no-generic-test": true
      },
      "put": {
        "operationId": "ContainerGroups_CreateOrUpdate",
        "summary": "Create container group",
        "description": "Create or update a container group with specified configurations.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "name": "containerGroup",
            "description": "The properties of the container group to be created or updated.",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          },
          "201": {
            "description": "Created - the container group is created.",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "ContainerGroups_Delete",
        "summary": "Delete container group",
        "description": "Delete the specified container group in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          },
          "204": {
            "description": "No Content - the specified container group was not found."
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs": {
      "get": {
        "operationId": "ContainerLogs_List",
        "summary": "Get logs of a container",
        "description": "Get the logs for a specified container instance in a specified resource group and container group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "x-ms-summary": "Container Name",
            "name": "containerName",
            "in": "path",
            "description": "The name of the container instance.",
            "required": true,
            "type": "string"
          },
          {
            "x-ms-summary": "Tail Lines",
            "name": "tail",
            "in": "query",
            "description": "The number of lines to show from the tail of the container instance log. If not provided, all available logs are shown up to 4mb.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Logs"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-no-generic-test": true
      }
    }
  },
  "definitions": {
    "SubscriptionListResult": {
      "description": "Subscription list operation response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "Subscription": {
      "description": "Subscription information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The fully qualified Id. For example, /subscriptions/00000000-0000-0000-0000-000000000000.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Id"
        },
        "subscriptionId": {
          "description": "The subscription Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Subscription Id"
        },
        "tenantId": {
          "description": "The tenant Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Tenant Id"
        },
        "displayName": {
          "description": "The subscription display name.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Display Name"
        },
        "state": {
          "description": "The subscription state.",
          "enum": [
            "Enabled",
            "Warned",
            "PastDue",
            "Disabled",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "State",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "authorizationSource": {
          "description": "The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.",
          "type": "string",
          "x-ms-summary": "Authorization Source",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ResourceGroupListResult": {
      "description": "List of resource groups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resource groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "ResourceGroup": {
      "description": "Resource group information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the resource group (e.g. /subscriptions/XXX/resourceGroups/YYY).",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Id"
        },
        "name": {
          "description": "The Name of the resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Name"
        },
        "managedBy": {
          "description": "Id of the resource that manages this resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Managed By"
        }
      }
    },
    "Container": {
      "description": "A container instance.",
      "type": "object",
      "required": [
        "properties",
        "name"
      ],
      "properties": {
        "name": {
          "title": "Container Name",
          "description": "The name of the container.",
          "type": "string",
          "x-ms-test-value": "containerjob"
        },
        "properties": {
          "description": "The properties of the container.",
          "$ref": "#/definitions/ContainerProperties"
        }
      }
    },
    "ContainerProperties": {
      "description": "The container properties.",
      "type": "object",
      "required": [
        "image",
        "resources"
      ],
      "properties": {
        "image": {
          "title": "Container Image",
          "description": "The name of the image used to create the container. E.g. nginx:latest",
          "type": "string",
          "x-ms-test-value": "hello-world"
        },
        "command": {
          "title": "Command",
          "description": "The commands to execute within the container. E.g. [ \"echo\", \"hello aci\" ]",
          "type": "array",
          "items": {
            "x-ms-visibility": "advanced",
            "title": "Command Segment",
            "description": "The command to execute. Split by space and one segment per line.",
            "type": "string"
          }
        },
        "ports": {
          "title": "Ports",
          "description": "The exposed ports on the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "environmentVariables": {
          "title": "Environment Variables",
          "description": "The environment variables to set in the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "instanceView": {
          "description": "The instance view of the container instance. Only valid in response.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "restartCount": {
              "readOnly": true,
              "type": "integer",
              "description": "The number of times that the container instance has been restarted."
            },
            "currentState": {
              "readOnly": true,
              "description": "Current container instance state.",
              "$ref": "#/definitions/ContainerState"
            },
            "previousState": {
              "readOnly": true,
              "description": "Previous container instance state.",
              "$ref": "#/definitions/ContainerState"
            },
            "events": {
              "readOnly": true,
              "description": "The events of the container instance.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          }
        },
        "resources": {
          "description": "The resource requirements of the container instance.",
          "$ref": "#/definitions/ResourceRequirements"
        },
        "volumeMounts": {
          "title": "Volume Mounts",
          "description": "The volume mounts available to the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        }
      }
    },
    "ContainerState": {
      "description": "The container instance state.",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the container instance."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time when the container instance state started."
        },
        "exitCode": {
          "type": "integer",
          "description": "The container instance exit codes correspond to those from the `docker run` command."
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time when the container instance state finished."
        },
        "detailStatus": {
          "description": "The human-readable status of the container instance state.",
          "type": "string"
        }
      }
    },
    "Event": {
      "description": "A container group or container instance event.",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "The count of the event."
        },
        "firstTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time of the earliest logged event."
        },
        "lastTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time of the latest logged event."
        },
        "name": {
          "type": "string",
          "description": "The event name."
        },
        "message": {
          "type": "string",
          "description": "The event message."
        },
        "type": {
          "type": "string",
          "description": "The event type."
        }
      }
    },
    "ResourceRequirements": {
      "description": "The resource requirements.",
      "type": "object",
      "required": [
        "requests"
      ],
      "properties": {
        "requests": {
          "description": "The resource requests of this container.",
          "$ref": "#/definitions/ResourceRequests"
        },
        "limits": {
          "description": "The resource limits of this container.",
          "$ref": "#/definitions/ResourceLimits"
        }
      }
    },
    "ResourceRequests": {
      "description": "The resource requests.",
      "type": "object",
      "required": [
        "memoryInGB",
        "cpu"
      ],
      "properties": {
        "memoryInGB": {
          "title": "Memory Request",
          "description": "The memory request in GB of this container. E.g. 3.5",
          "type": "number",
          "x-ms-test-value": 1.5
        },
        "cpu": {
          "title": "CPU Request",
          "description": "The CPU request of this container. E.g. 2.0",
          "type": "number",
          "x-ms-test-value": 0.8
        }
      }
    },
    "ResourceLimits": {
      "description": "The resource limits.",
      "type": "object",
      "properties": {
        "memoryInGB": {
          "x-ms-visibility": "advanced",
          "title": "Memory Limit",
          "description": "The memory limit in GB of this container.",
          "type": "number",
          "format": "double"
        },
        "cpu": {
          "x-ms-visibility": "advanced",
          "title": "CPU Limit",
          "description": "The CPU limit of this container.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AzureFileVolume": {
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes.",
      "type": "object",
      "required": [
        "shareName",
        "storageAccountName"
      ],
      "properties": {
        "shareName": {
          "x-ms-visibility": "advanced",
          "title": "Azure File Share Name",
          "description": "The name of the Azure File share to be mounted as a volume.",
          "type": "string"
        },
        "readOnly": {
          "x-ms-visibility": "advanced",
          "title": "ReadOnly",
          "description": "The flag indicating whether the Azure File shared mounted as a volume is read-only.",
          "type": "boolean"
        },
        "storageAccountName": {
          "x-ms-visibility": "advanced",
          "title": "Storage Account Name",
          "description": "The name of the storage account that contains the Azure File share.",
          "type": "string"
        },
        "storageAccountKey": {
          "x-ms-visibility": "advanced",
          "title": "Storage Account Key",
          "description": "The storage account access key used to access the Azure File share.",
          "type": "string"
        }
      }
    },
    "Volume": {
      "title": "Volume",
      "description": "The properties of the volume.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "x-ms-visibility": "advanced",
          "title": "Name",
          "description": "The name of the volume.",
          "type": "string"
        },
        "azureFile": {
          "description": "The name of the Azure File volume.",
          "$ref": "#/definitions/AzureFileVolume"
        }
      }
    },
    "VolumeMount": {
      "description": "The properties of the volume mount.",
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "name": {
          "x-ms-visibility": "advanced",
          "title": "Volume Name",
          "description": "The name of the volume.",
          "type": "string"
        },
        "mountPath": {
          "x-ms-visibility": "advanced",
          "title": "Path",
          "description": "The path within the container where the volume should be mounted. Must not contain colon (:).",
          "type": "string"
        },
        "readOnly": {
          "x-ms-visibility": "advanced",
          "title": "Readonly",
          "description": "The flag indicating whether the volume mount is read-only.",
          "type": "boolean"
        }
      }
    },
    "ContainerGroup": {
      "description": "A container group.",
      "type": "object",
      "required": [
        "properties",
        "location"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "title": "Location",
          "description": "The location to deploy container group."
        },
        "tags": {
          "x-ms-visibility": "advanced",
          "type": "object",
          "title": "Tags",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "properties": {
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state of the container group. This only appears in the response."
            },
            "containers": {
              "type": "array",
              "description": "The containers within the container group.",
              "items": {
                "$ref": "#/definitions/Container"
              }
            },
            "imageRegistryCredentials": {
              "type": "array",
              "description": "The image registry credentials by which the container group is created from.",
              "items": {
                "$ref": "#/definitions/ImageRegistryCredential"
              }
            },
            "restartPolicy": {
              "title": "Restart Policy",
              "type": "string",
              "description": "Restart policy for all containers within the container group.",
              "enum": [
                "Always",
                "OnFailure",
                "Never"
              ],
              "default": "OnFailure",
              "x-ms-test-value": "OnFailure"
            },
            "ipAddress": {
              "description": "The IP address type of the container group.",
              "$ref": "#/definitions/IpAddress"
            },
            "osType": {
              "title": "OS Type",
              "type": "string",
              "description": "The operating system type required by the container.",
              "enum": [
                "Windows",
                "Linux"
              ],
              "default": "Linux",
              "x-ms-test-value": "Linux"
            },
            "volumes": {
              "type": "array",
              "description": "The list of volumes that can be mounted by containers in this container group.",
              "items": {
                "$ref": "#/definitions/Volume"
              }
            },
            "instanceView": {
              "description": "The instance view of the container group. Only valid in response.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "events": {
                  "description": "The events of this container group.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Event"
                  }
                },
                "state": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The state of the container group. Only valid in response."
                }
              }
            }
          },
          "required": [
            "containers",
            "osType"
          ]
        }
      }
    },
    "ImageRegistryCredential": {
      "title": "Image Registry",
      "description": "Image registry credential.",
      "type": "object",
      "properties": {
        "server": {
          "x-ms-visibility": "advanced",
          "title": "Server",
          "type": "string",
          "description": "The Docker image registry server without a protocol such as \"myacr.azurecr.io\"."
        },
        "username": {
          "x-ms-visibility": "advanced",
          "title": "User Name",
          "type": "string",
          "description": "The username for the private registry."
        },
        "password": {
          "x-ms-visibility": "advanced",
          "title": "Password",
          "type": "string",
          "description": "The password for the private registry."
        }
      },
      "required": [
        "server",
        "username"
      ]
    },
    "IpAddress": {
      "description": "IP address for the container group.",
      "type": "object",
      "properties": {
        "ports": {
          "title": "Ports",
          "type": "array",
          "description": "The list of ports exposed on the container group.",
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "type": {
          "x-ms-visibility": "advanced",
          "title": "IP Address Type",
          "type": "string",
          "description": "Specifies if the IP is exposed to the public internet.",
          "enum": [
            "Public"
          ]
        },
        "ip": {
          "x-ms-visibility": "advanced",
          "type": "string",
          "readOnly": true,
          "description": "The IP exposed to the public internet."
        }
      },
      "required": [
        "ports",
        "type"
      ]
    },
    "Port": {
      "description": "The port exposed on the container group.",
      "type": "object",
      "properties": {
        "protocol": {
          "x-ms-visibility": "advanced",
          "title": "Protocol",
          "type": "string",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ]
        },
        "port": {
          "x-ms-visibility": "advanced",
          "title": "Port",
          "type": "integer",
          "description": "The port number.",
          "format": "int32"
        }
      },
      "required": [
        "port"
      ]
    },
    "ContainerPort": {
      "description": "The port exposed on the container instance.",
      "type": "object",
      "properties": {
        "protocol": {
          "x-ms-visibility": "advanced",
          "title": "Protocol",
          "type": "string",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ]
        },
        "port": {
          "x-ms-visibility": "advanced",
          "title": "Port",
          "type": "integer",
          "format": "int32",
          "description": "The port number exposed within the container group."
        }
      },
      "required": [
        "port"
      ]
    },
    "EnvironmentVariable": {
      "description": "The environment variable to set within the container instance.",
      "type": "object",
      "properties": {
        "name": {
          "x-ms-visibility": "advanced",
          "title": "Environment Variable Name",
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "x-ms-visibility": "advanced",
          "title": "Environment Variable Value",
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ContainerGroupListResult": {
      "description": "The container group list response that contains the container group properties.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerGroup"
          },
          "description": "The list of container groups."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of container groups."
        }
      }
    },
    "Logs": {
      "description": "The logs.",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the log."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "x-ms-summary": "Subscription Id",
      "x-ms-test-value": "ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78",
      "x-ms-dynamic-values": {
        "operationId": "Subscriptions_List",
        "value-collection": "value",
        "value-path": "subscriptionId",
        "value-title": "displayName",
        "parameters": {
          "x-ms-api-version": "2017-06-01"
        }
      },
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Microsoft Azure subscription."
    },
    "ApiVersionParameter": {
      "x-ms-test-value": "2017-10-01-preview",
      "x-ms-visibility": "internal",
      "x-ms-summary": "API Version",
      "name": "x-ms-api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version",
      "default": "2017-10-01-preview"
    },
    "ResourceGroupNameParameter": {
      "x-ms-test-value": "connector-aci",
      "x-ms-dynamic-values": {
        "operationId": "ResourceGroups_List",
        "value-collection": "value",
        "value-path": "name",
        "value-title": "name",
        "parameters": {
          "x-ms-api-version": "2017-06-01",
          "subscriptionId": {
            "parameter": "subscriptionId"
          }
        }
      },
      "x-ms-summary": "Resource Group",
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+$"
    },
    "ContainerGroupNameParameter": {
      "x-ms-test-value": "acijobs",
      "x-ms-summary": "Container Group Name",
      "name": "containerGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the container group.",
      "x-ms-parameter-location": "method"
    }
  }
}