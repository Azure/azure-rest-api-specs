{
  "swagger": "2.0",
  "info": {
    "title": "ContainerInstanceManagementClient",
    "description": "The Container Instance Management Client.",
    "version": "1.0"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "Container": {
      "description": "A container instance.",
      "type": "object",
      "required": [
        "properties",
        "name"
      ],
      "properties": {
        "name": {
          "description": "The user-provided name of the container instance.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the container instance.",
          "$ref": "#/definitions/ContainerProperties"
        }
      }
    },
    "ContainerProperties": {
      "description": "The container instance properties.",
      "type": "object",
      "required": [
        "image",
        "resources"
      ],
      "properties": {
        "image": {
          "description": "The name of the image used to create the container instance.",
          "type": "string"
        },
        "command": {
          "description": "The commands to execute within the container instance in exec form.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "description": "The exposed ports on the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          },
          "x-ms-identifiers": [
            "port"
          ]
        },
        "environmentVariables": {
          "description": "The environment variables to set in the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "instanceView": {
          "description": "The instance view of the container instance. Only valid in response.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "restartCount": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "The number of times that the container instance has been restarted."
            },
            "currentState": {
              "readOnly": true,
              "description": "Current container instance state.",
              "$ref": "#/definitions/ContainerState"
            },
            "previousState": {
              "readOnly": true,
              "description": "Previous container instance state.",
              "$ref": "#/definitions/ContainerState"
            },
            "events": {
              "readOnly": true,
              "description": "The events of the container instance.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              },
              "x-ms-identifiers": [
                "name",
                "type"
              ]
            }
          }
        },
        "resources": {
          "description": "The resource requirements of the container instance.",
          "$ref": "#/definitions/ResourceRequirements"
        },
        "volumeMounts": {
          "description": "The volume mounts available to the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "livenessProbe": {
          "description": "The liveness probe.",
          "$ref": "#/definitions/ContainerProbe"
        },
        "readinessProbe": {
          "description": "The readiness probe.",
          "$ref": "#/definitions/ContainerProbe"
        },
        "securityContext": {
          "description": "The container security properties.",
          "$ref": "#/definitions/SecurityContextDefinition"
        }
      }
    },
    "SecurityContextDefinition": {
      "description": "The security context for the container.",
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "description": "The flag to determine if the container permissions is elevated to Privileged."
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "description": "A boolean value indicating whether the init process can elevate its privileges"
        },
        "capabilities": {
          "description": "The capabilities to add or drop from a container.",
          "$ref": "#/definitions/SecurityContextCapabilitiesDefinition"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the User GID for the container."
        },
        "runAsUser": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the User UID for the container."
        },
        "seccompProfile": {
          "type": "string",
          "description": "a base64 encoded string containing the contents of the JSON in the seccomp profile"
        }
      }
    },
    "SecurityContextCapabilitiesDefinition": {
      "description": "The capabilities to add or drop from a container.",
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The capabilities to add to the container."
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The capabilities to drop from the container."
        }
      }
    },
    "ContainerState": {
      "description": "The container instance state.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the container instance."
        },
        "startTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The date-time when the container instance state started."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The container instance exit codes correspond to those from the `docker run` command."
        },
        "finishTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The date-time when the container instance state finished."
        },
        "detailStatus": {
          "type": "string",
          "readOnly": true,
          "description": "The human-readable status of the container instance state."
        }
      }
    },
    "Event": {
      "description": "A container group or container instance event.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The count of the event."
        },
        "firstTimestamp": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The date-time of the earliest logged event."
        },
        "lastTimestamp": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The date-time of the latest logged event."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The event name."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The event message."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The event type."
        }
      }
    },
    "ResourceRequirements": {
      "description": "The resource requirements.",
      "type": "object",
      "required": [
        "requests"
      ],
      "properties": {
        "requests": {
          "description": "The resource requests of this container instance.",
          "$ref": "#/definitions/ResourceRequests"
        },
        "limits": {
          "description": "The resource limits of this container instance.",
          "$ref": "#/definitions/ResourceLimits"
        }
      }
    },
    "ResourceRequests": {
      "description": "The resource requests.",
      "type": "object",
      "required": [
        "memoryInGB",
        "cpu"
      ],
      "properties": {
        "memoryInGB": {
          "description": "The memory request in GB of this container instance.",
          "type": "number",
          "format": "double"
        },
        "cpu": {
          "description": "The CPU request of this container instance.",
          "type": "number",
          "format": "double"
        },
        "gpu": {
          "description": "The GPU request of this container instance.",
          "$ref": "#/definitions/GpuResource"
        }
      }
    },
    "ResourceLimits": {
      "description": "The resource limits.",
      "type": "object",
      "properties": {
        "memoryInGB": {
          "description": "The memory limit in GB of this container instance.",
          "type": "number",
          "format": "double"
        },
        "cpu": {
          "description": "The CPU limit of this container instance.",
          "type": "number",
          "format": "double"
        },
        "gpu": {
          "description": "The GPU limit of this container instance.",
          "$ref": "#/definitions/GpuResource"
        }
      }
    },
    "GpuResource": {
      "description": "The GPU resource.",
      "type": "object",
      "required": [
        "count",
        "sku"
      ],
      "properties": {
        "count": {
          "description": "The count of the GPU resource.",
          "type": "integer",
          "format": "int32"
        },
        "sku": {
          "type": "string",
          "description": "The SKU of the GPU resource.",
          "enum": [
            "K80",
            "P100",
            "V100"
          ],
          "x-ms-enum": {
            "name": "GpuSku",
            "modelAsString": true
          }
        }
      }
    },
    "AzureFileVolume": {
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes.",
      "type": "object",
      "required": [
        "shareName",
        "storageAccountName"
      ],
      "properties": {
        "shareName": {
          "description": "The name of the Azure File share to be mounted as a volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "The flag indicating whether the Azure File shared mounted as a volume is read-only.",
          "type": "boolean"
        },
        "storageAccountName": {
          "description": "The name of the storage account that contains the Azure File share.",
          "type": "string"
        },
        "storageAccountKey": {
          "description": "The storage account access key used to access the Azure File share.",
          "type": "string"
        }
      }
    },
    "EmptyDirVolume": {
      "description": "The empty directory volume.",
      "type": "object",
      "properties": {
        "name": {
          "type": "null",
          "description": "This property is not valid, Please DON'T use it."
        }
      }
    },
    "SecretVolume": {
      "description": "The secret volume.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "properties": {
        "name": {
          "type": "null",
          "description": "This property is not valid, Please DON'T use it."
        }
      }
    },
    "GitRepoVolume": {
      "description": "Represents a volume that is populated with the contents of a git repository",
      "type": "object",
      "required": [
        "repository"
      ],
      "properties": {
        "directory": {
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string"
        },
        "repository": {
          "description": "Repository URL",
          "type": "string"
        },
        "revision": {
          "description": "Commit hash for the specified revision.",
          "type": "string"
        }
      }
    },
    "Volume": {
      "description": "The properties of the volume.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the volume.",
          "type": "string"
        },
        "azureFile": {
          "description": "The Azure File volume.",
          "$ref": "#/definitions/AzureFileVolume"
        },
        "emptyDir": {
          "description": "The empty directory volume.",
          "$ref": "#/definitions/EmptyDirVolume"
        },
        "secret": {
          "description": "The secret volume.",
          "$ref": "#/definitions/SecretVolume"
        },
        "gitRepo": {
          "description": "The git repo volume.",
          "$ref": "#/definitions/GitRepoVolume"
        }
      }
    },
    "VolumeMount": {
      "description": "The properties of the volume mount.",
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "name": {
          "description": "The name of the volume mount.",
          "type": "string"
        },
        "mountPath": {
          "description": "The path within the container where the volume should be mounted. Must not contain colon (:).",
          "type": "string"
        },
        "readOnly": {
          "description": "The flag indicating whether the volume mount is read-only.",
          "type": "boolean"
        }
      }
    },
    "ContainerExec": {
      "type": "object",
      "description": "The container execution command, for liveness or readiness probe",
      "properties": {
        "command": {
          "description": "The commands to execute within the container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContainerHttpGet": {
      "type": "object",
      "description": "The container Http Get settings, for liveness or readiness probe",
      "properties": {
        "path": {
          "description": "The path to probe.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "description": "The port number to probe.",
          "format": "int32"
        },
        "scheme": {
          "description": "The scheme.",
          "type": "string",
          "enum": [
            "http",
            "https"
          ],
          "x-ms-enum": {
            "name": "Scheme",
            "modelAsString": true
          }
        },
        "httpHeaders": {
          "description": "The HTTP headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HttpHeader"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "port"
      ]
    },
    "ContainerProbe": {
      "type": "object",
      "description": "The container probe, for liveness or readiness",
      "properties": {
        "exec": {
          "description": "The execution command to probe",
          "$ref": "#/definitions/ContainerExec"
        },
        "httpGet": {
          "description": "The Http Get settings to probe",
          "$ref": "#/definitions/ContainerHttpGet"
        },
        "initialDelaySeconds": {
          "description": "The initial delay seconds.",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "The period seconds.",
          "type": "integer",
          "format": "int32"
        },
        "failureThreshold": {
          "description": "The failure threshold.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "The success threshold.",
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "The timeout seconds.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserAssignedIdentities": {
      "type": "object",
      "description": "The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of user assigned identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "The client id of user assigned identity."
        }
      }
    },
    "ImageRegistryCredential": {
      "description": "Image registry credential.",
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "The Docker image registry server without a protocol such as \"http\" and \"https\"."
        },
        "username": {
          "type": "string",
          "description": "The username for the private registry."
        },
        "password": {
          "type": "string",
          "description": "The password for the private registry.",
          "x-ms-secret": true
        },
        "identity": {
          "type": "string",
          "description": "The identity for the private registry."
        },
        "identityUrl": {
          "type": "string",
          "description": "The identity URL for the private registry."
        }
      },
      "required": [
        "server"
      ]
    },
    "ContainerGroupDiagnostics": {
      "description": "Container group diagnostic information.",
      "type": "object",
      "properties": {
        "logAnalytics": {
          "description": "Container group log analytics information.",
          "$ref": "#/definitions/LogAnalytics"
        }
      }
    },
    "LogAnalytics": {
      "description": "Container group log analytics information.",
      "type": "object",
      "properties": {
        "workspaceId": {
          "description": "The workspace id for log analytics",
          "type": "string"
        },
        "workspaceKey": {
          "description": "The workspace key for log analytics",
          "type": "string",
          "x-ms-secret": true
        },
        "logType": {
          "type": "string",
          "description": "The log type to be used.",
          "enum": [
            "ContainerInsights",
            "ContainerInstanceLogs"
          ],
          "x-ms-enum": {
            "name": "LogAnalyticsLogType",
            "modelAsString": true
          }
        },
        "metadata": {
          "type": "object",
          "description": "Metadata for log analytics.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workspaceResourceId": {
          "description": "The workspace resource id for log analytics",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "required": [
        "workspaceId",
        "workspaceKey"
      ]
    },
    "IpAddress": {
      "description": "IP address for the container group.",
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "description": "The list of ports exposed on the container group.",
          "items": {
            "$ref": "#/definitions/Port"
          },
          "x-ms-identifiers": [
            "port"
          ]
        },
        "type": {
          "type": "string",
          "description": "Specifies if the IP is exposed to the public internet or private VNET.",
          "enum": [
            "Public",
            "Private"
          ],
          "x-ms-enum": {
            "name": "ContainerGroupIpAddressType",
            "modelAsString": true
          }
        },
        "ip": {
          "type": "string",
          "description": "The IP exposed to the public internet."
        },
        "dnsNameLabel": {
          "type": "string",
          "description": "The Dns name label for the IP."
        },
        "autoGeneratedDomainNameLabelScope": {
          "type": "string",
          "description": "The value representing the security enum. The 'Unsecure' value is the default value if not selected and means the object's domain name label is not secured against subdomain takeover. The 'TenantReuse' value is the default value if selected and means the object's domain name label can be reused within the same tenant. The 'SubscriptionReuse' value means the object's domain name label can be reused within the same subscription. The 'ResourceGroupReuse' value means the object's domain name label can be reused within the same resource group. The 'NoReuse' value means the object's domain name label cannot be reused within the same resource group, subscription, or tenant.",
          "enum": [
            "Unsecure",
            "TenantReuse",
            "SubscriptionReuse",
            "ResourceGroupReuse",
            "Noreuse"
          ],
          "default": "Unsecure",
          "x-ms-enum": {
            "name": "dnsNameLabelReusePolicy",
            "modelAsString": true
          }
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "The FQDN for the IP."
        }
      },
      "required": [
        "ports",
        "type"
      ]
    },
    "Port": {
      "description": "The port exposed on the container group.",
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "ContainerGroupNetworkProtocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "description": "The port number.",
          "format": "int32"
        }
      },
      "required": [
        "port"
      ]
    },
    "ContainerPort": {
      "description": "The port exposed on the container instance.",
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "ContainerNetworkProtocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port number exposed within the container group."
        }
      },
      "required": [
        "port"
      ]
    },
    "EnvironmentVariable": {
      "description": "The environment variable to set within the container instance.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        },
        "secureValue": {
          "type": "string",
          "description": "The value of the secure environment variable.",
          "x-ms-secret": true
        }
      },
      "required": [
        "name"
      ]
    },
    "Logs": {
      "description": "The logs.",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the log."
        }
      }
    },
    "HttpHeader": {
      "description": "The HTTP header.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The header name."
        },
        "value": {
          "type": "string",
          "description": "The header value."
        }
      }
    },
    "DnsConfiguration": {
      "description": "DNS configuration for the container group.",
      "type": "object",
      "required": [
        "nameServers"
      ],
      "properties": {
        "nameServers": {
          "description": "The DNS servers for the container group.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchDomains": {
          "description": "The DNS search domains for hostname lookup in the container group.",
          "type": "string"
        },
        "options": {
          "description": "The DNS options for the container group.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "zones": {
          "description": "The zones for the container group.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ContainerGroupSku": {
      "description": "The container group SKU.",
      "type": "string",
      "enum": [
        "Standard",
        "Dedicated"
      ],
      "x-ms-enum": {
        "name": "ContainerGroupSku",
        "modelAsString": true
      }
    },
    "EncryptionProperties": {
      "description": "The container group encryption properties.",
      "type": "object",
      "properties": {
        "vaultBaseUrl": {
          "description": "The keyvault base url.",
          "type": "string"
        },
        "keyName": {
          "description": "The encryption key name.",
          "type": "string"
        },
        "keyVersion": {
          "description": "The encryption key version.",
          "type": "string"
        },
        "identity": {
          "type": "string",
          "description": "The keyvault managed identity."
        }
      },
      "required": [
        "vaultBaseUrl",
        "keyName",
        "keyVersion"
      ]
    },
    "InitContainerDefinition": {
      "description": "The init container definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for the init container.",
          "type": "string"
        },
        "properties": {
          "description": "The properties for the init container.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InitContainerPropertiesDefinition"
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "InitContainerPropertiesDefinition": {
      "description": "The init container definition properties.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image of the init container.",
          "type": "string"
        },
        "command": {
          "description": "The command to execute within the init container in exec form.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environmentVariables": {
          "description": "The environment variables to set in the init container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "instanceView": {
          "description": "The instance view of the init container. Only valid in response.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "restartCount": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "The number of times that the init container has been restarted."
            },
            "currentState": {
              "readOnly": true,
              "description": "The current state of the init container.",
              "$ref": "#/definitions/ContainerState"
            },
            "previousState": {
              "readOnly": true,
              "description": "The previous state of the init container.",
              "$ref": "#/definitions/ContainerState"
            },
            "events": {
              "readOnly": true,
              "description": "The events of the init container.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              },
              "x-ms-identifiers": [
                "name",
                "type"
              ]
            }
          }
        },
        "volumeMounts": {
          "description": "The volume mounts available to the init container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "CloudError": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from the Container Instance service."
    },
    "CloudErrorBody": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the Container Instance service."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  }
}
