{
  "swagger": "2.0",
  "info": {
    "version": "2023-05-15-preview",
    "title": "ContainerInstanceManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroupProfiles": {
      "get": {
        "operationId": "ContainerGroupProfiles_List",
        "x-ms-examples": {
          "ContainerGroupsList": {
            "$ref": "./examples/ContainerGroupProfilesList.json"
          }
        },
        "summary": "Get a list of container group profiles in the specified subscription.",
        "description": "Get a list of container group profiles in the specified subscription. This operation returns properties of each container group profile including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroupProfiles": {
      "get": {
        "operationId": "ContainerGroupProfiles_ListByResourceGroup",
        "x-ms-examples": {
          "ContainerGroupsListByResourceGroup": {
            "$ref": "./examples/ContainerGroupProfilesListByResourceGroup.json"
          }
        },
        "summary": "Get a list of container group profiles in the specified subscription and resource group.",
        "description": "Get a list of container group profiles in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{containerGroupProfileName}": {
      "get": {
        "operationId": "ContainerGroupProfiles_Get",
        "x-ms-examples": {
          "ContainerGroupsGet_Succeeded": {
            "$ref": "./examples/ContainerGroupProfilesGet_Succeeded.json"
          },
          "ContainerGroupsGet_Failed": {
            "$ref": "./examples/ContainerGroupProfilesGet_Failed.json"
          }
        },
        "summary": "Get the properties of the specified container group profile.",
        "description": "Gets the properties of the specified container group profile in the specified subscription and resource group. The operation returns the properties of each container group profile including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "ContainerGroupProfiles_CreateOrUpdate",
        "x-ms-examples": {
          "ContainerGroupsCreateOrUpdate": {
            "$ref": "./examples/ContainerGroupProfilesCreateOrUpdate.json"
          }
        },
        "summary": "Create or update container group profiles.",
        "description": "Create or update container group profiles with specified configurations.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupProfileNameParameter"
          },
          {
            "name": "containerGroupProfile",
            "description": "The properties of the container group profile to be created or updated.",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfile"
            }
          },
          "201": {
            "description": "Created - the container group is created.",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "operationId": "ContainerGroupProfiles_Update",
        "x-ms-examples": {
          "ContainerGroupsUpdate": {
            "$ref": "./examples/ContainerGroupProfilesUpdate.json"
          }
        },
        "summary": "Update container group profiles.",
        "description": "Updates container group profile tags with specified values.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupProfileNameParameter"
          },
          {
            "name": "Resource",
            "description": "The container group resource with just the tags to be updated.",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "ContainerGroupProfiles_Delete",
        "x-ms-examples": {
          "ContainerGroupsDelete": {
            "$ref": "./examples/ContainerGroupProfilesDelete.json"
          }
        },
        "summary": "Delete the specified container group.",
        "description": "Delete the specified container group profile in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.",
        "parameters": [
          {
            "$ref": "../../common-types/v1/common.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common-types/v1/common.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified container group was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common-types/v1/common.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ContainerGroupProfile": {
      "description": "A container group profile.",
      "allOf": [
        {
          "$ref": "../../common-types/v1/common.json#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ContainerGroupProfileProperties"
        }
      ]
    },
    "ContainerGroupProfileProperties": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "The container group profile properties",
          "properties": {
            "containers": {
              "type": "array",
              "description": "The containers within the container group.",
              "items": {
                "$ref": "../../common-types/v1/common.json#/definitions/Container"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "imageRegistryCredentials": {
              "type": "array",
              "description": "The image registry credentials by which the container group is created from.",
              "items": {
                "$ref": "../../common-types/v1/common.json#/definitions/ImageRegistryCredential"
              },
              "x-ms-identifiers": [
                "username"
              ]
            },
            "restartPolicy": {
              "type": "string",
              "description": "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n",
              "enum": [
                "Always",
                "OnFailure",
                "Never"
              ],
              "x-ms-enum": {
                "name": "ContainerGroupRestartPolicy",
                "modelAsString": true
              }
            },
            "ipAddress": {
              "description": "The IP address type of the container group.",
              "$ref": "../../common-types/v1/common.json#/definitions/IpAddress"
            },
            "osType": {
              "type": "string",
              "description": "The operating system type required by the containers in the container group.",
              "enum": [
                "Windows",
                "Linux"
              ],
              "x-ms-enum": {
                "name": "OperatingSystemTypes",
                "modelAsString": true
              }
            },
            "volumes": {
              "type": "array",
              "description": "The list of volumes that can be mounted by containers in this container group.",
              "items": {
                "$ref": "../../common-types/v1/common.json#/definitions/Volume"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "diagnostics": {
              "description": "The diagnostic information for a container group.",
              "$ref": "../../common-types/v1/common.json#/definitions/ContainerGroupDiagnostics"
            },
            "dnsConfig": {
              "description": "The DNS config information for a container group.",
              "$ref": "../../common-types/v1/common.json#/definitions/DnsConfiguration"
            },
            "sku": {
              "description": "The SKU for a container group.",
              "$ref": "../../common-types/v1/common.json#/definitions/ContainerGroupSku"
            },
            "encryptionProperties": {
              "description": "The encryption properties for a container group.",
              "$ref": "../../common-types/v1/common.json#/definitions/EncryptionProperties"
            },
            "initContainers": {
              "type": "array",
              "description": "The init containers for a container group.",
              "items": {
                "$ref": "../../common-types/v1/common.json#/definitions/InitContainerDefinition"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "revisionNumber": {
              "type": "integer",
              "format": "int32",
              "description": "The revision number."
            },
            "registeredRevisions": {
              "type": "array",
              "description": "The list of registered revisions",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": [
            "containers",
            "osType"
          ]
        }
      }
    },
    "ContainerGroupProfileListResult": {
      "description": "The container group profile list response that contains the container group profile properties.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerGroupProfile"
          },
          "description": "The list of container group profiles."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of container group profiles."
        }
      }
    }
  },
  "parameters": {
    "ContainerGroupProfileNameParameter": {
      "name": "containerGroupProfileName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the container group profile.",
      "x-ms-parameter-location": "method",
      "pattern": "^(?!-)[a-z0-9-]{1,61}[a-z0-9](?!-)$"
    }
  }
}
