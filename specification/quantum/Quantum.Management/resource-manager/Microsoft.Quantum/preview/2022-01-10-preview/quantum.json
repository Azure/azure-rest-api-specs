{
  "swagger": "2.0",
  "info": {
    "title": "Azure Quantum Management Client",
    "version": "2022-01-10-preview",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "QuantumWorkspaces"
    }
  ],
  "paths": {
    "/providers/Microsoft.Quantum/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/checkNameAvailability": {
      "post": {
        "operationId": "WorkspaceOperations_CheckNameAvailability",
        "description": "Check the availability of the resource name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "Location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityParameters",
            "in": "body",
            "description": "The name and type of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/offerings": {
      "get": {
        "operationId": "OfferingsOperations_List",
        "description": "Returns the list of all provider offerings available for the given location.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "Location.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedProviderDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Gets the list of Workspaces within a Subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesListBySubscription": {
            "$ref": "./examples/Workspaces_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Gets the list of Workspaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesListByResourceGroup": {
            "$ref": "./examples/Workspaces_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Returns the Workspace resource associated with the given name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the quantum workspace resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesGet": {
            "$ref": "./examples/Workspaces_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Creates or updates a workspace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the quantum workspace resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "QuantumWorkspace",
            "in": "body",
            "description": "Workspace details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuantumWorkspace"
            },
            "x-ms-client-name": "QuantumWorkspace"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'QuantumWorkspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspace"
            }
          },
          "201": {
            "description": "Resource 'QuantumWorkspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspace"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesPut": {
            "$ref": "./examples/Workspaces_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workspaces_UpdateTags",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Updates an existing workspace's tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the quantum workspace resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspaceTags",
            "in": "body",
            "description": "Parameters supplied to update tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "x-ms-client-name": "workspaceTags"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuantumWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesPatchTags": {
            "$ref": "./examples/Workspaces_UpdateTags.json"
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "QuantumWorkspaces"
        ],
        "description": "Deletes a Workspace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the quantum workspace resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QuantumWorkspacesDelete": {
            "$ref": "./examples/Workspaces_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Details of check name availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for checking availability."
        },
        "type": {
          "type": "string",
          "description": "The resource type of Quantum Workspace.",
          "default": "Microsoft.Quantum/Workspaces"
        }
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "Result of check name availability.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicator of availability of the Quantum Workspace resource name."
        },
        "reason": {
          "type": "string",
          "description": "The reason of unavailability."
        },
        "message": {
          "type": "string",
          "description": "The detailed info regarding the reason associated with the Namespace.",
          "readOnly": true
        }
      }
    },
    "PagedProviderDescription": {
      "type": "object",
      "description": "The response of a list Providers operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProviderDescription items on this page",
          "items": {
            "$ref": "#/definitions/ProviderDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PricingDetail": {
      "type": "object",
      "description": "Detailed pricing information for an sku.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id for this pricing information."
        },
        "value": {
          "type": "string",
          "description": "The unit cost of this sku."
        }
      }
    },
    "PricingDimension": {
      "type": "object",
      "description": "Information about pricing dimension.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of this pricing dimension."
        },
        "name": {
          "type": "string",
          "description": "The display name of this pricing dimension."
        }
      }
    },
    "Provider": {
      "type": "object",
      "description": "Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Unique id of this provider."
        },
        "providerSku": {
          "type": "string",
          "description": "The sku associated with pricing information for this provider."
        },
        "instanceUri": {
          "type": "string",
          "description": "A Uri identifying the specific instance of this provider."
        },
        "applicationName": {
          "type": "string",
          "description": "The provider's marketplace application display name."
        },
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "Provisioning status field"
        },
        "resourceUsageId": {
          "type": "string",
          "description": "Id to track resource usage for the provider."
        }
      }
    },
    "ProviderDescription": {
      "type": "object",
      "description": "Information about an offering. A provider offering is an entity that offers Targets to run Azure Quantum Jobs.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique provider's id."
        },
        "name": {
          "type": "string",
          "description": "Provider's display name.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ProviderProperties",
          "description": "A list of provider-specific properties."
        }
      }
    },
    "ProviderProperties": {
      "type": "object",
      "description": "Provider properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description about this provider.",
          "readOnly": true
        },
        "providerType": {
          "type": "string",
          "description": "Provider type.",
          "readOnly": true
        },
        "company": {
          "type": "string",
          "description": "Company name.",
          "readOnly": true
        },
        "defaultEndpoint": {
          "type": "string",
          "description": "Provider's default endpoint.",
          "readOnly": true
        },
        "aad": {
          "$ref": "#/definitions/ProviderPropertiesAad",
          "description": "Azure Active Directory info."
        },
        "managedApplication": {
          "$ref": "#/definitions/ProviderPropertiesManagedApplication",
          "description": "Provider's Managed-Application info"
        },
        "targets": {
          "type": "array",
          "description": "The list of targets available from this provider.",
          "items": {
            "$ref": "#/definitions/TargetDescription"
          }
        },
        "skus": {
          "type": "array",
          "description": "The list of skus available from this provider.",
          "items": {
            "$ref": "#/definitions/SkuDescription"
          }
        },
        "quotaDimensions": {
          "type": "array",
          "description": "The list of quota dimensions from the provider.",
          "items": {
            "$ref": "#/definitions/QuotaDimension"
          }
        },
        "pricingDimensions": {
          "type": "array",
          "description": "The list of pricing dimensions from the provider.",
          "items": {
            "$ref": "#/definitions/PricingDimension"
          }
        }
      }
    },
    "ProviderPropertiesAad": {
      "type": "object",
      "description": "Azure Active Directory info.",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "Provider's application id.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Provider's tenant id.",
          "readOnly": true
        }
      }
    },
    "ProviderPropertiesManagedApplication": {
      "type": "object",
      "description": "Provider's Managed-Application info",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "Provider's publisher id.",
          "readOnly": true
        },
        "offerId": {
          "type": "string",
          "description": "Provider's offer id.",
          "readOnly": true
        }
      }
    },
    "ProvisioningStatus": {
      "type": "string",
      "description": "Provisioning status field",
      "enum": [
        "Succeeded",
        "ProviderLaunching",
        "ProviderUpdating",
        "ProviderDeleting",
        "ProviderProvisioning",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStatus",
        "modelAsString": true
      },
      "readOnly": true
    },
    "QuantumWorkspace": {
      "type": "object",
      "description": "The resource proxy definition object for quantum workspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "QuantumWorkspaceIdentity": {
      "type": "object",
      "description": "Managed Identity information.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The identity type."
        }
      }
    },
    "QuantumWorkspaceListResult": {
      "type": "object",
      "description": "The response of a QuantumWorkspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The QuantumWorkspace items on this page",
          "items": {
            "$ref": "#/definitions/QuantumWorkspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "QuotaDimension": {
      "type": "object",
      "description": "Information about a specific quota dimension.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of this dimension."
        },
        "scope": {
          "type": "string",
          "description": "The scope of this quota dimension."
        },
        "period": {
          "type": "string",
          "description": "The reset period of this quota dimension."
        },
        "quota": {
          "type": "number",
          "format": "float",
          "description": "The max limit of this dimension."
        },
        "name": {
          "type": "string",
          "description": "The display name of this quota dimension."
        },
        "description": {
          "type": "string",
          "description": "A description about this quota dimension."
        },
        "unit": {
          "type": "string",
          "description": "The standard unit of measurement used for this quota dimension."
        },
        "unitPlural": {
          "type": "string",
          "description": "The standard unit of measurement used for this quota dimension in plural form."
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "description": "The identity type.",
      "enum": [
        "SystemAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": true
      }
    },
    "SkuDescription": {
      "type": "object",
      "description": "Information about a specific sku.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique sku id."
        },
        "name": {
          "type": "string",
          "description": "Display name of this sku."
        },
        "version": {
          "type": "string",
          "description": "Display name of this sku."
        },
        "description": {
          "type": "string",
          "description": "Description about this sku."
        },
        "restrictedAccessUri": {
          "type": "string",
          "description": "Uri to subscribe to the restricted access sku."
        },
        "autoAdd": {
          "type": "boolean",
          "description": "Flag to indicate whether the sku should be automatically added during workspace creation."
        },
        "targets": {
          "type": "array",
          "description": "The list of targets available for this sku.",
          "items": {
            "type": "string"
          }
        },
        "quotaDimensions": {
          "type": "array",
          "description": "The list of quota dimensions for this sku.",
          "items": {
            "$ref": "#/definitions/QuotaDimension"
          }
        },
        "pricingDetails": {
          "type": "array",
          "description": "The list of pricing details for the sku.",
          "items": {
            "$ref": "#/definitions/PricingDetail"
          }
        }
      }
    },
    "Status": {
      "type": "string",
      "description": "Provisioning status field",
      "enum": [
        "Succeeded",
        "Launching",
        "Updating",
        "Deleting",
        "Deleted",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      },
      "readOnly": true
    },
    "TagsObject": {
      "type": "object",
      "description": "Tags object for patch operations.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TargetDescription": {
      "type": "object",
      "description": "Information about a Target. A target is the component that can process a specific type of Job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique target id."
        },
        "name": {
          "type": "string",
          "description": "Display name of this target."
        },
        "description": {
          "type": "string",
          "description": "A description about this target."
        },
        "acceptedDataFormats": {
          "type": "array",
          "description": "List of data formats accepted by this target.",
          "items": {
            "type": "string"
          }
        },
        "acceptedContentEncodings": {
          "type": "array",
          "description": "List of content encodings accepted by this target.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UsableStatus": {
      "type": "string",
      "description": "Whether the current workspace is ready to accept Jobs.",
      "enum": [
        "Yes",
        "No",
        "Partial"
      ],
      "x-ms-enum": {
        "name": "UsableStatus",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-01-10-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_01_10_preview",
            "value": "2022-01-10-preview",
            "description": "The 2022-01-10-preview API version."
          }
        ]
      }
    },
    "WorkspaceResourceProperties": {
      "type": "object",
      "description": "Properties of a Workspace",
      "properties": {
        "providers": {
          "type": "array",
          "description": "List of Providers selected for this Workspace",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "usable": {
          "$ref": "#/definitions/UsableStatus",
          "description": "Whether the current workspace is ready to accept Jobs.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStatus",
          "description": "Provisioning status field",
          "readOnly": true
        },
        "storageAccount": {
          "type": "string",
          "description": "ARM Resource Id of the storage account associated with this workspace."
        },
        "endpointUri": {
          "type": "string",
          "description": "The URI of the workspace endpoint.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
