import "@typespec/openapi";
import "@typespec/rest";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";

namespace Microsoft.Impact;

using TypeSpec.Http;
using TypeSpec.Rest;
using OpenAPI;
using Azure.ResourceManager;

@doc("Insight resource")
@parentResource(WorkloadImpact)
@subscriptionResource
model Insight is ProxyResource<InsightProperties> {
  @pattern("^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$")
  @key("insightName")
  @segment("insights")
  @doc("Name of the insight")
  @visibility("Read")
  @path
  name: string;
}

@doc("Insight resource")
@subscriptionResource
model InsightUnderSubscription is ProxyResource<InsightProperties> {
  @pattern("^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$")
  @key("insightName")
  @segment("insights")
  @doc("Name of the insight")
  @visibility("Read")
  @path
  name: string;
}

@doc("Impact category properties.")
model InsightProperties is ResourceProperties {
  @doc("summary of the insight.")
  summary: string;

  @doc("category of the insight.")
  category: string;

  @doc("status of the insight. example resolved, repaired, other.")
  status: string;

  @doc("level of the insight. Informational, Warning, Error, Critical.")
  level: InsightLevel;

  @doc("priority of the insight relative to other insights.")
  priority: int64;

  @doc("attribution time of the insight.")
  attributionTime: utcDateTime;

  @doc("failure signature level 1.")
  failureSignatureLevel1?: string;

  @doc("failure signature level 2.")
  failureSignatureLevel2?: string;

  @doc("failure signature level 3.")
  failureSignatureLevel3?: string;

  @doc("unique id of the insight.")
  insightUniqueId: string;

  @doc("details of of the impact for which insight has been generated.")
  @extension("x-ms-identifiers", ["impactId"])
  impacts: ImpactDetails[];

  @extension("x-ms-identifiers", ["name"])
  @doc("additional details of the insight.")
  additionalDetails?: AdditionalField[];
}

@doc("details of of the impact for which insight has been generated.")
model ImpactDetails {
  @doc("List of impacted Azure resources.")
  impactedResourceId: string;

  @doc("Time at which impact was started according to reported impact.")
  startTime: utcDateTime;

  @doc("Time at which impact was ended according to reported impact.")
  endTime?: utcDateTime;

  @doc("Azure Id of the impact.")
  impactId: string;

  @doc("unique (guid) id of the impact generated during impact creation.")
  impactUniqueId: string;
}

@doc("impacted azure resource id.")
model ImpactedResource {
  @doc("impacted azure resource id")
  impactedResourceId: string;
}

@doc("additional user defined field.")
model AdditionalField {
  @doc("name of the field.")
  name: string;

  @doc("value of the field.")
  value: string;
}

@doc("context of post call for insight")
model InsightCustomResourceCommonParameters {
  ...ApiVersionParameter;
  ...SubscriptionIdParameter;
  ...ProviderNamespace<InsightUnderSubscription>;

  /** impact information */
  @query
  @minLength(1)
  @doc("Filter by resource type")
  azureResourceId?: string;
}

@doc("Body of the get all insights")
model InsightDetails {
  @doc("The ID of the azure resource.")
  azureResourceId?: string;
}

@doc("Enum for insight level")
enum InsightLevel {
  @doc("Informational insight")
  Informational: "Informational",

  @doc("Warning insight")
  Warning: "Warning",

  @doc("Error insight")
  Error: "Error",

  @doc("Critical insight")
  Critical: "Critical",
}

#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-interface-uses-templates" "Using subscription scope building blocks"
@armResourceOperations
interface Insights {
  @doc("Get Insight resources by workloadImpactName and insightName")
  get is ArmResourceRead<Insight>;

  @doc("List Insight resources by workloadImpactName")
  listBySubscription is ArmListBySubscription<Insight>;

  @doc("Create Insight resource")
  create is ArmResourceCreateOrReplaceSync<Insight>;

  @doc("Delete Insight resource")
  delete is ArmResourceDeleteSync<Insight>;

  #suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-operation" "Using subscription level action"
  @get
  @doc("get all insights under subscription")
  @segment("getAllInsights")
  getAll(
    ...InsightCustomResourceCommonParameters,
  ): ArmResponse<ResourceListResult<Insight>> | ErrorResponse;

  /* @doc("get all insights under subscription")
  @segment("getAllInsights")
  getAll2 is ResourceAct<InsightUnderSubscription,insightDetails,ResourceListResult<Insight>>;
  */
}
