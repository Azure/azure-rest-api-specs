
import "@cadl-lang/openapi";
import "@cadl-lang/rest";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "./subscriptionResource.cadl";

namespace Microsoft.Impact;

using Cadl.Http;
using Cadl.Rest;
using OpenAPI;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using Azure.Core;

@doc("Details about impacted performance metrics. Applicable for performance related impact")
model Performance {
  @doc("Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API" )
	metricName?: string;
	@doc("Threshold value for the metric")
	expected?: float64;
	@doc("Observed value for the metric")
	actual?: float64;
  @doc("Max and Min Threshold values for the metric")
  expectedValueRange?:ExpectedValueRange;
  @doc("Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other")
  unit?:MetricUnit;

}

@doc("Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.")
model Connectivity {
  @doc("Protocol used for the connection")
	protocol?: Protocol;

	@doc("Port number for the connection")
	port?: int32;

	@doc("Source from which the connection was attempted")
	source?: SourceOrTarget;

  @doc("target which connection was attempted")
  target?: SourceOrTarget;

}

@doc("Max and Min Threshold values for the metric")
model ExpectedValueRange {
	@doc("Min threshold value for the metric")
	min: float64;
	@doc("Max threshold value for the metric")
	max: float64;  
}

@doc("ARM error code and error message associated with the impact")
model ErrorDetailProperties {
  @doc("ARM Error code associated with the impact.")
	errorCode?: string;
	@doc("ARM Error Message associated with the impact")
	errorMessage?: string;
}

@doc("Information about the impacted workload")
model Workload {
	@doc("the scenario for the workload")
	context?: string;
	@doc("Tool used to interact with Azure. SDK, AzPortal, etc.., Other")
	toolset?: Toolset;
}

@doc("Client incident details ex: incidentId , incident source")
model ClientIncidentDetails {
  
  @doc("Client incident id. ex : id of the incident created to investigate and address the impact if any.")
  clientIncidentId? : string;

  @doc("Client incident source. ex : source system name where the incident is created")
  clientIncidentSource? : IncidentSource

}

@doc("List of incident interfaces.")
enum IncidentSource {
  AzureDevops,
  ICM,
  Jira,
  ServiceNow,
  Other
}


@doc("List of impact categories.")
enum ImpactCategoryEnum {
  Availability,
  Performance,
  Other
}

@doc("List of azure interfaces.")
enum Toolset {
  Terraform,
  Puppet,
  Chef,
  SDK,
  Ansible,
  ARM,
  Portal,
  Shell,
  Other
}

#suppress "@azure-tools/typespec-azure-core/use-extensible-enum" "This really is a fixed enum"
@doc("Degree of confidence on the impact being a platform issue.")
@fixed
enum ConfidenceLevel {
  Low,
  Medium,
  High
}

@doc("List of unit of the metric.")
enum MetricUnit {
  ByteSeconds,
  Bytes,
  BytesPerSecond,
  Cores,
  Count,
  CountPerSecond,
  MilliCores,
  MilliSeconds,
  NanoCores,
  Percent,
  Seconds,
  Other
}

@doc("List of protocols")
enum Protocol {
  TCP,
  UDP,
  HTTP,
  HTTPS,
  RDP,
  FTP,
  SSH,
  Other
}


@doc("Resource details")
model SourceOrTarget {
  @doc("Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}")
  @pattern("(\\/[0-9a-zA-Z]+)*")
  azureResourceId?: string,
}