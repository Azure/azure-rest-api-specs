{
  "swagger": "2.0",
  "info": {
    "version": "2021-01-01-preview",
    "title": "SubscriptionClient",
    "description": "Subscription client provides an interface to create and manage Azure subscriptions programmatically."
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.Subscription/aliases/{aliasName}": {
      "put": {
        "description": "Create Alias Subscription.",
        "operationId": "Subscription_CreateAlias",
        "x-ms-examples": {
          "CreateAlias": {
            "$ref": "./examples/createAlias.json"
          }
        },
        "x-ms-long-running-operation": true,
        "responses": {
          "200": {
            "description": "Normal response for a successful query.",
            "schema": {
              "$ref": "#/definitions/PutAliasResponse"
            }
          },
          "201": {
            "description": "Accepted. Subscription creation is in progress.",
            "schema": {
              "$ref": "#/definitions/PutAliasResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/aliasNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAliasRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ]
      }
    },
    "/providers/billingAccount/{billingAccountId}/providers/Microsoft.Subscription/Policies/default": {
      "put": {
        "description": "Create Billing Account Policy.",
        "operationId": "BillingAccount_CreatePolicy",
        "x-ms-examples": {
          "CreateAlias": {
            "$ref": "./examples/createBillingAccountPolicy.json"
          }
        },
        "x-ms-long-running-operation": true,
        "responses": {
          "200": {
            "description": "Normal response for a successful query.",
            "schema": {
              "$ref": "#/definitions/BillingAccountPoliciesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutBillingAccountPoliciesRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ]
      },
      "patch": {
        "description": "Patch Billing Account Policy.",
        "operationId": "BillingAccount_PatchPolicy",
        "x-ms-examples": {
          "CreateAlias": {
            "$ref": "./examples/patchBillingAccountPolicy.json"
          }
        },
        "x-ms-long-running-operation": true,
        "responses": {
          "200": {
            "description": "Normal response for a successful query.",
            "schema": {
              "$ref": "#/definitions/BillingAccountPoliciesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchBillingAccountPoliciesRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ]
      },
      "get": {
        "description": "Get Billing Account Policy.",
        "operationId": "BillingAccount_GetPolicy",
        "x-ms-examples": {
          "CreateAlias": {
            "$ref": "./examples/getBillingAccountPolicy.json"
          }
        },
        "x-ms-long-running-operation": true,
        "responses": {
          "200": {
            "description": "Normal response for a successful query.",
            "schema": {
              "$ref": "#/definitions/BillingAccountPoliciesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ]
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "description": "Describes the format of Error response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "ErrorResponseBody": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "CanceledSubscriptionId": {
      "description": "The ID of the canceled subscription",
      "properties": {
        "value": {
          "description": "The ID of the canceled subscription",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RenamedSubscriptionId": {
      "description": "The ID of the subscriptions that is being renamed",
      "properties": {
        "value": {
          "description": "The ID of the subscriptions that is being renamed",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnabledSubscriptionId": {
      "description": "The ID of the subscriptions that is being enabled",
      "properties": {
        "value": {
          "description": "The ID of the subscriptions that is being enabled",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionName": {
      "type": "object",
      "description": "The new name of the subscription.",
      "properties": {
        "subscriptionName": {
          "type": "string",
          "description": "New subscription name"
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.Subscription",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            }
          }
        }
      }
    },
    "AdPrincipal": {
      "description": "Active Directory Principal whoâ€™ll get owner access on the new subscription.",
      "properties": {
        "objectId": {
          "description": "Object id of the Principal",
          "type": "string"
        }
      },
      "required": [
        "objectId"
      ]
    },
    "SubscriptionCreationResult": {
      "description": "The created subscription object.",
      "properties": {
        "subscriptionLink": {
          "description": "The link to the new subscription. Use this link to check the status of subscription creation operation.",
          "type": "string"
        }
      }
    },
    "SubscriptionCreationParameters": {
      "description": "Subscription Creation Parameters required to create a new Azure subscription.",
      "properties": {
        "displayName": {
          "description": "The display name of the subscription.",
          "type": "string"
        },
        "managementGroupId": {
          "description": "The Management Group Id.",
          "type": "string"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdPrincipal"
          },
          "description": "The list of principals that should be granted Owner access on the subscription. Principals should be of type User, Service Principal or Security Group."
        },
        "offerType": {
          "description": "The offer type of the subscription. For example, MS-AZR-0017P (EnterpriseAgreement) and MS-AZR-0148P (EnterpriseAgreement devTest) are available. Only valid when creating a subscription in a enrollment account scope.",
          "type": "string",
          "x-ms-enum": {
            "name": "offerType",
            "modelAsString": true
          },
          "enum": [
            "MS-AZR-0017P",
            "MS-AZR-0148P"
          ]
        },
        "additionalParameters": {
          "description": "Additional, untyped parameters to support custom subscription creation scenarios.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ModernSubscriptionCreationParameters": {
      "description": "The parameters required to create a new subscription.",
      "required": [
        "displayName",
        "skuId"
      ],
      "properties": {
        "displayName": {
          "description": "The friendly name of the subscription.",
          "type": "string"
        },
        "skuId": {
          "description": "The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.",
          "type": "string"
        },
        "costCenter": {
          "description": "If set, the cost center will show up on the Azure usage and charges file.",
          "type": "string"
        },
        "owner": {
          "description": "If specified, the AD principal will get owner access to the subscription, along with the user who is performing the create subscription operation",
          "$ref": "#/definitions/AdPrincipal"
        },
        "managementGroupId": {
          "description": "The identifier of the management group to which this subscription will be associated.",
          "type": "string"
        },
        "additionalParameters": {
          "description": "Additional, untyped parameters to support custom subscription creation scenarios.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ModernCspSubscriptionCreationParameters": {
      "description": "The parameters required to create a new CSP subscription.",
      "required": [
        "displayName",
        "skuId"
      ],
      "properties": {
        "displayName": {
          "description": "The friendly name of the subscription.",
          "type": "string"
        },
        "skuId": {
          "description": "The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.",
          "type": "string"
        },
        "resellerId": {
          "description": "Reseller ID, basically MPN Id.",
          "type": "string"
        }
      }
    },
    "PutAliasRequest": {
      "description": "The parameters required to create a new subscription.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PutAliasRequestProperties",
          "description": "Put alias request properties."
        }
      }
    },
    "PutAliasRequestProperties": {
      "description": "Put subscription properties.",
      "required": [
        "displayName",
        "workload",
        "billingScope"
      ],
      "properties": {
        "displayName": {
          "description": "The friendly name of the subscription.",
          "type": "string"
        },
        "workload": {
          "description": "The workload type of the subscription. It can be either Production or DevTest.",
          "type": "string",
          "x-ms-enum": {
            "name": "workload",
            "modelAsString": true
          },
          "enum": [
            "Production",
            "DevTest"
          ]
        },
        "billingScope": {
          "description": "Determines whether subscription is fieldLed, partnerLed or LegacyEA",
          "type": "string"
        },
        "subscriptionId": {
          "description": "This parameter can be used to create alias for existing subscription Id",
          "type": "string"
        },
        "resellerId": {
          "description": "Reseller Id",
          "type": "string"
        },
        "additionalProperties": {
          "$ref": "#/definitions/PutAliasRequestAdditionalProperties",
          "description": "Put alias request additional properties."
        }
      }
    },
    "PutAliasRequestAdditionalProperties": {
      "description": "Put subscription additional properties.",
      "properties": {
        "managementGroupId": {
          "description": "Management group Id for the subscription.",
          "type": "string"
        },
        "subscriptionTenantId": {
          "description": "Tenant Id of the subscription",
          "type": "string"
        },
        "subscriptionOwnerId": {
          "description": "Owner Id of the subscription",
          "type": "string"
        },
        "tags": {
          "description": "tags for the subscription",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PutAliasResponse": {
      "description": "Subscription Information with the alias.",
      "properties": {
        "id": {
          "description": "Fully qualified ID for the alias resource.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Alias ID.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type, Microsoft.Subscription/aliases.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PutAliasResponseProperties",
          "description": "Put Alias response properties."
        }
      },
      "x-ms-azure-resource": true
    },
    "PutAliasResponseProperties": {
      "description": "Put subscription creation result properties.",
      "properties": {
        "subscriptionId": {
          "description": "Newly created subscription Id.",
          "readOnly": true,
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource.",
          "enum": [
            "Accepted",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "redeemUrl": {
          "description": "Redeem url.",
          "type": "string"
        },
        "redeemState": {
          "type": "string",
          "description": "The redeem state of the resource.",
          "enum": [
            "Pending",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "RedeemState",
            "modelAsString": true
          }
        }
      }
    },
    "PutAliasListResult": {
      "description": "The list of aliases.",
      "properties": {
        "value": {
          "description": "The list of alias.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PutAliasResponse"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PutBillingAccountPoliciesRequest": {
      "description": "The parameters required to create a new Billing Account Policy.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PutBillingAccountPoliciesRequestProperties",
          "description": "Put billing account policies request properties."
        }
      }
    },
    "PatchBillingAccountPoliciesRequest": {
      "description": "The parameters required to patch a new Billing Account Policy.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PutBillingAccountPoliciesRequestProperties",
          "description": "Put billing account policies request properties."
        }
      }
    },
    "PutBillingAccountPoliciesRequestProperties": {
      "description": "Put billing account policies request properties.",
      "required": [
        "serviceTenants",
        "allowTransfers",
        "allowSubscriptionCreation"
      ],
      "properties": {
        "serviceTenants": {
          "description": "Service tenant for the billing account.",
          "type": "array"
        },
        "allowTransfers": {
          "description": "Determine if the transfers are allowed for the billing account",
          "type": "boolean"
        },
        "allowSubscriptionCreation": {
          "description": "Determine if subscription creation is allowed for the billing account",
          "type": "boolean"
        }
      }
    },
    "BillingAccountPoliciesResponse": {
      "description": "Billing account policies information.",
      "properties": {
        "id": {
          "description": "Fully qualified ID for the policy.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Policy name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type, Microsoft.Subscription/policies.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/BillingAccountPoliciesResponseProperties",
          "description": "Put Alias response properties."
        }
      },
      "x-ms-azure-resource": true
    },
    "BillingAccountPoliciesResponseProperties": {
      "description": "Put billing account policies response properties.",
      "properties": {
        "serviceTenants": {
          "description": "Service tenant for the billing account.",
          "type": "array"
        },
        "allowTransfers": {
          "description": "Determine if the transfers are allowed for the billing account",
          "type": "boolean"
        },
        "allowSubscriptionCreation": {
          "description": "Determine if subscription creation is allowed for the billing account",
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. Current version is 2019-10-01-preview"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription Id."
    },
    "subscriptionNameParameter": {
      "name": "body",
      "x-ms-parameter-location": "method",
      "in": "body",
      "required": true,
      "description": "Subscription Name",
      "schema": {
        "$ref": "#/definitions/SubscriptionName"
      }
    },
    "aliasNameParameter": {
      "name": "aliasName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Alias Name"
    },
    "billingAccountIdParameter": {
      "name": "billingAccountId",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Billing Account Id."
    },
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
