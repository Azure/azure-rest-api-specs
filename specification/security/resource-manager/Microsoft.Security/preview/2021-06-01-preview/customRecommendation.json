{
  "swagger": "2.0",
  "info": {
    "title": "Security Center",
    "description": "API spec for Microsoft.Security (Azure Security Center) resource provider",
    "version": "2021-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Security/customRecommendations/{customRecommendationName}": {
      "get": {
        "description": "Get a single custom recommendation by name for the provided subscriptionId and resourceGroupName.",
        "tags": [
          "customRecommendations"
        ],
        "operationId": "customRecommendations_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionId"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/customRecommendationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/customRecommendation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a custom recommendation for the provided subscription.  Please note that providing an existing customRecommendationName will update/replace an existing record.",
        "tags": [
          "customRecommendations"
        ],
        "operationId": "customRecommendations_Put",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionId"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/customRecommendationName"
          },
          {
            "$ref": "#/parameters/customRecommendationBody"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/customRecommendation"
            }
          },
          "200": {
            "description": "OK - Updated",
            "schema": {
              "$ref": "#/definitions/customRecommendation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a custom recommendation by name for a provided subscriptionId",
        "tags": [
          "customRecommendations"
        ],
        "operationId": "customRecommendations_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionId"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/customRecommendationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Custom Recommendation was deleted"
          },
          "204": {
            "description": "No Content - Custom Recommendation does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/customRecommendations": {
      "get": {
        "tags": [
          "customRecommendations"
        ],
        "operationId": "customRecommendations_ListBySub",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/customRecommendationList"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/customRecommendations": {
      "get": {
        "tags": [
          "customRecommendations"
        ],
        "operationId": "customRecommendations_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/SubscriptionId"
          },
          {
            "$ref": "../../../common/v1/types.json#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/customRecommendationList"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "customRecommendationList": {
      "type": "object",
      "description": "A list of all custom recommendations",
      "properties": {
        "value": {
          "description": "Collection of custom recommendation objects",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/customRecommendation"
          }
        }
      }
    },
    "customRecommendation": {
      "type": "object",
      "description": "Custom Recommendation",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "describes custom recommendation properties.",
          "$ref": "#/definitions/customRecommendationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/types.json#/definitions/Resource"
        }
      ]
    },
    "customRecommendationProperties": {
      "type": "object",
      "description": "describes the custom recommendation properties",
      "properties": {
        "isEnabled": {
          "description": "A flag that indicates whether this recommendation is enabled or disabled.",
          "type": "boolean",
          "default": false
        },
        "supportedCloud": {
          "description": "Relevant cloud for the custom recommendation.",
          "type": "string",
          "enum": [
            "AWS",
            "GCP"
          ]
        },
        "queryInfo": {
          "description": "Base 64 encoded KQL Syntax query representing the recommendation results required",
          "$ref": "#/definitions/queryInfoProperties"
        },
        "assessmentMetadata": {
          "description": "describes metadata related to the assessments generated by this custom recommendation",
          "$ref": "#/definitions/assessmentMetadataProperties"
        }
      }
    },
    "queryInfoProperties": {
      "type": "object",
      "description": "describes the information on how to run a kusto query",
      "properties": {
        "resourceTypeTableName": {
          "description": "The Kusto table name that represents the resource type to run the resource on.",
          "type": "string"
        },
        "assessmentQuery": {
          "description": "The KQL assessment query",
          "type": "string"
        },
        "shouldMaskQuery": {
          "description": "Is the query masked/was masking enabled.",
          "type": "boolean",
          "default": false
        },
        "sdkNameThatResourceDataIsBasedOn": {
          "description": "SDK name that the resource data is based on.",
          "type": "string"
        },
        "supportedMajorVersionThatResourceDataIsBasedOn": {
          "description": "The minimum major version of the SDK that the resource data is based on.",
          "type": "integer"
        },
        "letStatements": {
          "description": "Collection of lets statements for the KQL query",
          "type": "array",
          "items": {
            "$ref": "#/definitions/letStatementProperties"
          }
        }
      }
    },
    "letStatementProperties": {
      "type": "object",
      "description": "Describes information for how to run the query.",
      "properties": {
        "letAlias": {
          "description": "Alias for the let statement",
          "type": "string"
        },
        "letResourceTypeTableName": {
          "description": "Kusto table name referencing the resource type to run the let statement on",
          "type": "string"
        },
        "letStatement": {
          "description": "let statement to run as a query",
          "type": "string"
        },
        "shouldMaskLetStatement": {
          "description": "Is the let statement masked/was masking enabled",
          "type": "boolean"
        },
        "sdkNameThatResourceDataIsBasedOn": {
          "description": "The name of the SDK that the resource data is based on",
          "type": "string"
        },
        "supportedMajorVersionThatResourceDataIsBasedOn": {
          "description": "The supported major version that the resourcedata is based on",
          "type": "integer"
        }
      }
    },
    "assessmentMetadataProperties": {
      "description": "describes required metadata info on generating assessments for assessment automation",
      "type": "object",
      "properties": {
        "severity": {
          "description": "Severity of the assessment generated by the assessment automation",
          "type": "string"
        },
        "assessmentKey": {
          "description": "Assessment key to use when generating assessments of this type",
          "type": "string"
        },
        "nameOfDiscoveredResourceTypeToCreateAssessmentFor": {
          "description": "Name of the type of discovery record or resource for which a unique ID should be generated",
          "type": "string"
        },
        "assessmentDescription": {
          "description": "Description of the assessment",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "customRecommendationName": {
      "name": "customRecommendationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the customRecommendation object",
      "x-ms-parameter-location": "method"
    },
    "customRecommendationBody": {
      "name": "customRecommendationBody",
      "in": "body",
      "description": "Custom recommendation body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/customRecommendationProperties"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
