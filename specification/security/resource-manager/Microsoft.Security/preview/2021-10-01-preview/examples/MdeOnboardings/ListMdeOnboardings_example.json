{
  "parameters": {
    "api-version": "2021-10-01-preview",
    "subscriptionId": "20ff7fc3-e762-44dd-bd96-b71116dcdc23"
  },
  "responses": {
    "200": {
      "body": {
        "value": [
          {
            "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/providers/Microsoft.Security/mdeOnboarding/default",
            "name": "default",
            "type": "Microsoft.Security/mdeOnboarding",
            "properties": {
              "onboardingPackageWindows": "",
              "onboardingPackageLinux": ""
            }
          }
        ]
      }
    }
  }
}
