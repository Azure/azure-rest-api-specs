{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Security",
    "description": "REST APIs for Defender for DevOps",
    "version": "2023-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of Azure DevOps organizations.",
        "operationId": "AzureDevOpsOrgs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrgListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsOrgs_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsList.json"
          },
          "AzureDevOpsOrgs_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsListOnboarded.json"
          },
          "AzureDevOpsOrgs_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored Azure DevOps organization resource.",
        "operationId": "AzureDevOpsOrgs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsOrgs_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates monitored Azure DevOps organization details.",
        "operationId": "AzureDevOpsOrgs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsOrg",
            "description": "Azure DevOps organization resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsOrgs_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates monitored Azure DevOps organization details.",
        "operationId": "AzureDevOpsOrgs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsOrg",
            "description": "Azure DevOps organization resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsOrgs_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored Azure DevOps organization.",
        "operationId": "AzureDevOpsOrgs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsOrgs_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsOrgsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of Azure DevOps projects.",
        "operationId": "AzureDevOpsProjects_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps project details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProjectListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsProjects_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsList.json"
          },
          "AzureDevOpsProjects_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsListOnboarded.json"
          },
          "AzureDevOpsProjects_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps project details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsProjects_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsProject",
            "description": "Azure DevOps project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsProjects_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsProject",
            "description": "Azure DevOps project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsProjects_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsProjects_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsProjectsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}/repos": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of Azure DevOps repositories.",
        "operationId": "AzureDevOpsRepos_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps repository details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepoListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsRepos_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposList.json"
          },
          "AzureDevOpsRepos_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposListOnboarded.json"
          },
          "AzureDevOpsRepos_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}/repos/{repoName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps repository details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsRepos_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsRepo",
            "description": "Azure DevOps repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsRepos_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsRepo",
            "description": "Azure DevOps repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AzureDevOpsRepos_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsRepos_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/AzureDevOpsReposDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "List DevOps Configurations.",
        "operationId": "Configurations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfigurationListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Configurations_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Gets a DevOps Configuration.",
        "operationId": "Configurations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates a DevOps Configuration.",
        "operationId": "Configurations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "devOpsConfiguration",
            "description": "DevOps configuration resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Configurations_CreateOrUpdateAndAuthorizeOnly": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsCreateOrUpdateAndAuthorizeOnly.json"
          },
          "Configurations_CreateOrUpdateAzureDevOps": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsCreateOrUpdateAzureDevOps.json"
          },
          "Configurations_CreateOrUpdateGitHub": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsCreateOrUpdateGitHub.json"
          },
          "Configurations_CreateOrUpdateGitLab": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsCreateOrUpdateGitLab.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates a DevOps Configuration.",
        "operationId": "Configurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "devOpsConfiguration",
            "description": "DevOps configuration resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Configurations_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a DevOps Connector.",
        "operationId": "Configurations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Configurations_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/ConfigurationsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of GitHub owners.",
        "operationId": "GitHubOwners_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of GitHub owner resources",
            "schema": {
              "$ref": "#/definitions/GitHubOwnerListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubOwners_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersList.json"
          },
          "GitHubOwners_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersListOnboarded.json"
          },
          "GitHubOwners_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub owner.",
        "operationId": "GitHubOwners_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitHub owner details",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubOwners_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates a monitored GitHub owner.",
        "operationId": "GitHubOwners_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubOwner",
            "description": "Github owner resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubOwners_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates a monitored GitHub owner.",
        "operationId": "GitHubOwners_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubOwner",
            "description": "Github owner resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubOwners_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored GitHub owner.",
        "operationId": "GitHubOwners_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubOwners_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubOwnersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}/repos": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of GitHub repositories.",
        "operationId": "GitHubRepos_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of GitHub repository resources",
            "schema": {
              "$ref": "#/definitions/GitHubRepoListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubRepos_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposList.json"
          },
          "GitHubRepos_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposListOnboarded.json"
          },
          "GitHubRepos_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}/repos/{repoName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub repository.",
        "operationId": "GitHubRepos_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitHub repository details",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubRepos_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates a monitored GitHub repository.",
        "operationId": "GitHubRepos_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubRepo",
            "description": "GitHub repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubRepos_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates a monitored GitHub repository.",
        "operationId": "GitHubRepos_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubRepo",
            "description": "GitHub repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubRepos_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored GitHub repository.",
        "operationId": "GitHubRepos_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubRepos_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitHubReposDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of GitLab groups.",
        "operationId": "GitLabGroups_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Group details",
            "schema": {
              "$ref": "#/definitions/GitLabGroupListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitLabGroups_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsList.json"
          },
          "GitLabGroups_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsListOnboarded.json"
          },
          "GitLabGroups_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitLab Group resource for a given fully-qualified name.",
        "operationId": "GitLabGroups_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitLab Group details",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitLabGroups_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates monitored GitLab Group details.",
        "operationId": "GitLabGroups_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitLabGroup",
            "description": "GitLab Group resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitLabGroups_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates monitored GitLab Group details.",
        "operationId": "GitLabGroups_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitLabGroup",
            "description": "GitLab Group resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitLabGroups_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored GitLab Group.",
        "operationId": "GitLabGroups_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitLabGroups_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabGroupsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/listSubgroups": {
      "post": {
        "tags": [
          "default"
        ],
        "summary": "Gets all nested subgroups of given GitLab Group.",
        "operationId": "GitLabSubgroups_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Group details for subgroups",
            "schema": {
              "$ref": "#/definitions/GitLabGroupListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitLabSubgroups_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabSubgroupsList.json"
          },
          "GitLabSubgroups_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabSubgroupsListOnboarded.json"
          },
          "GitLabSubgroups_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabSubgroupsListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/projects": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Gets a list of GitLab projects that are directly owned by given group.",
        "operationId": "GitLabProjects_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/InventoryScope"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Project details",
            "schema": {
              "$ref": "#/definitions/GitLabProjectListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitLabProjects_List": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsList.json"
          },
          "GitLabProjects_List_Onboarded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsListOnboarded.json"
          },
          "GitLabProjects_List_Available": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsListAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/projects/{projectName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitLab Project resource for a given fully-qualified group name and project name.",
        "operationId": "GitLabProjects_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitLab Project details",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitLabProjects_Get": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Creates or updates monitored GitLab Project details.",
        "operationId": "GitLabProjects_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitLabProject",
            "description": "GitLab project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitLabProjects_CreateOrUpdate": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Updates monitored GitLab Project details.",
        "operationId": "GitLabProjects_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitLabProject",
            "description": "GitLab project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitLabProjects_Update": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Deletes a monitored GitLab Project.",
        "operationId": "GitLabProjects_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitLabProjects_Delete": {
            "$ref": "./examples/SecurityConnectorsDevOps/GitLabProjectsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/operationResults/{operationId}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Get devops long running operation result.",
        "operationId": "OperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OperationId"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationResults_Get_Succeeded": {
            "$ref": "./examples/SecurityConnectorsDevOps/OperationResultsGetSucceeded.json"
          },
          "OperationResults_Get_Failed": {
            "$ref": "./examples/SecurityConnectorsDevOps/OperationResultsGetFailed.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActionableRemediation": {
      "description": "Configuration payload for PR Annotations.",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ActionableRemediationState"
        },
        "categoryConfigurations": {
          "description": "Gets or sets list of categories and severity levels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          },
          "x-ms-identifiers": []
        },
        "branchConfiguration": {
          "$ref": "#/definitions/TargetBranchConfiguration"
        },
        "inheritFromParentState": {
          "$ref": "#/definitions/InheritFromParentState"
        }
      }
    },
    "ActionableRemediationState": {
      "description": "ActionableRemediation Setting.\r\nNone - the setting was never set.\r\nEnabled - ActionableRemediation is enabled.\r\nDisabled - ActionableRemediation is disabled.",
      "enum": [
        "None",
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ActionableRemediationState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AnnotateDefaultBranchState": {
      "description": "Configuration of PR Annotations on default branch.\r\n\r\nEnabled - PR Annotations are enabled on the resource's default branch.\r\nDisabled - PR Annotations are disabled on the resource's default branch.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AnnotateDefaultBranchState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "Authorization": {
      "description": "Authorization payload.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.\r\n\r\nOnly used during PUT/PATCH operations. The secret is cleared during GET.",
          "type": "string",
          "example": "00000000000000000000.",
          "x-ms-secret": true
        }
      }
    },
    "AutoDiscovery": {
      "description": "AutoDiscovery states.",
      "enum": [
        "Disabled",
        "Enabled",
        "NotApplicable"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoDiscovery",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AzureDevOpsOrg": {
      "description": "Azure DevOps Org Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsOrgProperties"
        }
      }
    },
    "AzureDevOpsOrgListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsOrg"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsOrgProperties": {
      "description": "AzureDevOps Org properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "AzureDevOpsOrganizationConfiguration": {
      "description": "AzureDevOps Org Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "projectConfigs": {
          "description": "AzureDevOps Project Inventory Configuration.\r\nDictionary of AzureDevOps project name to desired project configuration.\r\nIf AutoDiscovery is Enabled, this field should be empty or null.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureDevOpsProjectConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "AzureDevOpsProject": {
      "description": "Azure DevOps Project Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsProjectProperties"
        }
      }
    },
    "AzureDevOpsProjectConfiguration": {
      "description": "AzureDevOps Project Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repositoryConfigs": {
          "description": "AzureDevOps Repository Inventory Configuration.\r\nDictionary of AzureDevOps repository name to desired repository configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "AzureDevOpsProjectListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsProject"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsProjectProperties": {
      "description": "AzureDevOps Project properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string",
          "readOnly": true
        },
        "projectId": {
          "description": "Gets or sets AzureDevOps Project Id.",
          "type": "string",
          "readOnly": true
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "AzureDevOpsRepo": {
      "description": "Azure DevOps Repo Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsRepoProperties"
        }
      }
    },
    "AzureDevOpsRepoListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsRepo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsRepoProperties": {
      "description": "AzureDevOps Repo properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string",
          "readOnly": true
        },
        "projectName": {
          "description": "Gets or sets AzureDevOps project Name.",
          "type": "string",
          "readOnly": true
        },
        "repoId": {
          "description": "Gets or sets Azure DevOps repo id.",
          "type": "string",
          "readOnly": true
        },
        "repoUrl": {
          "description": "Gets or sets AzureDevOps repo url.",
          "type": "string",
          "readOnly": true
        },
        "visibility": {
          "description": "Gets or sets AzureDevOps repo visibility, whether it is public or private etc.",
          "type": "string",
          "readOnly": true
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "BaseResourceConfiguration": {
      "description": "Base Resource Inventory configuration changes.",
      "type": "object",
      "properties": {
        "desiredOnboardingState": {
          "$ref": "#/definitions/DesiredOnboardingState"
        }
      }
    },
    "CategoryConfiguration": {
      "description": "Severity level per category configuration for PR Annotations.",
      "type": "object",
      "properties": {
        "minimumSeverityLevel": {
          "description": "Gets or sets minimum severity level for a given category.",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/RuleCategory"
        }
      }
    },
    "DesiredOnboardingState": {
      "description": "Onboarding states.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DesiredOnboardingState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "DevOpsConfiguration": {
      "description": "DevOps Configuration resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DevOpsConfigurationProperties"
        }
      }
    },
    "DevOpsConfigurationListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevOpsConfiguration"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "DevOpsConfigurationProperties": {
      "description": "DevOps Configuration metadata.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "azureDevOpsOrganizationConfigs": {
          "description": "AzureDevOps Org Inventory Configuration.\r\nDictionary of AzureDevOps org name to desired org configuration.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureDevOpsOrganizationConfiguration"
          },
          "x-nullable": true
        },
        "gitLabGroupConfigs": {
          "description": "GitLab Group Inventory Configuration.\r\nDictionary of GitLab fully-qualified group name to desired group configuration.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GitLabGroupConfiguration"
          },
          "x-nullable": true
        },
        "gitHubOwnerConfigs": {
          "description": "GitHub Owner Inventory Configuration.\r\nDictionary of GitHub owner name to desired owner configuration.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GitHubOwnerConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "GitHubOwner": {
      "description": "GitHub repo owner Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubOwnerProperties"
        }
      }
    },
    "GitHubOwnerConfiguration": {
      "description": "GitHub Owner Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repositoryConfigs": {
          "description": "GitHub Repository Inventory Configuration.\r\nDictionary of GitHub repository name to desired repository configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "GitHubOwnerListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubOwner"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubOwnerProperties": {
      "description": "GitHub Repo Owner properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "ownerUrl": {
          "description": "Gets or sets gitHub owner url.",
          "type": "string",
          "readOnly": true
        },
        "gitHubInternalId": {
          "description": "Gets or sets internal GitHub id.",
          "type": "string",
          "readOnly": true
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "GitHubRepo": {
      "description": "GitHub repo Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubRepositoryProperties"
        }
      }
    },
    "GitHubRepoListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubRepositoryProperties": {
      "description": "GitHub Repository properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "repoId": {
          "description": "Gets or sets GitHub Repo Id.\r\n\r\nThis is a numeric id defined by Github.\r\nEg: \"123456\".",
          "type": "string",
          "readOnly": true
        },
        "repoName": {
          "description": "Gets or sets GitHub Repo Name.\r\nEg: \"new-repo-1\".",
          "type": "string",
          "readOnly": true
        },
        "repoFullName": {
          "description": "Gets or sets GitHub Full Name.\r\nRepository name, prefixed with owner name.\r\nEg: \"my-org/new-repo-1\".",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        },
        "accountId": {
          "format": "int64",
          "description": "Gets or sets gitHub repo account id.",
          "type": "integer",
          "readOnly": true
        },
        "repoUrl": {
          "description": "Gets or sets gitHub repo url.",
          "type": "string",
          "readOnly": true
        },
        "ownerName": {
          "description": "Gets or sets GitHub Owner Name.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GitLabGroup": {
      "description": "GitLab Group Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitLabGroupProperties"
        }
      }
    },
    "GitLabGroupConfiguration": {
      "description": "GitLab Group Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "projectConfigs": {
          "description": "GitLab Project Inventory Configuration.\r\nDictionary of GitLab fully-qualified project name to desired project configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "GitLabGroupListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitLabGroup"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitLabGroupProperties": {
      "description": "GitLab Group metadata.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "fullyQualifiedName": {
          "description": "Gets or sets the fully-qualified name of the Group object.\r\n\r\nThis contains the entire namespace hierarchy where namespaces are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedFriendlyName": {
          "description": "Gets or sets the human readable fully-qualified name of the Group object.\r\n\r\nThis contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.",
          "type": "string",
          "readOnly": true
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "url": {
          "description": "Gets or sets the Url of the GitLab Group.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "GitLabProject": {
      "description": "GitLab Project Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitLabProjectProperties"
        }
      }
    },
    "GitLabProjectListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitLabProject"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitLabProjectProperties": {
      "description": "GitLab Project metadata.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets or sets resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "fullyQualifiedName": {
          "description": "Gets or sets the fully-qualified name of the project object.\r\n\r\nThis contains the entire hierarchy where entities are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedFriendlyName": {
          "description": "Gets or sets the human readable fully-qualified name of the Project object.\r\n\r\nThis contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedParentGroupName": {
          "description": "Gets or sets the fully-qualified name of the project's parent group object.\r\n\r\nThis contains the entire hierarchy where namespaces are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "url": {
          "description": "Gets or sets the Url of the GitLab Project.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "InheritFromParentState": {
      "description": "Update Settings.\r\n\r\nEnabled - Resource should inherit configurations from parent.\r\nDisabled - Resource should not inherit configurations from parent.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InheritFromParentState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "OnboardingState": {
      "description": "Details about resource onboarding status across all connectors.\r\n\r\nOnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.\r\nOnboarded - this resource has already been onboarded by the specified connector.\r\nNotOnboarded - this resource has not been onboarded to any connector.\r\nNotApplicable - the onboarding state is not applicable to the current endpoint.",
      "enum": [
        "NotApplicable",
        "OnboardedByOtherConnector",
        "Onboarded",
        "NotOnboarded"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OnboardingState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "ProvisioningState": {
      "description": "ProvisioningState of resource.\r\n\r\nPending - Provisioning pending.\r\nFailed - Provisioning failed.\r\nSucceeded - Successful provisioning.\r\nCanceled - Provisioning canceled.\r\nPendingDeletion - Deletion pending.\r\nDeletionSuccess - Deletion successful.\r\nDeletionFailure - Deletion failure.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "PendingDeletion",
        "DeletionSuccess",
        "DeletionFailure"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "RuleCategory": {
      "description": "Rule categories.\r\nCode - code scanning results.\r\nArtifact scanning results.\r\nDependencies scanning results.\r\nIaC results.\r\nSecrets scanning results.\r\nContainer scanning results.",
      "enum": [
        "Code",
        "Artifacts",
        "Dependencies",
        "Secrets",
        "IaC",
        "Containers"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "TargetBranchConfiguration": {
      "description": "Repository branch configuration for PR Annotations.",
      "type": "object",
      "properties": {
        "branchNames": {
          "description": "Gets or sets branches that should have annotations.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "annotateDefaultBranch": {
          "$ref": "#/definitions/AnnotateDefaultBranchState"
        }
      }
    }
  },
  "parameters": {
    "SecurityConnectorName": {
      "in": "path",
      "name": "securityConnectorName",
      "description": "Name of the Security Connector.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "InventoryScope": {
      "in": "query",
      "name": "inventoryScope",
      "description": "Query parameter to decide returned inventory scope.\r\n            \"Onboarded\" (default) - returns all inventory already onboarded to the connector.\r\n            \"Available\" - returns all inventory accessible by the user token consumed by the connector.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OrgName": {
      "in": "path",
      "name": "orgName",
      "description": "Name of the Azure DevOps organization.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProjectName": {
      "in": "path",
      "name": "projectName",
      "description": "Name of the Azure DevOps project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RepoName": {
      "in": "path",
      "name": "repoName",
      "description": "Name of the Azure DevOps repository.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OwnerName": {
      "in": "path",
      "name": "ownerName",
      "description": "Name of the GitHub owner.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GroupFQName": {
      "in": "path",
      "name": "groupFQName",
      "description": "Fully-qualified name of the GitLab Group.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationId": {
      "in": "path",
      "name": "operationId",
      "description": "Operation Id.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
