{
  "swagger": "2.0",
  "info": {
    "title": "Security Center",
    "description": "API spec for Microsoft.Security (Azure Security Center) resource provider",
    "version": "2022-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Security/query": {
      "post": {
        "tags": [
          "Query"
        ],
        "description": "Run KQL query against Microsoft.Security data types for scopes specified in the request. Supported types: Nodes, edges, insights, recommendations, vulnerabilities.",
        "operationId": "Query",
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/parameters/ApiVersion"
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryRequest"
            },
            "description": "Request specifying query, scope and its options."
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the query operation",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          },
          "default": {
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Basic query": {
            "$ref": "./examples/BasicQuery.json"
          },
          "Complex query": {
            "$ref": "./examples/ComplexQuery.json"
          }
        }
      }
    },
  },
  "definitions": {
    "QueryRequest": {
      "description": "Describes a query to be executed.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "The scopes in which the query will be executed - List of subscription IDs for Azure environments, and list of Account IDs for AWS environments.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Scope."
          }
        },
        "query": {
          "description": "The KQL query to execute.",
          "type": "string"
        },
        "options": {
          "description": "The query evaluation options",
          "$ref": "#/definitions/QueryRequestOptions"
        },
      },
      "required": [
        "query"
      ]
    },
	"QueryRequestOptions": {
      "description": "The options for query evaluation",
      "properties": {
        "$skipToken": {
          "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
          "type": "string"
        },
        "$top": {
          "description": "The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000
        },
        "$skip": {
          "description": "The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      }
    },
	"QueryResponse": {
      "description": "Query result.",
      "type": "object",
      "properties": {
        "totalRecords": {
          "description": "Number of total records matching the query.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of records returned in the current response. In the case of paging, this is the number of records in the current page.",
          "type": "integer",
          "format": "int64"
        },
        "$skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Query output in JObject array.",
          "type": "object"
        },
      },
      "required": [
        "totalRecords",
        "count",
        "data"
      ]
    },
	"ErrorResponse": {
      "title": "Error response.",
      "type": "object",
      "description": "An error response from the API.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error information."
        }
      },
      "required": [
        "error"
      ]
    },
    "Error": {
      "title": "Error info.",
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human readable error message."
        },
        "details": {
          "type": "array",
          "description": "Error details",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorDetails": {
      "title": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human readable error message."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "code",
        "message"
      ]
    },
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Api Version."
    }
  }
}
