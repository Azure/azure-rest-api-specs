// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Settings
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Settings.
    /// </summary>
    public static partial class SettingsExtensions
    {
            /// <summary>
            /// Settings about different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static SettingsList List(this ISettings operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Settings about different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SettingsList> ListAsync(this ISettings operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Settings of different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='settingName'>
            /// Name of setting: (MCAS/WDATP). Possible values include: 'MCAS', 'WDATP'
            /// </param>
            public static Setting Get(this ISettings operations, string settingName)
            {
                return operations.GetAsync(settingName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Settings of different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='settingName'>
            /// Name of setting: (MCAS/WDATP). Possible values include: 'MCAS', 'WDATP'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Setting> GetAsync(this ISettings operations, string settingName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(settingName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// updating settings about different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='settingName'>
            /// Name of setting: (MCAS/WDATP). Possible values include: 'MCAS', 'WDATP'
            /// </param>
            /// <param name='setting'>
            /// Setting object
            /// </param>
            public static Setting Update(this ISettings operations, string settingName, Setting setting)
            {
                return operations.UpdateAsync(settingName, setting).GetAwaiter().GetResult();
            }

            /// <summary>
            /// updating settings about different configurations in security center
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='settingName'>
            /// Name of setting: (MCAS/WDATP). Possible values include: 'MCAS', 'WDATP'
            /// </param>
            /// <param name='setting'>
            /// Setting object
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Setting> UpdateAsync(this ISettings operations, string settingName, Setting setting, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(settingName, setting, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
