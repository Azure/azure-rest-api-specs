// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Alerts.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for BundleType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum BundleType
    {
        /// <summary>
        /// App Services
        /// </summary>
        [EnumMember(Value = "AppServices")]
        AppServices,
        /// <summary>
        /// Key Vaults
        /// </summary>
        [EnumMember(Value = "KeyVaults")]
        KeyVaults,
        /// <summary>
        /// Kubernetes Service
        /// </summary>
        [EnumMember(Value = "KubernetesService")]
        KubernetesService,
        /// <summary>
        /// App Services
        /// </summary>
        [EnumMember(Value = "SqlServers")]
        SqlServers,
        /// <summary>
        /// Storage Accounts
        /// </summary>
        [EnumMember(Value = "StorageAccounts")]
        StorageAccounts,
        /// <summary>
        /// Virtual Machines
        /// </summary>
        [EnumMember(Value = "VirtualMachines")]
        VirtualMachines
    }
    internal static class BundleTypeEnumExtension
    {
        internal static string ToSerializedValue(this BundleType? value)
        {
            return value == null ? null : ((BundleType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this BundleType value)
        {
            switch( value )
            {
                case BundleType.AppServices:
                    return "AppServices";
                case BundleType.KeyVaults:
                    return "KeyVaults";
                case BundleType.KubernetesService:
                    return "KubernetesService";
                case BundleType.SqlServers:
                    return "SqlServers";
                case BundleType.StorageAccounts:
                    return "StorageAccounts";
                case BundleType.VirtualMachines:
                    return "VirtualMachines";
            }
            return null;
        }

        internal static BundleType? ParseBundleType(this string value)
        {
            switch( value )
            {
                case "AppServices":
                    return BundleType.AppServices;
                case "KeyVaults":
                    return BundleType.KeyVaults;
                case "KubernetesService":
                    return BundleType.KubernetesService;
                case "SqlServers":
                    return BundleType.SqlServers;
                case "StorageAccounts":
                    return BundleType.StorageAccounts;
                case "VirtualMachines":
                    return BundleType.VirtualMachines;
            }
            return null;
        }
    }
}
