{
  "swagger": "2.0",
  "info": {
    "title": "Tooling Service Client",
    "description": "Client that can be used to access Tooling services to run linter, static and api validations.",
    "version": "1.0"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "<TBD>",
  "basePath": "/api/",
  "schemes": [
    "https", "http"
  ],
  "paths": {
    "/tools/validation/lint": {
      "post": {
        "tags": [
          "Linter"
        ],
        "operationId": "Tools_GetLinterValidationResults",
        "description": "Get Linter Validation results",
        "parameters": [
          {
            "name":"repository",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Name of the repository"
          },
          {
            "name":"ref",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Name of the specific reference(Branch/Commit) in the repository."
          },
          {
            "name":"configPath",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Configuration path of the file."
          },
          {
            "name":"apiTag",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "API Tag to be validated."
          },
          {
            "name":"filterType",
            "in": "query",
            "type": "string",
            "description": "Type of filter(ARM/SDK,etc)"
          },
          {
            "name":"githubToken",
            "in": "body",
            "type": "string",
            "description": "Github Token to access private repositories."
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetLinterValidationResults",
            "schema": {
              "$ref": "#/definitions/LinterValidationResult",
              "description": "Linter Result"
            }
          },
          "200": {
            "description": "Final Response that contains the Linter Validation results.",
            "schema": {
              "$ref": "#/definitions/LinterValidationResult",
              "description": "Linter Result"
            }
          }
        }
      },
      "x-ms-long-running-operation": true
    },
    "/tools/validation/lint/result": {
      "get": {
        "tags": [
          "Linter Results"
        ],
        "operationId": "Tools_GetLinterValidationResultsForValidationId",
        "description": "Get Linter Validation results for the specific validation id.",
        "parameters": [
          {
            "name":"validationId",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Validation Id for which the results must be retrieved."
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetLinterValidationResultsForValidationId",
            "schema": {
              "$ref": "#/definitions/LinterValidationResult",
              "description": "Linter Result"
            }
          },
          "200": {
            "description": "Final Response that contains the Linter Validation results.",
            "schema": {
              "$ref": "#/definitions/LinterValidationResult",
              "description": "Linter Result"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tools/validation/semantic": {
      "post": {
        "tags": [
          "semantic"
        ],
        "operationId": "Tools_GetSemanticValidationResults",
        "description": "Get Semantic validation result.",
        "parameters": [
          {
            "name":"files",
            "in": "body",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            },
            "description": "List of files.File URLs must be an absolute path."
          },
          {
            "name":"githubToken",
            "in": "body",
            "type": "string",
            "description": "Github Token"
          }          
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetSemanticValidationResults",
            "schema": {
              "$ref": "#/definitions/SemanticValidationResult",
              "description": "Semantic Result"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SemanticValidationResult",
              "description": "Semantic Result"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tools/validation/semantic/result": {
      "get": {
        "tags": [
          "semantic results"
        ],
        "operationId": "Tools_GetSemanticValidationResultsForValidationId",
        "description": "Get Semantic validation results for the specific validation id.",
        "parameters": [
          {
            "name":"validationId",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Validation Id for which the results must be retrieved."
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetSemanticValidationResultsForValidationId",
            "schema": {
              "$ref": "#/definitions/SemanticValidationResult",
              "description": "Semantic Result"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SemanticValidationResult",
              "description": "Semantic Result"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tools/validation/model": {
      "post": {
        "tags": [
          "model"
        ],
        "operationId": "Tools_GetModelValidationResults",
        "description": "Get Model validation result.",
        "parameters": [
          {
            "name":"files",
            "in": "body",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            },
            "description": "List of files."
          },
          {
            "name":"commitHash",
            "in": "body",
            "type": "string",
            "description": "Commit hash to be validated."
          },
          {
            "name":"validationId",
            "in": "body",
            "type": "string",
            "description": "Validation Id."
          },
          {
            "name":"githubToken",
            "in": "body",
            "type": "string",
            "description": "Github Token"
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetModelValidationResults",
            "schema": {
              "$ref": "#/definitions/ModelValidationResult",
              "description": "Semantic Result"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelValidationResult",
              "description": "Semantic Result"
            }
          }
        },
        "x-ms-long-running-operation": true
    },
    "/tools/validation/model/result": {
      "get": {
        "tags": [
          "model results"
        ],
        "operationId": "Tools_GetModelValidationResultsForValidationId",
        "description": "Get Model validation results for the specific validation id.",
        "parameters": [
          {
            "name":"validationId",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Validation Id for which the results must be retrieved."
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetModelValidationResultsForValidationId",
            "schema": {
              "$ref": "#/definitions/ModelValidationResult",
              "description": "Semantic Result"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelValidationResult",
              "description": "Semantic Result"
            }
          }
        },
        "x-ms-long-running-operation": true

      }
    },    
    "/tools/validation/api": {
      "post": {
        "tags": [
          "semantic"
        ],
        "operationId": "Tools_GetApiValidationResults",
        "parameters": [
          {
            "name":"repository",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Name of the repository"
          },
          {
            "name":"ref",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Name of the specific branch in the repository."
          },
          {
            "name":"resourceProvider",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Name of the resource provider."
          },
          {
            "name":"apiVersion",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "API Version to be validated."
          },
          {
            "name":"startDate",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Start Date"
          },
          {
            "name":"endDate",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "End Date"
          },
          {
            "name":"githubToken",
            "in": "body",
            "type": "string",
            "required": true,
            "description": "Github Token"
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetApiValidationResults",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationSummary",
              "description": "Api Validation Summary"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationSummary",
              "description": "Api Validation Summary"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tools/validation/api/result": {
      "get": {
        "tags": [
          "api results"
        ],
        "operationId": "Tools_GetApiValidationResultsForValidationId",
        "description": "Get Api validation results for the specific validation id.",
        "parameters": [
          {
            "name":"validationId",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Validation Id for which the results must be retrieved."
          }
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetApiValidationResultsForValidationId",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationSummary",
              "description": "Api Validation Summary"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationSummary",
              "description": "Api Validation Summary"
            }
          }
        },
        "x-ms-long-running-operation": true

      }
    },
    "/tools/validation/api/details": {
      "get": {
        "operationId": "Tools_GetApiValidationDetailsForValidationId",
        "parameters": [
          {
            "name":"validationId",
            "in": "query",
            "type": "string",
            "description": "Validation Id",
            "required": true
          }          
        ],
        "responses": {
          "503": {
            "description": "Error when the workers are not available.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Workers not available"
            }
          },
          "400": {
            "description": "Error when the parameters are missing.",
            "schema": {
              "$ref": "#/definitions/ErrorObject",
              "description": "Missing Parameters"
            }
          },
          "201": {
            "description": "Initial response for the Long Running Operation: Tools_GetApiValidationDetailsForValidationId",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationDetails",
              "description": "Api Validation Summary"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApiSpecsValidationDetails",
              "description": "Api Validation Summary"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseValidationError": {
      "type": "object",
      "properties": {
        "severity": {
          "type": "string",
          "enum": [
            "Critical",
            "Error",
            "Warning",
            "Information",
            "Verbose"
          ]
        },
        "code":{
          "type": "string"
        },
        "details": {
          "type": "object"
        },
        "source": {
          "type": "string",
          "enum": [
            "response",
            "request",
            "global"
          ]
        }
      }
    },
    "ApiValidationError": {
      "type": "object",
      "properties": {
        "occurence": {
          "type": "integer"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseValidationError"
        }
      ]
    },
    "LinterValidationResult": {
      "type": "object",
      "description": "Linter Validation Result Object.",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Name of the repository."
        },
        "ref": {
          "type": "string",
          "description": "Name of the specific reference(Branch/Commit) in the repository."
        },
        "configPath": {
          "type": "string",
          "description": "Config Path"
        },
        "apiTag": {
          "type": "string",
          "description": "API Tag"
        },
        "filterType": {
          "type": "string",
          "description": "Type of filter(ARM/SDK,etc)"
        },
        "validationResults": {
          "type": "array",
          "description": "Validation results from Linter",
          "items": {
            "$ref": "#/definitions/LinterValidationResultsIssue"
          }
        }
      }
    },
    "LinterValidationResultsIssue": {
      "type": "object",
      "description": "",
      "properties": {
        "details": {
          "$ref": "#/definitions/LinterValidationResultsIssueDetails"
        },
        "source": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinterValidationResultsIssueSource"
          }          
        },
        "severity": {
          "type": "string",
          "description": "Severity"
        }
      }
    },
    "LinterValidationResultsIssueDetails": {
      "type": "object",
      "description": "",
      "properties": {
        "type": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "validationCategory": {
          "type": "string"
        },
        "providerNamespace": {
          "type": "boolean"
        },
        "resourceType": {
          "type": "boolean"
        }
      }
    },
    "LinterValidationResultsIssueSource": {
      "type": "object",
      "description": "",
      "properties": {
        "document": {
          "type": "string"
        },
        "Position": {
          "$ref": "#/definitions/LinterValidationResultsIssueSourcePosition"
        }
      }
    },
    "LinterValidationResultsIssueSourcePosition": {
      "type": "object",
      "description": "",
      "properties": {
        "column": {
          "type": "integer"
        },
        "line": {
          "type": "integer"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SemanticValidationResult": {
      "type": "object",
      "description": "Semantic Validation Result.",
      "properties": {
        "fileUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationResults": {
          "type": "array",
          "description": "Validation results from Semantic Validator",
          "items": {
            "$ref": "#/definitions/SemanticValidationResultsObject"
          }
        }
      }
    },
    "SemanticValidationResultsObject": {
      "type": "object",
      "description": "Static Validation Results Object.",
      "properties": {
        "file": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticValidationError"
          }
        }
      }
    },
    "SemanticValidationError": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseValidationError"
        }
      ]
    },
    "ModelValidationResult": {
      "type": "object",
      "description": "Model Validation Result.",
      "properties": {
        "commitHash": {
          "type": "string"
        },
        "fileUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationResults": {
          "type": "array",
          "description": "Validation results from Model Validator",
          "items": {
            "$ref": "#/definitions/ModelValidationResultsObject"
          }
        }
      }
    },
    "SemanticValidationResultsObject": {
      "type": "object",
      "description": "Model Validation Results Object.",
      "properties": {
        "file": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelValidationError"
          }
        }
      }
    },
    "ModelValidationError": { 
      "type": "object",
      "description": "Need to check all of on this one",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "scenario": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "innerErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelValidationError"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseValidationError"
        }
      ]
    },
    "ApiSpecsValidationDetails": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "resourceProvider": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "validationResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveValidationResult"
          }
        },
        "operationsNotFound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveValidationResult"
          }
        },
        "uniqueErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiValidationError"
          }
        }
      }
    },
    "ApiSpecsValidationSummary": {
      "type": "object",
      "properties": {
        "specSummaryObject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecSummaryObject"
          }
        }
      }
    },
    "SpecSummaryObject": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer"
        },
        "uniqueErrorsCount": {
          "type": "integer"
        },
        "failingCount": {
          "type": "integer"
        },
        "passingCount": {
          "type": "integer"
        }
      }
    },
    "LiveValidationResult": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "originalCorrelationId": {
          "type": "string"
        },
        "isAggregateSuccess": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "operationSeverity": {
          "type": "string",
          "enum": [
            "Critical",
            "Error",
            "Warning",
            "Information",
            "Verbose"
          ]
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiValidationError"
          }
        },
        "environment": {
          "type": "string",
          "enum": [
            "canary",
            "prod"
          ]
        }
      }
    },
    "ErrorObject":{
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "innererror": {
          "type": "object"
        }
      }
    }
  },
  "parameters": {
  }
}