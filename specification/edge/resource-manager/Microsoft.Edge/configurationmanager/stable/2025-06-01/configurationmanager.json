{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Edge",
    "version": "2025-06-01",
    "description": "Microsoft.Edge Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "DynamicSchemas"
    },
    {
      "name": "Schemas"
    },
    {
      "name": "SchemaVersions"
    },
    {
      "name": "SolutionVersions"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Targets"
    },
    {
      "name": "DynamicSchemaVersions"
    },
    {
      "name": "SchemaReferences"
    },
    {
      "name": "Solutions"
    },
    {
      "name": "SolutionTemplateVersions"
    },
    {
      "name": "SolutionTemplates"
    },
    {
      "name": "Instances"
    },
    {
      "name": "InstanceHistories"
    },
    {
      "name": "ConfigTemplates"
    },
    {
      "name": "ConfigTemplateVersions"
    },
    {
      "name": "Workflows"
    },
    {
      "name": "WorkflowVersions"
    },
    {
      "name": "Executions"
    },
    {
      "name": "Diagnostics"
    },
    {
      "name": "Contexts"
    },
    {
      "name": "SiteReferences"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.Edge/jobs": {
      "get": {
        "operationId": "Jobs_ListByTarget",
        "tags": [
          "Jobs"
        ],
        "description": "List Jobs by parent resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Jobs_ListByTarget_MaximumSet": {
            "$ref": "./examples/Jobs_ListByTarget_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "Jobs"
        ],
        "description": "Get a Job resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the Job",
            "required": true,
            "type": "string",
            "pattern": "^(?=.{3,60}$)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Jobs_Get_MaximumSet": {
            "$ref": "./examples/Jobs_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/schemaReferences": {
      "get": {
        "operationId": "SchemaReferences_ListByResourceGroup",
        "tags": [
          "SchemaReferences"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaReferenceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaReferences_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/SchemaReferences_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}": {
      "get": {
        "operationId": "SchemaReferences_Get",
        "tags": [
          "SchemaReferences"
        ],
        "description": "Get a Schema Reference Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "schemaReferenceName",
            "in": "path",
            "description": "The name of the SchemaReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaReference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaReferences_Get_MaximumSet": {
            "$ref": "./examples/SchemaReferences_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates": {
      "get": {
        "operationId": "ConfigTemplates_ListBySubscription",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_ListBySubscription_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts": {
      "get": {
        "operationId": "Contexts_ListBySubscription",
        "tags": [
          "Contexts"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContextListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_ListBySubscription_MaximumSet": {
            "$ref": "./examples/Contexts_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics": {
      "get": {
        "operationId": "Diagnostics_ListBySubscription",
        "tags": [
          "Diagnostics"
        ],
        "description": "Lists Diagnostics resources within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_ListBySubscription_MaximumSet": {
            "$ref": "./examples/Diagnostics_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas": {
      "get": {
        "operationId": "Schemas_ListBySubscription",
        "tags": [
          "Schemas"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_ListBySubscription_MaximumSet": {
            "$ref": "./examples/Schemas_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates": {
      "get": {
        "operationId": "SolutionTemplates_ListBySubscription",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_ListBySubscription_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets": {
      "get": {
        "operationId": "Targets_ListBySubscription",
        "tags": [
          "Targets"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ListBySubscription_MaximumSet": {
            "$ref": "./examples/Targets_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates": {
      "get": {
        "operationId": "ConfigTemplates_ListByResourceGroup",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}": {
      "get": {
        "operationId": "ConfigTemplates_Get",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Get a Config Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_Get_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "ConfigTemplates_CreateOrUpdate",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Create or update a Config Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigTemplate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigTemplate"
            }
          },
          "201": {
            "description": "Resource 'ConfigTemplate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigTemplate"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConfigTemplates_Update",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "update a Config Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigTemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_Update_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "ConfigTemplates_Delete",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Delete a Config Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_Delete_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/createVersion": {
      "post": {
        "operationId": "ConfigTemplates_CreateVersion",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Create or update a Config Template Version Resource with the specified UpdateType",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigTemplateVersionWithUpdateType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplateVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_CreateVersion_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_CreateVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/removeVersion": {
      "post": {
        "operationId": "ConfigTemplates_RemoveVersion",
        "tags": [
          "ConfigTemplates"
        ],
        "description": "Remove Config Template Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RemoveVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplates_RemoveVersion_MaximumSet": {
            "$ref": "./examples/ConfigTemplates_RemoveVersion_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions": {
      "get": {
        "operationId": "ConfigTemplateVersions_ListByConfigTemplate",
        "tags": [
          "ConfigTemplateVersions"
        ],
        "description": "List Config Template Version Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplateVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplateVersions_ListByConfigTemplate_MaximumSet": {
            "$ref": "./examples/ConfigTemplateVersions_ListByConfigTemplate_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}": {
      "get": {
        "operationId": "ConfigTemplateVersions_Get",
        "tags": [
          "ConfigTemplateVersions"
        ],
        "description": "Get a Config Template Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configTemplateName",
            "in": "path",
            "description": "The name of the ConfigTemplate",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "configTemplateVersionName",
            "in": "path",
            "description": "The name of the ConfigTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigTemplateVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigTemplateVersions_Get_MaximumSet": {
            "$ref": "./examples/ConfigTemplateVersions_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts": {
      "get": {
        "operationId": "Contexts_ListByResourceGroup",
        "tags": [
          "Contexts"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContextListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/Contexts_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}": {
      "get": {
        "operationId": "Contexts_Get",
        "tags": [
          "Contexts"
        ],
        "description": "Get Context Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Context"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_Get_MaximumSet": {
            "$ref": "./examples/Contexts_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Contexts_CreateOrUpdate",
        "tags": [
          "Contexts"
        ],
        "description": "Create or update Context Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Context"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Context' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Context"
            }
          },
          "201": {
            "description": "Resource 'Context' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Context"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Contexts_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Contexts_Update",
        "tags": [
          "Contexts"
        ],
        "description": "update an Context Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Context"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_Update_MaximumSet": {
            "$ref": "./examples/Contexts_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Contexts_Delete",
        "tags": [
          "Contexts"
        ],
        "description": "Delete Context Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Contexts_Delete_MaximumSet": {
            "$ref": "./examples/Contexts_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences": {
      "get": {
        "operationId": "SiteReferences_ListByContext",
        "tags": [
          "SiteReferences"
        ],
        "description": "List Site Reference Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteReferenceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SiteReferences_ListByContext_MaximumSet": {
            "$ref": "./examples/SiteReferences_ListByContext_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}": {
      "get": {
        "operationId": "SiteReferences_Get",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteReference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SiteReferences_Get_MaximumSet": {
            "$ref": "./examples/SiteReferences_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SiteReferences_CreateOrUpdate",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteReference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SiteReference' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SiteReference"
            }
          },
          "201": {
            "description": "Resource 'SiteReference' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SiteReference"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SiteReferences_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/SiteReferences_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SiteReferences_Update",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteReferenceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteReference"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SiteReferences_Update_MaximumSet": {
            "$ref": "./examples/SiteReferences_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SiteReferences_Delete",
        "tags": [
          "SiteReferences"
        ],
        "description": "Get Site Reference Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "siteReferenceName",
            "in": "path",
            "description": "The name of the SiteReference",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SiteReferences_Delete_MaximumSet": {
            "$ref": "./examples/SiteReferences_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows": {
      "get": {
        "operationId": "Workflows_ListByContext",
        "tags": [
          "Workflows"
        ],
        "description": "List Workflow resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workflows_ListByContext_MaximumSet": {
            "$ref": "./examples/Workflows_ListByContext_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}": {
      "get": {
        "operationId": "Workflows_Get",
        "tags": [
          "Workflows"
        ],
        "description": "Get a Workflow resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workflows_Get_MaximumSet": {
            "$ref": "./examples/Workflows_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Workflows_CreateOrUpdate",
        "tags": [
          "Workflows"
        ],
        "description": "Create or update a Workflow resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workflow' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "201": {
            "description": "Resource 'Workflow' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workflow"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workflows_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Workflows_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workflows_Update",
        "tags": [
          "Workflows"
        ],
        "description": "update a Workflow resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workflows_Update_MaximumSet": {
            "$ref": "./examples/Workflows_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Workflows_Delete",
        "tags": [
          "Workflows"
        ],
        "description": "Delete a Workflow resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workflows_Delete_MaximumSet": {
            "$ref": "./examples/Workflows_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions": {
      "get": {
        "operationId": "WorkflowVersions_ListByWorkflow",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "List Workflow Version Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkflowVersions_ListByWorkflow_MaximumSet": {
            "$ref": "./examples/WorkflowVersions_ListByWorkflow_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}": {
      "get": {
        "operationId": "WorkflowVersions_Get",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Get a Workflow Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkflowVersions_Get_MaximumSet": {
            "$ref": "./examples/WorkflowVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "WorkflowVersions_CreateOrUpdate",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Create or update a Workflow Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkflowVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          },
          "201": {
            "description": "Resource 'WorkflowVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkflowVersions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/WorkflowVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkflowVersions_Update",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "update an WorkflowVersion Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkflowVersions_Update_MaximumSet": {
            "$ref": "./examples/WorkflowVersions_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkflowVersions_Delete",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Delete a Workflow Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkflowVersions_Delete_MaximumSet": {
            "$ref": "./examples/WorkflowVersions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions": {
      "get": {
        "operationId": "Executions_ListByWorkflowVersion",
        "tags": [
          "Executions"
        ],
        "description": "List Execution Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExecutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Executions_ListByWorkflowVersion_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Executions_ListByWorkflowVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}": {
      "get": {
        "operationId": "Executions_Get",
        "tags": [
          "Executions"
        ],
        "description": "Get Execution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Execution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Executions_Get_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Executions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Executions_CreateOrUpdate",
        "tags": [
          "Executions"
        ],
        "description": "Create or update Execution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Execution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Execution' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Execution"
            }
          },
          "201": {
            "description": "Resource 'Execution' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Execution"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Executions_CreateOrUpdate_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Executions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Executions_Update",
        "tags": [
          "Executions"
        ],
        "description": "update an Execution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecutionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Execution"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Executions_Update_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Executions_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Executions_Delete",
        "tags": [
          "Executions"
        ],
        "description": "Delete Execution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "The name of the Context.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Name of the workflow",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the workflowVersion.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "executionName",
            "in": "path",
            "description": "The name of the Execution.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Executions_Delete_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Executions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics": {
      "get": {
        "operationId": "Diagnostics_ListByResourceGroup",
        "tags": [
          "Diagnostics"
        ],
        "description": "Returns a collection of Diagnostic resources within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/Diagnostics_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}": {
      "get": {
        "operationId": "Diagnostics_Get",
        "tags": [
          "Diagnostics"
        ],
        "description": "Returns details of specified Diagnostic resource.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Diagnostic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_Get_MaximumSet": {
            "$ref": "./examples/Diagnostics_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Diagnostics_CreateOrUpdate",
        "tags": [
          "Diagnostics"
        ],
        "description": "Creates new or updates existing Diagnostic resource.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Diagnostic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Diagnostic' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Diagnostic"
            }
          },
          "201": {
            "description": "Resource 'Diagnostic' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Diagnostic"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Diagnostics_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Diagnostics_Update",
        "tags": [
          "Diagnostics"
        ],
        "description": "Updates existing Diagnostic resource.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Diagnostic"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_Update_MaximumSet": {
            "$ref": "./examples/Diagnostics_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Diagnostics_Delete",
        "tags": [
          "Diagnostics"
        ],
        "description": "Deletes specified Diagnostic resource.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diagnosticName",
            "in": "path",
            "description": "Name of Diagnostic.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnostics_Delete_MaximumSet": {
            "$ref": "./examples/Diagnostics_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas": {
      "get": {
        "operationId": "Schemas_ListByResourceGroup",
        "tags": [
          "Schemas"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/Schemas_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}": {
      "get": {
        "operationId": "Schemas_Get",
        "tags": [
          "Schemas"
        ],
        "description": "Get a Schema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_Get_MaximumSet": {
            "$ref": "./examples/Schemas_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Schemas_CreateOrUpdate",
        "tags": [
          "Schemas"
        ],
        "description": "Create or update a Schema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schema' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "201": {
            "description": "Resource 'Schema' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schema"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Schemas_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Schemas_Update",
        "tags": [
          "Schemas"
        ],
        "description": "update a Schema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_Update_MaximumSet": {
            "$ref": "./examples/Schemas_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Schemas_Delete",
        "tags": [
          "Schemas"
        ],
        "description": "Delete a Schema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_Delete_MaximumSet": {
            "$ref": "./examples/Schemas_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/createVersion": {
      "post": {
        "operationId": "Schemas_CreateVersion",
        "tags": [
          "Schemas"
        ],
        "description": "Create a Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaVersionWithUpdateType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_CreateVersion_MaximumSet": {
            "$ref": "./examples/Schemas_CreateVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas": {
      "get": {
        "operationId": "DynamicSchemas_ListBySchema",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "List by Schema",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemas_ListBySchema_MaximumSet": {
            "$ref": "./examples/DynamicSchemas_ListBySchema_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}": {
      "get": {
        "operationId": "DynamicSchemas_Get",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Get a DynamicSchema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemas_Get_MaximumSet": {
            "$ref": "./examples/DynamicSchemas_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DynamicSchemas_CreateOrUpdate",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Create or update a DynamicSchema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicSchema' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicSchema"
            }
          },
          "201": {
            "description": "Resource 'DynamicSchema' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicSchema"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemas_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/DynamicSchemas_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynamicSchemas_Update",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "update a DynamicSchema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicSchemaUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemas_Update_MaximumSet": {
            "$ref": "./examples/DynamicSchemas_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DynamicSchemas_Delete",
        "tags": [
          "DynamicSchemas"
        ],
        "description": "Delete a DynamicSchema Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemas_Delete_MaximumSet": {
            "$ref": "./examples/DynamicSchemas_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions": {
      "get": {
        "operationId": "DynamicSchemaVersions_ListByDynamicSchema",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "List by Dynamic Schema",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemaVersions_ListByDynamicSchema_MaximumSet": {
            "$ref": "./examples/DynamicSchemaVersions_ListByDynamicSchema_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{schemaVersionName}": {
      "get": {
        "operationId": "DynamicSchemaVersions_Get",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Get a Dynamic Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemaVersions_Get_MaximumSet": {
            "$ref": "./examples/DynamicSchemaVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DynamicSchemaVersions_CreateOrUpdate",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Create or update a Dynamic Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicSchemaVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersion"
            }
          },
          "201": {
            "description": "Resource 'DynamicSchemaVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemaVersions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/DynamicSchemaVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynamicSchemaVersions_Update",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "update a Dynamic Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicSchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemaVersions_Update_MaximumSet": {
            "$ref": "./examples/DynamicSchemaVersions_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DynamicSchemaVersions_Delete",
        "tags": [
          "DynamicSchemaVersions"
        ],
        "description": "Delete a Dynamic Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicSchemaName",
            "in": "path",
            "description": "The name of the DynamicSchema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicSchemaVersions_Delete_MaximumSet": {
            "$ref": "./examples/DynamicSchemaVersions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/removeVersion": {
      "post": {
        "operationId": "Schemas_RemoveVersion",
        "tags": [
          "Schemas"
        ],
        "description": "Remove Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RemoveVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_RemoveVersion_MaximumSet": {
            "$ref": "./examples/Schemas_RemoveVersion_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions": {
      "get": {
        "operationId": "SchemaVersions_ListBySchema",
        "tags": [
          "SchemaVersions"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaVersions_ListBySchema_MaximumSet": {
            "$ref": "./examples/SchemaVersions_ListBySchema_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}": {
      "get": {
        "operationId": "SchemaVersions_Get",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Get a Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaVersions_Get_MaximumSet": {
            "$ref": "./examples/SchemaVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaVersions_CreateOrUpdate",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Create or update a Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "201": {
            "description": "Resource 'SchemaVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaVersions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/SchemaVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SchemaVersions_Update",
        "tags": [
          "SchemaVersions"
        ],
        "description": "update a Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaVersions_Update_MaximumSet": {
            "$ref": "./examples/SchemaVersions_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "SchemaVersions_Delete",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Delete a Schema Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the Schema",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "The name of the SchemaVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaVersions_Delete_MaximumSet": {
            "$ref": "./examples/SchemaVersions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates": {
      "get": {
        "operationId": "SolutionTemplates_ListByResourceGroup",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}": {
      "get": {
        "operationId": "SolutionTemplates_Get",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Get a Solution Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_Get_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SolutionTemplates_CreateOrUpdate",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Create or update a Solution Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionTemplate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionTemplate"
            }
          },
          "201": {
            "description": "Resource 'SolutionTemplate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionTemplate"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SolutionTemplates_Update",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "update a Solution Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_Update_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "SolutionTemplates_Delete",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Delete a Solution Template Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_Delete_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/createVersion": {
      "post": {
        "operationId": "SolutionTemplates_CreateVersion",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Create a Solution Template Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateVersionWithUpdateType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplateVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_CreateVersion_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_CreateVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/removeVersion": {
      "post": {
        "operationId": "SolutionTemplates_RemoveVersion",
        "tags": [
          "SolutionTemplates"
        ],
        "description": "Remove Solution Template Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplates_RemoveVersion_MaximumSet": {
            "$ref": "./examples/SolutionTemplates_RemoveVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions": {
      "get": {
        "operationId": "SolutionTemplateVersions_ListBySolutionTemplate",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "List Solution Template Version Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplateVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplateVersions_ListBySolutionTemplate_MaximumSet": {
            "$ref": "./examples/SolutionTemplateVersions_ListBySolutionTemplate_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}": {
      "get": {
        "operationId": "SolutionTemplateVersions_Get",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Get a Solution Template Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTemplateVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplateVersions_Get_MaximumSet": {
            "$ref": "./examples/SolutionTemplateVersions_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkDeploySolution": {
      "post": {
        "operationId": "SolutionTemplateVersions_BulkDeploySolution",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Post request for bulk deploy",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkDeploySolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplateVersions_BulkDeploySolution_MaximumSet": {
            "$ref": "./examples/SolutionTemplateVersions_BulkDeploySolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkPublishSolution": {
      "post": {
        "operationId": "SolutionTemplateVersions_BulkPublishSolution",
        "tags": [
          "SolutionTemplateVersions"
        ],
        "description": "Post request for bulk publish",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionTemplateName",
            "in": "path",
            "description": "The name of the SolutionTemplate",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionTemplateVersionName",
            "in": "path",
            "description": "The name of the SolutionTemplateVersion",
            "required": true,
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkPublishSolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTemplateVersions_BulkPublishSolution_MaximumSet": {
            "$ref": "./examples/SolutionTemplateVersions_BulkPublishSolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets": {
      "get": {
        "operationId": "Targets_ListByResourceGroup",
        "tags": [
          "Targets"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/Targets_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}": {
      "get": {
        "operationId": "Targets_Get",
        "tags": [
          "Targets"
        ],
        "description": "Get a Target Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Get_MaximumSet": {
            "$ref": "./examples/Targets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Targets_CreateOrUpdate",
        "tags": [
          "Targets"
        ],
        "description": "Create or update a Target Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Target"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Target' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "201": {
            "description": "Resource 'Target' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Targets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Targets_Update",
        "tags": [
          "Targets"
        ],
        "description": "update a Target Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Update_MaximumSet": {
            "$ref": "./examples/Targets_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Targets_Delete",
        "tags": [
          "Targets"
        ],
        "description": "Delete a Target Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ForceDeleteParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Delete_MaximumSet": {
            "$ref": "./examples/Targets_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/installSolution": {
      "post": {
        "operationId": "Targets_InstallSolution",
        "tags": [
          "Targets"
        ],
        "description": "Post request to deploy",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstallSolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_InstallSolution_MaximumSet": {
            "$ref": "./examples/Targets_InstallSolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/publishSolutionVersion": {
      "post": {
        "operationId": "Targets_PublishSolutionVersion",
        "tags": [
          "Targets"
        ],
        "description": "Post request to publish",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersionParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_PublishSolutionVersion_MaximumSet": {
            "$ref": "./examples/Targets_PublishSolutionVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/removeRevision": {
      "post": {
        "operationId": "Targets_RemoveRevision",
        "tags": [
          "Targets"
        ],
        "description": "Post request to remove solution version revision",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveRevisionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_RemoveRevision_MaximumSet": {
            "$ref": "./examples/Targets_RemoveRevision_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/resolveConfiguration": {
      "post": {
        "operationId": "Targets_ResolveConfiguration",
        "tags": [
          "Targets"
        ],
        "description": "Post request to resolve configuration",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResolvedConfiguration"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ResolveConfiguration_MaximumSet": {
            "$ref": "./examples/Targets_ResolveConfiguration_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/reviewSolutionVersion": {
      "post": {
        "operationId": "Targets_ReviewSolutionVersion",
        "tags": [
          "Targets"
        ],
        "description": "Post request to review configuration",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionTemplateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ReviewSolutionVersion_MaximumSet": {
            "$ref": "./examples/Targets_ReviewSolutionVersion_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions": {
      "get": {
        "operationId": "Solutions_ListByTarget",
        "tags": [
          "Solutions"
        ],
        "description": "List Solution resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_ListByTarget_MaximumSet": {
            "$ref": "./examples/Solutions_ListByTarget_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}": {
      "get": {
        "operationId": "Solutions_Get",
        "tags": [
          "Solutions"
        ],
        "description": "Get a Solution resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Get_MaximumSet": {
            "$ref": "./examples/Solutions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Solutions_CreateOrUpdate",
        "tags": [
          "Solutions"
        ],
        "description": "Create or update a Solution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Solution' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "201": {
            "description": "Resource 'Solution' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Solution"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Solutions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Solutions_Update",
        "tags": [
          "Solutions"
        ],
        "description": "Update a Solution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Update_MaximumSet": {
            "$ref": "./examples/Solutions_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Solutions_Delete",
        "tags": [
          "Solutions"
        ],
        "description": "Delete a Solution Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Delete_MaximumSet": {
            "$ref": "./examples/Solutions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances": {
      "get": {
        "operationId": "Instances_ListBySolution",
        "tags": [
          "Instances"
        ],
        "description": "List Instance Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListBySolution_MaximumSet": {
            "$ref": "./examples/Instances_ListBySolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}": {
      "get": {
        "operationId": "Instances_Get",
        "tags": [
          "Instances"
        ],
        "description": "Get Instance Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Get_MaximumSet": {
            "$ref": "./examples/Instances_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Instances_CreateOrUpdate",
        "tags": [
          "Instances"
        ],
        "description": "Create or update Instance Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Instance' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "Resource 'Instance' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Instances_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Instances_Update",
        "tags": [
          "Instances"
        ],
        "description": "Update an Instance Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Update_MaximumSet": {
            "$ref": "./examples/Instances_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Instances_Delete",
        "tags": [
          "Instances"
        ],
        "description": "Delete Instance Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Delete_MaximumSet": {
            "$ref": "./examples/Instances_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories": {
      "get": {
        "operationId": "InstanceHistories_ListByInstance",
        "tags": [
          "InstanceHistories"
        ],
        "description": "List InstanceHistory Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceHistoryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InstanceHistories_ListByInstance_MaximumSet": {
            "$ref": "./examples/InstanceHistories_ListByInstance_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}": {
      "get": {
        "operationId": "InstanceHistories_Get",
        "tags": [
          "InstanceHistories"
        ],
        "description": "Get InstanceHistory Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of the instance",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "instanceHistoryName",
            "in": "path",
            "description": "Name of the instance history",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InstanceHistories_Get_MaximumSet": {
            "$ref": "./examples/InstanceHistories_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions": {
      "get": {
        "operationId": "SolutionVersions_ListBySolution",
        "tags": [
          "SolutionVersions"
        ],
        "description": "List Solution Version Resources",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionVersions_ListBySolution_MaximumSet": {
            "$ref": "./examples/SolutionVersions_ListBySolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}": {
      "get": {
        "operationId": "SolutionVersions_Get",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Get a Solution Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionVersions_Get_MaximumSet": {
            "$ref": "./examples/SolutionVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SolutionVersions_CreateOrUpdate",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Create or update a Solution Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "201": {
            "description": "Resource 'SolutionVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionVersions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/SolutionVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SolutionVersions_Update",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Update a Solution Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionVersions_Update_MaximumSet": {
            "$ref": "./examples/SolutionVersions_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SolutionVersions_Delete",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Delete a Solution Version Resource",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "Name of the solution",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "solutionVersionName",
            "in": "path",
            "description": "Name of the solution version",
            "required": true,
            "type": "string",
            "minLength": 7,
            "maxLength": 61,
            "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionVersions_Delete_MaximumSet": {
            "$ref": "./examples/SolutionVersions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/uninstallSolution": {
      "post": {
        "operationId": "Targets_UninstallSolution",
        "tags": [
          "Targets"
        ],
        "description": "Post request to uninstall",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UninstallSolutionParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_UninstallSolution_MaximumSet": {
            "$ref": "./examples/Targets_UninstallSolution_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/updateExternalValidationStatus": {
      "post": {
        "operationId": "Targets_UpdateExternalValidationStatus",
        "tags": [
          "Targets"
        ],
        "description": "Post request to update external validation status",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "Name of the target",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 61,
            "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExternalValidationStatusParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_UpdateExternalValidationStatus_MaximumSet": {
            "$ref": "./examples/Targets_UpdateExternalValidationStatus_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ActiveState": {
      "type": "string",
      "description": "Instance State",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "ActiveState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "Instance is active"
          },
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Instance is inactive"
          }
        ]
      }
    },
    "AvailableSolutionTemplateVersion": {
      "type": "object",
      "description": "Available Solution template Version along with latest revision",
      "properties": {
        "solutionTemplateVersion": {
          "type": "string",
          "description": "Solution template Version"
        },
        "latestConfigRevision": {
          "type": "string",
          "description": "Latest Configuration Revision"
        },
        "isConfigured": {
          "type": "boolean",
          "description": "Has this solution template version been configured"
        }
      },
      "required": [
        "solutionTemplateVersion",
        "latestConfigRevision",
        "isConfigured"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocationType",
          "description": "The type of the extended location."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ExtendedLocationType": {
      "type": "string",
      "description": "The supported ExtendedLocation types.",
      "enum": [
        "EdgeZone",
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "EdgeZone",
            "value": "EdgeZone",
            "description": "Azure Edge Zones location type"
          },
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "Azure Custom Locations type"
          }
        ]
      }
    },
    "Azure.ResourceManager.CommonTypes.TrackedResourceUpdate": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "BulkDeploySolutionParameter": {
      "type": "object",
      "description": "Bulk deploy solution parameter",
      "properties": {
        "targets": {
          "type": "array",
          "description": "Targets to which solution needs to be deployed",
          "items": {
            "$ref": "#/definitions/BulkDeployTargetDetails"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "targets"
      ]
    },
    "BulkDeployTargetDetails": {
      "type": "object",
      "description": "Bulk deploy target details",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target Solution Version",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets/Solutions/Versions"
              }
            ]
          }
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "BulkPublishSolutionParameter": {
      "type": "object",
      "description": "Bulk publish solution parameter",
      "properties": {
        "targets": {
          "type": "array",
          "description": "Targets to which solution needs to be published",
          "items": {
            "$ref": "#/definitions/BulkPublishTargetDetails"
          },
          "x-ms-identifiers": []
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "targets"
      ]
    },
    "BulkPublishTargetDetails": {
      "type": "object",
      "description": "Bulk publish target details",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Target",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Targets"
              }
            ]
          }
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Name of the solution instance",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        }
      },
      "required": [
        "targetId"
      ]
    },
    "Capability": {
      "type": "object",
      "description": "Capability, to match in Solution Templates & Targets",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Capability"
        },
        "description": {
          "type": "string",
          "description": "Description of Capability"
        },
        "state": {
          "$ref": "#/definitions/ResourceState",
          "description": "State of resource"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "ComponentStatus": {
      "type": "object",
      "description": "Component Status",
      "properties": {
        "name": {
          "type": "string",
          "description": "Component name"
        },
        "status": {
          "type": "string",
          "description": "Component status"
        }
      }
    },
    "ConfigTemplate": {
      "type": "object",
      "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigTemplateProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConfigTemplateListResult": {
      "type": "object",
      "description": "The response of a ConfigTemplate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigTemplate items on this page",
          "items": {
            "$ref": "#/definitions/ConfigTemplate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigTemplateProperties": {
      "type": "object",
      "description": "Config Template Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of config template"
        },
        "latestVersion": {
          "type": "string",
          "description": "Latest config template version",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "description"
      ]
    },
    "ConfigTemplatePropertiesUpdate": {
      "type": "object",
      "description": "Config Template Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of config template"
        }
      }
    },
    "ConfigTemplateUpdate": {
      "type": "object",
      "description": "Config Template Resource. Contains configuration expressions using the predefined expression language.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigTemplatePropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "ConfigTemplateVersion": {
      "type": "object",
      "description": "Config Template Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigTemplateVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigTemplateVersionListResult": {
      "type": "object",
      "description": "The response of a ConfigTemplateVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigTemplateVersion items on this page",
          "items": {
            "$ref": "#/definitions/ConfigTemplateVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigTemplateVersionProperties": {
      "type": "object",
      "description": "Config Template Version Properties",
      "properties": {
        "configurations": {
          "type": "string",
          "description": "Configuration values"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "configurations"
      ]
    },
    "ConfigTemplateVersionWithUpdateType": {
      "type": "object",
      "description": "Config Template Version With Update Type",
      "properties": {
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Update type"
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "configTemplateVersion": {
          "$ref": "#/definitions/ConfigTemplateVersion",
          "description": "Config Template Version"
        }
      },
      "required": [
        "configTemplateVersion"
      ]
    },
    "ConfigurationModel": {
      "type": "string",
      "description": "Available configuration models",
      "enum": [
        "Application",
        "Common"
      ],
      "x-ms-enum": {
        "name": "ConfigurationModel",
        "modelAsString": true,
        "values": [
          {
            "name": "Application",
            "value": "Application",
            "description": "Configuration model Application"
          },
          {
            "name": "Common",
            "value": "Common",
            "description": "Configuration model Common"
          }
        ]
      }
    },
    "ConfigurationType": {
      "type": "string",
      "description": "Available configuration types",
      "enum": [
        "Shared",
        "Hierarchy"
      ],
      "x-ms-enum": {
        "name": "ConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Shared",
            "value": "Shared",
            "description": "Configuration type Shared"
          },
          {
            "name": "Hierarchy",
            "value": "Hierarchy",
            "description": "Configuration type Hierarchy"
          }
        ]
      }
    },
    "Context": {
      "type": "object",
      "description": "Context Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContextProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ContextListResult": {
      "type": "object",
      "description": "The response of a Context list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Context items on this page",
          "items": {
            "$ref": "#/definitions/Context"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ContextProperties": {
      "type": "object",
      "description": "Context Properties",
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "List of Capabilities",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "x-ms-identifiers": []
        },
        "hierarchies": {
          "type": "array",
          "description": "List of Hierarchies",
          "items": {
            "$ref": "#/definitions/Hierarchy"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "capabilities",
        "hierarchies"
      ]
    },
    "ContextPropertiesUpdate": {
      "type": "object",
      "description": "Context Properties",
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "List of Capabilities",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "x-ms-identifiers": []
        },
        "hierarchies": {
          "type": "array",
          "description": "List of Hierarchies",
          "items": {
            "$ref": "#/definitions/Hierarchy"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ContextUpdate": {
      "type": "object",
      "description": "Context Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContextPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "DeployJobParameter": {
      "type": "object",
      "description": "Parameters for a deployment job.",
      "properties": {
        "parameter": {
          "$ref": "#/definitions/InstallSolutionParameter"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobParameterBase"
        }
      ],
      "x-ms-discriminator-value": "deploy"
    },
    "DeployJobStepStatistics": {
      "type": "object",
      "description": "Deploy statistics for a job step, including total, success, and failed counts.",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total count of items processed in this step"
        },
        "successCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of successful items in this step"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of failed items in this step"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobStepStatisticsBase"
        }
      ],
      "x-ms-discriminator-value": "deploy"
    },
    "DeploymentStatus": {
      "type": "object",
      "description": "Deployment Status",
      "properties": {
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The lastModified of the Status"
        },
        "deployed": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates if Instance is deployed"
        },
        "expectedRunningJobId": {
          "type": "integer",
          "format": "int32",
          "description": "The expected running job id"
        },
        "runningJobId": {
          "type": "integer",
          "format": "int32",
          "description": "The running job id"
        },
        "status": {
          "type": "string",
          "description": "Deployment status"
        },
        "statusDetails": {
          "type": "string",
          "description": "Status details"
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment Generation"
        },
        "targetStatuses": {
          "type": "array",
          "description": "Target resource statuses",
          "items": {
            "$ref": "#/definitions/TargetStatus"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Diagnostic": {
      "type": "object",
      "description": "A Diagnostic resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DiagnosticListResult": {
      "type": "object",
      "description": "The response of a Diagnostic list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Diagnostic items on this page",
          "items": {
            "$ref": "#/definitions/Diagnostic"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiagnosticProperties": {
      "type": "object",
      "description": "The properties of a Diagnostic resource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "DiagnosticUpdate": {
      "type": "object",
      "description": "A Diagnostic resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "DynamicSchema": {
      "type": "object",
      "description": "DynamicSchema Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicSchemaProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicSchemaListResult": {
      "type": "object",
      "description": "The response of a DynamicSchema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicSchema items on this page",
          "items": {
            "$ref": "#/definitions/DynamicSchema"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicSchemaProperties": {
      "type": "object",
      "description": "DynamicSchema Properties",
      "properties": {
        "configurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Type of configuration",
          "readOnly": true
        },
        "configurationModel": {
          "$ref": "#/definitions/ConfigurationModel",
          "description": "Type of configuration model",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      }
    },
    "DynamicSchemaUpdate": {
      "type": "object",
      "description": "DynamicSchema Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicSchemaProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicSchemaVersion": {
      "type": "object",
      "description": "Dynamic Schema Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicSchemaVersionListResult": {
      "type": "object",
      "description": "The response of a DynamicSchemaVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicSchemaVersion items on this page",
          "items": {
            "$ref": "#/definitions/DynamicSchemaVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicSchemaVersionUpdate": {
      "type": "object",
      "description": "Dynamic Schema Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaVersionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ErrorAction": {
      "type": "object",
      "description": "Error Action Properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Error action mode",
          "default": "stopOnAnyFailure",
          "enum": [
            "stopOnAnyFailure",
            "stopOnNFailures",
            "silentlyContinue"
          ],
          "x-ms-enum": {
            "name": "ErrorActionMode",
            "modelAsString": true,
            "values": [
              {
                "name": "stopOnAnyFailure",
                "value": "stopOnAnyFailure",
                "description": "Stop on any failure"
              },
              {
                "name": "stopOnNFailures",
                "value": "stopOnNFailures",
                "description": "Stop after N cumulative failures"
              },
              {
                "name": "silentlyContinue",
                "value": "silentlyContinue",
                "description": "Continue silently despite errors"
              }
            ]
          }
        },
        "maxToleratedFailures": {
          "type": "integer",
          "format": "int32",
          "description": "Max tolerated failures",
          "minimum": 0
        }
      }
    },
    "ErrorActionMode": {
      "type": "string",
      "description": "Error Action Mode",
      "enum": [
        "stopOnAnyFailure",
        "stopOnNFailures",
        "silentlyContinue"
      ],
      "x-ms-enum": {
        "name": "ErrorActionMode",
        "modelAsString": true,
        "values": [
          {
            "name": "stopOnAnyFailure",
            "value": "stopOnAnyFailure",
            "description": "Stop on any failure"
          },
          {
            "name": "stopOnNFailures",
            "value": "stopOnNFailures",
            "description": "Stop after N cumulative failures"
          },
          {
            "name": "silentlyContinue",
            "value": "silentlyContinue",
            "description": "Continue silently despite errors"
          }
        ]
      }
    },
    "Execution": {
      "type": "object",
      "description": "Execution Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExecutionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExecutionListResult": {
      "type": "object",
      "description": "The response of a Execution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Execution items on this page",
          "items": {
            "$ref": "#/definitions/Execution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExecutionProperties": {
      "type": "object",
      "description": "Execution Properties",
      "properties": {
        "workflowVersionId": {
          "type": "string",
          "description": "Workflow version of execution"
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "Status of Execution",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "workflowVersionId"
      ]
    },
    "ExecutionPropertiesUpdate": {
      "type": "object",
      "description": "Execution Properties",
      "properties": {
        "workflowVersionId": {
          "type": "string",
          "description": "Workflow version of execution"
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        }
      }
    },
    "ExecutionStatus": {
      "type": "object",
      "description": "Execution Status",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The lastModified timestamp of the Status"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment status"
        },
        "statusMessage": {
          "type": "string",
          "description": "status details"
        },
        "stageHistory": {
          "type": "array",
          "description": "target resource statuses",
          "items": {
            "$ref": "#/definitions/StageStatus"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ExecutionUpdate": {
      "type": "object",
      "description": "Execution Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExecutionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Hierarchy": {
      "type": "object",
      "description": "Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Hierarchy"
        },
        "description": {
          "type": "string",
          "description": "Description of Hierarchy"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "InstallSolutionParameter": {
      "type": "object",
      "description": "Install Solution Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version ARM Id"
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "Instance": {
      "type": "object",
      "description": "Instance Resource. Represents a deployment object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InstanceHistory": {
      "type": "object",
      "description": "InstanceHistory Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceHistoryProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InstanceHistoryListResult": {
      "type": "object",
      "description": "The response of a InstanceHistory list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InstanceHistory items on this page",
          "items": {
            "$ref": "#/definitions/InstanceHistory"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceHistoryProperties": {
      "type": "object",
      "description": "Instance History Properties",
      "properties": {
        "solutionVersion": {
          "$ref": "#/definitions/SolutionVersionSnapshot",
          "description": "Solution version of instance",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/TargetSnapshot",
          "description": "Target of instance",
          "readOnly": true
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "readOnly": true
        },
        "activeState": {
          "$ref": "#/definitions/ActiveState",
          "description": "State of instance"
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyProperties",
          "description": "Reconciliation policy of instance",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus",
          "description": "Deployment Status of instance",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "solutionVersion",
        "target"
      ]
    },
    "InstanceListResult": {
      "type": "object",
      "description": "The response of a Instance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instance items on this page",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceProperties": {
      "type": "object",
      "description": "Instance Properties",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution version of instance"
        },
        "targetId": {
          "type": "string",
          "description": "Target of instance"
        },
        "activeState": {
          "$ref": "#/definitions/ActiveState",
          "description": "State of instance"
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyProperties",
          "description": "Reconciliation policy of instance"
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus",
          "description": "Status of instance",
          "readOnly": true
        },
        "deploymentTimestampEpoch": {
          "type": "integer",
          "format": "int64",
          "description": "Deployment timestamp of instance",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "solutionVersionId",
        "targetId"
      ]
    },
    "InstancePropertiesUpdate": {
      "type": "object",
      "description": "Instance Properties",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution version of instance"
        },
        "targetId": {
          "type": "string",
          "description": "Target of instance"
        },
        "activeState": {
          "$ref": "#/definitions/ActiveState",
          "description": "State of instance"
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyPropertiesUpdate",
          "description": "Reconciliation policy of instance"
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of instance",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        }
      }
    },
    "InstanceUpdate": {
      "type": "object",
      "description": "Instance Resource. Represents a deployment object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstancePropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Job": {
      "type": "object",
      "description": "Job extension resource for tracking job execution and substatuses.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobListResult": {
      "type": "object",
      "description": "The response of a Job list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Job items on this page",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobParameterBase": {
      "type": "object",
      "description": "Base Job Parameter",
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "description": "Job type discriminator value"
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ]
    },
    "JobProperties": {
      "type": "object",
      "description": "Properties of a Job resource, including type, status, parameters, steps, and error details.",
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "description": "The type of job."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the job (ISO8601)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the job (ISO8601)."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "Status of the job."
        },
        "jobParameter": {
          "$ref": "#/definitions/JobParameterBase",
          "description": "Parameters for the job."
        },
        "correlationId": {
          "type": "string",
          "description": "Correlation ID for tracking."
        },
        "steps": {
          "type": "array",
          "description": "Steps and substatuses for the job.",
          "items": {
            "$ref": "#/definitions/JobStep"
          }
        },
        "triggeredBy": {
          "type": "string",
          "description": "The OID or identity that triggered the job."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        }
      },
      "required": [
        "jobType",
        "status"
      ]
    },
    "JobStatus": {
      "type": "string",
      "description": "Status of a job or job step.",
      "enum": [
        "NotStarted",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The job or step is not started."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The job or step is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The job or step succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The job or step failed."
          }
        ]
      },
      "readOnly": true
    },
    "JobStep": {
      "type": "object",
      "description": "Job Step",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the step"
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "Status of the step"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the step (ISO8601)"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the step (ISO8601)"
        },
        "message": {
          "type": "string",
          "description": "Message for the step"
        },
        "statistics": {
          "$ref": "#/definitions/JobStepStatisticsBase",
          "description": "Statistics for the step"
        },
        "steps": {
          "type": "array",
          "description": "Nested substeps for this step",
          "items": {
            "$ref": "#/definitions/JobStep"
          }
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "status"
      ]
    },
    "JobStepStatistics": {
      "$ref": "#/definitions/DeployJobStepStatistics",
      "x-nullable": false
    },
    "JobStepStatisticsBase": {
      "type": "object",
      "description": "Base Job Step Statistics",
      "properties": {
        "statisticsType": {
          "$ref": "#/definitions/JobType",
          "description": "Statistics type discriminator value"
        }
      },
      "discriminator": "statisticsType",
      "required": [
        "statisticsType"
      ]
    },
    "JobType": {
      "type": "string",
      "description": "JobType for the job. Supports extensibility via string values.",
      "enum": [
        "deploy",
        "staging",
        "externalValidation"
      ],
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true,
        "values": [
          {
            "name": "Deploy",
            "value": "deploy",
            "description": "A deployment job."
          },
          {
            "name": "Staging",
            "value": "staging",
            "description": "A staging job."
          },
          {
            "name": "ExternalValidation",
            "value": "externalValidation",
            "description": "A validation job."
          }
        ]
      }
    },
    "OrchestratorType": {
      "type": "string",
      "description": "Available Orchestrator types",
      "enum": [
        "TO"
      ],
      "x-ms-enum": {
        "name": "OrchestratorType",
        "modelAsString": true,
        "values": [
          {
            "name": "TO",
            "value": "TO",
            "description": "Default type"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Initialized",
        "InProgress",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Initialized",
            "value": "Initialized",
            "description": "Resource Provisioning is initialized"
          },
          {
            "name": "Inprogress",
            "value": "InProgress",
            "description": "Resource Provisioning is in progress"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource Provisioning is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "ReconciliationPolicyProperties": {
      "type": "object",
      "description": "Defines a ReconciliationPolicy",
      "properties": {
        "state": {
          "$ref": "#/definitions/ReconciliationState",
          "description": "The state of the ReconciliationPolicy"
        },
        "interval": {
          "type": "string",
          "description": "Policy interval"
        }
      },
      "required": [
        "state",
        "interval"
      ]
    },
    "ReconciliationPolicyPropertiesUpdate": {
      "type": "object",
      "description": "Defines a ReconciliationPolicy",
      "properties": {
        "state": {
          "$ref": "#/definitions/ReconciliationState",
          "description": "The state of the ReconciliationPolicy"
        },
        "interval": {
          "type": "string",
          "description": "Policy interval"
        }
      }
    },
    "ReconciliationState": {
      "type": "string",
      "description": "Defines a state of the reconciliation policy.",
      "enum": [
        "inactive",
        "active"
      ],
      "x-ms-enum": {
        "name": "ReconciliationState",
        "modelAsString": true,
        "values": [
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Reconciliation is inactive"
          },
          {
            "name": "active",
            "value": "active",
            "description": "Reconciliation is active"
          }
        ]
      }
    },
    "RemoveRevisionParameter": {
      "type": "object",
      "description": "Install Solution Parameter",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template ARM Id"
        },
        "solutionVersion": {
          "type": "string",
          "description": "Solution Version Name"
        }
      },
      "required": [
        "solutionTemplateId",
        "solutionVersion"
      ]
    },
    "RemoveVersionResponse": {
      "type": "object",
      "description": "Remove Version response",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status for remove version response"
        }
      },
      "required": [
        "status"
      ]
    },
    "ResolvedConfiguration": {
      "type": "object",
      "description": "Resolved Configuration",
      "properties": {
        "configuration": {
          "type": "string",
          "description": "Resolved Configuration as string"
        }
      },
      "required": [
        "configuration"
      ]
    },
    "ResourceState": {
      "type": "string",
      "description": "Resource Type State",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "Resource is active"
          },
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Resource is inactive"
          }
        ]
      }
    },
    "Schema": {
      "type": "object",
      "description": "Schema Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SchemaListResult": {
      "type": "object",
      "description": "The response of a Schema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schema items on this page",
          "items": {
            "$ref": "#/definitions/Schema"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaProperties": {
      "type": "object",
      "description": "Schema Properties",
      "properties": {
        "currentVersion": {
          "type": "string",
          "description": "Current Version of schema",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      }
    },
    "SchemaReference": {
      "type": "object",
      "description": "Schema Reference Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaReferenceProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaReferenceListResult": {
      "type": "object",
      "description": "The response of a SchemaReference list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaReference items on this page",
          "items": {
            "$ref": "#/definitions/SchemaReference"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaReferenceProperties": {
      "type": "object",
      "description": "Schema Reference Properties",
      "properties": {
        "schemaId": {
          "type": "string",
          "description": "Schema Id of schema reference"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "schemaId"
      ]
    },
    "SchemaUpdate": {
      "type": "object",
      "description": "Schema Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "SchemaVersion": {
      "type": "object",
      "description": "Schema Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaVersionListResult": {
      "type": "object",
      "description": "The response of a SchemaVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaVersion items on this page",
          "items": {
            "$ref": "#/definitions/SchemaVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaVersionProperties": {
      "type": "object",
      "description": "Schema Version Properties",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of schema version"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaVersionPropertiesUpdate": {
      "type": "object",
      "description": "Schema Version Properties",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of schema version"
        }
      }
    },
    "SchemaVersionUpdate": {
      "type": "object",
      "description": "Schema Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaVersionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaVersionWithUpdateType": {
      "type": "object",
      "description": "Schema Version With Update Type",
      "properties": {
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Update type"
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "schemaVersion": {
          "$ref": "#/definitions/SchemaVersion",
          "description": "Schema Version"
        }
      },
      "required": [
        "schemaVersion"
      ]
    },
    "SiteReference": {
      "type": "object",
      "description": "Site Reference Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteReferenceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SiteReferenceListResult": {
      "type": "object",
      "description": "The response of a SiteReference list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SiteReference items on this page",
          "items": {
            "$ref": "#/definitions/SiteReference"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SiteReferenceProperties": {
      "type": "object",
      "description": "Site Reference Properties",
      "properties": {
        "siteId": {
          "type": "string",
          "description": "Azure Resource ID for Site"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State",
          "readOnly": true
        }
      },
      "required": [
        "siteId"
      ]
    },
    "SiteReferencePropertiesUpdate": {
      "type": "object",
      "description": "Site Reference Properties",
      "properties": {
        "siteId": {
          "type": "string",
          "description": "Azure Resource ID for Site"
        }
      }
    },
    "SiteReferenceUpdate": {
      "type": "object",
      "description": "Site Reference Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteReferencePropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Solution": {
      "type": "object",
      "description": "Solution Resource attached to a Target",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionDependency": {
      "type": "object",
      "description": "Solution Dependency Context",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "maxLength": 24,
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version Id"
        },
        "targetId": {
          "type": "string",
          "description": "Target Id"
        },
        "dependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependency"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "solutionVersionId",
        "solutionTemplateVersionId",
        "targetId"
      ]
    },
    "SolutionDependencyParameter": {
      "type": "object",
      "description": "Solution Dependency Context",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template Id"
        },
        "solutionTemplateVersion": {
          "type": "string",
          "description": "Solution Template Version"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "maxLength": 24,
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "targetId": {
          "type": "string",
          "description": "Target Id"
        },
        "dependencies": {
          "type": "array",
          "description": "Solution dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionListResult": {
      "type": "object",
      "description": "The response of a Solution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Solution items on this page",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionProperties": {
      "type": "object",
      "description": "Solution Properties",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution template Id",
          "readOnly": true
        },
        "availableSolutionTemplateVersions": {
          "type": "array",
          "description": "List of latest revisions for available solution template versions",
          "items": {
            "$ref": "#/definitions/AvailableSolutionTemplateVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      }
    },
    "SolutionTemplate": {
      "type": "object",
      "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionTemplateProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SolutionTemplateListResult": {
      "type": "object",
      "description": "The response of a SolutionTemplate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionTemplate items on this page",
          "items": {
            "$ref": "#/definitions/SolutionTemplate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionTemplateParameter": {
      "type": "object",
      "description": "Solution Template Parameter",
      "properties": {
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version ARM Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$"
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution Dependencies",
          "items": {
            "$ref": "#/definitions/SolutionDependencyParameter"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "solutionTemplateVersionId"
      ]
    },
    "SolutionTemplateProperties": {
      "type": "object",
      "description": "Solution Template Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Solution template"
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "latestVersion": {
          "type": "string",
          "description": "Latest solution template version",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/ResourceState",
          "description": "State of resource"
        },
        "enableExternalValidation": {
          "type": "boolean",
          "description": "Flag to enable external validation"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "description",
        "capabilities"
      ]
    },
    "SolutionTemplatePropertiesUpdate": {
      "type": "object",
      "description": "Solution Template Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Solution template"
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/ResourceState",
          "description": "State of resource"
        },
        "enableExternalValidation": {
          "type": "boolean",
          "description": "Flag to enable external validation"
        }
      }
    },
    "SolutionTemplateUpdate": {
      "type": "object",
      "description": "Solution Template Resource. Contains capabilities and operations for creating versions.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionTemplatePropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "SolutionTemplateVersion": {
      "type": "object",
      "description": "Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionTemplateVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionTemplateVersionListResult": {
      "type": "object",
      "description": "The response of a SolutionTemplateVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionTemplateVersion items on this page",
          "items": {
            "$ref": "#/definitions/SolutionTemplateVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionTemplateVersionProperties": {
      "type": "object",
      "description": "Solution Template Version Properties",
      "properties": {
        "configurations": {
          "type": "string",
          "description": "Config expressions for this solution version"
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        },
        "orchestratorType": {
          "$ref": "#/definitions/OrchestratorType",
          "description": "Orchestrator type"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "configurations",
        "specification"
      ]
    },
    "SolutionTemplateVersionWithUpdateType": {
      "type": "object",
      "description": "Solution Template Version With Update Type",
      "properties": {
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Update type"
        },
        "version": {
          "type": "string",
          "description": "Version to create",
          "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        },
        "solutionTemplateVersion": {
          "$ref": "#/definitions/SolutionTemplateVersion",
          "description": "Solution Template Version"
        }
      },
      "required": [
        "solutionTemplateVersion"
      ]
    },
    "SolutionUpdate": {
      "type": "object",
      "description": "Solution Resource attached to a Target",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionVersion": {
      "type": "object",
      "description": "Solution Version Resource. It has the resolved configuration along with edge specification.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionVersionListResult": {
      "type": "object",
      "description": "The response of a SolutionVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionVersion items on this page",
          "items": {
            "$ref": "#/definitions/SolutionVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionVersionParameter": {
      "type": "object",
      "description": "Solution Version Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version ARM Id"
        }
      },
      "required": [
        "solutionVersionId"
      ]
    },
    "SolutionVersionProperties": {
      "type": "object",
      "description": "Solution Version Properties",
      "properties": {
        "solutionTemplateVersionId": {
          "type": "string",
          "description": "Solution Template Version Id",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Revision number of resolved config for this solution version",
          "readOnly": true
        },
        "targetDisplayName": {
          "type": "string",
          "description": "Name of applicable target's display name",
          "readOnly": true
        },
        "configuration": {
          "type": "string",
          "description": "Resolved configuration values",
          "readOnly": true
        },
        "targetLevelConfiguration": {
          "type": "string",
          "description": "Configuration on the line level across all solution template versions",
          "readOnly": true
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        },
        "reviewId": {
          "type": "string",
          "description": "Review id of resolved config for this solution version",
          "readOnly": true
        },
        "externalValidationId": {
          "type": "string",
          "description": "External validation id",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/State",
          "description": "State of solution instance",
          "readOnly": true
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution instance name",
          "pattern": "^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$",
          "readOnly": true
        },
        "solutionDependencies": {
          "type": "array",
          "description": "Solution Dependency Context",
          "items": {
            "$ref": "#/definitions/SolutionDependency"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there",
          "readOnly": true
        },
        "latestActionTrackingUri": {
          "type": "string",
          "description": "The URI for tracking the latest action performed on this solution version.",
          "readOnly": true
        },
        "actionType": {
          "$ref": "#/definitions/JobType",
          "description": "The type of the latest action performed on this solution version.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "specification"
      ]
    },
    "SolutionVersionPropertiesUpdate": {
      "type": "object",
      "description": "Solution Version Properties",
      "properties": {
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        }
      }
    },
    "SolutionVersionSnapshot": {
      "type": "object",
      "description": "Solution Version Snapshot",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "format": "arm-id",
          "description": "Solution version of instance",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets/solutions/versions"
              }
            ]
          }
        },
        "specification": {
          "type": "object",
          "description": "App components spec",
          "additionalProperties": {}
        }
      }
    },
    "SolutionVersionUpdate": {
      "type": "object",
      "description": "Solution Version Resource. It has the resolved configuration along with edge specification.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionVersionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StageSpec": {
      "type": "object",
      "description": "Stage Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Stage"
        },
        "specification": {
          "type": "object",
          "description": "Stage specification",
          "additionalProperties": {}
        },
        "tasks": {
          "type": "array",
          "description": "List of tasks in the stage",
          "items": {
            "$ref": "#/definitions/TaskSpec"
          }
        },
        "taskOption": {
          "$ref": "#/definitions/TaskOption",
          "description": "Task option for the stage"
        }
      },
      "required": [
        "name"
      ]
    },
    "StageStatus": {
      "type": "object",
      "description": "Result of Stage execution",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Deployment status"
        },
        "statusMessage": {
          "type": "string",
          "description": "Status message"
        },
        "stage": {
          "type": "string",
          "description": "Current stage"
        },
        "nextstage": {
          "type": "string",
          "description": "Next stage"
        },
        "errorMessage": {
          "type": "string",
          "description": "Error message"
        },
        "isActive": {
          "$ref": "#/definitions/ActiveState",
          "description": "whether this stage is active or inactive"
        },
        "inputs": {
          "type": "object",
          "description": "The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage",
          "additionalProperties": {}
        },
        "outputs": {
          "type": "object",
          "description": "The outputs of the StageHistory, it is different as the different input stages.",
          "additionalProperties": {}
        }
      }
    },
    "State": {
      "type": "string",
      "description": "Solution Instance State",
      "enum": [
        "InReview",
        "UpgradeInReview",
        "ReadyToDeploy",
        "ReadyToUpgrade",
        "Deploying",
        "Deployed",
        "Failed",
        "Undeployed",
        "PendingExternalValidation",
        "ExternalValidationFailed",
        "Staging"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "InReview",
            "value": "InReview",
            "description": "Solution Instance is in review"
          },
          {
            "name": "UpgradeInReview",
            "value": "UpgradeInReview",
            "description": "Solution Instance upgrade is in review"
          },
          {
            "name": "ReadyToDeploy",
            "value": "ReadyToDeploy",
            "description": "Solution Instance is ready to deploy"
          },
          {
            "name": "ReadyToUpgrade",
            "value": "ReadyToUpgrade",
            "description": "Solution Instance is ready to upgrade"
          },
          {
            "name": "Deploying",
            "value": "Deploying",
            "description": "Solution Instance is deploying"
          },
          {
            "name": "Deployed",
            "value": "Deployed",
            "description": "Solution Instance is deployed"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Solution Instance failed to deploy"
          },
          {
            "name": "Undeployed",
            "value": "Undeployed",
            "description": "Solution Instance is undeployed"
          },
          {
            "name": "PendingExternalValidation",
            "value": "PendingExternalValidation",
            "description": "Solution Instance is pending external validation"
          },
          {
            "name": "ExternalValidationFailed",
            "value": "ExternalValidationFailed",
            "description": "Solution Instance failed external validation"
          },
          {
            "name": "Staging",
            "value": "Staging",
            "description": "Solution Instance is staging the images"
          }
        ]
      }
    },
    "Target": {
      "type": "object",
      "description": "Target Resource. Represents a resource to be deployed on the edge.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TargetProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TargetListResult": {
      "type": "object",
      "description": "The response of a Target list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Target items on this page",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TargetProperties": {
      "type": "object",
      "description": "Target Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of target"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of target"
        },
        "contextId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Context",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/contexts"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "hierarchyLevel": {
          "type": "string",
          "description": "Hierarchy Level"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus",
          "description": "Status of target",
          "readOnly": true
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "state": {
          "$ref": "#/definitions/ResourceState",
          "description": "State of resource"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "description",
        "displayName",
        "contextId",
        "targetSpecification",
        "capabilities",
        "hierarchyLevel"
      ]
    },
    "TargetPropertiesUpdate": {
      "type": "object",
      "description": "Target Properties",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of target"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of target"
        },
        "contextId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Context",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/contexts"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "capabilities": {
          "type": "array",
          "description": "List of capabilities",
          "items": {
            "type": "string"
          }
        },
        "hierarchyLevel": {
          "type": "string",
          "description": "Hierarchy Level"
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "state": {
          "$ref": "#/definitions/ResourceState",
          "description": "State of resource"
        }
      }
    },
    "TargetSnapshot": {
      "type": "object",
      "description": "Target Snapshot",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Target of instance",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets"
              }
            ]
          }
        },
        "targetSpecification": {
          "type": "object",
          "description": "target spec",
          "additionalProperties": {}
        },
        "solutionScope": {
          "type": "string",
          "description": "Scope of the target resource"
        }
      }
    },
    "TargetStatus": {
      "type": "object",
      "description": "Target Status",
      "properties": {
        "name": {
          "type": "string",
          "description": "Target name"
        },
        "status": {
          "type": "string",
          "description": "Target status"
        },
        "componentStatuses": {
          "type": "array",
          "description": "Component statuses",
          "items": {
            "$ref": "#/definitions/ComponentStatus"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TargetUpdate": {
      "type": "object",
      "description": "Target Resource. Represents a resource to be deployed on the edge.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TargetPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "TaskOption": {
      "type": "object",
      "description": "Task Option Properties",
      "properties": {
        "concurrency": {
          "type": "integer",
          "format": "int32",
          "description": "Parallel worker numbers of the tasks",
          "default": 1,
          "minimum": 1,
          "maximum": 8
        },
        "errorAction": {
          "$ref": "#/definitions/ErrorAction",
          "description": "Error action for the tasks"
        }
      }
    },
    "TaskSpec": {
      "type": "object",
      "description": "Task Spec",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Task"
        },
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Target ARM id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/targets"
              }
            ]
          }
        },
        "specification": {
          "type": "object",
          "description": "Task specification",
          "additionalProperties": {}
        }
      },
      "required": [
        "name",
        "specification"
      ]
    },
    "UninstallSolutionParameter": {
      "type": "object",
      "description": "Uninstall Solution Parameter",
      "properties": {
        "solutionTemplateId": {
          "type": "string",
          "description": "Solution Template ARM Id"
        },
        "solutionInstanceName": {
          "type": "string",
          "description": "Solution Instance Name"
        }
      },
      "required": [
        "solutionTemplateId"
      ]
    },
    "UpdateExternalValidationStatusParameter": {
      "type": "object",
      "description": "Update External Validation Status Parameter",
      "properties": {
        "solutionVersionId": {
          "type": "string",
          "description": "Solution Version Id"
        },
        "errorDetails": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "Error Details if any failure is there"
        },
        "externalValidationId": {
          "type": "string",
          "description": "External validation id"
        },
        "validationStatus": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "Validation Status of external validation"
        }
      },
      "required": [
        "solutionVersionId",
        "externalValidationId",
        "validationStatus"
      ]
    },
    "UpdateType": {
      "type": "string",
      "description": "Denotes which part of the version number will be updated",
      "enum": [
        "Major",
        "Minor",
        "Patch"
      ],
      "x-ms-enum": {
        "name": "UpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Major",
            "value": "Major",
            "description": "Major version"
          },
          {
            "name": "Minor",
            "value": "Minor",
            "description": "Minor version"
          },
          {
            "name": "Patch",
            "value": "Patch",
            "description": "Patch version"
          }
        ]
      }
    },
    "ValidationStatus": {
      "type": "string",
      "description": "Solution Instance Validation Status",
      "enum": [
        "Valid",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Valid",
            "value": "Valid",
            "description": "Solution Instance is valid"
          },
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Solution Instance is invalid"
          }
        ]
      }
    },
    "VersionParameter": {
      "type": "object",
      "description": "Version Parameter",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the Resource"
        }
      },
      "required": [
        "version"
      ]
    },
    "VersionUpdateQueryParameters": {
      "type": "object",
      "description": "Query parameters for updating Version",
      "properties": {
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "The type of update"
        }
      },
      "required": [
        "updateType"
      ]
    },
    "Workflow": {
      "type": "object",
      "description": "Workflow Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowListResult": {
      "type": "object",
      "description": "The response of a Workflow list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workflow items on this page",
          "items": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "Workflow Properties",
      "properties": {
        "workflowTemplateId": {
          "type": "string",
          "description": "Workflow template Id",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      }
    },
    "WorkflowUpdate": {
      "type": "object",
      "description": "Workflow Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowVersion": {
      "type": "object",
      "description": "Workflow Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowVersionProperties",
          "description": "The resource-specific properties for this resource."
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowVersionListResult": {
      "type": "object",
      "description": "The response of a WorkflowVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowVersion items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowVersionProperties": {
      "type": "object",
      "description": "Workflow Version Properties",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Revision number of resolved config for this workflow version",
          "readOnly": true
        },
        "configuration": {
          "type": "string",
          "description": "Resolved configuration values",
          "readOnly": true
        },
        "stageSpec": {
          "type": "array",
          "description": "A list of stage specs",
          "items": {
            "$ref": "#/definitions/StageSpec"
          },
          "x-ms-identifiers": []
        },
        "reviewId": {
          "type": "string",
          "description": "Review id of resolved config for this workflow version",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/State",
          "description": "State of workflow version",
          "readOnly": true
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "stageSpec"
      ]
    },
    "WorkflowVersionPropertiesUpdate": {
      "type": "object",
      "description": "Workflow Version Properties",
      "properties": {
        "stageSpec": {
          "type": "array",
          "description": "A list of stage specs",
          "items": {
            "$ref": "#/definitions/StageSpec"
          },
          "x-ms-identifiers": []
        },
        "specification": {
          "type": "object",
          "description": "Execution specification",
          "additionalProperties": {}
        }
      }
    },
    "WorkflowVersionUpdate": {
      "type": "object",
      "description": "Workflow Version Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowVersionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ForceDeleteParameter": {
      "name": "forceDelete",
      "in": "query",
      "description": "Force delete",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    }
  }
}
