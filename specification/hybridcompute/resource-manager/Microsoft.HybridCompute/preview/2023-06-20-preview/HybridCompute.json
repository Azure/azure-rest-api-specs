{
  "swagger": "2.0",
  "info": {
    "title": "HybridComputeManagementClient",
    "description": "The Hybrid Compute Management Client.",
    "version": "2023-06-20-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/validateLicense": {
      "post": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ValidateLicense",
        "description": "The operation to validate a license.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/License"
            },
            "description": "Parameters supplied to the license validation operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "$ref": "#/definitions/License"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Validate a License": {
            "$ref": "./examples/license/License_ValidateLicense.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/licenses/{licenseName}": {
      "put": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_CreateOrUpdate",
        "description": "The operation to create or update a license.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/licenseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/License"
            },
            "description": "Parameters supplied to the Create license operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "$ref": "#/definitions/License"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create or Update a License": {
            "$ref": "./examples/license/License_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Update",
        "description": "The operation to update a license.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/licenseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseUpdate"
            },
            "description": "Parameters supplied to the Update license operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/License"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a License": {
            "$ref": "./examples/license/License_Update.json"
          }
        }
      },
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Get",
        "description": "Retrieves information about the view of a license.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/licenseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/License"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get License": {
            "$ref": "./examples/license/License_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_Delete",
        "description": "The operation to delete a license.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/licenseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a License": {
            "$ref": "./examples/license/License_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/licenses": {
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ListByResourceGroup",
        "description": "The operation to get all licenses of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicensesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GET all Machine Extensions": {
            "$ref": "./examples/license/License_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/licenses": {
      "get": {
        "tags": [
          "licenses"
        ],
        "operationId": "Licenses_ListBySubscription",
        "description": "The operation to get all licenses of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicensesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Licenses by Subscription": {
            "$ref": "./examples/license/License_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}": {
      "put": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_CreateOrUpdate",
        "description": "The operation to create or update a hybrid machine. Please note some properties can be set only during machine creation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Machine"
            },
            "description": "Parameters supplied to the Create hybrid machine operation."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine": {
            "$ref": "./examples/machine/Machines_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Update",
        "description": "The operation to update a hybrid machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineUpdate"
            },
            "description": "Parameters supplied to the Update hybrid machine operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a Machine": {
            "$ref": "./examples/machine/Machines_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Delete",
        "description": "The operation to delete a hybrid machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a Machine": {
            "$ref": "./examples/machine/Machines_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_Get",
        "description": "Retrieves information about the model view or the instance view of a hybrid machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation.",
            "enum": [
              "instanceView"
            ],
            "x-ms-enum": {
              "name": "InstanceViewTypes",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Machine": {
            "$ref": "./examples/machine/Machines_Get.json"
          },
          "Get Machine with License Profile Instance View": {
            "$ref": "./examples/machine/Machines_Get_LicenseProfileInstanceView.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles/{licenseProfileName}": {
      "put": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_CreateOrUpdate",
        "description": "The operation to create or update a license profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/machineNameParameter"
          },
          {
            "$ref": "#/parameters/licenseProfileNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            },
            "description": "Parameters supplied to the Create license profile operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Resource",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            },
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create or Update a License Profile": {
            "$ref": "./examples/licenseProfile/LicenseProfile_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Update",
        "description": "The operation to update a license profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/machineNameParameter"
          },
          {
            "$ref": "#/parameters/licenseProfileNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LicenseProfileUpdate"
            },
            "description": "Parameters supplied to the Update license profile operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a License Profile": {
            "$ref": "./examples/licenseProfile/LicenseProfile_Update.json"
          }
        }
      },
      "get": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Get",
        "description": "Retrieves information about the view of a license profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/machineNameParameter"
          },
          {
            "$ref": "#/parameters/licenseProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get License Profile": {
            "$ref": "./examples/licenseProfile/LicenseProfile_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_Delete",
        "description": "The operation to delete a license profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/machineNameParameter"
          },
          {
            "$ref": "#/parameters/licenseProfileNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a License Profile": {
            "$ref": "./examples/licenseProfile/LicenseProfile_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/licenseProfiles": {
      "get": {
        "tags": [
          "licenseProfiles"
        ],
        "operationId": "LicenseProfiles_List",
        "description": "The operation to get all license profiles of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseProfilesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List all License Profiles": {
            "$ref": "./examples/licenseProfile/LicenseProfile_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/assessPatches": {
      "post": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_AssessPatches",
        "x-ms-examples": {
          "Assess patch state of a machine.": {
            "$ref": "./examples/machine/Machine_AssessPatches.json"
          }
        },
        "description": "The operation to assess patches on a hybrid machine identity in Azure.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineAssessPatchesResult"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{name}/installPatches": {
      "post": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_InstallPatches",
        "description": "The operation to install patches on a hybrid machine identity in Azure.",
        "x-ms-examples": {
          "Install patch state of a machine.": {
            "$ref": "./examples/machine/Machine_InstallPatches.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid machine."
          },
          {
            "name": "installPatchesInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineInstallPatchesParameters"
            },
            "description": "Input for InstallPatches as directly received by the API"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineInstallPatchesResult"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_ListByResourceGroup",
        "description": "Lists all the hybrid machines in the specified resource group. Use the nextLink property in the response to get the next page of hybrid machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Machines by resource group": {
            "$ref": "./examples/machine/Machines_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "operationId": "Machines_ListBySubscription",
        "description": "Lists all the hybrid machines in the specified subscription. Use the nextLink property in the response to get the next page of hybrid machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Machines by resource group": {
            "$ref": "./examples/machine/Machines_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/extensions/{extensionName}": {
      "put": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_CreateOrUpdate",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension": {
            "$ref": "./examples/extension/Extension_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Update",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtensionUpdate"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension": {
            "$ref": "./examples/extension/Extension_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Delete",
        "description": "The operation to delete the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine where the extension should be deleted."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a Machine Extension": {
            "$ref": "./examples/extension/Extension_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Get",
        "description": "The operation to get the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET Machine Extension": {
            "$ref": "./examples/extension/Extension_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/extensions": {
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_List",
        "description": "The operation to get all extensions of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GET all Machine Extensions - List": {
            "$ref": "./examples/extension/Extension_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/upgradeExtensions": {
      "post": {
        "tags": [
          "MachineExtensions Upgrade"
        ],
        "operationId": "UpgradeExtensions",
        "description": "The operation to Upgrade Machine Extensions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "name": "extensionUpgradeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtensionUpgrade"
            },
            "description": "Parameters supplied to the Upgrade Extensions operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              },
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Upgrade Machine Extensions": {
            "$ref": "./examples/extension/Extensions_Upgrade.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions/{version}": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadata_Get",
        "description": "Gets an Extension Metadata based on location, publisher, extensionType and version",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the Extension being received."
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The version of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionValue"
            }
          },
          "default": {
            "description": "Error in retrieving an extension metadata",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET an extensions metadata": {
            "$ref": "./examples/extension/ExtensionMetadata_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/locations/{location}/publishers/{publisher}/extensionTypes/{extensionType}/versions": {
      "get": {
        "tags": [
          "extensions"
        ],
        "operationId": "ExtensionMetadata_List",
        "description": "Gets all Extension versions based on location, publisher, extensionType",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the Extension being received."
          },
          {
            "name": "publisher",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The publisher of the Extension being received."
          },
          {
            "name": "extensionType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The extensionType of the Extension being received."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionValueListResult"
            }
          },
          "default": {
            "description": "Error in retrieving extension list",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "GET a list of extensions": {
            "$ref": "./examples/extension/ExtensionMetadata_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of hybrid compute operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Hybrid Compute Provider Operations": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/networkProfile": {
      "get": {
        "tags": [
          "MachineNetworkProfile"
        ],
        "operationId": "NetworkProfile_Get",
        "description": "The operation to get network information of hybrid machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET Network Profile": {
            "$ref": "./examples/NetworkProfile_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/hybridIdentityMetadata/{metadataName}": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "x-ms-examples": {
          "GetHybridIdentityMetadata": {
            "$ref": "./examples/HybridIdentityMetadata_Get.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_ListByMachines",
        "summary": "Implements GET HybridIdentityMetadata in a machine.",
        "description": "Returns the list of HybridIdentityMetadata of the given machine.",
        "x-ms-examples": {
          "HybridIdentityMetadataListByVirtualMachines": {
            "$ref": "./examples/HybridIdentityMetadata_ListByVirtualMachines.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9-_\\.]",
            "minLength": 1,
            "maxLength": 54,
            "description": "The name of the hybrid machine."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.HybridCompute/osType/{osType}/agentVersions": {
      "get": {
        "tags": [
          "AgentVersions"
        ],
        "operationId": "AgentVersion_List",
        "description": "Gets all Agent Versions along with the download link currently present.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "osType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the os type."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentVersionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET Agent Versions": {
            "$ref": "./examples/AgentVersions_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.HybridCompute/osType/{osType}/agentVersions/{version}": {
      "get": {
        "tags": [
          "AgentVersions"
        ],
        "operationId": "AgentVersion_Get",
        "description": "Gets an Agent Version along with the download link currently present.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "osType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the os type"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Defines the agent version. To get latest, use latest or else a specific agent version."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GET Agent Versions": {
            "$ref": "./examples/AgentVersion_GetLatest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ExtensionValueListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ExtensionValue"
          },
          "description": "The list of extension metadata",
          "x-ms-identifiers": []
        }
      },
      "description": "The List Extension Metadata response."
    },
    "ExtensionValue": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExtensionValueProperties",
          "description": "The single extension based on search criteria"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Describes a Extension Metadata"
    },
    "ExtensionValueProperties": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of the Extension being received."
        },
        "extensionType": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the Extension being received."
        },
        "publisher": {
          "type": "string",
          "readOnly": true,
          "description": "The publisher of the Extension being received."
        }
      },
      "description": "Describes Extension Metadata properties"
    },
    "OperationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OperationValue"
          },
          "description": "The list of compute operations",
          "x-ms-identifiers": []
        }
      },
      "description": "The List Compute Operation operation response."
    },
    "OperationValue": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The origin of the compute operation."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the compute operation."
        },
        "display": {
          "$ref": "#/definitions/OperationValueDisplay",
          "description": "Display properties"
        },
        "isDataAction": {
          "type": "boolean",
          "readOnly": true,
          "description": "This property indicates if the operation is an action or a data action"
        }
      },
      "description": "Describes the properties of a Compute Operation value."
    },
    "OperationValueDisplay": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the compute operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the resource the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provider for the operation."
        }
      },
      "description": "Describes the properties of a Hybrid Compute Operation Value Display."
    },
    "PatchSettings": {
      "type": "object",
      "properties": {
        "assessmentMode": {
          "type": "string",
          "description": "Specifies the assessment mode.",
          "enum": [
            "ImageDefault",
            "AutomaticByPlatform"
          ],
          "x-ms-enum": {
            "name": "AssessmentModeTypes",
            "modelAsString": true
          }
        },
        "patchMode": {
          "type": "string",
          "description": "Specifies the patch mode.",
          "enum": [
            "ImageDefault",
            "AutomaticByPlatform",
            "AutomaticByOS",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "PatchModeTypes",
            "modelAsString": true
          }
        }
      },
      "description": "Specifies the patch settings."
    },
    "AgentConfiguration": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "proxyUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the URL of the proxy to be used."
        },
        "incomingConnectionsPorts": {
          "type": "array",
          "readOnly": true,
          "description": "Specifies the list of ports that the agent will be able to listen on.",
          "items": {
            "type": "string"
          }
        },
        "extensionsAllowList": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConfigurationExtension"
          },
          "description": "Array of extensions that are allowed to be installed or updated.",
          "x-ms-identifiers": []
        },
        "extensionsBlockList": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConfigurationExtension"
          },
          "description": "Array of extensions that are blocked (cannot be installed or updated)",
          "x-ms-identifiers": []
        },
        "proxyBypass": {
          "type": "array",
          "readOnly": true,
          "description": "List of service names which should not use the specified proxy server.",
          "items": {
            "type": "string"
          }
        },
        "extensionsEnabled": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies whether the extension service is enabled or disabled."
        },
        "guestConfigurationEnabled": {
          "type": "string",
          "readOnly": true,
          "description": "Specified whether the guest configuration service is enabled or disabled."
        },
        "configMode": {
          "type": "string",
          "readOnly": true,
          "description": "Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft.",
          "enum": [
            "full",
            "monitor"
          ],
          "x-ms-enum": {
            "name": "agent configuration mode",
            "modelAsString": true
          }
        }
      },
      "description": "Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM."
    },
    "ConfigurationExtension": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "readOnly": true,
          "description": "Publisher of the extension."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Type of the extension."
        }
      },
      "description": "Describes properties that can identify extensions."
    },
    "ServiceStatuses": {
      "type": "object",
      "properties": {
        "extensionService": {
          "$ref": "#/definitions/ServiceStatus",
          "description": "The state of the extension service on the Arc-enabled machine."
        },
        "guestConfigurationService": {
          "$ref": "#/definitions/ServiceStatus",
          "description": "The state of the guest configuration service on the Arc-enabled machine."
        }
      },
      "description": "Reports the state and behavior of dependent services."
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The current status of the service."
        },
        "startupType": {
          "type": "string",
          "description": "The behavior of the service when the Arc-enabled machine starts up."
        }
      },
      "description": "Describes the status and behavior of a service."
    },
    "CloudMetadata": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the cloud provider (Azure/AWS/GCP...)."
        }
      },
      "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...)."
    },
    "AgentUpgrade": {
      "type": "object",
      "properties": {
        "desiredVersion": {
          "type": "string",
          "description": "Specifies the version info w.r.t AgentUpgrade for the machine."
        },
        "correlationId": {
          "type": "string",
          "description": "The correlation ID passed in from RSM per upgrade."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Specifies if RSM should try to upgrade this machine"
        },
        "lastAttemptDesiredVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the version of the last attempt"
        },
        "lastAttemptTimestamp": {
          "type": "string",
          "readOnly": true,
          "description": "Timestamp of last upgrade attempt"
        },
        "lastAttemptStatus": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Success",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "LastAttemptStatusEnum",
            "modelAsString": true
          },
          "description": "Specifies the status of Agent Upgrade."
        },
        "lastAttemptMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Failure message of last upgrade attempt if any."
        }
      },
      "description": "The info w.r.t Agent Upgrade."
    },
    "OSProfile": {
      "type": "object",
      "properties": {
        "computerName": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the host OS name of the hybrid machine."
        },
        "windowsConfiguration": {
          "type": "object",
          "properties": {
            "patchSettings": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/PatchSettings"
            }
          },
          "description": "Specifies the windows configuration for update management."
        },
        "linuxConfiguration": {
          "type": "object",
          "properties": {
            "patchSettings": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/PatchSettings"
            }
          },
          "description": "Specifies the linux configuration for update management."
        }
      },
      "description": "Specifies the operating system settings for the hybrid machine."
    },
    "DetectedProperties": {
      "readOnly": true,
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Detected properties from the machine."
    },
    "MachineProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/locationData"
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentConfiguration",
          "description": "Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM."
        },
        "serviceStatuses": {
          "$ref": "#/definitions/ServiceStatuses",
          "description": "Statuses of dependent services that are reported back to ARM."
        },
        "cloudMetadata": {
          "$ref": "#/definitions/CloudMetadata",
          "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...)."
        },
        "agentUpgrade": {
          "$ref": "#/definitions/AgentUpgrade",
          "description": "The info of the machine w.r.t Agent Upgrade"
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile",
          "description": "Specifies the operating system settings for the hybrid machine."
        },
        "licenseProfile": {
          "$ref": "#/definitions/LicenseProfileMachineInstanceView",
          "description": "Specifies the ESU related properties for a machine."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the hybrid machine agent.",
          "enum": [
            "Connected",
            "Disconnected",
            "Error"
          ],
          "x-ms-enum": {
            "name": "StatusTypes",
            "modelAsString": true
          }
        },
        "lastStatusChange": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time of the last status change."
        },
        "errorDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
          },
          "description": "Details about the error state.",
          "x-ms-identifiers": []
        },
        "agentVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The hybrid machine agent full version."
        },
        "vmId": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Specifies the hybrid machine unique ID."
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the hybrid machine display name."
        },
        "machineFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the hybrid machine FQDN."
        },
        "clientPublicKey": {
          "type": "string",
          "description": "Public Key that the client provides to be used during initial resource onboarding"
        },
        "osName": {
          "readOnly": true,
          "type": "string",
          "description": "The Operating System running on the hybrid machine."
        },
        "osVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The version of Operating System running on the hybrid machine."
        },
        "osType": {
          "type": "string",
          "description": "The type of Operating System (windows/linux)."
        },
        "vmUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Arc Machine's unique SMBIOS ID"
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineExtensionInstanceView"
          },
          "description": "Machine Extensions information (deprecated field)",
          "x-ms-identifiers": []
        },
        "osSku": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Operating System product SKU."
        },
        "domainName": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the Windows domain name."
        },
        "adFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the AD fully qualified display name."
        },
        "dnsFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the DNS fully qualified display name."
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "description": "The resource id of the private link scope this machine is assigned to, if any."
        },
        "parentClusterResourceId": {
          "type": "string",
          "description": "The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any."
        },
        "mssqlDiscovered": {
          "type": "string",
          "description": "Specifies whether any MS SQL instance is discovered on the machine."
        },
        "detectedProperties": {
          "$ref": "#/definitions/DetectedProperties",
          "description": "Detected properties from the machine."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "Information about the network the machine is on."
        }
      },
      "description": "Describes the properties of a hybrid machine."
    },
    "MachineUpdateProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/locationData"
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile"
        },
        "cloudMetadata": {
          "$ref": "#/definitions/CloudMetadata",
          "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...)."
        },
        "agentUpgrade": {
          "$ref": "#/definitions/AgentUpgrade",
          "description": "The info of the machine w.r.t Agent Upgrade"
        },
        "parentClusterResourceId": {
          "type": "string",
          "description": "The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any."
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "description": "The resource id of the private link scope this machine is assigned to, if any."
        }
      },
      "description": "Describes the ARM updatable properties of a hybrid machine."
    },
    "Machine": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineProperties",
          "description": "Hybrid Compute Machine properties"
        },
        "resources": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineExtension"
          },
          "description": "The list of extensions affiliated to the machine"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity"
        },
        "kind": {
          "$ref": "#/definitions/ArcKindEnum"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Describes a hybrid machine."
    },
    "ArcKindEnum": {
      "type": "string",
      "description": "Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.",
      "enum": [
        "AVS",
        "HCI",
        "SCVMM",
        "VMware",
        "EPS",
        "GCP",
        "AWS"
      ],
      "x-ms-enum": {
        "name": "ArcKindEnum ",
        "modelAsString": true
      }
    },
    "MachineUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity"
        },
        "kind": {
          "$ref": "#/definitions/ArcKindEnum"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineUpdateProperties",
          "description": "Hybrid Compute Machine properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceUpdate"
        }
      ],
      "description": "Describes a hybrid machine Update."
    },
    "MachineListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Machine"
          },
          "description": "The list of hybrid machines."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of hybrid machines."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List hybrid machine operation response."
    },
    "ProvisioningState": {
      "readOnly": true,
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Accepted",
        "Canceled",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "description": "The provisioning state, which only appears in the response."
    },
    "License": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LicenseProperties",
          "description": "Hybrid Compute License properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Describes a license in a hybrid machine."
    },
    "LicenseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state, which only appears in the response."
        },
        "tenantId": {
          "type": "string",
          "description": "Describes the tenant id."
        },
        "licenseType": {
          "$ref": "#/definitions/LicenseType",
          "description": "The type of the license resource."
        },
        "licenseDetails": {
          "$ref": "#/definitions/LicenseDetails",
          "description": "Describes the properties of a License."
        }
      },
      "description": "Describes the properties of a License Profile."
    },
    "LicenseUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LicenseUpdateProperties",
          "description": "License Update properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceUpdate"
        }
      ],
      "description": "Describes a License Update."
    },
    "LicenseUpdateProperties": {
      "type": "object",
      "properties": {
        "licenseType": {
          "$ref": "#/definitions/LicenseType",
          "description": "The type of the license resource."
        },
        "licenseDetails": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "$ref": "#/definitions/LicenseState"
            },
            "target": {
              "$ref": "#/definitions/LicenseTarget"
            },
            "edition": {
              "$ref": "#/definitions/LicenseEdition"
            },
            "type": {
              "$ref": "#/definitions/LicenseCoreType"
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "Describes the number of processors."
            }
          }
        }
      },
      "description": "Describes the Update properties of a License Profile."
    },
    "LicenseDetails": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/LicenseState"
        },
        "target": {
          "$ref": "#/definitions/LicenseTarget"
        },
        "edition": {
          "$ref": "#/definitions/LicenseEdition"
        },
        "type": {
          "$ref": "#/definitions/LicenseCoreType"
        },
        "processors": {
          "type": "integer",
          "format": "int32",
          "description": "Describes the number of processors."
        },
        "assignedLicenses": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Describes the number of assigned licenses."
        },
        "immutableId": {
          "readOnly": true,
          "type": "string",
          "description": "Describes the immutable id."
        }
      },
      "description": "Describes the properties of a License."
    },
    "LicenseType": {
      "type": "string",
      "enum": [
        "ESU"
      ],
      "x-ms-enum": {
        "name": "LicenseType",
        "modelAsString": true
      },
      "description": "The type of the license resource."
    },
    "LicenseState": {
      "type": "string",
      "enum": [
        "Activated",
        "Deactivated"
      ],
      "x-ms-enum": {
        "name": "LicenseState",
        "modelAsString": true
      },
      "description": "Describes the state of the license."
    },
    "LicenseEdition": {
      "type": "string",
      "enum": [
        "Standard",
        "Datacenter"
      ],
      "x-ms-enum": {
        "name": "LicenseEdition",
        "modelAsString": true
      },
      "description": "Describes the edition of the license. The values are either Standard or Datacenter."
    },
    "LicenseTarget": {
      "type": "string",
      "enum": [
        "Windows Server 2012",
        "Windows Server 2012 R2"
      ],
      "x-ms-enum": {
        "name": "LicenseTarget",
        "modelAsString": true
      },
      "description": "Describes the license target server."
    },
    "LicenseCoreType": {
      "type": "string",
      "enum": [
        "pCore",
        "vCore"
      ],
      "x-ms-enum": {
        "name": "LicenseCoreType",
        "modelAsString": true
      },
      "description": "Describes the license core type (pCore or vCore)."
    },
    "LicensesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/License"
          },
          "description": "The list of licenses."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List license operation response."
    },
    "LicenseProfile": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "esuProfile": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/LicenseProfileArmEsuProperties",
              "description": "Hybrid Compute ESU Profile properties"
            },
            "provisioningState": {
              "$ref": "#/definitions/ProvisioningState",
              "description": "The provisioning state, which only appears in the response."
            }
          },
          "description": "Describe the properties of a license profile."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Describes a license profile in a hybrid machine."
    },
    "LicenseProfileUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "esuProfile": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/EsuProfileUpdateProperties",
              "description": "Hybrid Compute ESU Profile Update properties"
            }
          },
          "description": "Describe the Update properties of a license profile."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceUpdate"
        }
      ],
      "description": "Describes a License Profile Update."
    },
    "LicenseProfilesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicenseProfile"
          },
          "description": "The list of license profiles."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Machines. Call ListNext() with this URI to fetch the next page of license profile."
        }
      },
      "required": [
        "value"
      ],
      "description": "The List hybrid machine license profile operation response."
    },
    "EsuServerType": {
      "type": "string",
      "enum": [
        "Standard",
        "Datacenter"
      ],
      "x-ms-enum": {
        "name": "EsuServerType",
        "modelAsString": true
      },
      "description": "The server types for Esu."
    },
    "EsuEligibility": {
      "type": "string",
      "enum": [
        "Eligible",
        "Ineligible",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EsuEligibility",
        "modelAsString": true
      },
      "description": "The ESU eligibility."
    },
    "EsuKey": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "SKU number."
        },
        "licenseStatus": {
          "type": "string",
          "description": "The current status of the license profile key."
        }
      },
      "description": "ESU key"
    },
    "EsuKeyState": {
      "type": "string",
      "enum": [
        "Inactive",
        "Active"
      ],
      "x-ms-enum": {
        "name": "EsuKeyState",
        "modelAsString": true
      },
      "description": "The ESU key state."
    },
    "LicenseProfileStorageModelEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicenseImmutableId": {
          "readOnly": true,
          "type": "string",
          "description": "The guid id of the license."
        },
        "esuKeys": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EsuKey"
          },
          "description": "The list of ESU keys.",
          "x-ms-identifiers": []
        }
      },
      "description": "License profile storage model for ESU properties."
    },
    "LicenseProfileArmEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicense": {
          "type": "string",
          "description": "The resource id of the license."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LicenseProfileArmEsuPropertiesWithoutAssignedLicense"
        }
      ],
      "description": "Describes the properties of a License Profile ARM model."
    },
    "LicenseProfileArmEsuPropertiesWithoutAssignedLicense": {
      "type": "object",
      "properties": {
        "serverType": {
          "readOnly": true,
          "$ref": "#/definitions/EsuServerType",
          "description": "The type of the Esu servers."
        },
        "esuEligibility": {
          "readOnly": true,
          "$ref": "#/definitions/EsuEligibility",
          "description": "Indicates the eligibility state of Esu."
        },
        "esuKeyState": {
          "readOnly": true,
          "$ref": "#/definitions/EsuKeyState",
          "description": "Indicates whether there is an ESU Key currently active for the machine."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LicenseProfileStorageModelEsuProperties"
        }
      ],
      "description": "Describes the properties of a License Profile ARM model."
    },
    "EsuProfileUpdateProperties": {
      "type": "object",
      "properties": {
        "assignedLicense": {
          "type": "string",
          "description": "The resource id of the license."
        }
      },
      "description": "Describes the Update properties of a License Profile."
    },
    "LicenseProfileMachineInstanceView": {
      "type": "object",
      "properties": {
        "esuProfile": {
          "$ref": "#/definitions/LicenseProfileMachineInstanceViewEsuProperties"
        }
      },
      "description": "License Profile Instance View in Machine Properties."
    },
    "LicenseProfileMachineInstanceViewEsuProperties": {
      "type": "object",
      "properties": {
        "assignedLicense": {
          "$ref": "#/definitions/License",
          "description": "The assigned license resource."
        },
        "licenseAssignmentState": {
          "type": "string",
          "enum": [
            "Assigned",
            "NotAssigned"
          ],
          "description": "Describes the license assignment state (Assigned or NotAssigned).",
          "x-ms-enum": {
            "name": "licenseAssignmentState",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LicenseProfileArmEsuPropertiesWithoutAssignedLicense"
        }
      ],
      "description": "Properties for the Machine ESU profile."
    },
    "ResourceUpdate": {
      "type": "object",
      "description": "The Update Resource model definition.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "MachineExtension": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MachineExtensionProperties",
          "description": "Describes Machine Extension Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Describes a Machine Extension."
    },
    "MachineExtensionUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineExtensionUpdateProperties",
          "description": "Describes Machine Extension Update Properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceUpdate"
        }
      ],
      "description": "Describes a Machine Extension Update."
    },
    "MachineExtensionProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "additionalProperties": {},
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "additionalProperties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "instanceView": {
          "$ref": "#/definitions/MachineExtensionInstanceView",
          "description": "The machine extension instance view."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionUpdateProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "additionalProperties": {},
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "additionalProperties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The machine extension name."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "description": "The level code.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true
              }
            },
            "displayStatus": {
              "type": "string",
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "format": "date-time",
              "description": "The time of the status."
            }
          },
          "description": "Instance view status."
        }
      },
      "description": "Describes the Machine Extension Instance View."
    },
    "MachineExtensionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineExtension"
          },
          "description": "The list of extensions"
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions."
        }
      },
      "description": "Describes the Machine Extensions List Result."
    },
    "TargetVersion": {
      "type": "string",
      "description": "Extension Upgrade Target Version."
    },
    "ExtensionTargetProperties": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "type": "object",
          "$ref": "#/definitions/TargetVersion",
          "description": "Properties for the specified Extension to Upgrade."
        }
      },
      "description": "Describes the Machine Extension Target Version Properties"
    },
    "ExtensionTarget": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/ExtensionTargetProperties"
      },
      "description": "Describes the Machine Extension Target Properties"
    },
    "MachineExtensionUpgrade": {
      "type": "object",
      "properties": {
        "extensionTargets": {
          "$ref": "#/definitions/ExtensionTarget",
          "description": "Describes the Extension Target Properties."
        }
      },
      "description": "Describes the Machine Extension Upgrade Properties."
    },
    "NetworkProfile": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "The list of network interfaces.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes the network information on this machine."
    },
    "NetworkInterface": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "ipAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpAddress"
          },
          "description": "The list of IP addresses in this interface.",
          "x-ms-identifiers": []
        }
      },
      "description": "Describes a network interface."
    },
    "IpAddress": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "address": {
          "type": "string",
          "description": "Represents the IP Address."
        },
        "ipAddressVersion": {
          "type": "string",
          "description": "Represents the Ip Address Version."
        },
        "subnet": {
          "type": "object",
          "$ref": "#/definitions/Subnet",
          "description": "The subnet to which this IP address belongs."
        }
      },
      "description": "Describes properties of the IP address."
    },
    "Subnet": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Represents address prefix."
        }
      },
      "description": "Describes the subnet."
    },
    "HybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridIdentityMetadata"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/HybridIdentityMetadataProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The unique identifier for the resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "The Public Key.",
          "type": "string"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity",
          "readOnly": true
        }
      }
    },
    "AgentVersionsList": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentVersion"
          },
          "description": "The list of available Agent Versions.",
          "x-ms-identifiers": [
            "agentVersion"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next 10 available Agent Versions."
        }
      },
      "description": "Describes AgentVersions List."
    },
    "AgentVersion": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "agentVersion": {
          "type": "string",
          "description": "Represents the agent version."
        },
        "downloadLink": {
          "type": "string",
          "description": "Represents the download link of specific agent version."
        },
        "osType": {
          "type": "string",
          "description": "Defines the os type."
        }
      },
      "description": "Describes properties of Agent Version."
    },
    "MachineAssessPatchesResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\"",
          "enum": [
            "Unknown",
            "InProgress",
            "Failed",
            "Succeeded",
            "CompletedWithWarnings"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStatus",
            "modelAsString": true
          }
        },
        "assessmentActivityId": {
          "type": "string",
          "readOnly": true,
          "description": "The activity ID of the operation that produced this result."
        },
        "rebootPending": {
          "type": "boolean",
          "readOnly": true,
          "description": "The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred."
        },
        "availablePatchCountByClassification": {
          "$ref": "#/definitions/AvailablePatchCountByClassification",
          "description": "Summarization of patches available for installation on the machine by classification."
        },
        "startDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation began."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation finished."
        },
        "startedBy": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "User",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStartedBy",
            "modelAsString": true
          },
          "description": "Indicates if operation was triggered by user or by platform."
        },
        "patchServiceUsed": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Unknown",
            "WU",
            "WU_WSUS",
            "YUM",
            "APT",
            "Zypper"
          ],
          "x-ms-enum": {
            "name": "PatchServiceUsed",
            "modelAsString": true
          },
          "description": "Specifies the patch service used for the operation."
        },
        "osType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          },
          "description": "The operating system type of the machine."
        },
        "errorDetails": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
        }
      },
      "description": "Describes the properties of an AssessPatches result."
    },
    "AvailablePatchCountByClassification": {
      "type": "object",
      "properties": {
        "security": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of security patches available for installation."
        },
        "critical": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of critical patches available for installation."
        },
        "definition": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of definition patches available for installation."
        },
        "updateRollup": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of update Rollup patches available for installation."
        },
        "featurePack": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of feature pack patches available for installation."
        },
        "servicePack": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of service pack patches available for installation."
        },
        "tools": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of tools patches available for installation."
        },
        "updates": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of updates category patches available for installation."
        },
        "other": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Number of other patches available for installation."
        }
      },
      "description": "Summarization of patches available for installation on the machine by classification."
    },
    "MachineInstallPatchesParameters": {
      "type": "object",
      "properties": {
        "maximumDuration": {
          "type": "string",
          "description": "Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"
        },
        "rebootSetting": {
          "type": "string",
          "description": "Defines when it is acceptable to reboot a VM during a software update operation.",
          "enum": [
            "IfRequired",
            "Never",
            "Always"
          ],
          "x-ms-enum": {
            "name": "VMGuestPatchRebootSetting",
            "modelAsString": true
          }
        },
        "windowsParameters": {
          "$ref": "#/definitions/WindowsParameters",
          "description": "Input for InstallPatches on a Windows VM, as directly received by the API"
        },
        "linuxParameters": {
          "$ref": "#/definitions/LinuxParameters",
          "description": "Input for InstallPatches on a Linux VM, as directly received by the API"
        }
      },
      "required": [
        "maximumDuration",
        "rebootSetting"
      ],
      "description": "Input for InstallPatches as directly received by the API"
    },
    "WindowsParameters": {
      "type": "object",
      "properties": {
        "classificationsToInclude": {
          "type": "array",
          "description": "The update classifications to select when installing patches for Windows.",
          "items": {
            "type": "string",
            "enum": [
              "Critical",
              "Security",
              "UpdateRollUp",
              "FeaturePack",
              "ServicePack",
              "Definition",
              "Tools",
              "Updates"
            ],
            "x-ms-enum": {
              "name": "VMGuestPatchClassification_Windows",
              "modelAsString": true
            }
          }
        },
        "kbNumbersToInclude": {
          "type": "array",
          "description": "Kbs to include in the patch operation",
          "items": {
            "type": "string"
          }
        },
        "kbNumbersToExclude": {
          "type": "array",
          "description": "Kbs to exclude in the patch operation",
          "items": {
            "type": "string"
          }
        },
        "excludeKbsRequiringReboot": {
          "type": "boolean",
          "description": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."
        },
        "maxPatchPublishDate": {
          "type": "string",
          "format": "date-time",
          "description": "This is used to install patches that were published on or before this given max published date."
        }
      },
      "description": "Input for InstallPatches on a Windows VM, as directly received by the API"
    },
    "LinuxParameters": {
      "type": "object",
      "properties": {
        "classificationsToInclude": {
          "type": "array",
          "description": "The update classifications to select when installing patches for Linux.",
          "items": {
            "type": "string",
            "enum": [
              "Critical",
              "Security",
              "Other"
            ],
            "x-ms-enum": {
              "name": "VMGuestPatchClassification_Linux",
              "modelAsString": true
            }
          }
        },
        "packageNameMasksToInclude": {
          "type": "array",
          "description": "packages to include in the patch operation. Format: packageName_packageVersion",
          "items": {
            "type": "string"
          }
        },
        "packageNameMasksToExclude": {
          "type": "array",
          "description": "packages to exclude in the patch operation. Format: packageName_packageVersion",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Input for InstallPatches on a Linux VM, as directly received by the API"
    },
    "MachineInstallPatchesResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Failed\", \"Succeeded\", \"Unknown\" or \"CompletedWithWarnings.\"",
          "enum": [
            "Unknown",
            "InProgress",
            "Failed",
            "Succeeded",
            "CompletedWithWarnings"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStatus",
            "modelAsString": true
          }
        },
        "installationActivityId": {
          "type": "string",
          "readOnly": true,
          "description": "The activity ID of the operation that produced this result."
        },
        "rebootStatus": {
          "type": "string",
          "readOnly": true,
          "description": "The reboot state of the VM following completion of the operation.",
          "enum": [
            "Unknown",
            "NotNeeded",
            "Required",
            "Started",
            "Failed",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "VMGuestPatchRebootStatus",
            "modelAsString": true
          }
        },
        "maintenanceWindowExceeded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Whether the operation ran out of time before it completed all its intended actions."
        },
        "excludedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were not installed due to the user blocking their installation."
        },
        "notSelectedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were detected as available for install, but did not meet the operation's criteria."
        },
        "pendingPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true."
        },
        "installedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches successfully installed."
        },
        "failedPatchCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The number of patches that could not be installed due to some issue. See errors for details."
        },
        "startDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation began."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The UTC timestamp when the operation finished."
        },
        "startedBy": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "User",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "PatchOperationStartedBy",
            "modelAsString": true
          },
          "description": "Indicates if operation was triggered by user or by platform."
        },
        "patchServiceUsed": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Unknown",
            "WU",
            "WU_WSUS",
            "YUM",
            "APT",
            "Zypper"
          ],
          "x-ms-enum": {
            "name": "PatchServiceUsed",
            "modelAsString": true
          },
          "description": "Specifies the patch service used for the operation."
        },
        "osType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          },
          "description": "The operating system type of the machine."
        },
        "errorDetails": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "readOnly": true,
          "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
        }
      },
      "description": "The result summary of an installation operation."
    }
  },
  "parameters": {
    "machineNameParameter": {
      "name": "machineName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the hybrid machine.",
      "x-ms-parameter-location": "method"
    },
    "licenseProfileNameParameter": {
      "name": "licenseProfileName",
      "in": "path",
      "description": "The name of the license profile.",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "enum": [
        "default"
      ],
      "x-ms-parameter-location": "method",
      "x-ms-enum": {
        "name": "LicenseProfileName",
        "modelAsString": false
      }
    },
    "licenseNameParameter": {
      "name": "licenseName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "[a-zA-Z0-9-_\\.]+",
      "description": "The name of the license.",
      "x-ms-parameter-location": "method"
    }
  }
}
