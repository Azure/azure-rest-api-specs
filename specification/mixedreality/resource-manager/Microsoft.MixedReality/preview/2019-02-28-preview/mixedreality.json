{
  "swagger": "2.0",
  "info": {
    "title": "Mixed Reality",
    "description": "Mixed Reality Resource Provider REST API",
    "version": "2019-02-28-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.MixedReality/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Proxy"
        ],
        "description": "Exposing Available Operations",
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/GetOperationList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailabilityLocal",
        "tags": [
          "Proxy"
        ],
        "description": "Check Name Availability for global uniqueness",
        "x-ms-examples": {
          "CheckLocalNameAvailability": {
            "$ref": "./examples/CheckLocalNameAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "#/parameters/checkNameAvailabilityParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckNameAvailabilityRequest": {
      "description": "Check Name Availability Request",
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "Resource Name To Verify",
          "type": "string"
        },
        "type": {
          "description": "Fully qualified resource type which includes provider namespace",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "description": "Check Name Availability Response",
      "type": "object",
      "required": [
        "nameAvailable"
      ],
      "properties": {
        "nameAvailable": {
          "description": "if name Available",
          "type": "boolean"
        },
        "reason": {
          "description": "Resource Name To Verify",
          "$ref": "#/definitions/NameUnavailableReason"
        },
        "message": {
          "description": "detail message",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Response on Error",
      "type": "object",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "message": {
          "description": "Describes the error in detail and provides debugging information",
          "type": "string"
        },
        "code": {
          "description": "String that can be used to programmatically identify the error.",
          "type": "string"
        },
        "target": {
          "description": "The target of the particular error",
          "type": "string"
        },
        "details": {
          "description": "An array of JSON objects that MUST contain name/value pairs for code and message, and MAY contain a name/value pair for target, as described above.The contents of this section are service-defined but must adhere to the aforementioned schema.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "$ref": "#/definitions/OperationDisplay"
        },
        "isDataAction": {
          "description": "Whether or not this is a data plane operation",
          "type": "boolean"
        },
        "origin": {
          "description": "The origin for the operation",
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "required": [
        "provider",
        "resource",
        "operation",
        "description"
      ],
      "properties": {
        "provider": {
          "description": "Service provider: Microsoft.ResourceProvider",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
          "type": "string"
        },
        "operation": {
          "description": "Operation type: Read, write, delete, etc.",
          "type": "string"
        },
        "description": {
          "description": "Description of operation",
          "type": "string"
        }
      }
    },
    "NameUnavailableReason": {
      "description": "reason of name unavailable.",
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameUnavailableReason",
        "modelAsString": true
      }
    },
    "OperationList": {
      "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations supported by the Resource Provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "checkNameAvailabilityParameter": {
      "name": "checkNameAvailability",
      "description": "Check Name Availability Request.",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/CheckNameAvailabilityRequest"
      },
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "The location in which uniqueness will be verified."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of an Azure resource group."
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Azure subscription ID.",
      "in": "path",
      "required": true,
      "type": "string"
    }
  }
}
