{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Common Types",
    "version": "1.0"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {},
  "definitions": {
    "LongRunningOperationResult": {
      "description": "The response model for a Long-Running Operations API.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The Id for this long-running operation.",
          "type": "string"
        },
        "status": {
          "description": "The status state of the request.",
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": false,
            "values": [
              {
                "value": "NotStarted",
                "description": "The request has not started processing yet."
              },
              {
                "value": "Running",
                "description": "The request has started processing."
              },
              {
                "value": "Failed",
                "description": "The request has one or more failures."
              },
              {
                "value": "Succeeded",
                "description": "The request has successfully completed."
              }
            ]
          },
          "readOnly": true
        },
        "created": {
          "description": "The created timestamp.",
          "type": "string",
          "readOnly": true
        },
        "resourceLocation": {
          "description": "The location URI for details about the created resource. This is only provided when the request was successfully completed.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail"
        },
        "warning": {
          "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail"
        }
      }
    },
    "BatchResponse": {
      "description": "This object is returned from a successful Batch service call",
      "type": "object",
      "properties": {
        "summary": {
          "description": "Summary for the batch request",
          "type": "object",
          "readOnly": true,
          "properties": {
            "successfulRequests": {
              "description": "Number of successful requests in the batch",
              "type": "integer",
              "readOnly": true
            },
            "totalRequests": {
              "description": "Total number of requests in the batch",
              "type": "integer",
              "readOnly": true
            }
          }
        },
        "batchItems": {
          "description": "Array containing the batch results",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        }
      }
    },
    "CoordinateAbbreviated": {
      "description": "A location represented as a latitude and longitude.",
      "type": "object",
      "properties": {
        "lat": {
          "description": "Latitude property",
          "type": "number",
          "format": "double"
        },
        "lon": {
          "description": "Longitude property",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Geometry": {
      "description": "This represents the geometry for one or more geographical features (parks, state boundary etc.) and should be a `GeoJSON` compliant type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946) for details.",
      "type": "object"
    },
    "GeoJSONGeometry": {
      "description": "A valid `GeoJSON` geometry object. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details.",
      "type": "object",
      "discriminator": "type",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Specifies the `GeoJSON` geometry type. Must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection.",
          "type": "string",
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection"
          ],
          "x-ms-enum": {
            "name": "GeoJSONGeometryType",
            "modelAsString": false,
            "values": [
              {
                "value": "Point",
                "description": "`GeoJSON Point` geometry."
              },
              {
                "value": "MultiPoint",
                "description": "`GeoJSON MultiPoint` geometry."
              },
              {
                "value": "LineString",
                "description": "`GeoJSON LineString` geometry."
              },
              {
                "value": "MultiLineString",
                "description": "`GeoJSON MultiLineString` geometry."
              },
              {
                "value": "Polygon",
                "description": "`GeoJSON Polygon` geometry."
              },
              {
                "value": "MultiPolygon",
                "description": "`GeoJSON MultiPolygon` geometry."
              },
              {
                "value": "GeometryCollection",
                "description": "`GeoJSON GeometryCollection` geometry."
              }
            ]
          }
        }
      }
    },
    "Point": {
      "description": "A valid `GeoJSON Point` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.2) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/PointData"
        }
      ]
    },
    "PointData": {
      "description": "Data contained by a `Point`.",
      "type": "object",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/GeoJSONPosition"
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "MultiPoint": {
      "description": "A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/MultiPointData"
        }
      ]
    },
    "MultiPointData": {
      "type": "object",
      "description": "Data contained by a `MultiPoint`.",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `MultiPoint` geometry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSONPosition"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "LineString": {
      "description": "A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/LineStringData"
        }
      ]
    },
    "LineStringData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `LineString` geometry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSONPosition"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJSONLinearRing": {
      "description": "Though a linear ring is not explicitly represented as a GeoJSON geometry type, it helps in defining the polygon as an array of linear rings. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GeoJSONPosition"
      }
    },
    "GeoJSONPosition": {
      "description": "A valid `GeoJSON Position` geometry type. A `Position` is an array of numbers with two or more elements. The first two elements are _longitude_ and _latitude_, precisely in that order. _Altitude/Elevation_ is an optional third element. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.1) for details.",
      "type": "array",
      "items": {
        "type": "number",
        "format": "double"
      }
    },
    "MultiPolygon": {
      "description": "A valid `GeoJSON MultiPolygon` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.7) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/MultiPolygonData"
        }
      ]
    },
    "MultiPolygonData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Contains a list of valid `GeoJSON` Polygon objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoJSONLinearRing"
            }
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "MultiLineString": {
      "description": "A valid `GeoJSON MultiLineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.5) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/MultiPointStringData"
        }
      ]
    },
    "MultiPointStringData": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Specifies the `type` for the geometry. Value should always be equal to \"MultiLineString\".",
          "type": "string"
        },
        "coordinates": {
          "description": "Coordinates for the `MultiLineString` geometry.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoJSONPosition"
            }
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "Polygon": {
      "description": "A valid `GeoJSON Polygon` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/PolygonData"
        }
      ]
    },
    "PolygonData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `Polygon` geometry type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSONLinearRing"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeometryCollection": {
      "description": "A valid `GeoJSON GeometryCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.8) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJSONGeometry"
        },
        {
          "$ref": "#/definitions/GeometryCollectionData"
        }
      ]
    },
    "GeometryCollectionData": {
      "type": "object",
      "properties": {
        "geometries": {
          "description": "Contains a list of valid `GeoJSON` geometry objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSONGeometry"
          }
        }
      },
      "required": [
        "geometries"
      ]
    },
    "BatchRequestBody": {
      "description": "This type represents the request body for the Batch service.",
      "type": "object",
      "properties": {
        "batchItems": {
          "description": "The list of queries/requests to process",
          "type": "array",
          "items": {
            "description": "Batch Query object",
            "type": "object",
            "properties": {
              "query": {
                "description": "Partial query string",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Coordinate": {
      "description": "A location represented as a latitude and longitude.",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude property",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "Longitude property",
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API.",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionV2": {
      "name": "api-version",
      "description": "Version number of Azure Maps API.",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "2.0",
      "x-ms-parameter-location": "client"
    },
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "JsonFormat": {
      "name": "format",
      "description": "Desired format of the response. Only `json` format is supported.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json"
      ],
      "x-ms-enum": {
        "name": "JsonFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    }
  },
  "responses": {
    "200Async": {
      "description": "The operation's status response.",
      "schema": {
        "$ref": "../../../Common/preview/1.0/common.json#/definitions/LongRunningOperationResult"
      }
    },
    "201Async": {
      "description": "The resource has been created successfully.",
      "schema": {
        "$ref": "../../../Common/preview/1.0/common.json#/definitions/LongRunningOperationResult"
      },
      "headers": {
        "Location": {
          "type": "string",
          "description": "A URI where details on the newly created resource can be found."
        }
      }
    },
    "202Async": {
      "description": "**Supported only for async request.**\nRequest Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.",
      "headers": {
        "Location": {
          "type": "string",
          "description": "New URL to check for the results of the long running process."
        }
      }
    },
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "401": {
      "description": "Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "headers": {
        "WWW-Authenticate": {
          "type": "string",
          "description": "Bearer realm=\"https://atlas.microsoft.com/\", error=\"invalid_token\", error_description=\"The access token expired\""
        }
      },
      "x-ms-error-response": true
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "409": {
      "description": "The request could not be completed due to a conflict with the current state of the resource. Likely caused by a parallel update to the same resource.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "Impersonates a user's Azure Active Directory account."
      }
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "description": "This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    },
    {
      "apiKeyQuery": []
    }
  ]
}
