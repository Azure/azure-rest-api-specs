{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Tileset Service",
    "version": "1.0",
    "description": "APIs for managing Tilesets."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{geography}.atlas.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/preview/1.0/common.json#/parameters/GeographicResourceLocation"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    },
    {
      "SubscriptionKeyInHeader": []
    },
    {
      "SubscriptionKeyInQuery": []
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the 'x-ms-client-id' header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The 'Authorization URL' is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    },
    "SubscriptionKeyInHeader": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "header"
    },
    "SubscriptionKeyInQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "responses": {},
  "parameters": {
    "GeographicResourceLocation": {
      "name": "geography",
      "description": "This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "us",
      "enum": [
        "us",
        "eu"
      ],
      "x-ms-enum": {
        "name": "GeographicResourceLocation",
        "modelAsString": true,
        "values": [
          {
            "value": "us",
            "description": "Used to access an Azure Maps Creator resource in the United States"
          },
          {
            "value": "eu",
            "description": "Used to access an Azure Maps Creator resource in Europe"
          }
        ]
      },
      "x-ms-parameter-location": "client"
    },
    "DatasetIdQuery": {
      "name": "datasetId",
      "description": "The unique `datasetId` that the tileset create API uses to retrieve features to generate tiles. The `datasetId` must have been obtained from a successful [Dataset Create API](/en-us/rest/api/maps/dataset/createpreview) call.",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "TilesetId": {
      "name": "tilesetId",
      "description": "The Tileset Id",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "DescriptionTileset": {
      "name": "description",
      "description": "User provided description of the tileset.",
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/tileset/create/vector": {
      "post": {
        "description": "**Tileset Create API**\n\n**Applies to**: see pricing [tiers](https://azure.microsoft.com/en-us/pricing/details/azure-maps/).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API \nand SDK. [This](https://docs.microsoft.com/en-us/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThe Tileset Create API allows the caller to create a tileset from a dataset. A tileset contains a set of tiles that can be consumed \nfrom the [Get Map Tile](/rest/api/maps/render/getmaptile) to retrieve custom tiles. To make a dataset, use the \n[DataSet Create API](/rest/api/maps/dataset/createpreview).\n\n## Submit Create Request\n\nTo create your tileset you will make a `POST` request with an empty body. The `datasetId` query parameter will be \nused as the source of the tileset data.\n\nThe Create Tileset API is a \n[long-running request](https://aka.ms/am-creator-lrt).",
        "operationId": "Tileset_CreatePreview",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Create Tileset by providing a Dataset Id": {
            "$ref": "./examples/Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/DatasetIdQuery"
          },
          {
            "$ref": "#/parameters/DescriptionTileset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/200Async"
          },
          "201": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/201Async"
          },
          "202": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/202Async"
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/tileset": {
      "get": {
        "description": "**Tileset List API**\n\n**Applies to**: see pricing [tiers](https://azure.microsoft.com/en-us/pricing/details/azure-maps/).\n<br>\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/en-us/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\nThis API allows the caller to fetch a list of all tilesets created.   \n<br>",
        "operationId": "Tileset_ListPreview",
        "x-ms-examples": {
          "Get a list of all tilesets": {
            "$ref": "./examples/List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "List tileset request completed successfully. The response body contains a list of all tilesets.",
            "schema": {
              "$ref": "#/definitions/TilesetListResponse"
            }
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/tileset/{tilesetId}": {
      "delete": {
        "description": "**Tileset Delete API**\n\n**Applies to**: see pricing [tiers](https://azure.microsoft.com/en-us/pricing/details/azure-maps/).\n<br>\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/en-us/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\nThis API allows the caller to delete a created tileset.<br>    \nYou can use this API if a tileset is no longer needed. \n\n### Submit Delete Request\n\nTo delete your content you will issue a `DELETE` request where the path will contain the `tilesetId` of the tileset to delete.<br>    \n\n#### Delete request \"Successful\"\n\nThe Tileset Delete API returns a HTTP `204 No Content` response with an empty body, if the tileset was deleted successfully.<br>    \n\n#### Delete request \"Failed\"\n\nA HTTP `400 Bad Request` error response will be returned if the tileset with the passed-in `tilesetId` is not found. \n\nHere is a sample error response:\n\n<br>\n\n```json\n{\n  \"error\": {\n      \"code\": \"400 BadRequest\",\n      \"message\": \"Bad request - Tileset Id: d85b5b27-5fc4-4599-8b50-47160e90f8ce does not exist.\"\n  }\n}\n```",
        "operationId": "Tileset_DeletePreview",
        "x-ms-examples": {
          "Delete a created tileset": {
            "$ref": "./examples/Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TilesetId"
          }
        ],
        "responses": {
          "204": {
            "description": "Tileset delete request completed successfully."
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    }
  },
  "definitions": {
    "TilesetListResponse": {
      "description": "The response model for the Tileset List API. Returns a list of all tilesets.",
      "type": "object",
      "properties": {
        "tilesets": {
          "description": "A list of all tilesets.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TilesetDetailInfo"
          }
        }
      }
    },
    "TilesetDetailInfo": {
      "description": "Detail information for the data.",
      "type": "object",
      "properties": {
        "tilesetId": {
          "description": "The unique tileset id for the tileset.",
          "type": "string",
          "readOnly": true
        },
        "datasetId": {
          "description": "The unique dataset Id used to create the tileset.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description the caller provided when creating the tileset. Maximum length 1024 characters.",
          "type": "string",
          "readOnly": true
        },
        "minZoom": {
          "description": "The lowest tile zoom level tile generated for the tileset.",
          "type": "integer",
          "readOnly": true
        },
        "maxZoom": {
          "description": "The highest tile zoom level tile generated for the tileset.",
          "type": "integer",
          "readOnly": true
        },
        "bbox": {
          "description": "Bounding box which all features of the tileset lay within. Projection used - EPSG:3857. Format : 'minLon, minLat, maxLon, maxLat'.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "number"
          }
        }
      }
    }
  }
}
