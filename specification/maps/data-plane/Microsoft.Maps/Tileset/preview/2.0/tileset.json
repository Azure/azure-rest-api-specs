{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Tileset Service",
    "version": "2.0",
    "description": "APIs for managing Tilesets."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{geography}.atlas.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/preview/1.0/common.json#/parameters/GeographicResourceLocation"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    },
    {
      "SubscriptionKeyInHeader": []
    },
    {
      "SubscriptionKeyInQuery": []
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview) Flows.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    },
    "SubscriptionKeyInHeader": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "header"
    },
    "SubscriptionKeyInQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "responses": {},
  "parameters": {
    "DatasetIdQuery": {
      "name": "datasetId",
      "description": "The unique `datasetId` that the tileset create API uses to retrieve features to generate tiles. The `datasetId` must have been obtained from a successful [Dataset Create API](/en-us/rest/api/maps/dataset/createpreview) call.",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "TilesetId": {
      "name": "tilesetId",
      "description": "The Tileset Id",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "DescriptionTileset": {
      "name": "description",
      "description": "User provided description of the tileset.",
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    },
    "TilesetOperationId": {
      "name": "operationId",
      "type": "string",
      "in": "path",
      "description": "The ID to query the status for the dataset create/import request.",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/tilesets": {
      "post": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\n [This](https://docs.microsoft.com/en-us/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThe Tileset Create API allows the caller to create a tileset from a dataset. A tileset contains a set of tiles that can be consumed \nfrom the [Get Map Tile](/rest/api/maps/render/getmaptile) to retrieve custom tiles. To make a dataset, use the \n[DataSet Create API](/rest/api/maps/dataset/createpreview).\n\n## Submit Create Request\n\nTo create your tileset you will make a `POST` request with an empty body. The `datasetId` query parameter will be \nused as the source of the tileset data.\n\nThe Create Tileset API is a \n[long-running request](https://aka.ms/am-creator-lrt-v2).",
        "operationId": "Tileset_Create",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Create Tileset by providing a Dataset Id": {
            "$ref": "./examples/Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/DatasetIdQuery"
          },
          {
            "$ref": "#/parameters/DescriptionTileset"
          }
        ],
        "responses": {
          "200": {
            "description": "Tileset create failed. The uploaded content did not satisfy all the validation checks. The response body contains all the errors that were encountered.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "202": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/202AsyncV2"
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      },
      "get": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to fetch a list of all tilesets created.   \n<br>",
        "operationId": "Tileset_List",
        "x-ms-examples": {
          "Get a list of all tilesets": {
            "$ref": "./examples/List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          }
        ],
        "x-ms-pageable": {
          "itemName": "tilesets",
          "nextLinkName": "nextLink"
        },
        "responses": {
          "200": {
            "description": "List tileset request completed successfully. The response body contains a list of all tilesets.",
            "schema": {
              "$ref": "#/definitions/TilesetListResponse"
            }
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/tilesets/{tilesetId}": {
      "get": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to fetch a tileset.",
        "operationId": "Tileset_Get",
        "x-ms-examples": {
          "Gets the details for a single tileset": {
            "$ref": "./examples/Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/TilesetId"
          }
        ],
        "responses": {
          "200": {
            "description": "List tileset request completed successfully. The response body contains a list of all tilesets.",
            "schema": {
              "$ref": "#/definitions/TilesetDetailInfo"
            }
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      },
      "delete": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to delete a created tileset.<br>    \nYou can use this API if a tileset is no longer needed. \n\n### Submit Delete Request\n\nTo delete your content you will issue a `DELETE` request where the path will contain the `tilesetId` of the tileset to delete.<br>    \n\n#### Delete request \"Successful\"\n\nThe Tileset Delete API returns a HTTP `204 No Content` response with an empty body, if the tileset was deleted successfully.<br>    \n\n#### Delete request \"Failed\"\n\nA HTTP `400 Bad Request` error response will be returned if the tileset with the passed-in `tilesetId` is not found. \n\nHere is a sample error response:\n\n<br>\n\n```json\n{\n  \"error\": {\n      \"code\": \"400 BadRequest\",\n      \"message\": \"Bad request - Tileset Id: d85b5b27-5fc4-4599-8b50-47160e90f8ce does not exist.\"\n  }\n}\n```",
        "operationId": "Tileset_Delete",
        "x-ms-examples": {
          "Delete a created tileset": {
            "$ref": "./examples/Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/TilesetId"
          }
        ],
        "responses": {
          "204": {
            "description": "Tileset delete request completed successfully."
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/tilesets/operations/{operationId}": {
      "get": {
        "description": "This path will be obtained from a call to /tilesets/create.  While in progress, an http200 will be returned with no extra headers -  followed by an http200 with Resource-Location header once successfully completed.",
        "operationId": "Tileset_GetOperation",
        "x-ms-examples": {
          "Get the status of an operation which is still running": {
            "$ref": "./examples/GetOperationStillRunning.json"
          },
          "Get the status of an operation which has finished successfully": {
            "$ref": "./examples/GetOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/TilesetOperationId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/200AsyncV2"
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          }
        }
      }
    }
  },
  "definitions": {
    "TilesetListResponse": {
      "description": "The response model for the Tileset List API. Returns a list of all tilesets.",
      "type": "object",
      "properties": {
        "tilesets": {
          "description": "A list of all tilesets.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TilesetDetailInfo"
          }
        },
        "nextLink": {
          "description": "If present, the location of the next page of data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TilesetDetailInfo": {
      "description": "Detail information for the data.",
      "type": "object",
      "properties": {
        "tilesetId": {
          "description": "The unique tileset id for the tileset.",
          "type": "string",
          "readOnly": true
        },
        "ontology": {
          "$ref": "../../../Common/preview/1.0/common.json#/definitions/Ontology"
        },
        "datasetId": {
          "description": "The unique dataset Id used to create the tileset.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description the caller provided when creating the tileset. Maximum length 1024 characters.",
          "type": "string",
          "readOnly": true
        },
        "minZoom": {
          "description": "The lowest tile zoom level tile generated for the tileset.",
          "type": "integer",
          "readOnly": true
        },
        "maxZoom": {
          "description": "The highest tile zoom level tile generated for the tileset.",
          "type": "integer",
          "readOnly": true
        },
        "bbox": {
          "description": "Bounding box which all features of the tileset lay within. Projection used - EPSG:3857. Format : 'minLon, minLat, maxLon, maxLat'.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "number"
          }
        }
      }
    }
  }
}
