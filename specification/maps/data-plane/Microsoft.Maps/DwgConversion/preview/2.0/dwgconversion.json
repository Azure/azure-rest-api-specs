{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Conversion Service",
    "version": "2.0",
    "description": "APIs for converting DWG Packages in Azure Maps."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{geography}.atlas.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/preview/1.0/common.json#/parameters/GeographicResourceLocation"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    },
    {
      "SubscriptionKeyInHeader": []
    },
    {
      "SubscriptionKeyInQuery": []
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    },
    "SubscriptionKeyInHeader": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "header"
    },
    "SubscriptionKeyInQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "responses": {},
  "parameters": {
    "UdidQuery": {
      "name": "udid",
      "description": "The unique data id for the content. The `udid` must have been obtained from a successful [Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data%20v2/uploadpreview) call.",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ConversionId": {
      "name": "conversionId",
      "description": "The conversion id for the content. The `conversionId` must have been obtained from a successful [Conversion API](https://docs.microsoft.com/en-us/rest/api/maps/v2/conversion/convert) call.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "OutputOntology": {
      "name": "outputOntology",
      "description": "Output ontology version. \"facility-2.0\" is the only supported value at this time. Please refer to this [article](https://docs.microsoft.com/en-us/azure/azure-maps/creator-facility-ontology) for more information about Azure Maps Creator ontologies.",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "DescriptionDwgConversion": {
      "name": "description",
      "description": "User provided description of the content being converted.",
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    },
    "ConversionOperationId": {
      "name": "operationId",
      "type": "string",
      "in": "path",
      "description": "The ID to query the status for the dataset create/import request.",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/conversions": {
      "post": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThe Conversion API lets the caller import a set of DWG design files as a zipped [Drawing Package](https://aka.ms/am-drawing-package) into Azure Maps. The [Drawing Package](https://aka.ms/am-drawing-package) should first be uploaded using the [Azure Maps Data Service](https://docs.microsoft.com/rest/api/maps/data). Once uploaded, use the `udid` returned by the [Data Upload API](https://docs.microsoft.com/rest/api/maps/data/uploadpreview) to call this Conversion API.\n\n## Convert DWG package\n\nThe Conversion API performs a [long-running request](https://aka.ms/am-creator-lrt-v2).\n\n## Debug DWG package issues\n\n\nDuring the Conversion process, if there are any issues with the DWG package [errors and warnings](https://aka.ms/am-conversion-errors) are provided in the response along with a *diagnostic package* to visualize and diagnose these issues. In case any issues are encountered with your DWG package, the Conversion operation status process as detailed [here](https://aka.ms/am-creator-lrt-v2) returns the location of the *diagnostic package* that can be downloaded by the caller to help them visualize and diagnose these issues. The *diagnostic package* location can be found in the properties section of the conversion operation status response and looks like the following:\n\n```json\n{\n    \"properties\": {\n        \"diagnosticPackageLocation\": \"https://us.atlas.microsoft.com/mapdata/{DiagnosticPackageId}?api-version=1.0\"                \n    }            \n}\n```\n\nThe *diagnostic package* can be downloaded by executing a `HTTP GET` request on the `diagnosticPackageLocation`.\nFor more details on how to use the tool to visualize and diagnose all the errors and warnings see [Drawing Error Visualizer](https://aka.ms/am-drawing-errors-visualizer). <br>\n\nA conversion operation will be marked as *success* if there are zero or more warnings but will be marked as *failed* if any errors are encountered. ",
        "operationId": "Conversion_Convert",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Convert previously uploaded DWG Package": {
            "$ref": "./examples/Conversion.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/UdidQuery"
          },
          {
            "$ref": "#/parameters/OutputOntology"
          },
          {
            "$ref": "#/parameters/DescriptionDwgConversion"
          }
        ],
        "responses": {
          "200": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/200AsyncV2"
          },
          "202": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/202AsyncV2"
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      },
      "get": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to fetch a list of all successful data conversions submitted previously using the [Conversion API](https://docs.microsoft.com/en-us/rest/api/maps/conversion/convertpreview).   \n\n### Submit List Request\n\nTo list all successful conversions you will issue a `GET` request with no additional parameters.\n\n### List Data Response\n\nThe Conversion List API returns the complete list of all conversion details in `json` format.<br>\n\nHere is a sample response returning the details of two successful conversion requests:  \n\n<br>\n\n```json\n{\n    \"conversions\": \n    [\n        {\n            \"conversionId\": \"54398242-ea6c-1f31-4fa6-79b1ae0fc24d\",\n            \"udid\": \"31838736-8b84-11ea-bc55-0242ac130003\",\n            \"created\": \"5/19/2020 9:00:00 AM +00:00\",\n            \"description\": \"User provided description.\",\n            \"featureCounts\": {\n                \"DIR\": 1,\n                \"LVL\": 3,\n                \"FCL\": 1,\n                \"UNIT\": 150,\n                \"CTG\": 8,\n                \"AEL\": 0,\n                \"OPN\": 10\n            }\n        },\n        {\n            \"conversionId\": \"2acf7d32-8b84-11ea-bc55-0242ac130003\",\n            \"udid\": \"1214bc58-8b84-11ea-bc55-0242ac1300039\",\n            \"created\": \"5/19/2020 9:00:00 AM +00:00\",\n            \"description\": \"User provided description.\",\n            \"featureCounts\": {\n                \"DIR\": 1,\n                \"LVL\": 3,\n                \"FCL\": 1,\n                \"UNIT\": 150,\n                \"CTG\": 8,\n                \"AEL\": 0,\n                \"OPN\": 10\n            }\n        }\n    ]\n}\n```\n\n<br>",
        "operationId": "Conversion_List",
        "x-ms-examples": {
          "Returns a list of all the data processed by the Conversion Service for the account": {
            "$ref": "./examples/List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          }
        ],
        "x-ms-pageable": {
          "itemName": "conversions",
          "nextLinkName": "nextLink"
        },
        "responses": {
          "200": {
            "description": "List request completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConversionListResponse"
            }
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/conversions/{conversionId}": {
      "get": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to fetch a successful data conversion submitted previously using the [Conversion API](https://docs.microsoft.com/en-us/rest/api/maps/conversion/convertpreview).  ",
        "operationId": "Conversion_Get",
        "x-ms-examples": {
          "Get the details for one conversion operation": {
            "$ref": "./examples/Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/ConversionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns details of the specified conversion.",
            "schema": {
              "$ref": "#/definitions/ConversionListDetailInfo"
            }
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      },
      "delete": {
        "description": "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\nThis API allows the caller to delete any data conversions created previously using the [Conversion API](https://docs.microsoft.com/en-us/rest/api/maps/conversion/convertpreview).\n\n### Submit Delete Request\n\nTo delete your conversion data you will issue a `DELETE` request where the path will contain the `conversionId` of the data to delete.\n\n### Conversion Delete Response\n\nThe Conversion Delete API returns a HTTP `204 No Content` response with an empty body, if the converted data resources were deleted successfully.<br>    \nA HTTP `400 Bad Request` error response will be returned if no resource associated with the passed-in `conversionId` is found.    ",
        "operationId": "Conversion_Delete",
        "x-ms-examples": {
          "Delete previously converted content": {
            "$ref": "./examples/Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/ConversionId"
          }
        ],
        "responses": {
          "204": {
            "description": "Conversion delete request completed successfully. The content for `conversionId` was deleted on the server."
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          },
          "401": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/401"
          },
          "403": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/403"
          },
          "404": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/404"
          },
          "500": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/500"
          }
        }
      }
    },
    "/conversions/operations/{operationId}": {
      "get": {
        "description": "This path will be obtained from a call to POST /conversions.  While in progress, an http200 will be returned with no extra headers -  followed by an http200 with Resource-Location header once successfully completed.",
        "operationId": "Conversion_GetOperation",
        "x-ms-examples": {
          "Get the status of an operation which is still running": {
            "$ref": "./examples/GetOperationStillRunning.json"
          },
          "Get the status of an operation which has finished successfully, with non-fatal warnings": {
            "$ref": "./examples/GetOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ApiVersionV2"
          },
          {
            "$ref": "#/parameters/ConversionOperationId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/200AsyncV2"
          },
          "400": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/400"
          }
        }
      }
    }
  },
  "definitions": {
    "ConversionListResponse": {
      "description": "The response model for the Conversion List API.",
      "type": "object",
      "properties": {
        "conversions": {
          "description": "A list of all the previously submitted conversion requests.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConversionListDetailInfo"
          }
        },
        "nextLink": {
          "description": "If present, the location of the next page of data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConversionListDetailInfo": {
      "description": "Detail information for the conversion requests.",
      "type": "object",
      "properties": {
        "conversionId": {
          "description": "A unique id that represents the artifact of a _successfully_ completed conversion process.",
          "type": "string",
          "readOnly": true
        },
        "ontology": {
          "$ref": "../../../Common/preview/1.0/common.json#/definitions/Ontology"
        },
        "udid": {
          "description": "The unique id of the content provided to create this conversion.",
          "type": "string",
          "readOnly": true
        },
        "created": {
          "description": "The date and time of this conversion.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "User provided description of the content being converted.",
          "type": "string",
          "readOnly": true
        },
        "featureCounts": {
          "description": "A summary of feature counts in this conversion.",
          "type": "object",
          "readOnly": true
        }
      }
    }
  }
}
