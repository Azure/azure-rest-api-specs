{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Render Service",
    "version": "1.0",
    "description": "Azure Maps Render REST APIs"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "Impersonates a user's Azure Active Directory account."
      }
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "description": "This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "azure_auth": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "responses": {
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "401": {
      "description": "Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      },
      "headers": {
        "WWW-Authenticate": {
          "type": "string",
          "description": "Bearer realm=\"https://atlas.microsoft.com/\", error=\"invalid_token\", error_description=\"The access token expired\""
        }
      }
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    }
  },
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 1.0",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "RasterTileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible value: png.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png"
      ],
      "x-ms-enum": {
        "name": "RasterTileFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "Language": {
      "name": "language",
      "in": "query",
      "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.\n\nPlease refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible values are png & pbf.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png",
        "pbf"
      ],
      "x-ms-enum": {
        "name": "TileFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          },
          {
            "value": "pbf",
            "description": "Vector graphic in the pbf format. Supports zoom levels 0 through 22."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "xTileIndex": {
      "name": "x",
      "x-ms-client-name": "xTileIndex",
      "in": "query",
      "description": "X coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "yTileIndex": {
      "name": "y",
      "x-ms-client-name": "yTileIndex",
      "in": "query",
      "description": "Y coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "TextFormat": {
      "name": "format",
      "description": "Desired format of the response. Value can be either _json_ or _xml_.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json",
        "xml"
      ],
      "x-ms-enum": {
        "name": "TextFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          },
          {
            "value": "xml",
            "description": "[The Extensible Markup Language](https://www.w3.org/TR/xml/)"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "RasterZoom18": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 0-18 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "VectorZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 0-20 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ImageryRasterZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 1-19 (inclusive).\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "RasterVectorNaturalEarthZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-18 (inclusive). Terra raster tiles, values must be in the range 0-6 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Text": {
      "name": "text",
      "in": "query",
      "description": "Yes/no value to exclude textual data from response. Only images and country names will be in response.",
      "required": false,
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "default": "yes",
      "x-ms-parameter-location": "method"
    },
    "View": {
      "name": "view",
      "in": "query",
      "description": "The View parameter specifies which set of geopolitically disputed content is returned via Azure Maps services, including  borders and labels displayed on the map. The View parameter (also referred to as “user region parameter”) will show the  correct maps for that country/region. By default, the View parameter is set to “Unified” even if you haven’t defined it in  the request. It is your responsibility to determine the location of your users, and then set the View parameter correctly  for that location. Alternatively, you have the option to set ‘View=Auto’, which will return the map data based on the IP  address of the request. The View parameter in Azure Maps must be used in compliance with applicable laws, including those  regarding mapping, of the country where maps, images and other data and third party content that you are authorized to  access via Azure Maps is made available. Example: view=IN.\n\nPlease refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see the available Views.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/map/static/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nThe static image service renders a user-defined, rectangular image containing a map section using a zoom level from 0 to 20. The static image service renders a user-defined, rectangular image containing a map section using a zoom level from 0 to 20. The supported resolution range for the map image is from 1x1 to 8192x8192. If you are deciding when to use the static image service over the map tile service, you may want to consider how you would like to interact with the rendered map. If the map contents will be relatively unchanging, a static map is a good choice. If you want to support a lot of zooming, panning and changing of the map content, the map tile service would be a better choice. \n\nService also provides Image Composition functionality to get a static image back with additional data like; pushpins and geometry overlays with following S0 and S1 capabilities. \n\nIn S0 you can:\n- Render up to 5 pushpins specified in the request\n- Provide one custom image for the pins referenced in the request\n- Add labels to the pushpins\n\nIn S1 you can:\n- Render pushpins through [Azure Maps Data Service](https://aka.ms/AzureMapsMapDataService)\n- Specify multiple pushpin styles\n- Provide custom pushpin images stored in [Azure Maps Data Service](https://aka.ms/AzureMapsMapDataService)\n- Render circle, polyline and polygon geometry types.\n- Render of supported GeoJSON geometry types uploaded through [Azure Maps Data Service](https://aka.ms/AzureMapsMapDataService)\n\nPlease see [How-to-Guide](https://aka.ms/AzureMapsHowToGuideImageCompositor) for detailed examples.\n\n_Note_ : Either **center** or **bbox** parameter must be supplied to the\nAPI.\n<br><br>\nThe supported Lat and Lon ranges when using the **bbox** parameter, are as follows:\n<br><br>\n\n  |Zoom Level | Max Lon Range   | Max Lat Range|\n  |:----------|:----------------|:-------------|\n  |0          | 360.0           | 170.0        | \n  |1          | 360.0           | 170.0        |\n  |2          | 360.0           | 170.0        |\n  |3          | 360.0           | 170.0        |\n  |4          | 360.0           | 170.0        |\n  |5          | 180.0           | 85.0         |\n  |6          | 90.0            | 42.5         |\n  |7          | 45.0            | 21.25        |\n  |8          | 22.5            | 10.625       |\n  |9          | 11.25           | 5.3125       |\n  |10         | 5.625           | 2.62625      |\n  |11         | 2.8125          | 1.328125     |\n  |12         | 1.40625         | 0.6640625    |\n  |13         | 0.703125        | 0.33203125   |\n  |14         | 0.3515625       | 0.166015625  |\n  |15         | 0.17578125      | 0.0830078125 |  \n  |16         | 0.087890625     | 0.0415039063 | \n  |17         | 0.0439453125    | 0.0207519531 |\n  |18         | 0.0219726563    | 0.0103759766 |\n  |19         | 0.0109863281    | 0.0051879883 |\n  |20         | 0.0054931641    | 0.0025939941 |",
        "operationId": "Render_GetMapImage",
        "x-ms-examples": {
          "GetMapStaticImage": {
            "$ref": "./examples/GetMapImage.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/RasterTileFormat"
          },
          {
            "name": "layer",
            "in": "query",
            "description": "Map layer requested. If layer is set to labels or hybrid, the format should be png.",
            "required": false,
            "default": "basic",
            "type": "string",
            "enum": [
              "basic",
              "hybrid",
              "labels"
            ],
            "x-ms-enum": {
              "name": "StaticMapLayer",
              "modelAsString": true,
              "values": [
                {
                  "value": "basic",
                  "description": "Returns an image containing all map features including polygons, borders, roads and labels."
                },
                {
                  "value": "hybrid",
                  "description": "Returns an image containing borders, roads, and labels, and can be overlaid on other tiles (such as satellite imagery) to produce hybrid tiles."
                },
                {
                  "value": "labels",
                  "description": "Returns an image of just the map's label information."
                }
              ]
            }
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. Possible values are main and dark.",
            "required": false,
            "default": "main",
            "type": "string",
            "enum": [
              "main",
              "dark"
            ],
            "x-ms-enum": {
              "name": "MapImageStyle",
              "modelAsString": true,
              "values": [
                {
                  "value": "main",
                  "description": "Azure Maps main style"
                },
                {
                  "value": "dark",
                  "description": "Dark grey version of the Azure Maps main style"
                }
              ]
            }
          },
          {
            "name": "zoom",
            "in": "query",
            "description": "Desired zoom level of the map. Zoom value must be in the range: 0-20 (inclusive). Default value is 12.<br><br>Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
            "required": false,
            "default": 12,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 20
          },
          {
            "name": "center",
            "in": "query",
            "description": "Coordinates of the center point. Format: 'lon,lat'. Projection used\n- EPSG:3857. Longitude range: -180 to 180. Latitude range: -85 to 85. \n\nNote: Either center or bbox are required parameters. They are\nmutually exclusive.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Bounding box. Projection used - EPSG:3857. Format : 'minLon, minLat,\nmaxLon, maxLat'. \n\nNote: Either bbox or center are required\nparameters. They are mutually exclusive. It shouldn’t be used with\nheight or width.\n\nThe maximum allowed ranges for Lat and Lon are defined for each zoom level\nin the table at the top of this page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "description": "Height of the resulting image in pixels. Range is 1 to 8192. Default\nis 512. It shouldn’t be used with bbox.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 8192,
            "default": 512
          },
          {
            "name": "width",
            "in": "query",
            "description": "Width of the resulting image in pixels. Range is 1 to 8192. Default is 512. It shouldn’t be used with bbox.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 8192,
            "default": 512
          },
          {
            "$ref": "#/parameters/Language"
          },
          {
            "$ref": "#/parameters/View"
          },
          {
            "name": "pins",
            "description": "Pushpin style and instances. Use this parameter to optionally add pushpins to the image.\nThe pushpin style describes the appearance of the pushpins, and the instances specify\nthe coordinates of the pushpins and optional labels for each pin. (Be sure to properly URL-encode values of this\nparameter since it will contain reserved characters such as pipes and punctuation.)\n\nThe Azure Maps account S0 SKU only supports a single instance of the pins parameter. Other SKUs\nallow multiple instances of the pins parameter to specify multiple pin styles.\n\nTo render a pushpin at latitude 45°N and longitude 122°W using the default built-in pushpin style, add the\nquerystring parameter \n\n`pins=default||-122 45` \n\nNote that the longitude comes before the latitude.\nAfter URL encoding this will look like\n\n`pins=default%7C%7C-122+45`\n\nAll of the examples here show the pins\nparameter without URL encoding, for clarity.\n\nTo render a pin at multiple locations, separate each location with a pipe character. For example, use\n\n`pins=default||-122 45|-119.5 43.2|-121.67 47.12`\n\nThe S0 Azure Maps account SKU only allows five pushpins. Other account SKUs do not have this limitation.\n\n### Style Modifiers\n\nYou can modify the appearance of the pins by adding style modifiers. These are added after the style but before\nthe locations and labels. Style modifiers each have a two-letter name. These abbreviated names are used to help\nreduce the length of the URL.\n\nTo change the color of the pushpin, use the 'co' style modifier and specify the color using the HTML/CSS RGB color\nformat which is a six-digit hexadecimal number (the three-digit form is not supported). For example, to use\na deep pink color which you would specify as #FF1493 in CSS, use\n\n`pins=default|coFF1493||-122 45`\n\n### Pushpin Labels\n\nTo add a label to the pins, put the label in single quotes just before the coordinates. For example, to label\nthree pins with the values '1', '2', and '3', use\n\n`pins=default||'1'-122 45|'2'-119.5 43.2|'3'-121.67 47.12`\n\nThere is a built in pushpin style called 'none' that does not display a pushpin image. You can use this if\nyou want to display labels without any pin image. For example,\n\n`pins=none||'A'-122 45|'B'-119.5 43.2`\n\nTo change the color of the pushpin labels, use the 'lc' label color style modifier. For example, to use pink\npushpins with black labels, use\n\n`pins=default|coFF1493|lc000000||-122 45`\n\nTo change the size of the labels, use the 'ls' label size style modifier. The label size represents the approximate\nheight of the label text in pixels. For example, to increase the label size to 12, use\n\n`pins=default|ls12||'A'-122 45|'B'-119 43`\n\nThe labels are centered at the pushpin 'label anchor.' The anchor location is predefined for built-in pushpins and\nis at the top center of custom pushpins (see below). To override the label anchor, using the 'la' style modifier\nand provide X and Y pixel coordinates for the anchor. These coordinates are relative to the top left corner of the\npushpin image. Positive X values move the anchor to the right, and positive Y values move the anchor down. For example,\nto position the label anchor 10 pixels right and 4 pixels above the top left corner of the pushpin image,\nuse\n\n`pins=default|la10 -4||'A'-122 45|'B'-119 43`\n\n### Custom Pushpins\n\nTo use a custom pushpin image, use the word 'custom' as the pin style name, and then specify a URL after the\nlocation and label information. Use two pipe characters to indicate that you're done specifying locations and are\nstarting the URL. For example,\n\n`pins=custom||-122 45||http://contoso.com/pushpins/red.png`\n\nAfter URL encoding, this would look like\n\n`pins=custom%7C%7C-122+45%7C%7Chttp%3A%2F%2Fcontoso.com%2Fpushpins%2Fred.png`\n\nBy default, custom pushpin images are drawn centered at the pin coordinates. This usually isn't ideal as it obscures\nthe location that you're trying to highlight. To override the anchor location of the pin image, use the 'an'\nstyle modifier. This uses the same format as the 'la' label anchor style modifier. For example, if your custom\npin image has the tip of the pin at the top left corner of the image, you can set the anchor to that spot by\nusing\n\n`pins=custom|an0 0||-122 45||http://contoso.com/pushpins/red.png`\n\nNote: If you use the 'co' color modifier with a custom pushpin image, the specified color will replace the RGB \nchannels of the pixels in the image but will leave the alpha (opacity) channel unchanged. This would usually\nonly be done with a solid-color custom image.\n\n### Getting Pushpins from Azure Maps Data Storage\n\nFor all Azure Maps account SKUs other than S0,\nthe pushpin image and location information can be obtained from Azure Maps Data Storage. After uploading a pushpin image\nor a GeoJSON document containing pin locations, the Data Storage service returns a Unique Data ID (UDID) that you can use\nto reference the data in the pins parameter.\n\nTo use a custom pushpin image from Azure Maps Data Storage, specify the UDID prefixed by 'udid-' as the name of the\npushpin style. For example,\n\n`pins=udid-fe22c504-3a81-4fcd-adc6-a3507ce866c1||-122 45`\n\nTo use the point geometry from an uploaded GeoJSON document as the pin locations, specify the UDID in the locations\nsection of the pins parameter. For example,\n\n`pins=default||udid-29dc105a-dee7-409f-a3f9-22b066ae4713`\n\nNote that\nonly point and multipoint geometry, points and multipoints from geometry collections, and point geometry from features\nwill be used. Linestring and polygon geometry will be ignored. If the point comes from a feature and the feature\nhas a string property called \"label\", the value of that property will be used as the label for the pin.\n\nYou can mix pin locations from Data Storage and pin locations specified in the pins parameter. Any of the pipe-delimited\npin locations can be a longitude and latitude or a UDID. For example,\n\n`pins=default||-122 45|udid-29dc105a-dee7-409f-a3f9-22b066ae4713|-119 43`\n\n### Scale, Rotation, and Opacity\n\nYou can make pushpins and their labels larger or smaller by using the 'sc' scale style modifier. This is a\nvalue greater than zero. A value of 1 is the standard scale. Values larger than 1 will make the pins larger, and\nvalues smaller than 1 will make them smaller. For example, to draw the pushpins 50% larger than normal, use\n\n`pins=default|sc1.5||-122 45`\n\nYou can rotate pushpins and their labels by using the 'ro' rotation style modifier. This is a number of degrees\nof clockwise rotation. Use a negative number to rotate counter-clockwise. For example, to rotate the pushpins\n90 degrees clockwise and double their size, use\n\n`pins=default|ro90|sc2||-122 45`\n\nYou can make pushpins and their labels partially transparent by specifying the 'al' alpha style modifier.\nThis is a number between 0 and 1 indicating the opacity of the pushpins. Zero makes them completely transparent\n(and not visible) and 1 makes them completely opaque (which is the default). For example, to make pushpins\nand their labels only 67% opaque, use\n\n`pins=default|al.67||-122 45`\n\n### Style Modifier Summary\n\nModifier  | Description     | Range            \n:--------:|-----------------|------------------\nal        | Alpha (opacity) | 0 to 1           \nan        | Pin anchor      | *                \nco        | Pin color       | 000000 to FFFFFF \nla        | Label anchor    | *                \nlc        | Label color     | 000000 to FFFFFF \nls        | Label size      | Greater than 0   \nro        | Rotation        | -360 to 360      \nsc        | Scale           | Greater than 0   \n\n* X and Y coordinates can be anywhere within pin image or a margin around it.\nThe margin size is the minimum of the pin width and height.",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "x-publish": true
          },
          {
            "name": "path",
            "description": "Path style and locations. Use this parameter to optionally add lines, polygons or circles to the image.\nThe path style describes the appearance of the line and fill. (Be sure to properly URL-encode values of this\nparameter since it will contain reserved characters such as pipes and punctuation.)\n\nPath parameter is supported in Azure Maps account SKU starting with S1. Multiple instances of the path parameter \nallow to specify multiple geometries with their styles. Number of parameters per request is limited to 10 and\nnumber of locations is limited to 100 per path.\n\nTo render a circle with radius 100 meters and center point at latitude 45°N and longitude 122°W using the default style, add the\nquerystring parameter \n\n`path=ra100||-122 45` \n\nNote that the longitude comes before the latitude.\nAfter URL encoding this will look like\n\n`path=ra100%7C%7C-122+45`\n\nAll of the examples here show the path parameter without URL encoding, for clarity.\n\nTo render a line, separate each location with a pipe character. For example, use\n\n`path=||-122 45|-119.5 43.2|-121.67 47.12`\n\nTo render a polygon, last location must be equal to the start location. For example, use\n\n`path=||-122 45|-119.5 43.2|-121.67 47.12|-122 45`\n\nLongitude and latitude values for locations of lines and polygons can be in the range from -360 to 360 to allow for rendering of geometries crossing the anti-meridian.\n\n### Style Modifiers\n\nYou can modify the appearance of the path by adding style modifiers. These are added before the locations. \nStyle modifiers each have a two-letter name. These abbreviated names are used to help reduce the length\nof the URL.\n\nTo change the color of the outline, use the 'lc' style modifier and specify the color using the HTML/CSS RGB color\nformat which is a six-digit hexadecimal number (the three-digit form is not supported). For example, to use\na deep pink color which you would specify as #FF1493 in CSS, use\n\n`path=lcFF1493||-122 45|-119.5 43.2`\n\nMultiple style modifiers may be combined together to create a more complex visual style.\n\n`lc0000FF|lw3|la0.60|fa0.50||-122.2 47.6|-122.2 47.7|-122.3 47.7|-122.3 47.6|-122.2 47.6`\n\n### Getting Path locations from Azure Maps Data Storage\n\nFor all Azure Maps account SKUs other than S0, the path location information can be obtained from Azure Maps Data Storage. \nAfter uploading a GeoJSON document containing path locations, the Data Storage service returns a Unique Data ID (UDID) that you can use\nto reference the data in the path parameter.\n\nTo use the point geometry from an uploaded GeoJSON document as the path locations, specify the UDID in the locations\nsection of the path parameter. For example,\n\n`path=||udid-29dc105a-dee7-409f-a3f9-22b066ae4713`\n\nNote the it is not allowed to mix path locations from Data Storage with locations specified in the path parameter. \n\n### Style Modifier Summary\n\nModifier  | Description            | Range            \n:--------:|------------------------|------------------\nlc        | Line color             | 000000 to FFFFFF\nfc        | Fill color             | 000000 to FFFFFF\nla        | Line alpha (opacity)   | 0 to 1           \nfa        | Fill alpha (opacity)   | 0 to 1           \nlw        | Line width             | Greater than 0            \nra        | Circle radius (meters) | Greater than 0",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "x-publish": true
          }
        ],
        "produces": [
          "application/json",
          "image/jpeg",
          "image/png"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapStaticResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/tile/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nFetches map tiles in vector or raster format typically to be integrated into a new map control or SDK. By default, Azure uses vector map tiles for its web map control (see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid))\n\n**Note**: Weather tiles are only available via [Get Map Tile V2 API](https://aka.ms/AzureMapsWeatherTiles). We recommend to start to use the new [Get Map Tile V2 API](https://aka.ms/GetMapTileV2).",
        "operationId": "Render_GetMapTile",
        "x-ms-examples": {
          "GetMapTile": {
            "$ref": "./examples/GetMapTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TileFormat"
          },
          {
            "name": "layer",
            "in": "query",
            "description": "Map layer requested. Possible values are basic, hybrid, labels and terra.",
            "required": true,
            "enum": [
              "basic",
              "hybrid",
              "labels",
              "terra"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MapTileLayer",
              "modelAsString": true,
              "values": [
                {
                  "value": "basic",
                  "description": "Returns a tile containing all map features including polygons, borders, roads and labels."
                },
                {
                  "value": "hybrid",
                  "description": "Returns a tile containing borders, roads, and labels, and can be overlaid on other tiles (such as satellite imagery) to produce hybrid tiles."
                },
                {
                  "value": "labels",
                  "description": "Returns a tile of just the map's label information."
                },
                {
                  "value": "terra",
                  "description": "Map canvas complete with shaded relief tiles. Zoom levels 0-6 (inclusive) are supported. Png is the only supported TileFormat and only available MapTileSize is 512."
                }
              ]
            }
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. Possible values are main, dark, and shaded_relief.",
            "required": true,
            "type": "string",
            "enum": [
              "main",
              "dark",
              "shaded_relief"
            ],
            "x-ms-enum": {
              "name": "MapTileStyle",
              "modelAsString": true,
              "values": [
                {
                  "value": "main",
                  "description": "Azure Maps main style"
                },
                {
                  "value": "dark",
                  "description": "Dark grey version of the Azure Maps main style. PNG is the only supported TileFormat."
                },
                {
                  "value": "shaded_relief",
                  "description": "Azure Maps main style completed with shaded relief. Supported by Layer terra."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/RasterVectorNaturalEarthZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          },
          {
            "name": "tileSize",
            "in": "query",
            "description": "The size of the returned map tile in pixels.",
            "required": false,
            "type": "string",
            "default": "256",
            "enum": [
              "256",
              "512"
            ],
            "x-ms-enum": {
              "name": "MapTileSize",
              "modelAsString": true,
              "values": [
                {
                  "value": "256",
                  "description": "Return a 256 by 256 pixel tile."
                },
                {
                  "value": "512",
                  "description": "Return a 512 by 512 pixel tile."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Language"
          },
          {
            "$ref": "#/parameters/View"
          }
        ],
        "produces": [
          "application/json",
          "image/jpeg",
          "image/png"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapTileResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/statetile": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nFetches state tiles in vector format typically to be integrated into indoor maps module of map control or SDK. The map control will call this API after user turns on dynamic styling (see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid))",
        "operationId": "Render_GetMapStateTilePreview",
        "x-ms-examples": {
          "GetMapStateTile": {
            "$ref": "./examples/GetMapStateTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VectorZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          },
          {
            "name": "statesetId",
            "in": "query",
            "description": "The stateset id.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "produces": [
          "application/vnd.mapbox-vector-tile",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapStateTileResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/caption/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\n\nCopyrights API is designed to serve copyright information for Render Tile \nservice. In addition to basic copyright for the whole map, API is serving \nspecific groups of copyrights for some countries.\n\nAs an alternative to copyrights for map request, one can receive captions\nfor displaying the map provider information on the map.",
        "operationId": "Render_GetCopyrightCaption",
        "x-ms-examples": {
          "GetCopyrightCaption": {
            "$ref": "./examples/GetCopyrightCaption.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightCaptionResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/imagery/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to:** S1 pricing tier.\n\n\nThis service returns a map image tile with size 256x256, given the x and y coordinates and zoom\nlevel. Zoom level ranges from 1 to 19. The current available style value is 'satellite' which provides satellite\nimagery alone.\n\n\n**Note**: We recommend to start to use the new [Get Map Tile V2 API](https://aka.ms/GetMapTileV2).",
        "operationId": "Render_GetMapImageryTile",
        "x-ms-examples": {
          "GetMapImagery": {
            "$ref": "./examples/GetMapImageryTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/RasterTileFormat"
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. __Possible values:__ satellite.",
            "required": true,
            "type": "string",
            "enum": [
              "satellite"
            ],
            "x-ms-enum": {
              "name": "MapImageryStyle",
              "modelAsString": true,
              "values": [
                {
                  "value": "satellite",
                  "description": "Satellite imagery"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/ImageryRasterZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          }
        ],
        "produces": [
          "application/json",
          "image/jpeg",
          "image/png"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapImageryResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/bounding/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nReturns copyright information for a given bounding box. Bounding-box requests should specify the minimum and maximum longitude and latitude (EPSG-3857) coordinates",
        "operationId": "Render_GetCopyrightFromBoundingBox",
        "x-ms-examples": {
          "GetCopyrightBounding": {
            "$ref": "./examples/GetCopyrightFromBoundingBox.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "name": "mincoordinates",
            "in": "query",
            "description": "Minimum coordinates of bounding box in latitude longitude coordinate system. E.g. 52.41064,4.84228",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxcoordinates",
            "in": "query",
            "description": "Maximum coordinates of bounding box in latitude longitude coordinate system. E.g. 52.41064,4.84228",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightBoundingResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/tile/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\n\nCopyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.\nReturns the copyright information for a given tile. To obtain the copyright information for a particular tile, the request should specify the tile's zoom level and x and y coordinates (see: Zoom Levels and Tile Grid).",
        "operationId": "Render_GetCopyrightForTile",
        "x-ms-examples": {
          "GetCopyrightTile": {
            "$ref": "./examples/GetCopyrightForTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "$ref": "#/parameters/RasterZoom18"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightTileResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/world/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nCopyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.\nReturns the copyright information for the world. To obtain the default copyright information for the whole world, do not specify a tile or bounding box.",
        "operationId": "Render_GetCopyrightForWorld",
        "x-ms-examples": {
          "GetCopyrightWorld": {
            "$ref": "./examples/GetCopyrightForWorld.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightWorldResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    }
  },
  "definitions": {
    "ODataErrorResponse": {
      "type": "object",
      "description": "This response object is returned when an error occurs in the Maps API.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError"
        }
      }
    },
    "ODataError": {
      "type": "object",
      "description": "This object is returned when an error occurs in the Maps API.",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The ODataError code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "If available, a human readable description of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          }
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "If available, the target causing the error."
        }
      }
    },
    "CopyrightBoundingResult": {
      "description": "This object is returned from a successful Copyright Bounding call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "copyrights": {
          "description": "Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "country": {
          "description": "Country property",
          "type": "object",
          "readOnly": true,
          "properties": {
            "ISO3": {
              "description": "ISO3 property",
              "type": "string",
              "readOnly": true
            },
            "label": {
              "description": "Label property",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "CopyrightCaptionResult": {
      "description": "This object is returned from a successful Copyright Caption call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "copyrightsCaption": {
          "description": "Copyrights Caption property",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CopyrightWorldResult": {
      "description": "This object is returned from a successful Copyright World call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "CopyrightTileResult": {
      "description": "This object is returned from a successful Copyright Tile call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "MapStaticResult": {
      "description": "This image is returned from a successful Map Static call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapTileResult": {
      "description": "This image is returned from a successful Map Tile call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapStateTileResult": {
      "description": "This tile is returned from a successful Map State Tile call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapImageryResult": {
      "description": "This image is returned from a successful Map Imagery call",
      "type": "object",
      "format": "file",
      "readOnly": true
    }
  }
}
