{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Asynchronous Batch Management Service",
    "version": "2024-07-01-preview",
    "description": "Azure Maps Asynchronous Batch Management REST APIs"
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{geography}.atlas.microsoft.com",
    "parameters": [
      {
        "$ref": "../../../Common/stable/2023-06-01/common.json#/parameters/GeographicResourceLocation"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [],
  "security": [
    {
      "AADToken": [
        "https://atlas.microsoft.com/.default"
      ]
    },
    {
      "AzureKey": []
    },
    {
      "SasToken": []
    }
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "description": "These are the [Microsoft Entra OAuth 2.0](/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n> [!NOTE]\n> * This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n> * The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Microsoft Entra ID configurations. \n> * The Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n> * Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n> *  For more information on Microsoft identity platform, see [Microsoft identity platform overview](/entra/identity-platform/v2-overview).\n\n",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://atlas.microsoft.com/.default": "https://atlas.microsoft.com/.default"
      }
    },
    "AzureKey": {
      "type": "apiKey",
      "description": "This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n\n With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.\n\n For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "header"
    },
    "SasToken": {
      "type": "apiKey",
      "description": "This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n\n With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.\n\n For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.",
      "name": "SAS Token",
      "in": "header"
    }
  },
  "paths": {
    "/asyncBatch/operations": {
      "get": {
        "operationId": "AsynchronousBatchManagement_ListAllOperations",
        "description": "List the status of all asynchronous batch operations available to the user.",
        "parameters": [
          {
            "$ref": "../../../Common/stable/2023-06-01/common.json#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsyncBatchOperationsList"
            }
          },
          "default": {
            "description": "An unexpected error occurred.",
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code of the error that occurred."
              }
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get operations with various status": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/asyncBatch/operations/{id}": {
      "get": {
        "operationId": "AsynchronousBatchManagement_GetOperation",
        "description": "Get the status of an asynchronous batch operation by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AsyncBatchOperation"
            }
          },
          "default": {
            "description": "An unexpected error occurred.",
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code of the error that occurred."
              }
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get a completed operation status": {
            "$ref": "./examples/GetOperationStatusCompleted.json"
          },
          "Get a failed operation status": {
            "$ref": "./examples/GetOperationStatusFailed.json"
          },
          "Get a not started operation status": {
            "$ref": "./examples/GetOperationStatusNotStarted.json"
          },
          "Get a running operation status": {
            "$ref": "./examples/GetOperationStatusRunning.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AsyncBatchOperation": {
      "type": "object",
      "description": "This object is returned from a successful Get Operation request.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the asynchronous batch operation."
        },
        "kind": {
          "type": "string",
          "description": "Kind of asynchronous batch operation",
          "enum": [
            "Geocode",
            "ReverseGeocode",
            "RouteDirections"
          ],
          "x-ms-enum": {
            "name": "KindEnum",
            "modelAsString": true,
            "values": [
              {
                "value": "Geocode",
                "description": "Forward geocode asynchronous batch job."
              },
              {
                "value": "ReverseGeocode",
                "description": "Reverse geocode asynchronous batch job."
              },
              {
                "value": "RouteDirections",
                "description": "Route directions asynchronous batch job."
              }
            ]
          }
        },
        "inputContainerUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI for the Azure Data Storage container with the input blobs to be processed.\n\nIf new files are added after job processing start, these will not be accounted for.\n\nService does not recursively check blobs inside sub-containers."
        },
        "outputContainerUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI for the Azure Data Storage container where the output blobs will be stored.\n\nIf outputContainerUri doesn't exist, the container will be created by the service during transformation.\n\nIf one or multiple files with same name already exist in output path, behavior is different depends on the allowBlobOverwrite flag.\n\nFor any given input blob, the resolved result is named with the format \"<originalBasename>.rsp.json.\""
        },
        "allowBlobOverwrite": {
          "type": "boolean",
          "description": "If a blob with the same name as the batch result output already exists in the output container, the transformation will terminate to avoid overwriting the existing blob and fail that specific blob. If allowBlobOverwrite option is set to true, the existing blob will be overwritten."
        },
        "msiClientId": {
          "type": "string",
          "description": "Client ID of a user-assigned managed identity. This is used for authentication and authorization purposes. If the managed identity is system-assigned, this field can be null."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the operation was created."
        },
        "lastActionDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the operation status was updated."
        },
        "processedBlobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Indicate how many input blobs have been transformed."
        },
        "totalBlobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Indicate how many input blobs to transform."
        },
        "status": {
          "type": "string",
          "description": "Current status of the batch operation.",
          "enum": [
            "NotStarted",
            "Running",
            "Completed",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "StatusEnum",
            "modelAsString": true,
            "values": [
              {
                "value": "NotStarted",
                "description": "The operation has not started yet."
              },
              {
                "value": "Running",
                "description": "The operation is running."
              },
              {
                "value": "Completed",
                "description": "The operation has completed."
              },
              {
                "value": "Failed",
                "description": "The operation has failed."
              },
              {
                "value": "Canceled",
                "description": "The operation has been canceled."
              }
            ]
          }
        },
        "error": {
          "type": "object",
          "description": "The error detail.",
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "The error message.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "id",
        "kind",
        "inputContainerUri",
        "outputContainerUri",
        "createdDateTime",
        "lastActionDateTime",
        "processedBlobCount",
        "totalBlobCount",
        "status"
      ]
    },
    "AsyncBatchOperationsList": {
      "type": "object",
      "description": "This object is returned from a successful Get Specific Operations request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array containing the details of operations",
          "items": {
            "$ref": "#/definitions/AsyncBatchOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The is the link to the next page of the features returned. If it's the last page, this is null."
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Version number of Azure Maps API.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "Id": {
      "name": "id",
      "in": "path",
      "description": "System generated unique identifier for the asynchronous batch operation after it has been submitted.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
    }
  },
  "responses": {}
}
