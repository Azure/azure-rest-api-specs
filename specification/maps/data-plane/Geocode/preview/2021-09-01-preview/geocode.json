{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Geocode Service",
    "version": "2021-09-01-preview",
    "description": "Azure Maps Geocode REST APIs"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure role-based access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "https://atlas.microsoft.com/.default": "https://atlas.microsoft.com/.default"
      }
    },
    "AzureKey": {
      "type": "apiKey",
      "description": "This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n\n With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.\n\n For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "header"
    }
  },
  "security": [
    {
      "AADToken": [
        "https://atlas.microsoft.com/.default"
      ]
    },
    {
      "AzureKey": []
    }
  ],
  "responses": {},
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 2021-09-01-preview",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "2021-09-01-preview",
      "x-ms-parameter-location": "client"
    },
    "maxResult": {
      "name": "maxResult",
      "in": "query",
      "description": "Maximum number of responses that will be returned. Default: 5, minimum: 1 and maximum: 20.",
      "required": false,
      "type": "integer",
      "default": 5,
      "minimum": 1,
      "maximum": 20,
      "x-ms-parameter-location": "method"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "in": "header",
      "description": "Language in which search results should be returned. \n\nPlease refer to [Supported Languages](https://docs.microsoft.com/en-us/bingmaps/rest-services/common-parameters-and-types/supported-culture-codes) for details.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "location": {
      "name": "location",
      "in": "query",
      "description": "A point on the earth specified as a latitude and longitude. When you specify this parameter, the userâ€™s location is taken into account and the results returned may be more relevant to the user. Example: &location=lon,lat",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "bbox": {
      "name": "bbox",
      "in": "query",
      "description": "A rectangular area on the earth defined as a bounding box object. The sides of the rectangles are defined by latitude and longitude values. For more information, see Location and Area Types. When you specify this parameter, the geographical area is taken into account when computing the results of a location query.\n\nExample: lon1,lat1,lon2,lat2",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "view": {
      "name": "view",
      "in": "query",
      "description": "A string that an [ISO 3166-1 Alpha-2 region/country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). This will alter Geopolitical disputed borders and labels to align with the specified user region.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CountryRegionSet": {
      "name": "countryRegionSet",
      "in": "query",
      "description": "Comma separated string of country or region codes, e.g. FR,ES. This will limit the search to the specified countries. Only the first country code will be used for the Geocoder.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "csv",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/geocode": {
      "get": {
        "description": "**Geocoding**\n\n**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nIn many cases, the complete search service might be too much, for instance if you are only interested in traditional geocoding. Search can also be accessed for address look up exclusively. The geocoding is performed by hitting the geocode endpoint with just the address or partial address in question. The geocoding search index will be queried for everything above the street level data. No POIs will be returned. Note that the geocoder is very tolerant of typos and incomplete addresses. It will also handle everything from exact street addresses or street or intersections as well as higher level geographies such as city centers, counties, states etc.",
        "operationId": "Geocode_GetGeocode",
        "x-ms-examples": {
          "Search detail address 15127 NE 24th Street, Redmond, WA 98052": {
            "$ref": "./examples/ForwardGeocode.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          },
          {
            "$ref": "#/parameters/maxResult"
          },
          {
            "name": "addressLine",
            "in": "query",
            "description": "The official street line of an address relative to the area, as specified by the locality, or postalCode, properties. Typical use of this element would be to provide a street address or any official address.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/CountryRegionSet"
          },
          {
            "$ref": "#/parameters/bbox"
          },
          {
            "$ref": "#/parameters/view"
          },
          {
            "$ref": "#/parameters/location"
          },
          {
            "name": "adminDistrict",
            "in": "query",
            "description": "The country subdivision portion of an address, such as WA.",
            "required": false,
            "type": "string"
          },
          {
            "name": "adminDistrict2",
            "in": "query",
            "description": "The county for the structured address, such as King.",
            "required": false,
            "type": "string"
          },
          {
            "name": "adminDistrict3",
            "in": "query",
            "description": "The named area for the structured address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locality",
            "in": "query",
            "description": "The locality portion of an address, such as Seattle.",
            "required": false,
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "The postal code portion of an address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "strictMatch",
            "in": "query",
            "description": "Restrict the geocode result to the country or region that is specified in the countryRegion field and the state, province or territory specified in the adminDistrict field.\n\nOne of the following values:\n- 1: Restrict results to the specified countryRegion and adminDistrict.\n- 0 [default]: Do not restrict results to the specified countryRegion and adminDistrict.\nExample:\nstrictMatch=1",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchAddressResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request contained an error",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "401": {
            "description": "Access was denied. You may have entered your credentials incorrectly, or you might not have access to the requested resource or operation.",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "The request is for something forbidden. Authorization will not help.",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time. The account is being rate limited.",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "500": {
            "description": "Your request could not be completed because there was a problem with the service.",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "There's a problem with the service right now. Please try again later.",
            "headers": {
              "x-ms-request-id": {
                "description": "request id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "default": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/default"
          }
        }
      }
    },
    "/geocode/batch": {
      "post": {
        "description": "**Geocode Batch API**\n\n\n**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\n\n\nThe Geocode Batch API sends batches of queries to [Geocode API](https://docs.microsoft.com/en-us/rest/api/maps/geocode) using just a single API call. The API allows caller to batch up to **100** queries.\n### Submit Synchronous Batch Request\nThe Synchronous API is recommended for lightweight batch requests. When the service receives a request, it will respond as soon as the batch items are calculated and there will be no possibility to retrieve the results later. The Synchronous API will return a timeout error (a 408 response) if the request takes longer than 60 seconds. The number of batch items is limited to **100** for this API.\n```\nPOST https://atlas.microsoft.com/geocode/batch?api-version=1.0&subscription-key={subscription-key}\n```\n### POST Body for Batch Request\nTo send the _geocode_ queries you will use a `POST` request where the request body will contain the `batchItems` array in `json` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 2 _geocode_ queries:\n\n\n```json\n{\n    \"batchItems\": [\n        {\"query\": \"?addressLine=Pike Pl&adminDistrict=WA&locality=Seattle&maxResult=3\"},\n        {\"query\": \"?addressLine=One, Microsoft Way, Redmond, WA 98052&maxResult=2\"}\n    ]\n}\n```\n\nA _geocode_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _geocode_ [URI parameters](https://docs.microsoft.com/en-us/rest/api/maps/geocode/get-geocode#uri-parameters). The string values in the _geocode_ query must be properly escaped (e.g. \" character should be escaped with \\\\ ) and it should also be properly URL-encoded.\n\n\nThe batch should contain at least **1** query.\n\n\n### Batch Response Model\nThe batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests` i.e. queries which were executed successfully. The batch response also includes a `batchItems` array which contains a response for each and every query in the batch request. The `batchItems` will contain the results in the exact same order the original queries were sent in the batch request. Each item is of one of the following types:\n\n  - [`SearchAddressResponse`](https://docs.microsoft.com/en-us/rest/api/maps/geocode/get-geocode##searchaddressresponse) - If the query completed successfully.\n\n  - `Error` - If the query failed. The response will contain a `code` and a `message` in this case.\n\n\n",
        "operationId": "Geocode_PostGeocodeBatch",
        "x-ms-examples": {
          "An Address Geocoding Batch API call containing 2 Address Geocoding API queries": {
            "$ref": "./examples/ForwardGeocodeBatch.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          },
          {
            "name": "geocodeBatchRequestBody",
            "in": "body",
            "description": "The list of address geocoding queries/requests to process. The list can contain a max of 100 queries and must contain at least 1 query.",
            "required": true,
            "schema": {
              "$ref": "../../../Common/preview/1.0/common.json#/definitions/BatchRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchAddressBatchResponse"
            }
          },
          "default": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/default"
          }
        }
      }
    }
  },
  "definitions": {
    "GeoJSONPoint": {
      "type": "object",
      "description": "A structure for Point Geometry",
      "properties": {
        "type": {
          "description": "Specifies the `type` for the geometry. Value should always be equal to \"Point\".",
          "type": "string",
          "enum": [
            "Point"
          ]
        },
        "coordinates": {
          "description": "Coordinates for the `Point` geometry.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "bbox": {
      "description": "information on the coordinate range for point Geometry.  Please refer to [RFC 7946](https://datatracker.ietf.org/doc/html/rfc7946#section-5) for details.",
      "type": "array",
      "minItems": 4,
      "maxItems": 4,
      "items": {
        "type": "number",
        "format": "double"
      }
    },
    "geocodePoints": {
      "description": "A collection of geocode points that differ in how they were calculated and their suggested use. For a description of the points in this collection, see the Geocode Point Fields",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "geometry": {
            "$ref": "#/definitions/GeoJSONPoint"
          },
          "calculationMethod": {
            "type": "string",
            "enum": [
              "Interpolation",
              "InterpolationOffset",
              "Parcel",
              "Rooftop"
            ]
          },
          "usageTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Display",
                "Route"
              ]
            }
          }
        }
      }
    },
    "SearchAddressBatchResponse": {
      "description": "This object is returned from a successful Geocode  Batch service call.",
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "../../../Common/preview/1.0/common.json#/definitions/BatchResponse"
        },
        "batchItems": {
          "description": "Array containing the batch results.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SearchAddressResponse"
          }
        }
      }
    },
    "SearchAddressResponse": {
      "description": "This object is returned from a successful Search Address call",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FeatureCollection"
          ]
        },
        "summary": {
          "description": "Summary object for a Geocode response",
          "type": "object",
          "readOnly": true,
          "properties": {
            "query": {
              "description": "Query property",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "features": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "must be Feature",
                "enum": ["Feature"]
              },
              "id": {
                "type": "string",
                "description": "ID for feature returned"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "One of: \n* Address\n* RoadBlock\n* RoadIntersection",
                    "readOnly": true
                  },
                  "confidence": {
                    "$ref": "#/definitions/confidence"
                  },
                  "matchCodes": {
                    "$ref": "#/definitions/matchCodes"
                  },
                  "address": {
                    "$ref": "#/definitions/SearchResultAddress"
                  },
                  "geocodePoints": {
                    "$ref": "#/definitions/geocodePoints"
                  }
                }
              },
              "geometry": {
                "$ref": "#/definitions/GeoJSONPoint"
              },
              "bbox": {
                "$ref": "#/definitions/bbox"
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The is the link to the next page of the features returned. If it's the last page, no this field."
        }
      }
    },
    "SearchResultAddress": {
      "description": "The address of the result",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "AddressLine that includes Street Name and Number",
          "type": "string",
          "readOnly": true
        },
        "locality": {
          "description": "locality property",
          "type": "string",
          "readOnly": true
        },
        "neighborhood": {
          "description": "neighborhood property",
          "type": "string",
          "readOnly": true
        },
        "adminDistricts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name for the corresponding adminDistrict field, \nFor adminDistrict[0], this could be full name of state such as Washington, \nFor adminDistrict[1], this could be the full name of the county"
              },
              "shortName": {
                "type": "string",
                "description": "The short name for the corresponding adminDistrict field, \nFor adminDistrict[0], this could be short name of state such as WA, \nFor adminDistrict[1], this could be the short name of the county"
              }
            }
          }
        },
        "postalCode": {
          "description": "Postal Code property",
          "type": "string",
          "readOnly": true
        },
        "countryRegion": {
          "type": "object",
          "properties": {
            "ISO": {
              "description": "ISO of country/region",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "name of country/region",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "formattedAddress": {
          "description": "Formatted Address property",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "matchCodes": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Good",
          "Ambiguous",
          "UpHierarchy"
        ]
      }
    },
    "confidence": {
      "type": "string",
      "enum": [
        "High",
        "Medium",
        "Low"
      ]
    }
  }
}
