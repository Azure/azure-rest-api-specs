{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Common Types",
    "version": "1.0"
  },
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "LongRunningOperationResult": {
      "description": "The response model for a Long-Running Operations API.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The Id for this long-running operation.",
          "type": "string"
        },
        "status": {
          "description": "The status state of the request.",
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "LroStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "NotStarted",
                "description": "The request has not started processing yet."
              },
              {
                "value": "Running",
                "description": "The request has started processing."
              },
              {
                "value": "Failed",
                "description": "The request has one or more failures."
              },
              {
                "value": "Succeeded",
                "description": "The request has successfully completed."
              }
            ]
          },
          "readOnly": true
        },
        "created": {
          "description": "The created timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorDetail"
        },
        "warning": {
          "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorDetail"
        }
      }
    },
    "BatchRequest": {
      "description": "This type represents the request body for the Batch service.",
      "type": "object",
      "properties": {
        "batchItems": {
          "description": "The list of queries to process.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchRequestItem"
          }
        }
      }
    },
    "BatchRequestItem": {
      "description": "Batch request object",
      "type": "object",
      "properties": {
        "query": {
          "description": "This parameter contains a query string used to perform an unstructured geocoding operation. The query string will be passed verbatim to the search API for processing.",
          "type": "string",
          "example": "?query=One, Microsoft Way, Redmond, WA 98052&limit=3"
        }
      }
    },
    "BatchResult": {
      "description": "This object is returned from a successful Batch service call. Extend with 'batchItems' property.",
      "type": "object",
      "properties": {
        "summary": {
          "description": "Summary of the results for the batch request",
          "x-ms-client-name": "BatchSummary",
          "type": "object",
          "readOnly": true,
          "properties": {
            "successfulRequests": {
              "description": "Number of successful requests in the batch",
              "type": "integer",
              "readOnly": true
            },
            "totalRequests": {
              "description": "Total number of requests in the batch",
              "type": "integer",
              "readOnly": true
            }
          }
        }
      }
    },
    "BatchResultItem": {
      "description": "An item returned from Batch API. Extend with 'response' property.",
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "HTTP request status code.",
          "type": "integer",
          "readOnly": true,
          "example": 200
        }
      }
    },
    "LatLongPair": {
      "description": "A location represented as a latitude and longitude.",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude property",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "Longitude property",
          "type": "number",
          "format": "double"
        }
      }
    },
    "LatLongPairAbbreviated": {
      "description": "A location represented as a latitude and longitude using short names 'lat' & 'lon'.",
      "type": "object",
      "properties": {
        "lat": {
          "description": "Latitude property",
          "type": "number",
          "format": "double"
        },
        "lon": {
          "description": "Longitude property",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BoundingBox": {
      "x-ms-client-name": "boundingBox",
      "description": "Bounding box. Projection used - EPSG:3857. Format : 'minLon, minLat, maxLon, maxLat'.",
      "type": "array",
      "readOnly": true,
      "items": {
        "type": "number",
        "format": "double"
      }
    },
    "GeoJsonPosition": {
      "description": "A `Position` is an array of numbers with two or more elements. The first two elements are _longitude_ and _latitude_, precisely in that order. _Altitude/Elevation_ is an optional third element. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.1) for details.",
      "type": "array",
      "items": {
        "type": "number",
        "format": "double"
      }
    },
    "GeoJsonLinearRing": {
      "description": "Though a linear ring is not explicitly represented as a GeoJSON geometry type, it helps in defining the polygon as an array of linear rings. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GeoJsonPosition"
      }
    },
    "GeoJsonObject": {
      "description": "A valid `GeoJSON` object. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3) for details.",
      "type": "object",
      "discriminator": "type",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.",
          "type": "string",
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection",
            "Feature",
            "FeatureCollection"
          ],
          "x-ms-enum": {
            "name": "GeoJsonObjectType",
            "modelAsString": false,
            "values": [
              {
                "value": "Point",
                "description": "`GeoJSON Point` geometry.",
                "name": "GeoJsonPoint"
              },
              {
                "value": "MultiPoint",
                "description": "`GeoJSON MultiPoint` geometry.",
                "name": "GeoJsonMultiPoint"
              },
              {
                "value": "LineString",
                "description": "`GeoJSON LineString` geometry.",
                "name": "GeoJsonLineString"
              },
              {
                "value": "MultiLineString",
                "description": "`GeoJSON MultiLineString` geometry.",
                "name": "GeoJsonMultiLineString"
              },
              {
                "value": "Polygon",
                "description": "`GeoJSON Polygon` geometry.",
                "name": "GeoJsonPolygon"
              },
              {
                "value": "MultiPolygon",
                "description": "`GeoJSON MultiPolygon` geometry.",
                "name": "GeoJsonMultiPolygon"
              },
              {
                "value": "GeometryCollection",
                "description": "`GeoJSON GeometryCollection` geometry.",
                "name": "GeoJsonGeometryCollection"
              },
              {
                "value": "Feature",
                "description": "`GeoJSON Feature` object.",
                "name": "GeoJsonFeature"
              },
              {
                "value": "FeatureCollection",
                "description": "`GeoJSON FeatureCollection` object.",
                "name": "GeoJsonFeatureCollection"
              }
            ]
          }
        }
      }
    },
    "GeoJsonGeometry": {
      "description": "A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonObject"
        }
      ]
    },
    "GeoJsonPoint": {
      "description": "A valid `GeoJSON Point` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.2) for details.",
      "x-ms-discriminator-value": "Point",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonPointData"
        }
      ]
    },
    "GeoJsonPointData": {
      "description": "Data contained by a `GeoJson Point`.",
      "type": "object",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/GeoJsonPosition"
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonMultiPoint": {
      "description": "A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details.",
      "x-ms-discriminator-value": "MultiPoint",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonMultiPointData"
        }
      ]
    },
    "GeoJsonMultiPointData": {
      "type": "object",
      "description": "Data contained by a `GeoJson MultiPoint`.",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `GeoJson MultiPoint` geometry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonPosition"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonLineString": {
      "description": "A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.",
      "x-ms-discriminator-value": "LineString",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonLineStringData"
        }
      ]
    },
    "GeoJsonLineStringData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `GeoJson LineString` geometry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonPosition"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonMultiLineString": {
      "description": "A valid `GeoJSON MultiLineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.5) for details.",
      "x-ms-discriminator-value": "MultiLineString",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonMultiLineStringData"
        }
      ]
    },
    "GeoJsonMultiLineStringData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `GeoJson MultiLineString` geometry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonLinearRing"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonPolygon": {
      "description": "A valid `GeoJSON Polygon` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details.",
      "x-ms-discriminator-value": "Polygon",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonPolygonData"
        }
      ]
    },
    "GeoJsonPolygonData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Coordinates for the `GeoJson Polygon` geometry type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonLinearRing"
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonMultiPolygon": {
      "description": "A valid `GeoJSON MultiPolygon` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.7) for details.",
      "x-ms-discriminator-value": "MultiPolygon",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonMultiPolygonData"
        }
      ]
    },
    "GeoJsonMultiPolygonData": {
      "type": "object",
      "properties": {
        "coordinates": {
          "description": "Contains a list of valid `GeoJSON Polygon` objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoJsonLinearRing"
            }
          }
        }
      },
      "required": [
        "coordinates"
      ]
    },
    "GeoJsonGeometryCollection": {
      "description": "A valid `GeoJSON GeometryCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.8) for details.",
      "x-ms-discriminator-value": "GeometryCollection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        {
          "$ref": "#/definitions/GeoJsonGeometryCollectionData"
        }
      ]
    },
    "GeoJsonGeometryCollectionData": {
      "type": "object",
      "properties": {
        "geometries": {
          "description": "Contains a list of valid `GeoJSON` geometry objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonGeometry"
          }
        }
      },
      "required": [
        "geometries"
      ]
    },
    "GeoJsonFeature": {
      "description": "A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details.",
      "x-ms-discriminator-value": "Feature",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonObject"
        },
        {
          "$ref": "#/definitions/GeoJsonFeatureData"
        }
      ]
    },
    "GeoJsonFeatureData": {
      "type": "object",
      "properties": {
        "geometry": {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties can contain any additional metadata about the `Feature`. Value can be any JSON object or a JSON null value",
          "type": "object"
        },
        "id": {
          "description": "Identifier for the feature.",
          "type": "string"
        },
        "featureType": {
          "description": "The type of the feature. The value depends on the data model the current feature is part of. Some data models may have an empty value.",
          "type": "string"
        }
      },
      "required": [
        "geometry"
      ]
    },
    "GeoJsonFeatureCollection": {
      "description": "A valid `GeoJSON FeatureCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.",
      "x-ms-discriminator-value": "FeatureCollection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJsonObject"
        },
        {
          "$ref": "#/definitions/GeoJsonFeatureCollectionData"
        }
      ]
    },
    "GeoJsonFeatureCollectionData": {
      "type": "object",
      "properties": {
        "features": {
          "description": "Contains a list of valid `GeoJSON Feature` objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonFeature"
          }
        }
      },
      "required": [
        "features"
      ]
    },
    "Ontology": {
      "type": "string",
      "description": "The ontology version of this dataset.",
      "readOnly": true
    },
    "MapsErrorResponse": {
      "type": "object",
      "description": "Common error response for Azure Maps APIs to return error details for failed operations.",
      "readOnly": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/MapsErrorDetail"
        }
      },
      "required": [
        "error"
      ]
    },
    "MapsErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A human-readable representation of the error.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "An array of details about specific errors that led to this reported error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MapsErrorDetail"
          },
          "readOnly": true
        },
        "innererror": {
          "$ref": "#/definitions/MapsInnerError"
        }
      }
    },
    "MapsInnerError": {
      "description": "An object containing more specific information than the current object about the error.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "innererror": {
          "$ref": "#/definitions/MapsInnerError"
        }
      }
    }
  },
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "x-ms-client-name": "clientId",
      "description": "Specifies which account is intended for usage in conjunction with the Microsoft Entra ID security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Microsoft Entra ID security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.",
      "type": "string",
      "in": "header",
      "x-ms-parameter-location": "client"
    },
    "Language": {
      "name": "language",
      "in": "query",
      "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.\n\nPlease refer to [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages) for details.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "JsonFormat": {
      "name": "format",
      "description": "Desired format of the response. Only `json` format is supported.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json"
      ],
      "x-ms-enum": {
        "name": "JsonFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          }
        ]
      },
      "x-ms-client-default": "json",
      "x-ms-parameter-location": "method"
    },
    "ResponseFormat": {
      "name": "format",
      "description": "Desired format of the response. Value can be either _json_ or _xml_.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json",
        "xml"
      ],
      "x-ms-enum": {
        "name": "ResponseFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          },
          {
            "value": "xml",
            "description": "[The Extensible Markup Language](https://www.w3.org/TR/xml/)"
          }
        ]
      },
      "x-ms-client-default": "json",
      "x-ms-parameter-location": "method"
    },
    "MapsAccountGeographicResourceLocation": {
      "name": "geography",
      "description": "This parameter specifies where the Azure Maps Account is located. Valid values are us (East US, West Central US, West US 2) and eu (North Europe, West Europe).",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "us",
        "eu"
      ],
      "x-ms-enum": {
        "name": "GeographicResourceLocation",
        "modelAsString": true,
        "values": [
          {
            "value": "us",
            "description": "Used to access an Azure Maps Account in the United States (East US, West Central US, West US 2)."
          },
          {
            "value": "eu",
            "description": "Used to access an Azure Maps Account in Europe (North Europe, West Europe)."
          }
        ]
      },
      "x-ms-parameter-location": "client"
    },
    "GeographicResourceLocation": {
      "name": "geography",
      "description": "This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "us",
      "enum": [
        "us",
        "eu"
      ],
      "x-ms-enum": {
        "name": "GeographicResourceLocation",
        "modelAsString": true,
        "values": [
          {
            "value": "us",
            "description": "Used to access an Azure Maps Creator resource in the United States"
          },
          {
            "value": "eu",
            "description": "Used to access an Azure Maps Creator resource in Europe"
          }
        ]
      },
      "x-ms-parameter-location": "client"
    },
    "View": {
      "name": "view",
      "x-ms-client-name": "localizedMapView",
      "in": "query",
      "description": "The View parameter (also called the \"user region\" parameter) allows you to show the correct maps for a certain country/region for geopolitically disputed regions. Different countries/regions have different views of such regions, and the View parameter allows your application to comply with the view required by the country/region your application will be serving. By default, the View parameter is set to “Unified” even if you haven’t defined it in  the request. It is your responsibility to determine the location of your users, and then set the View parameter correctly for that location. Alternatively, you have the option to set ‘View=Auto’, which will return the map data based on the IP  address of the request. The View parameter in Azure Maps must be used in compliance with applicable laws, including those  regarding mapping, of the country/region where maps, images and other data and third party content that you are authorized to  access via Azure Maps is made available. Example: view=IN.\n\nPlease refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see the available Views.",
      "x-ms-parameter-location": "method",
      "type": "string",
      "enum": [
        "AE",
        "AR",
        "BH",
        "IN",
        "IQ",
        "JO",
        "KW",
        "LB",
        "MA",
        "OM",
        "PK",
        "PS",
        "QA",
        "SA",
        "SY",
        "YE",
        "Auto",
        "Unified"
      ],
      "x-ms-enum": {
        "name": "LocalizedMapView",
        "modelAsString": true,
        "values": [
          {
            "value": "AE",
            "description": "United Arab Emirates (Arabic View)"
          },
          {
            "value": "AR",
            "description": "Argentina (Argentinian View)"
          },
          {
            "value": "BH",
            "description": "Bahrain (Arabic View)"
          },
          {
            "value": "IN",
            "description": "India (Indian View)"
          },
          {
            "value": "IQ",
            "description": "Iraq (Arabic View)"
          },
          {
            "value": "JO",
            "description": "Jordan (Arabic View)"
          },
          {
            "value": "KW",
            "description": "Kuwait (Arabic View)"
          },
          {
            "value": "LB",
            "description": "Lebanon (Arabic View)"
          },
          {
            "value": "MA",
            "description": "Morocco (Moroccan View)"
          },
          {
            "value": "OM",
            "description": "Oman (Arabic View)"
          },
          {
            "value": "PK",
            "description": "Pakistan (Pakistani View)"
          },
          {
            "value": "PS",
            "description": "Palestinian Authority (Arabic View)"
          },
          {
            "value": "QA",
            "description": "Qatar (Arabic View)"
          },
          {
            "value": "SA",
            "description": "Saudi Arabia (Arabic View)"
          },
          {
            "value": "SY",
            "description": "Syria (Arabic View)"
          },
          {
            "value": "YE",
            "description": "Yemen (Arabic View)"
          },
          {
            "value": "Auto",
            "description": "Return the map data based on the IP address of the request."
          },
          {
            "value": "Unified",
            "description": "Unified View (Others)"
          }
        ]
      }
    },
    "PositionLatitudeAbbreviated": {
      "name": "lat",
      "x-ms-client-name": "Latitude",
      "description": "The latitude of the location being passed.  Example: 48.36.",
      "type": "number",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "position"
      }
    },
    "PositionLongitudeAbbreviated": {
      "name": "lon",
      "x-ms-client-name": "Longitude",
      "description": "The longitude of the location being passed.  Example: -124.63.",
      "type": "number",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "position"
      }
    },
    "xTileIndex": {
      "name": "x",
      "in": "query",
      "description": "X coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "tileIndex"
      }
    },
    "yTileIndex": {
      "name": "y",
      "in": "query",
      "description": "Y coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "tileIndex"
      }
    },
    "zTileIndex": {
      "name": "zoom",
      "x-ms-client-name": "z",
      "in": "query",
      "description": "Zoom level for the desired tile. \n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "tileIndex"
      }
    },
    "IncludeText": {
      "name": "text",
      "x-ms-client-name": "includeText",
      "in": "query",
      "description": "Yes/no value to exclude textual data from response. Only images and country/region names will be in response.",
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "x-ms-enum": {
        "name": "IncludeText",
        "modelAsString": true,
        "values": [
          {
            "value": "yes",
            "description": "Include all textual data in response."
          },
          {
            "value": "no",
            "description": "Exclude textual data from response. Only images and country/region names will be in response."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    }
  },
  "responses": {
    "200AsyncV2": {
      "description": "The operation is running or complete. If the operation was successful, use the Resource-Location header to obtain the path to the result.",
      "schema": {
        "$ref": "#/definitions/LongRunningOperationResult"
      },
      "headers": {
        "Resource-Location": {
          "type": "string",
          "description": "If successful, a URI where details on the newly created resource can be found."
        }
      }
    },
    "202Async": {
      "description": "**Supported only for async request.**\nRequest Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.",
      "headers": {
        "Location": {
          "type": "string",
          "description": "New URL to check for the results of the long-running operation."
        }
      }
    },
    "202AsyncV2": {
      "description": "Request Accepted: The request has been accepted for processing. Please use the URL in the Operation-Location Header to obtain status.",
      "headers": {
        "Operation-Location": {
          "type": "string",
          "description": "New URL to check for the results of the long-running operation."
        }
      }
    },
    "408": {
      "description": "Timeout: The request took longer to finish than the maximum amount of time defined in the api.",
      "schema": {
        "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "409": {
      "description": "The request could not be completed due to a conflict with the current state of the resource. Likely caused by a parallel update to the same resource.",
      "schema": {
        "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "409StorageLimit": {
      "description": "The [data storage limit](https://docs.microsoft.com/azure/azure-resource-manager/management/azure-subscription-service-limits#azure-maps-limits) is reached on the Azure Maps account. You can always use the [Data Delete API](https://docs.microsoft.com/rest/api/maps/data/deletepreview) to delete old/unused content and create space for new uploads.",
      "schema": {
        "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    },
    "default": {
      "description": "An unexpected error occurred.",
      "schema": {
        "$ref": "../../../../../common-types/data-plane/v1/types.json#/definitions/ErrorResponse"
      },
      "x-ms-error-response": true
    }
  }
}
