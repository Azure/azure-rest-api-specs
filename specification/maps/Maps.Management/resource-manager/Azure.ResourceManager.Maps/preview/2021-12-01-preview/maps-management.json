{
  "swagger": "2.0",
  "info": {
    "title": "AzureMapsManagementClient",
    "version": "2021-12-01-preview",
    "description": "Azure Maps",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Creators"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.Maps/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.Maps/accounts": {
      "get": {
        "operationId": "Accounts_ListBySubscription",
        "tags": [
          "Accounts"
        ],
        "description": "Get all Maps Accounts in a Subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts": {
      "get": {
        "operationId": "Accounts_ListByResourceGroup",
        "tags": [
          "Accounts"
        ],
        "description": "Get all Maps Accounts in a Resource Group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}": {
      "get": {
        "operationId": "Accounts_Get",
        "tags": [
          "Accounts"
        ],
        "description": "Get a Maps Account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Accounts_CreateOrUpdate",
        "tags": [
          "Accounts"
        ],
        "description": "Create or update a Maps Account. A Maps Account holds the keys which allow access to the Maps REST APIs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MapsAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "201": {
            "description": "Resource 'MapsAccount' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Accounts_Update",
        "tags": [
          "Accounts"
        ],
        "description": "Updates a Maps Account. Only a subset of the parameters may be updated after creation, such as Sku, Tags, Properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsAccountUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Accounts_Delete",
        "tags": [
          "Accounts"
        ],
        "description": "Delete a Maps Account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}/creators": {
      "get": {
        "operationId": "Creators_ListByMapsAccount",
        "tags": [
          "Creators"
        ],
        "description": "Get all Creator instances for an Azure Maps Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreatorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}/creators/{creatorName}": {
      "get": {
        "operationId": "Creators_Get",
        "tags": [
          "Creators"
        ],
        "description": "Get a Maps Creator resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Creators_CreateOrUpdate",
        "tags": [
          "Creators"
        ],
        "description": "Create or update a Maps Creator resource. Creator resource will manage Azure resources required to populate a custom set of mapping data. It requires an account to exist before it can be created.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Creator' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "201": {
            "description": "Resource 'Creator' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Creators_Update",
        "tags": [
          "Creators"
        ],
        "description": "Updates the Maps Creator resource. Only a subset of the parameters may be updated after creation, such as Tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatorUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Creators_Delete",
        "tags": [
          "Creators"
        ],
        "description": "Delete a Maps Creator resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}/listKeys": {
      "post": {
        "operationId": "Accounts_ListKeys",
        "tags": [
          "Accounts"
        ],
        "description": "Get the keys to use with the Maps APIs. A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}/listSas": {
      "post": {
        "operationId": "Accounts_ListSas",
        "tags": [
          "Accounts"
        ],
        "description": "Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token. \n\nPrerequisites:\n1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account. \n2. Create or update an Azure Map account with the same Azure region as the User Assigned Managed Identity is placed.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSasParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountSasToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.Maps/accounts/{accountName}/regenerateKeys": {
      "post": {
        "operationId": "Accounts_RegenerateKeys",
        "tags": [
          "Accounts"
        ],
        "description": "Regenerate either the primary or secondary key for use with the Maps APIs. The old key will stop working immediately.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsKeySpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountSasParameters": {
      "type": "object",
      "description": "Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure Maps Role Based Access (RBAC) identity and access.",
      "properties": {
        "signingKey": {
          "$ref": "#/definitions/SigningKey",
          "description": "The Map account key to use for signing."
        },
        "principalId": {
          "type": "string",
          "description": "The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id."
        },
        "regions": {
          "type": "array",
          "description": "Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: \"eastus\", \"westus2\". Omitting this parameter will allow all region locations to be accessible.",
          "items": {
            "type": "string"
          }
        },
        "maxRatePerSecond": {
          "type": "integer",
          "format": "int32",
          "description": "Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.",
          "maximum": 500
        },
        "start": {
          "type": "string",
          "description": "The date time offset of when the token validity begins. For example \"2017-05-24T10:42:03.1567373Z\"."
        },
        "expiry": {
          "type": "string",
          "description": "The date time offset of when the token validity expires. For example \"2017-05-24T10:42:03.1567373Z\""
        }
      },
      "required": [
        "signingKey",
        "principalId",
        "maxRatePerSecond",
        "start",
        "expiry"
      ]
    },
    "Azure.ResourceManager.ManagedServiceIdentity": {
      "type": "object",
      "description": "The managed service identities envelope.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity.",
          "readOnly": true
        }
      }
    },
    "CorsRule": {
      "type": "object",
      "description": "Specifies a CORS rule for the Map Account.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "CorsRules": {
      "type": "object",
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
      "properties": {
        "corsRules": {
          "type": "array",
          "description": "The list of CORS rules. You can include up to five CorsRule elements in the request. ",
          "items": {
            "$ref": "#/definitions/CorsRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "Creator": {
      "type": "object",
      "description": "An Azure resource which represents Maps Creator product and provides ability to manage private location data.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreatorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Maps Creator instance.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CreatorListResult": {
      "type": "object",
      "description": "The response of a Creator list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Creator items on this page",
          "items": {
            "$ref": "#/definitions/Creator"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CreatorProperties": {
      "type": "object",
      "description": "Creator resource properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled",
          "readOnly": true
        },
        "storageUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The storage units to be allocated. Integer values from 1 to 100, inclusive.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "required": [
        "storageUnits"
      ]
    },
    "CreatorPropertiesUpdate": {
      "type": "object",
      "description": "Creator resource properties",
      "properties": {
        "storageUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The storage units to be allocated. Integer values from 1 to 100, inclusive.",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "CreatorUpdateParameters": {
      "type": "object",
      "description": "Parameters used to update an existing Creator resource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CreatorPropertiesUpdate",
          "description": "Creator resource properties."
        }
      }
    },
    "Dimension": {
      "type": "object",
      "description": "Dimension of map account, for example API Category, Api Name, Result Type, and Response Code.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "internalName": {
          "type": "string",
          "description": "Internal name of the dimension."
        },
        "internalMetricName": {
          "type": "string",
          "description": "Internal metric name of the dimension."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "Source Mdm Namespace of the dimension."
        },
        "toBeExportedToShoebox": {
          "type": "boolean",
          "description": "Flag to indicate exporting to Azure Monitor."
        }
      }
    },
    "KeyType": {
      "type": "string",
      "enum": [
        "primary",
        "secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true
      }
    },
    "Kind": {
      "type": "string",
      "enum": [
        "Gen1",
        "Gen2"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      }
    },
    "LinkedResource": {
      "type": "object",
      "description": "Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.",
      "properties": {
        "uniqueName": {
          "type": "string",
          "description": "A provided name which uniquely identifies the linked resource."
        },
        "id": {
          "type": "string",
          "description": "ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'."
        }
      },
      "required": [
        "uniqueName",
        "id"
      ]
    },
    "MapsAccount": {
      "type": "object",
      "description": "An Azure resource which represents access to a suite of Maps REST APIs.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MapsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Maps Account.",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\\\\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MapsAccountKeys": {
      "type": "object",
      "description": "The set of keys which can be used to access the Maps REST APIs. Two keys are provided for key rotation without interruption.",
      "properties": {
        "primaryKeyLastUpdated": {
          "type": "string",
          "description": "The last updated date and time of the primary key.",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "The primary key for accessing the Maps REST APIs.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key for accessing the Maps REST APIs.",
          "readOnly": true
        },
        "secondaryKeyLastUpdated": {
          "type": "string",
          "description": "The last updated date and time of the secondary key.",
          "readOnly": true
        }
      }
    },
    "MapsAccountListResult": {
      "type": "object",
      "description": "The response of a MapsAccount list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MapsAccount items on this page",
          "items": {
            "$ref": "#/definitions/MapsAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MapsAccountProperties": {
      "type": "object",
      "description": "Additional Map account properties",
      "properties": {
        "uniqueId": {
          "type": "string",
          "description": "A unique identifier for the maps account",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys authentication from any usage."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the Map account resource.",
          "readOnly": true
        },
        "linkedResources": {
          "type": "array",
          "description": "Sets the resources to be used for Managed Identities based operations for the Map account resource.",
          "items": {
            "$ref": "#/definitions/LinkedResource"
          }
        },
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service."
        }
      }
    },
    "MapsAccountSasToken": {
      "type": "object",
      "description": "A new Sas token which can be used to access the Maps REST APIs and is controlled by the specified Managed identity permissions on Azure (IAM) Role Based Access Control.",
      "properties": {
        "accountSasToken": {
          "type": "string",
          "description": "The shared access signature access token.",
          "readOnly": true
        }
      }
    },
    "MapsAccountUpdateParameters": {
      "type": "object",
      "description": "Parameters used to update an existing Maps Account.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Get or Set Kind property."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of this account."
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.ManagedServiceIdentity",
          "description": "Sets the identity property for maps account."
        },
        "properties": {
          "$ref": "#/definitions/MapsAccountProperties",
          "description": "The map account properties."
        }
      }
    },
    "MapsKeySpecification": {
      "type": "object",
      "description": "Whether the operation refers to the primary or secondary key.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "Whether the operation refers to the primary or secondary key."
        }
      },
      "required": [
        "keyType"
      ]
    },
    "MapsOperations": {
      "type": "object",
      "description": "The set of operations available for Maps.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An operation available for Maps.",
          "items": {
            "$ref": "#/definitions/OperationDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "URL client should use to fetch the next page (per server side paging).\nIt's null for now, added for future use."
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "Unit could be Count."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of map account.",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "x-ms-identifiers": []
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type could be Average."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "The property to decide fill gap with zero or not."
        },
        "category": {
          "type": "string",
          "description": "The category this metric specification belong to, could be Capacity."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Account Resource Id."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "Source metrics account."
        },
        "internalMetricName": {
          "type": "string",
          "description": "Internal metric name."
        }
      }
    },
    "Name": {
      "type": "string",
      "enum": [
        "S0",
        "S1",
        "G2"
      ],
      "x-ms-enum": {
        "name": "Name",
        "modelAsString": true
      }
    },
    "OperationDetail": {
      "type": "object",
      "description": "Operation detail payload",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": false
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "One property of operation, include metric specifications.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "Metric specifications of operation.",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SigningKey": {
      "type": "string",
      "enum": [
        "primaryKey",
        "secondaryKey"
      ],
      "x-ms-enum": {
        "name": "SigningKey",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "The SKU of the Maps Account.",
      "properties": {
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the SKU, in standard format (such as S0)."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2021-12-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2021_12_01_preview",
            "value": "2021-12-01-preview"
          }
        ]
      }
    }
  },
  "parameters": {}
}
