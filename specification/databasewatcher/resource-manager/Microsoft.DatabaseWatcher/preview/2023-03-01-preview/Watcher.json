{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.DatabaseWatcher",
    "version": "2023-03-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Watchers"
    },
    {
      "name": "Targets"
    }
  ],
  "paths": {
    "/providers/Microsoft.DatabaseWatcher/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List_200.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DatabaseWatcher/watchers": {
      "get": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_ListBySubscription",
        "description": "List Watcher resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatcherListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Watchers_ListBySubscription": {
            "$ref": "./examples/Watchers_ListBySubscription_200.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers": {
      "get": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_ListByResourceGroup",
        "description": "List Watcher resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatcherListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Watchers_ListByResourceGroup": {
            "$ref": "./examples/Watchers_ListByResourceGroup_200.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}": {
      "get": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_Get",
        "description": "Get a Watcher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Get": {
            "$ref": "./examples/Watchers_Get_200.json"
          }
        }
      },
      "put": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_CreateOrUpdate",
        "description": "Create a Watcher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_CreateOrUpdate": {
            "$ref": "./examples/Watchers_CreateOrUpdate_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_Update",
        "description": "Update a Watcher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/WatcherUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Update": {
            "$ref": "./examples/Watchers_Update_200.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_Delete",
        "description": "Delete a Watcher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Delete": {
            "$ref": "./examples/Watchers_Delete_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/start": {
      "post": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_Start",
        "description": "Action to start monitoring all targets configured for a given database watcher.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Start": {
            "$ref": "./examples/Watchers_Start_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/stop": {
      "post": {
        "tags": [
          "Watchers"
        ],
        "operationId": "Watchers_Stop",
        "description": "Action to stop monitoring all targets configured for a given database watcher.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Stop": {
            "$ref": "./examples/Watchers_Stop_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets": {
      "get": {
        "tags": [
          "Targets"
        ],
        "operationId": "Targets_ListByWatcher",
        "description": "List Target resources by Watcher",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Targets_ListByWatcher": {
            "$ref": "./examples/Targets_ListByWatcher_200.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}": {
      "get": {
        "tags": [
          "Targets"
        ],
        "operationId": "Targets_Get",
        "description": "Get a Target",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "targetName",
            "in": "path",
            "required": true,
            "description": "Target resource name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Get": {
            "$ref": "./examples/Targets_Get_200.json"
          }
        }
      },
      "put": {
        "tags": [
          "Targets"
        ],
        "operationId": "Targets_CreateOrUpdate",
        "description": "Create a Target",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "targetName",
            "in": "path",
            "required": true,
            "description": "Target resource name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_CreateOrUpdate": {
            "$ref": "./examples/Targets_CreateOrUpdate_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Targets"
        ],
        "operationId": "Targets_Delete",
        "description": "Delete a Target",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "required": true,
            "description": "Database watcher name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          },
          {
            "name": "targetName",
            "in": "path",
            "required": true,
            "description": "Target resource name.",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Delete": {
            "$ref": "./examples/Targets_Delete_200.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true
      }
    },
    "DatabaseWatcherProvisioningState": {
      "type": "string",
      "description": "The status of the last provisioning operation performed on the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Starting",
        "Stopping",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "DatabaseWatcherProvisioningState",
        "modelAsString": true
      }
    },
    "Datastore": {
      "type": "object",
      "properties": {
        "adxDatabaseResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure Data Explorer database."
        },
        "adxClusterUri": {
          "type": "string",
          "description": "URI of an Azure Data Explorer Cluster."
        }
      },
      "description": "Properties of data store.",
      "required": [
        "adxDatabaseResourceId",
        "adxClusterUri"
      ]
    },
    "DatastoreUpdate": {
      "type": "object",
      "properties": {
        "adxDatabaseResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure Data Explorer database."
        },
        "adxClusterUri": {
          "type": "string",
          "description": "URI of an Azure Data Explorer Cluster."
        }
      },
      "description": "Properties of data store."
    },
    "SqlDbElasticPoolTargetProperties": {
      "type": "object",
      "properties": {
        "sqlEpResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure SQL DB elastic pool target."
        },
        "anchorDatabaseResourceId": {
          "type": "string",
          "description": "ARM ResourceId of the anchor database used to connect to an elastic pool."
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "description": "Properties specific to elastic pool in Azure SQL Database.",
      "required": [
        "sqlEpResourceId",
        "anchorDatabaseResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlEp"
    },
    "SqlDbSingleDatabaseTargetProperties": {
      "type": "object",
      "properties": {
        "sqlDbResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure SQL DB single database target."
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "description": "Properties specific to single database in Azure SQL Database.",
      "required": [
        "sqlDbResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlDb"
    },
    "SqlMiTargetProperties": {
      "type": "object",
      "properties": {
        "sqlMiResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure SQL Managed Instance target."
        },
        "connectionTcpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target.",
          "default": 1433
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "description": "Properties specific to Azure SQL Managed Instance targets.",
      "required": [
        "sqlMiResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlMi"
    },
    "SqlVmTargetProperties": {
      "type": "object",
      "properties": {
        "sqlVmResourceId": {
          "type": "string",
          "description": "ARM ResourceId of an Azure SQL VM target."
        },
        "connectionTcpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port number to optionally use in the connection string when connecting to an Azure SQL VM target.",
          "default": 1433
        },
        "sqlNamedInstanceName": {
          "type": "string",
          "description": "The SQL instance name to optionally use in the connection string when connecting to an Azure SQL VM target."
        }
      },
      "description": "Properties specific to Azure SQL VM targets.",
      "required": [
        "sqlVmResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlVm"
    },
    "Target": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TargetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TargetCollectionStatus": {
      "type": "string",
      "description": "Target states.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "TargetCollectionStatus",
        "modelAsString": true
      }
    },
    "TargetListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Target"
          },
          "x-typespec-name": "Target[]",
          "description": "The Target items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a Target list operation.",
      "required": [
        "value"
      ]
    },
    "TargetProperties": {
      "type": "object",
      "properties": {
        "targetType": {
          "type": "string",
          "description": "Discriminator property for TargetProperties."
        },
        "targetVault": {
          "$ref": "#/definitions/VaultSecret",
          "description": "To use SQL authentication for targets, specify the vault where username and password secrets are stored."
        },
        "connectionServerName": {
          "type": "string",
          "description": "The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.",
          "maxLength": 200
        },
        "targetCollectionStatus": {
          "type": "string",
          "description": "Target collection status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "string",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "description": "Generic properties of a target.",
      "discriminator": "targetType",
      "required": [
        "targetType",
        "connectionServerName"
      ]
    },
    "VaultSecret": {
      "type": "object",
      "properties": {
        "akvResourceId": {
          "type": "string",
          "description": "ARM ResourceId of the Key Vault instance storing database authentication secrets."
        },
        "akvTargetUser": {
          "type": "string",
          "description": "The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target."
        },
        "akvTargetPassword": {
          "type": "string",
          "description": "The path to the Key Vault secret storing the password for authentication to a target."
        }
      },
      "description": "Vault specific details required if using SQL authentication to connect to a target."
    },
    "Watcher": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatcherProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "description": "A DatabaseWatcherProviderHub resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WatcherListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Watcher"
          },
          "x-typespec-name": "Watcher[]",
          "description": "The Watcher items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a Watcher list operation.",
      "required": [
        "value"
      ]
    },
    "WatcherProperties": {
      "type": "object",
      "properties": {
        "datastore": {
          "$ref": "#/definitions/Datastore",
          "description": "A data store for collected monitoring data."
        },
        "status": {
          "$ref": "#/definitions/WatcherStatus",
          "description": "The monitoring collection status of the watcher."
        },
        "provisioningState": {
          "$ref": "#/definitions/DatabaseWatcherProvisioningState",
          "description": "The provisioning state of the resource watcher.",
          "readOnly": true
        }
      },
      "description": "RP specific properties of the resource."
    },
    "WatcherStatus": {
      "type": "string",
      "description": "The monitoring collection status of the watcher.",
      "enum": [
        "Running",
        "Stopped"
      ],
      "x-ms-enum": {
        "name": "WatcherStatus",
        "modelAsString": true
      }
    },
    "WatcherUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-typespec-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/WatcherUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the Watcher."
    },
    "WatcherUpdateProperties": {
      "type": "object",
      "properties": {
        "datastore": {
          "$ref": "#/definitions/DatastoreUpdate",
          "description": "A data store for collected monitoring data."
        },
        "status": {
          "$ref": "#/definitions/WatcherStatus",
          "description": "The monitoring collection status of the watcher."
        }
      },
      "description": "The updatable properties of the Watcher."
    }
  },
  "parameters": {}
}
