import "@typespec/rest";
import "@azure-tools/typespec-autorest";
import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";
import "@typespec/openapi";
import "@typespec/versioning";

using TypeSpec.Rest;
using TypeSpec.Versioning;

namespace Azure.AI.Projects;

@doc("Response from the list and get connections operations")
@resource("connections")
@added(Versions.v2025_05_01)
model Connection {
  @doc("The friendly name of the connection, provided by the user.")
  @visibility(Lifecycle.Read)
  @key("name")
  name: string;

  @doc("A unique identifier for the connection, generated by the service")
  @visibility(Lifecycle.Read)
  id: string;

  @doc("Category of the connection")
  @visibility(Lifecycle.Read)
  type: ConnectionType;

  @doc("The connection URL to be used for this service")
  @visibility(Lifecycle.Read)
  target: string;

  @doc("Whether the connection is tagged as the default connection of its type")
  @visibility(Lifecycle.Read)
  isDefault: boolean;

  @doc("The credentials used by the connection")
  @visibility(Lifecycle.Read)
  credentials: BaseCredentials;

  @doc("Metadata of the connection")
  @visibility(Lifecycle.Read)
  metadata: Record<string>;
}

@doc("A base class for connection credentials")
@discriminator("type")
model BaseCredentials {
  @doc("The type of credential used by the connection")
  @visibility(Lifecycle.Read)
  type: CredentialType;
}

@doc("API Key Credential definition")
model ApiKeyCredentials extends BaseCredentials {
  @doc("The credential type")
  @visibility(Lifecycle.Read)
  type: CredentialType.apiKey;

  @doc("API Key")
  @visibility(Lifecycle.Read)
  @encodedName("application/json", "key")
  apiKey?: string;
}

#suppress "@azure-tools/typespec-azure-core/casing-style"
@doc("Entra ID credential definition")
model EntraIDCredentials extends BaseCredentials {
  @doc("The credential type")
  @visibility(Lifecycle.Read)
  type: CredentialType.entraId;
}

@doc("Custom credential definition")
model CustomCredential extends BaseCredentials {
  @doc("The credential type")
  @visibility(Lifecycle.Read)
  type: CredentialType.custom;

  @doc("The credential type")
  @visibility(Lifecycle.Read)
  keys: Record<string>;
}

#suppress "@azure-tools/typespec-azure-core/casing-style"
@doc("Shared Access Signature (SAS) credential definition")
model SASCredentials extends BaseCredentials {
  @doc("The credential type")
  @visibility(Lifecycle.Read)
  type: CredentialType.SAS;

  @doc("SAS token")
  @visibility(Lifecycle.Read)
  @encodedName("application/json", "SAS")
  sasToken?: string;
}

@doc("Credentials that do not require authentication")
model NoAuthenticationCredentials extends BaseCredentials {
  @doc("The credential type ")
  @visibility(Lifecycle.Read)
  type: CredentialType.None;
}

// https://learn.microsoft.com/rest/api/azureml/workspace-connections/list-secrets?view=rest-azureml-2024-04-01&tabs=HTTP#ConnectionType
@doc("The Type (or category) of the connection")
union ConnectionType {
  string,

  @doc("Azure OpenAI Service")
  AzureOpenAI: "AzureOpenAI", //TODO: In Python this results in .AZURE_OPEN_AI. How do I make it .AZURE_OPENAI?

  @doc("Azure Blob Storage, with specified container")
  AzureBlobStorage: "AzureBlob",

  @doc("Azure Blob Storage, with container not specified (used by Agents)")
  AzureStorageAccount: "AzureStorageAccount",

  @doc("Azure AI Search")
  AzureAISearch: "CognitiveSearch",

  @doc("CosmosDB")
  CosmosDB: "CosmosDB",

  @doc("Generic connection that uses API Key authentication")
  APIKey: "ApiKey",

  @doc("Application Configuration")
  ApplicationConfiguration: "AppConfig",

  @doc("Application Insights")
  ApplicationInsights: "AppInsights",

  @doc("Custom Keys")
  Custom: "CustomKeys",
}

@doc("The credential type used by the connection")
union CredentialType {
  string,

  @doc("API Key credential")
  apiKey: "ApiKey",

  @doc("Entra ID credential (formerly known as AAD)")
  entraId: "AAD",

  @doc("Shared Access Signature (SAS) credential")
  SAS: "SAS",

  @doc("Custom credential")
  custom: "CustomKeys",

  @doc("No credential")
  None: "None",
}
