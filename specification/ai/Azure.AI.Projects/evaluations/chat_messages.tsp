import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";
import "../common/models.tsp";
import "../main.tsp";
import "@typespec/openapi";

using TypeSpec.Versioning;

namespace Azure.AI.Projects;

@doc("Content for AI requests and responses.")
@discriminator("type")
@added(Versions.v2025_07_31_preview)
model AIContent {
  @doc("The content of the message.")
  type: "text" | "image_url" | "tool_call" | "tool_result" | string;
}

@doc("Content for text messages in AI conversations.")
@added(Versions.v2025_07_31_preview)
model TextContent extends AIContent {
  @doc("The content of the text message.")
  type: "text";

  @doc("The text content of the message.")
  text: string;
}

@doc("Content for image URL messages in AI conversations.")
@added(Versions.v2025_07_31_preview)
model ImageUrlContent extends AIContent {
  @doc("The content of the image URL message.")
  type: "image_url";

  @doc("The URL of the image.")
  imageUrl: string;
}

@doc("Content for text messages in AI conversations.")
@added(Versions.v2025_07_31_preview)
model ToolCallContent extends AIContent {
  @doc("The content of the tool call.")
  type: "tool_call";

  @doc("The name of the tool being called.")
  name: string;

  @doc("The unique identifier of the tool call.")
  toolCallId: string;

  @doc("The parameters for the tool call in JSON format.")
  arguments: Record<unknown>;
}

@doc("Content for tool results in AI conversations.")
@added(Versions.v2025_07_31_preview)
model ToolResultContent extends AIContent {
  @doc("The content of the tool result.")
  type: "tool_result";

  @doc("The result of the tool call in JSON format.")
  results: Record<unknown>;
}

@doc("Abstract base model representing a single message in a conversation.")
@discriminator("role")
@added(Versions.v2025_05_15_preview)
model Message {
  @doc("The role of the message author. Known values: 'system', 'assistant', 'developer', 'user'.")
  role: "system" | "assistant" | "developer" | "user" | string;
}

@doc("A message authored by the system to guide model behavior.")
@added(Versions.v2025_05_15_preview)
model SystemMessage extends Message {
  @doc("Indicates this is a system message.")
  role: "system";

  #suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
  @doc("The content of the message.")
  @typeChangedFrom(Versions.v2025_07_31_preview, string)
  content: AIContent[] | string;
}

@doc("A message authored by a developer to guide the model during evaluation.")
@added(Versions.v2025_05_15_preview)
model DeveloperMessage extends Message {
  @doc("Indicates this is a developer message.")
  role: "developer";

  #suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
  @doc("The content of the message.")
  @typeChangedFrom(Versions.v2025_07_31_preview, string)
  content: AIContent[] | string;
}

@doc("A message authored by the end user as input to the model.")
@added(Versions.v2025_05_15_preview)
model UserMessage extends Message {
  @doc("Indicates this is a user message.")
  role: "user";

  #suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
  @doc("The content of the message.")
  @typeChangedFrom(Versions.v2025_07_31_preview, string)
  content: AIContent[] | string;
}

@doc("A message generated by the assistant in response to previous messages.")
@added(Versions.v2025_05_15_preview)
model AssistantMessage extends Message {
  @doc("Indicates this is an assistant message.")
  role: "assistant";

  #suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
  @doc("The content of the message.")
  @typeChangedFrom(Versions.v2025_07_31_preview, string)
  content: AIContent[] | string;
}

@doc("Definition of a tool that can be used by the agent.")
@added(Versions.v2025_07_31_preview)
model AgentToolDefinition {
  @doc("The name of the tool.")
  name: string;

  @doc("The description of the tool.")
  description?: string;

  @doc("The parameters for the tool in JSON Schema format.")
  parameters: Record<unknown>;
}
