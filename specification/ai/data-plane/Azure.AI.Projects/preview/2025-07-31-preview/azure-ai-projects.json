{
  "swagger": "2.0",
  "info": {
    "title": "Azure AI",
    "version": "2025-07-31-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Project endpoint. In the form \"https://<your-ai-services-account-name>.services.ai.azure.com/api/projects/_project\"\nif your Foundry Hub has only one Project, or to use the default Project in your Hub. Or in the form \n\"https://<your-ai-services-account-name>.services.ai.azure.com/api/projects/<your-project-name>\" if you want to explicitly\nspecify the Foundry Project name.",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://ai.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ai.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/connections": {
      "get": {
        "operationId": "Connections_List",
        "description": "List all connections in the project, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionType",
            "in": "query",
            "description": "List connections of this specific type",
            "required": false,
            "type": "string",
            "enum": [
              "AzureOpenAI",
              "AzureBlob",
              "AzureStorageAccount",
              "CognitiveSearch",
              "CosmosDB",
              "ApiKey",
              "AppConfig",
              "AppInsights",
              "CustomKeys"
            ],
            "x-ms-enum": {
              "name": "ConnectionType",
              "modelAsString": true,
              "values": [
                {
                  "name": "AzureOpenAI",
                  "value": "AzureOpenAI",
                  "description": "Azure OpenAI Service"
                },
                {
                  "name": "AzureBlobStorage",
                  "value": "AzureBlob",
                  "description": "Azure Blob Storage, with specified container"
                },
                {
                  "name": "AzureStorageAccount",
                  "value": "AzureStorageAccount",
                  "description": "Azure Blob Storage, with container not specified (used by Agents)"
                },
                {
                  "name": "AzureAISearch",
                  "value": "CognitiveSearch",
                  "description": "Azure AI Search"
                },
                {
                  "name": "CosmosDB",
                  "value": "CosmosDB",
                  "description": "CosmosDB"
                },
                {
                  "name": "APIKey",
                  "value": "ApiKey",
                  "description": "Generic connection that uses API Key authentication"
                },
                {
                  "name": "ApplicationConfiguration",
                  "value": "AppConfig",
                  "description": "Application Configuration"
                },
                {
                  "name": "ApplicationInsights",
                  "value": "AppInsights",
                  "description": "Application Insights"
                },
                {
                  "name": "Custom",
                  "value": "CustomKeys",
                  "description": "Custom Keys"
                }
              ]
            }
          },
          {
            "name": "defaultConnection",
            "in": "query",
            "description": "List connections that are default connections",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedConnection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/connections/{name}": {
      "get": {
        "operationId": "Connections_Get",
        "description": "Get a connection by name, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/connections/{name}/getConnectionWithCredentials": {
      "post": {
        "operationId": "Connections_GetWithCredentials",
        "description": "Get a connection by name, with its connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/datasets": {
      "get": {
        "operationId": "Datasets_ListLatest",
        "description": "List the latest version of each DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions": {
      "get": {
        "operationId": "Datasets_ListVersions",
        "description": "List all versions of the given DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions/{version}": {
      "get": {
        "operationId": "Datasets_GetVersion",
        "description": "Get the specific version of the DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Datasets_CreateOrUpdateVersion",
        "description": "Create a new or update an existing DatasetVersion with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "datasetVersion",
            "in": "body",
            "description": "The DatasetVersion to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Datasets_DeleteVersion",
        "description": "Delete the specific version of the DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the DatasetVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/credentials": {
      "post": {
        "operationId": "Datasets_GetCredentials",
        "description": "Get the SAS credential to access the storage account associated with a Dataset version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AssetCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "Datasets_StartPendingUploadVersion",
        "description": "Start a new or get an existing pending upload of a dataset for a specific version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pendingUploadRequest",
            "in": "body",
            "description": "The pending upload request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "description": "List all deployed models in the project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "modelPublisher",
            "in": "query",
            "description": "Model publisher to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "Model name (the publisher specific name) to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "description": "Type of deployment to filter list by",
            "required": false,
            "type": "string",
            "enum": [
              "ModelDeployment"
            ],
            "x-ms-enum": {
              "name": "DeploymentType",
              "modelAsString": true,
              "values": [
                {
                  "name": "ModelDeployment",
                  "value": "ModelDeployment",
                  "description": "Model deployment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDeployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deployments/{name}": {
      "get": {
        "operationId": "Deployments_Get",
        "description": "Get a deployed model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluations/runs": {
      "get": {
        "operationId": "Evaluations_List",
        "description": "List evaluation runs",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter expression to narrow down the list of evaluations based on specific criteria. Supports filtering by properties such as status, tags, or properties to help manage large evaluation collections.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "Evaluations_CreateEvaluation",
        "description": "Creates a new evaluation with the specified configuration.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "Unique, client-generated identifier for ensuring request idempotency. Use the same ID for retries to prevent duplicate evaluations.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "repeatabilityRequestId"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "Timestamp indicating when this request was first initiated. Used in conjunction with repeatability-request-id for idempotency control.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-client-name": "repeatabilityFirstSent"
          },
          {
            "name": "evaluation",
            "in": "body",
            "description": "Complete evaluation configuration including data source, evaluators, and result settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluations/runs/{name}": {
      "get": {
        "operationId": "Evaluations_Get",
        "description": "Get an evaluation run by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "Retry-After": {
                "type": "string",
                "description": "Recommended time interval in seconds before making another request when the evaluation is still processing. This helps prevent excessive polling and reduces server load during long-running evaluations."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Evaluations_Update",
        "description": "Updates specific properties of an existing evaluation. Supports modification of metadata fields including description, display name, and tags. Note: Core evaluation configuration such as data sources and evaluators cannot be modified after creation.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EvaluationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Evaluations_Delete",
        "description": "Delete an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluations/runs/{name}:cancel": {
      "post": {
        "operationId": "Evaluations_Cancel",
        "description": "Cancel an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluations/runs/{name}/results": {
      "get": {
        "operationId": "Evaluations_GetEvaluationResults",
        "description": "Retrieves detailed row-by-row evaluation results with pagination support. This endpoint provides access to individual evaluation outcomes, scores, and reasoning for each data row processed.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Unique identifier of the evaluation whose results are being retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "API version specifier for this operation",
            "required": true,
            "type": "string",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Maximum number of result items to return in a single response. Must be a multiple of 10 (e.g., 10, 20, 100, 1000). Defaults to 10 if not specified.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of result items to skip before returning results, enabling pagination through large result sets. Must be a multiple of 10. Defaults to 0.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluationResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes": {
      "get": {
        "operationId": "Indexes_ListLatest",
        "description": "List the latest version of each Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions": {
      "get": {
        "operationId": "Indexes_ListVersions",
        "description": "List all versions of the given Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "Indexes_GetVersion",
        "description": "Get the specific version of the Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Indexes_CreateOrUpdateVersion",
        "description": "Create a new or update an existing Index with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "in": "body",
            "description": "The Index to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Indexes_DeleteVersion",
        "description": "Delete the specific version of the Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Index to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/redTeams/runs": {
      "get": {
        "operationId": "RedTeams_List",
        "description": "List a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/redTeams/runs/{name}": {
      "get": {
        "operationId": "RedTeams_Get",
        "description": "Get a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the red team run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/redTeams/runs:run": {
      "post": {
        "operationId": "RedTeams_Create",
        "description": "Creates a redteam run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "RedTeam",
            "in": "body",
            "description": "Redteam to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AIContent": {
      "type": "object",
      "description": "Content for AI requests and responses.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The content of the message.",
          "enum": [
            "text",
            "image_url",
            "tool_call",
            "tool_result"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "AgentEvaluation": {
      "type": "object",
      "description": "Evaluation response for agent evaluation run.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the agent evaluation run."
        },
        "status": {
          "type": "string",
          "description": "Status of the agent evaluation. Options: Running, Completed, Failed."
        },
        "error": {
          "type": "string",
          "description": "The reason of the request failure for the long running process, if applicable."
        },
        "result": {
          "type": "array",
          "description": "The agent evaluation result.",
          "items": {
            "$ref": "#/definitions/AgentEvaluationResult"
          }
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "AgentEvaluationRedactionConfiguration": {
      "type": "object",
      "description": "The redaction configuration will allow the user to control what is redacted.",
      "properties": {
        "redactScoreProperties": {
          "type": "boolean",
          "description": "Redact score properties. If not specified, the default is to redact in production."
        }
      }
    },
    "AgentEvaluationRequest": {
      "type": "object",
      "description": "Evaluation request for agent run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "Identifier of the agent run."
        },
        "threadId": {
          "type": "string",
          "description": "Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future."
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "samplingConfiguration": {
          "$ref": "#/definitions/AgentEvaluationSamplingConfiguration",
          "description": "Sampling configuration for the evaluation."
        },
        "redactionConfiguration": {
          "$ref": "#/definitions/AgentEvaluationRedactionConfiguration",
          "description": "Redaction configuration for the evaluation."
        },
        "appInsightsConnectionString": {
          "type": "string",
          "description": "Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs."
        }
      },
      "required": [
        "runId",
        "evaluators",
        "appInsightsConnectionString"
      ]
    },
    "AgentEvaluationResult": {
      "type": "object",
      "description": "Result for the agent evaluation evaluator run.",
      "properties": {
        "evaluator": {
          "type": "string",
          "description": "Evaluator's name. This is the name of the evaluator that was used to evaluate the agent's completion."
        },
        "evaluatorId": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Score of the given evaluator. No restriction on range."
        },
        "status": {
          "type": "string",
          "description": "Status of the evaluator result. Options: Running, Completed, Failed, NotApplicable."
        },
        "reason": {
          "type": "string",
          "description": "Reasoning for the evaluation result."
        },
        "version": {
          "type": "string",
          "description": "Version of the evaluator that was used to evaluate the agent's completion."
        },
        "threadId": {
          "type": "string",
          "description": "The unique identifier of the thread."
        },
        "runId": {
          "type": "string",
          "description": "The unique identifier of the run."
        },
        "error": {
          "type": "string",
          "description": "A string explaining why there was an error, if applicable."
        },
        "additionalDetails": {
          "type": "object",
          "description": "Additional properties relevant to the evaluator. These will differ between evaluators.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "evaluator",
        "evaluatorId",
        "score",
        "status",
        "runId"
      ]
    },
    "AgentEvaluationSamplingConfiguration": {
      "type": "object",
      "description": "Definition for sampling strategy.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the sampling strategy."
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "Percentage of sampling per hour (0-100)."
        },
        "maxRequestRate": {
          "type": "number",
          "format": "float",
          "description": "Maximum request rate per hour (0 to 1000)."
        }
      },
      "required": [
        "name",
        "samplingPercent",
        "maxRequestRate"
      ]
    },
    "AgentToolDefinition": {
      "type": "object",
      "description": "Definition of a tool that can be used by the agent.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tool."
        },
        "description": {
          "type": "string",
          "description": "The description of the tool."
        },
        "parameters": {
          "type": "object",
          "description": "The parameters for the tool in JSON Schema format.",
          "additionalProperties": {}
        }
      },
      "required": [
        "name",
        "parameters"
      ]
    },
    "AggregatedScore": {
      "type": "object",
      "description": "Represents an aggregated score calculated using a specific statistical method across all rows of data.",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "description": "The calculated aggregated value based on the specified method. This value is undefined in case aggregation is not applicable or the method does not produce a numeric result."
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata about the aggregation calculation",
          "additionalProperties": {}
        }
      }
    },
    "ApiKeyCredentials": {
      "type": "object",
      "description": "API Key Credential definition",
      "properties": {
        "key": {
          "type": "string",
          "description": "API Key",
          "readOnly": true,
          "x-ms-client-name": "apiKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "AppInsightsDestinationConfiguration": {
      "type": "object",
      "description": "Configuration for exporting evaluation results to Azure Application Insights. This enables monitoring, alerting, and analytics on evaluation performance and trends.",
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDestinationConfiguration"
        }
      ],
      "x-ms-discriminator-value": "appInsightsStorage"
    },
    "AssetCredentialResponse": {
      "type": "object",
      "description": "Represents a reference to a blob for consumption",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobReference"
      ]
    },
    "AssistantMessage": {
      "type": "object",
      "description": "A message generated by the assistant in response to previous messages.",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "AttackStrategy": {
      "type": "string",
      "description": "Strategies for attacks.",
      "enum": [
        "easy",
        "moderate",
        "difficult",
        "ascii_art",
        "ascii_smuggler",
        "atbash",
        "base64",
        "binary",
        "caesar",
        "character_space",
        "jailbreak",
        "ansii_attack",
        "character_swap",
        "suffix_append",
        "string_join",
        "unicode_confusable",
        "unicode_substitution",
        "diacritic",
        "flip",
        "leetspeak",
        "rot13",
        "morse",
        "url",
        "baseline"
      ],
      "x-ms-enum": {
        "name": "AttackStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Easy",
            "value": "easy",
            "description": "Represents a default set of easy complexity attacks. Easy complexity attacks require less effort, such as translation of a prompt into some encoding, and does not require any Large Language Model to convert or orchestrate."
          },
          {
            "name": "Moderate",
            "value": "moderate",
            "description": "Represents a default set of moderate complexity attacks. Moderate complexity attacks require having access to resources such as another generative AI model."
          },
          {
            "name": "Difficult",
            "value": "difficult",
            "description": "Represents a default set of difficult complexity attacks. Difficult complexity attacks include attacks that require access to significant resources and effort to execute an attack such as knowledge of search-based algorithms in addition to a generative AI model."
          },
          {
            "name": "AsciiArt",
            "value": "ascii_art",
            "description": "Generates visual art using ASCII characters, often used for creative or obfuscation purposes."
          },
          {
            "name": "AsciiSmuggler",
            "value": "ascii_smuggler",
            "description": "Conceals data within ASCII characters, making it harder to detect."
          },
          {
            "name": "Atbash",
            "value": "atbash",
            "description": "Implements the Atbash cipher, a simple substitution cipher where each letter is mapped to its reverse."
          },
          {
            "name": "Base64",
            "value": "base64",
            "description": "Encodes binary data into a text format using Base64, commonly used for data transmission."
          },
          {
            "name": "Binary",
            "value": "binary",
            "description": "Converts text into binary code, representing data in a series of 0s and 1s."
          },
          {
            "name": "Caesar",
            "value": "caesar",
            "description": "Applies the Caesar cipher, a substitution cipher that shifts characters by a fixed number of positions."
          },
          {
            "name": "CharacterSpace",
            "value": "character_space",
            "description": "Alters text by adding spaces between characters, often used for obfuscation."
          },
          {
            "name": "Jailbreak",
            "value": "jailbreak",
            "description": "Injects specially crafted prompts to bypass AI safeguards, known as User Injected Prompt Attacks (UPIA)."
          },
          {
            "name": "AnsiiAttack",
            "value": "ansii_attack",
            "description": "Utilizes ANSI escape sequences to manipulate text appearance and behavior."
          },
          {
            "name": "CharacterSwap",
            "value": "character_swap",
            "description": "Swaps characters within text to create variations or obfuscate the original content."
          },
          {
            "name": "SuffixAppend",
            "value": "suffix_append",
            "description": "Appends an adversarial suffix to the prompt."
          },
          {
            "name": "StringJoin",
            "value": "string_join",
            "description": "Joins multiple strings together, often used for concatenation or obfuscation."
          },
          {
            "name": "UnicodeConfusable",
            "value": "unicode_confusable",
            "description": "Uses Unicode characters that look similar to standard characters, creating visual confusion."
          },
          {
            "name": "UnicodeSubstitution",
            "value": "unicode_substitution",
            "description": "Substitutes standard characters with Unicode equivalents, often for obfuscation."
          },
          {
            "name": "Diacritic",
            "value": "diacritic",
            "description": "Adds diacritical marks to characters, changing their appearance and sometimes their meaning."
          },
          {
            "name": "Flip",
            "value": "flip",
            "description": "Flips characters from front to back, creating a mirrored effect."
          },
          {
            "name": "Leetspeak",
            "value": "leetspeak",
            "description": "Transforms text into Leetspeak, a form of encoding that replaces letters with similar-looking numbers or symbols."
          },
          {
            "name": "ROT13",
            "value": "rot13",
            "description": "Applies the ROT13 cipher, a simple substitution cipher that shifts characters by 13 positions."
          },
          {
            "name": "Morse",
            "value": "morse",
            "description": "Encodes text into Morse code, using dots and dashes to represent characters."
          },
          {
            "name": "Url",
            "value": "url",
            "description": "Encodes text into URL format."
          },
          {
            "name": "Baseline",
            "value": "baseline",
            "description": "Represents the baseline direct adversarial probing, which is used by attack strategies as the attack objective."
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "AzureAISearchIndex": {
      "type": "object",
      "description": "Azure AI Search Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to Azure AI Search",
          "x-ms-mutability": [
            "create"
          ]
        },
        "indexName": {
          "type": "string",
          "description": "Name of index in Azure AI Search resource to attach",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "indexName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "AzureSearch"
    },
    "AzureOpenAIModelConfiguration": {
      "type": "object",
      "description": "Azure OpenAI model configuration. The API version would be selected by the service for querying the model.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based `connection_name/deployment_name` (i.e. `my-aoai-connection/gpt-4o`."
        }
      },
      "required": [
        "modelDeploymentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetConfig"
        }
      ],
      "x-ms-discriminator-value": "AzureOpenAIModel"
    },
    "BaseCredentials": {
      "type": "object",
      "description": "A base class for connection credentials",
      "properties": {
        "type": {
          "$ref": "#/definitions/CredentialType",
          "description": "The type of credential used by the connection",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BlobReference": {
      "type": "object",
      "description": "Blob reference details.",
      "properties": {
        "blobUri": {
          "type": "string",
          "description": "Blob URI path for client to upload data. Example: https://blob.windows.core.net/Container/Path"
        },
        "storageAccountArmId": {
          "type": "string",
          "description": "ARM ID of the storage account to use."
        },
        "credential": {
          "$ref": "#/definitions/SasCredential",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobUri",
        "storageAccountArmId",
        "credential"
      ]
    },
    "ChatMessages": {
      "type": "object",
      "description": "Multi-turn conversations for evaluating dialogue systems and context awareness.",
      "properties": {
        "query": {
          "type": "array",
          "description": "Array of messages representing representing queries",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "response": {
          "type": "array",
          "description": "Array of messages representing responses",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "toolDefinitions": {
          "type": "array",
          "description": "Array of tool definitions that are used in the conversation",
          "items": {
            "$ref": "#/definitions/AgentToolDefinition"
          }
        }
      },
      "required": [
        "query",
        "response",
        "toolDefinitions"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InlineData"
        }
      ],
      "x-ms-discriminator-value": "chatMessages"
    },
    "ChatMessagesUpdate": {
      "type": "object",
      "description": "Multi-turn conversations for evaluating dialogue systems and context awareness.",
      "properties": {
        "query": {
          "type": "array",
          "description": "Array of messages representing representing queries",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "response": {
          "type": "array",
          "description": "Array of messages representing responses",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "toolDefinitions": {
          "type": "array",
          "description": "Array of tool definitions that are used in the conversation",
          "items": {
            "$ref": "#/definitions/AgentToolDefinition"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InlineDataUpdate"
        }
      ],
      "x-ms-discriminator-value": "chatMessages"
    },
    "Connection": {
      "type": "object",
      "description": "Response from the list and get connections operations",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of the connection, provided by the user.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A unique identifier for the connection, generated by the service",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ConnectionType",
          "description": "Category of the connection",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The connection URL to be used for this service",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the connection is tagged as the default connection of its type",
          "readOnly": true
        },
        "credentials": {
          "$ref": "#/definitions/BaseCredentials",
          "description": "The credentials used by the connection",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Metadata of the connection",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "name",
        "id",
        "type",
        "target",
        "isDefault",
        "credentials",
        "metadata"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "description": "The Type (or category) of the connection",
      "enum": [
        "AzureOpenAI",
        "AzureBlob",
        "AzureStorageAccount",
        "CognitiveSearch",
        "CosmosDB",
        "ApiKey",
        "AppConfig",
        "AppInsights",
        "CustomKeys"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureOpenAI",
            "value": "AzureOpenAI",
            "description": "Azure OpenAI Service"
          },
          {
            "name": "AzureBlobStorage",
            "value": "AzureBlob",
            "description": "Azure Blob Storage, with specified container"
          },
          {
            "name": "AzureStorageAccount",
            "value": "AzureStorageAccount",
            "description": "Azure Blob Storage, with container not specified (used by Agents)"
          },
          {
            "name": "AzureAISearch",
            "value": "CognitiveSearch",
            "description": "Azure AI Search"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "CosmosDB"
          },
          {
            "name": "APIKey",
            "value": "ApiKey",
            "description": "Generic connection that uses API Key authentication"
          },
          {
            "name": "ApplicationConfiguration",
            "value": "AppConfig",
            "description": "Application Configuration"
          },
          {
            "name": "ApplicationInsights",
            "value": "AppInsights",
            "description": "Application Insights"
          },
          {
            "name": "Custom",
            "value": "CustomKeys",
            "description": "Custom Keys"
          }
        ]
      }
    },
    "CosmosDBIndex": {
      "type": "object",
      "description": "CosmosDB Vector Store Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to CosmosDB",
          "x-ms-mutability": [
            "create"
          ]
        },
        "databaseName": {
          "type": "string",
          "description": "Name of the CosmosDB Database",
          "x-ms-mutability": [
            "create"
          ]
        },
        "containerName": {
          "type": "string",
          "description": "Name of CosmosDB Container",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingConfiguration": {
          "$ref": "#/definitions/EmbeddingConfiguration",
          "description": "Embedding model configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "databaseName",
        "containerName",
        "embeddingConfiguration",
        "fieldMapping"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "CosmosDBNoSqlVectorStore"
    },
    "CredentialType": {
      "type": "string",
      "description": "The credential type used by the connection",
      "enum": [
        "ApiKey",
        "AAD",
        "SAS",
        "CustomKeys",
        "None"
      ],
      "x-ms-enum": {
        "name": "CredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "apiKey",
            "value": "ApiKey",
            "description": "API Key credential"
          },
          {
            "name": "entraId",
            "value": "AAD",
            "description": "Entra ID credential (formerly known as AAD)"
          },
          {
            "name": "SAS",
            "value": "SAS",
            "description": "Shared Access Signature (SAS) credential"
          },
          {
            "name": "custom",
            "value": "CustomKeys",
            "description": "Custom credential"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No credential"
          }
        ]
      }
    },
    "CustomCredential": {
      "type": "object",
      "description": "Custom credential definition",
      "properties": {
        "keys": {
          "type": "object",
          "description": "The credential type",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "keys"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "CustomKeys"
    },
    "DatasetId": {
      "type": "string",
      "description": "Unique identifier of a dataset registered in AI Foundry workspace. The identifier follows the format: azureai://accounts/{resourceName}/projects/{projectName}/data/{datasetName}/versions/{versionNumber}"
    },
    "DatasetType": {
      "type": "string",
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder"
      ],
      "x-ms-enum": {
        "name": "DatasetType",
        "modelAsString": true,
        "values": [
          {
            "name": "uri_file",
            "value": "uri_file",
            "description": "URI file."
          },
          {
            "name": "uri_folder",
            "value": "uri_folder",
            "description": "URI folder."
          }
        ]
      }
    },
    "DatasetVersion": {
      "type": "object",
      "description": "DatasetVersion Definition",
      "properties": {
        "dataUri": {
          "type": "string",
          "description": "URI of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "$ref": "#/definitions/DatasetType",
          "description": "Dataset type"
        },
        "isReference": {
          "type": "boolean",
          "description": "Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "dataUri",
        "type",
        "name",
        "version"
      ]
    },
    "Deployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/DeploymentType",
          "description": "The type of the deployment"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "DeploymentType": {
      "type": "string",
      "enum": [
        "ModelDeployment"
      ],
      "x-ms-enum": {
        "name": "DeploymentType",
        "modelAsString": true,
        "values": [
          {
            "name": "ModelDeployment",
            "value": "ModelDeployment",
            "description": "Model deployment"
          }
        ]
      }
    },
    "DeveloperMessage": {
      "type": "object",
      "description": "A message authored by a developer to guide the model during evaluation.",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "developer"
    },
    "EmbeddingConfiguration": {
      "type": "object",
      "description": "Embedding configuration class",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingField": {
          "type": "string",
          "description": "Embedding field",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "modelDeploymentName",
        "embeddingField"
      ]
    },
    "EntraIDCredentials": {
      "type": "object",
      "description": "Entra ID credential definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "Evaluation": {
      "type": "object",
      "description": "Evaluation Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluation.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "dataSource": {
          "$ref": "#/definitions/EvaluationDataSource",
          "description": "Data source configuration that specifies where the evaluation data comes from. This replaces the legacy 'data' field and provides more flexible data source options."
        },
        "resultSettings": {
          "$ref": "#/definitions/EvaluationResultSettings",
          "description": "Configuration settings that control how evaluation results are processed, stored, and exported"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for evaluation. It helps to find the evaluation easily in AI Foundry. It does not need to be unique."
        },
        "description": {
          "type": "string",
          "description": "Description of the evaluation. It can be used to store additional information about the evaluation and is mutable."
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current operational state of the evaluation. This field is managed by the service and reflects the evaluation's progress from initiation to completion.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Evaluation's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "summary": {
          "type": "object",
          "description": "Aggregated summary of evaluation results for each configured evaluator. This provides a high-level overview of performance across all data rows and is available once the evaluation completes.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorSummaryResult"
          },
          "readOnly": true
        },
        "resultDatasetId": {
          "$ref": "#/definitions/DatasetId",
          "description": " Unique identifier of the dataset containing detailed evaluation results. This dataset is created automatically upon evaluation completion and contains row-by-row results for analysis.\n The identifier follows the format: azureai://accounts/{resourceName}/projects/{projectName}/datasets/{datasetName}/versions/{versionNumber}.\n Note: This dataset is only available when the result retention policy permits detailed result storage.",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "System-generated metadata containing internal service information for debugging and operational purposes. This field is managed by the service and cannot be modified by clients.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "dataSource",
        "state",
        "evaluators"
      ]
    },
    "EvaluationDataSource": {
      "type": "object",
      "description": "Base class for different types of evaluation data sources. Use the discriminator field 'type' to specify the specific data source implementation.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationDataSourceType",
          "description": "Specifies the type of data source being used for evaluation"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationDataSourceType": {
      "type": "string",
      "description": "Specifies the type of data source used for evaluation. Different types support various data input methods and formats.",
      "enum": [
        "inlineJsonData",
        "dataset",
        "foundryAgentRun",
        "FoundryModelDeploymentInline",
        "foundryModelDeploymentDataset"
      ],
      "x-ms-enum": {
        "name": "EvaluationDataSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "InlineJsonData",
            "value": "inlineJsonData",
            "description": "Use inline JSON data provided directly in the request"
          },
          {
            "name": "Dataset",
            "value": "dataset",
            "description": "Use a dataset that has been registered and stored in AI Foundry workspace"
          },
          {
            "name": "FoundryAgentRun",
            "value": "foundryAgentRun",
            "description": "Use conversation data from a specific agent run execution"
          },
          {
            "name": "FoundryModelDeploymentInline",
            "value": "FoundryModelDeploymentInline",
            "description": "Use data generated by running a model deployment against inline queries provided in the request"
          },
          {
            "name": "FoundryModelDeploymentDataset",
            "value": "foundryModelDeploymentDataset",
            "description": "Use data generated by running a model deployment against a registered dataset"
          }
        ]
      }
    },
    "EvaluationDataSourceUpdate": {
      "type": "object",
      "description": "Base class for different types of evaluation data sources. Use the discriminator field 'type' to specify the specific data source implementation.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationDataSourceType",
          "description": "Specifies the type of data source being used for evaluation"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationDestinationConfiguration": {
      "type": "object",
      "description": "Base configuration for exporting evaluation results to external storage destinations. This enables integration with external analytics and monitoring systems.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationDestinationConfigurationType",
          "description": "Specifies the type of external storage destination"
        },
        "connectionName": {
          "type": "string",
          "description": "Name of the connection resource configured in the AI Foundry workspace. This connection must be properly configured with appropriate credentials before use."
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current state of the export operation to this destination. This field is managed by the service and cannot be modified by clients.",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "connectionName"
      ]
    },
    "EvaluationDestinationConfigurationType": {
      "type": "string",
      "description": "Specifies the type of external storage destination where evaluation results can be exported for further analysis or long-term retention.",
      "enum": [
        "appInsightsStorage",
        "storageAccountStorage"
      ],
      "x-ms-enum": {
        "name": "EvaluationDestinationConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "AppInsightsStorage",
            "value": "appInsightsStorage",
            "description": "Export evaluation results to Azure Application Insights for monitoring and analytics"
          },
          {
            "name": "StorageAccountStorage",
            "value": "storageAccountStorage",
            "description": "Export evaluation results to Azure Blob Storage for data archival and custom processing"
          }
        ]
      }
    },
    "EvaluationModelConfiguration": {
      "type": "object",
      "description": "Comprehensive configuration for a model deployment used in evaluation scenarios. This defines how the model will process inputs and generate responses for evaluation.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/modelDeploymentName'."
        },
        "modelParameters": {
          "type": "object",
          "description": "Optional model-specific parameters to fine-tune behavior during evaluation. These may include temperature, max tokens, top-p, frequency penalty, and other model configuration options supported by the deployment.",
          "additionalProperties": {}
        }
      },
      "required": [
        "modelDeploymentName"
      ]
    },
    "EvaluationModelConfigurationUpdate": {
      "type": "object",
      "description": "Comprehensive configuration for a model deployment used in evaluation scenarios. This defines how the model will process inputs and generate responses for evaluation.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/modelDeploymentName'."
        },
        "modelParameters": {
          "type": "object",
          "description": "Optional model-specific parameters to fine-tune behavior during evaluation. These may include temperature, max tokens, top-p, frequency penalty, and other model configuration options supported by the deployment.",
          "additionalProperties": {}
        }
      }
    },
    "EvaluationModelSourceCommon": {
      "type": "object",
      "description": "Common properties shared across model deployment configurations used in evaluations.",
      "properties": {
        "modelConfiguration": {
          "$ref": "#/definitions/EvaluationModelConfiguration",
          "description": "Configuration for the model deployment used in evaluation."
        },
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far. Each message can be a json string with role and content to specify the conversation context.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        }
      },
      "required": [
        "modelConfiguration",
        "baseMessages"
      ]
    },
    "EvaluationResult": {
      "type": "object",
      "description": "Comprehensive evaluation results for a single data row, including the input data, processing state, and results from all configured evaluators.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this evaluation result row",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current processing state of this data row. Tracks progress from initial processing through completion or failure."
        },
        "error": {
          "type": "string",
          "description": "Error message describing why the evaluation failed for this data row, if applicable"
        },
        "inputDataJson": {
          "type": "string",
          "description": "Original input data for this row in JSON string format. This preserves the exact data that was evaluated for reference and debugging."
        },
        "evaluatorResults": {
          "type": "object",
          "description": "Evaluation results from all the configured evaluators for this data row.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorResult"
          }
        }
      },
      "required": [
        "id",
        "state",
        "evaluatorResults"
      ]
    },
    "EvaluationResultOutcome": {
      "type": "string",
      "description": "Defines the possible outcomes of an evaluation result, indicating whether the evaluated data meets the specified criteria or standards.",
      "enum": [
        "pass",
        "fail",
        "notEvaluated",
        "notApplicable"
      ],
      "x-ms-enum": {
        "name": "EvaluationResultOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "pass",
            "value": "pass",
            "description": "The evaluation completed successfully and met the specified criteria or threshold"
          },
          {
            "name": "fail",
            "value": "fail",
            "description": "The evaluation completed but did not meet the specified criteria or threshold"
          },
          {
            "name": "notEvaluated",
            "value": "notEvaluated",
            "description": "The evaluation has not been processed yet or is still in progress"
          },
          {
            "name": "notApplicable",
            "value": "notApplicable",
            "description": "The evaluation criteria do not apply to this particular data row or context"
          }
        ]
      }
    },
    "EvaluationResultSettings": {
      "type": "object",
      "description": "Configuration settings that control how evaluation results are processed, stored, and exported. These settings affect data privacy, retention, and integration with external systems.",
      "properties": {
        "redactionLevel": {
          "$ref": "#/definitions/RedactionLevel",
          "description": "Level of data redaction to apply to evaluation results. Defaults to 'sensitive' in production environments to protect confidential information."
        },
        "additionalDestinations": {
          "type": "array",
          "description": "List of external storage destinations where evaluation results should be exported in addition to the default AI Foundry storage",
          "items": {
            "$ref": "#/definitions/EvaluationDestinationConfiguration"
          }
        }
      }
    },
    "EvaluationScore": {
      "type": "object",
      "description": "Score assigned by the evaluator to a specific data row",
      "properties": {
        "label": {
          "description": "Score of the evaluation."
        },
        "justification": {
          "type": "string",
          "description": "Justification for the score, providing context on how it was derived or what it represents"
        },
        "threshold": {
          "type": "number",
          "format": "float",
          "description": "Threshold value that this score is compared against to determine the evaluation outcome"
        },
        "desirableDirection": {
          "$ref": "#/definitions/EvaluatorDesirableDirection",
          "description": "Direction of the score that indicates whether a higher or lower score is desirable for this evaluator"
        },
        "scoreType": {
          "$ref": "#/definitions/EvaluatorScoreType",
          "description": "Type of the score that indicates whether it is a boolean, continuous, or ordinal score"
        },
        "outcome": {
          "$ref": "#/definitions/EvaluationResultOutcome",
          "description": "Outcome of the evaluation based on the score and threshold. Indicates whether the score meets, exceeds, or falls below expectations"
        },
        "additionalDetails": {
          "type": "object",
          "description": "Optional additional details that may include metadata or other relevant information about the score",
          "additionalProperties": {}
        }
      },
      "required": [
        "justification"
      ]
    },
    "EvaluationSummaryStatistics": {
      "type": "object",
      "description": "Statistical summary of evaluation results including aggregated scores and pass/fail rates.",
      "properties": {
        "sampleCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of rows that were evaluated."
        },
        "defectRate": {
          "type": "number",
          "format": "float",
          "description": "Proportion of evaluation results that failed to meet the specified criteria or threshold, expressed as a value between 0 and 1."
        },
        "minScore": {
          "type": "number",
          "format": "float",
          "description": "Lowest score value observed across all evaluation results."
        },
        "maxScore": {
          "type": "number",
          "format": "float",
          "description": "Highest score value observed across all evaluation results."
        },
        "averageScore": {
          "type": "number",
          "format": "float",
          "description": "Arithmetic mean of all score values in the evaluation results."
        },
        "standardDeviation": {
          "type": "number",
          "format": "float",
          "description": "Standard deviation of score values, measuring the variability or spread of the evaluation results."
        },
        "confidenceIntervalLower": {
          "type": "number",
          "format": "float",
          "description": "Lower bound of the 90% confidence interval for the evaluation scores, indicating statistical reliability of the results."
        },
        "confidenceIntervalUpper": {
          "type": "number",
          "format": "float",
          "description": "Upper bound of the 90% confidence interval for the evaluation scores, indicating statistical reliability of the results."
        }
      },
      "required": [
        "sampleCount"
      ]
    },
    "EvaluationUpdate": {
      "type": "object",
      "description": "Evaluation Definition",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/EvaluationDataSourceUpdate",
          "description": "Data source configuration that specifies where the evaluation data comes from. This replaces the legacy 'data' field and provides more flexible data source options."
        },
        "resultSettings": {
          "$ref": "#/definitions/EvaluationResultSettings",
          "description": "Configuration settings that control how evaluation results are processed, stored, and exported"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for evaluation. It helps to find the evaluation easily in AI Foundry. It does not need to be unique."
        },
        "description": {
          "type": "string",
          "description": "Description of the evaluation. It can be used to store additional information about the evaluation and is mutable."
        },
        "tags": {
          "type": "object",
          "description": "Evaluation's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfigurationUpdate"
          }
        }
      }
    },
    "EvaluatorConfiguration": {
      "type": "object",
      "description": "Evaluator Configuration",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "initialParameters": {
          "type": "object",
          "description": "Initial parameters of the evaluator.",
          "additionalProperties": {}
        },
        "dataMapping": {
          "type": "object",
          "description": "Data parameters of the evaluator.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "EvaluatorConfigurationUpdate": {
      "type": "object",
      "description": "Evaluator Configuration",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "initialParameters": {
          "type": "object",
          "description": "Initial parameters of the evaluator.",
          "additionalProperties": {}
        },
        "dataMapping": {
          "type": "object",
          "description": "Data parameters of the evaluator.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EvaluatorDesirableDirection": {
      "type": "string",
      "description": "Describes the desirable direction for the evaluation score. This indicates whether a higher or lower score is preferred for this evaluator.",
      "enum": [
        "increase",
        "decrease",
        "neutral"
      ],
      "x-ms-enum": {
        "name": "EvaluatorDesirableDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "increase",
            "value": "increase",
            "description": "Indicates that a higher score is desirable for this evaluator"
          },
          {
            "name": "decrease",
            "value": "decrease",
            "description": "Indicates that a lower score is desirable for this evaluator"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "Indicates that the score should be neutral, meaning it does not have a preferred direction"
          }
        ]
      }
    },
    "EvaluatorResult": {
      "type": "object",
      "description": "Detailed result of a specific evaluator's assessment on a single data row. Contains the evaluation outcome, score, reasoning, and additional metrics.",
      "properties": {
        "evaluatorId": {
          "type": "string",
          "description": "Unique identifier of the evaluator that produced this result"
        },
        "systemData": {
          "$ref": "#/definitions/EvaluatorResultSystemData",
          "description": "Metadata about the evaluation execution environment and resource usage."
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current state of the evaluation execution. Tracks progress from initiation to completion or failure."
        },
        "score": {
          "type": "object",
          "description": "Score for the evaluation result",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluationScore"
          }
        }
      },
      "required": [
        "evaluatorId",
        "state"
      ]
    },
    "EvaluatorResultCommon": {
      "type": "object",
      "description": "Common properties shared across all evaluator results, including metadata about the evaluation execution and resource consumption.",
      "properties": {
        "evaluatorId": {
          "type": "string",
          "description": "Unique identifier of the evaluator that produced this result"
        },
        "systemData": {
          "$ref": "#/definitions/EvaluatorResultSystemData",
          "description": "Metadata about the evaluation execution environment and resource usage."
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current state of the evaluation execution. Tracks progress from initiation to completion or failure."
        }
      },
      "required": [
        "evaluatorId",
        "state"
      ]
    },
    "EvaluatorResultSystemData": {
      "type": "object",
      "description": "Represents system Metadata about the evaluation execution environment and resource usage.",
      "properties": {
        "inputTokenCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of input tokens consumed during the evaluation process. This helps track resource usage and costs."
        },
        "outputTokenCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of output tokens generated during the evaluation process. This helps track resource usage and costs."
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "description": "Total time taken to complete the evaluation, measured in milliseconds. This includes processing time and any network latency."
        },
        "additionalDetails": {
          "type": "object",
          "description": "Additional details about the evaluator result",
          "additionalProperties": {}
        }
      },
      "required": [
        "inputTokenCount",
        "outputTokenCount",
        "duration",
        "additionalDetails"
      ]
    },
    "EvaluatorScoreType": {
      "type": "string",
      "description": "Type of score assigned by the evaluator. This indicates whether the score is boolean, continuous, or ordinal.",
      "enum": [
        "boolean",
        "continuous",
        "ordinal"
      ],
      "x-ms-enum": {
        "name": "EvaluatorScoreType",
        "modelAsString": true,
        "values": [
          {
            "name": "boolean",
            "value": "boolean",
            "description": "Boolean score type, where the score is either true or false"
          },
          {
            "name": "continuous",
            "value": "continuous",
            "description": "Continuous score type, where the score is a floating-point number representing a continuous value"
          },
          {
            "name": "ordinal",
            "value": "ordinal",
            "description": "Ordinal score type, where the score represents an ordered category or rank"
          }
        ]
      }
    },
    "EvaluatorSummaryResult": {
      "type": "object",
      "description": "Aggregated summary of evaluation results for a specific evaluator across all data rows. This provides a high-level overview of the evaluator's performance.",
      "properties": {
        "evaluatorId": {
          "type": "string",
          "description": "Unique identifier of the evaluator that produced this result"
        },
        "systemData": {
          "$ref": "#/definitions/EvaluatorResultSystemData",
          "description": "Metadata about the evaluation execution environment and resource usage."
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "Current state of the evaluation execution. Tracks progress from initiation to completion or failure."
        },
        "statistics": {
          "type": "object",
          "description": "Statistical summary of evaluation results where key is the metric id.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluationSummaryStatistics"
          }
        }
      },
      "required": [
        "evaluatorId",
        "state"
      ]
    },
    "FieldMapping": {
      "type": "object",
      "description": "Field mapping configuration class",
      "properties": {
        "contentFields": {
          "type": "array",
          "description": "List of fields with text content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "filepathField": {
          "type": "string",
          "description": "Path of file to be used as a source of text content",
          "x-ms-mutability": [
            "create"
          ]
        },
        "titleField": {
          "type": "string",
          "description": "Field containing the title of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "urlField": {
          "type": "string",
          "description": "Field containing the url of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "vectorFields": {
          "type": "array",
          "description": "List of fields with vector content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadataFields": {
          "type": "array",
          "description": "List of fields with metadata content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "contentFields"
      ]
    },
    "FileDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "FolderDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "FoundryAgentRunSource": {
      "type": "object",
      "description": "Data source that uses conversation data from a specific agent run execution for evaluation. This allows evaluating agent performance based on actual conversation history.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the agent to evaluate."
        },
        "runId": {
          "type": "string",
          "description": "Unique identifier of the agent run to evaluate. Example: run_1234"
        },
        "threadId": {
          "type": "string",
          "description": "Unique identifier of the conversation thread within the agent run. This is required when evaluating OpenAI-based agents or models to isolate specific conversation contexts."
        }
      },
      "required": [
        "id",
        "runId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSource"
        }
      ],
      "x-ms-discriminator-value": "foundryAgentRun"
    },
    "FoundryAgentRunSourceUpdate": {
      "type": "object",
      "description": "Data source that uses conversation data from a specific agent run execution for evaluation. This allows evaluating agent performance based on actual conversation history.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the agent to evaluate."
        },
        "runId": {
          "type": "string",
          "description": "Unique identifier of the agent run to evaluate. Example: run_1234"
        },
        "threadId": {
          "type": "string",
          "description": "Unique identifier of the conversation thread within the agent run. This is required when evaluating OpenAI-based agents or models to isolate specific conversation contexts."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSourceUpdate"
        }
      ],
      "x-ms-discriminator-value": "foundryAgentRun"
    },
    "FoundryDatasetDataSource": {
      "type": "object",
      "description": "Data source that uses a dataset registered and stored in AI Foundry workspace. This is the recommended approach for large datasets or reusable evaluation data.",
      "properties": {
        "datasetId": {
          "$ref": "#/definitions/DatasetId",
          "description": "Unique identifier of the dataset registered in AI Foundry workspace"
        }
      },
      "required": [
        "datasetId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSource"
        }
      ],
      "x-ms-discriminator-value": "dataset"
    },
    "FoundryDatasetDataSourceUpdate": {
      "type": "object",
      "description": "Data source that uses a dataset registered and stored in AI Foundry workspace. This is the recommended approach for large datasets or reusable evaluation data.",
      "properties": {
        "datasetId": {
          "$ref": "#/definitions/DatasetId",
          "description": "Unique identifier of the dataset registered in AI Foundry workspace"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSourceUpdate"
        }
      ],
      "x-ms-discriminator-value": "dataset"
    },
    "FoundryModelDatasetSource": {
      "type": "object",
      "description": "Data source that uses a model deployment with a dataset containing prompts. The model processes each prompt from the dataset to generate responses, which are then evaluated against the configured evaluators.",
      "properties": {
        "modelConfiguration": {
          "$ref": "#/definitions/EvaluationModelConfiguration",
          "description": "Configuration for the model deployment used in evaluation."
        },
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far. Each message can be a json string with role and content to specify the conversation context.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "datasetId": {
          "$ref": "#/definitions/DatasetId",
          "description": "Unique identifier of the dataset containing prompts that will be processed by the model deployment"
        },
        "queryField": {
          "type": "string",
          "description": "Name of the column in the dataset that contains the queries to be processed by the model deployment. This allows specifying which column should be used as input for evaluation. eg.. queryField: '{{item.messages}}'"
        }
      },
      "required": [
        "modelConfiguration",
        "baseMessages",
        "datasetId",
        "queryField"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSource"
        }
      ],
      "x-ms-discriminator-value": "foundryModelDeploymentDataset"
    },
    "FoundryModelDatasetSourceUpdate": {
      "type": "object",
      "description": "Data source that uses a model deployment with a dataset containing prompts. The model processes each prompt from the dataset to generate responses, which are then evaluated against the configured evaluators.",
      "properties": {
        "modelConfiguration": {
          "$ref": "#/definitions/EvaluationModelConfigurationUpdate",
          "description": "Configuration for the model deployment used in evaluation."
        },
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far. Each message can be a json string with role and content to specify the conversation context.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "datasetId": {
          "$ref": "#/definitions/DatasetId",
          "description": "Unique identifier of the dataset containing prompts that will be processed by the model deployment"
        },
        "queryField": {
          "type": "string",
          "description": "Name of the column in the dataset that contains the queries to be processed by the model deployment. This allows specifying which column should be used as input for evaluation. eg.. queryField: '{{item.messages}}'"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSourceUpdate"
        }
      ],
      "x-ms-discriminator-value": "foundryModelDeploymentDataset"
    },
    "FoundryModelInlineSource": {
      "type": "object",
      "description": "Data source that uses a model deployment with inline queries. The specified model processes each query to generate responses, which are then evaluated against the configured evaluators.",
      "properties": {
        "modelConfiguration": {
          "$ref": "#/definitions/EvaluationModelConfiguration",
          "description": "Configuration for the model deployment used in evaluation."
        },
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far. Each message can be a json string with role and content to specify the conversation context.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "queries": {
          "type": "array",
          "description": "Inline queries to be processed by the model deployment. The response is then evaluated against the configured evaluators.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "modelConfiguration",
        "baseMessages",
        "queries"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSource"
        }
      ],
      "x-ms-discriminator-value": "FoundryModelDeploymentInline"
    },
    "FoundryModelInlineSourceUpdate": {
      "type": "object",
      "description": "Data source that uses a model deployment with inline queries. The specified model processes each query to generate responses, which are then evaluated against the configured evaluators.",
      "properties": {
        "modelConfiguration": {
          "$ref": "#/definitions/EvaluationModelConfigurationUpdate",
          "description": "Configuration for the model deployment used in evaluation."
        },
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far. Each message can be a json string with role and content to specify the conversation context.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "queries": {
          "type": "array",
          "description": "Inline queries to be processed by the model deployment. The response is then evaluated against the configured evaluators.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSourceUpdate"
        }
      ],
      "x-ms-discriminator-value": "FoundryModelDeploymentInline"
    },
    "ImageUrlContent": {
      "type": "object",
      "description": "Content for image URL messages in AI conversations.",
      "properties": {
        "imageUrl": {
          "type": "string",
          "description": "The URL of the image."
        }
      },
      "required": [
        "imageUrl"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AIContent"
        }
      ],
      "x-ms-discriminator-value": "image_url"
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/IndexType",
          "description": "Type of index"
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name",
        "version"
      ]
    },
    "IndexType": {
      "type": "string",
      "enum": [
        "AzureSearch",
        "CosmosDBNoSqlVectorStore",
        "ManagedAzureSearch"
      ],
      "x-ms-enum": {
        "name": "IndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "azureSearch",
            "value": "AzureSearch",
            "description": "Azure search"
          },
          {
            "name": "cosmosDB",
            "value": "CosmosDBNoSqlVectorStore",
            "description": "CosmosDB"
          },
          {
            "name": "managedAzureSearch",
            "value": "ManagedAzureSearch",
            "description": "Managed Azure Search"
          }
        ]
      }
    },
    "InlineData": {
      "type": "object",
      "description": "Base class for inline evaluation data with format discrimination.",
      "properties": {
        "dataFormat": {
          "$ref": "#/definitions/InlineDataFormat",
          "description": "Format of the inline data structure"
        }
      },
      "discriminator": "dataFormat",
      "required": [
        "dataFormat"
      ]
    },
    "InlineDataFormat": {
      "type": "string",
      "description": "Available formats for structuring inline evaluation data.",
      "enum": [
        "queryResponseMessage",
        "chatMessages",
        "inlineJson"
      ],
      "x-ms-enum": {
        "name": "InlineDataFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "queryResponseMessage",
            "value": "queryResponseMessage",
            "description": "Query-response pairs for Q&A and chatbot evaluations"
          },
          {
            "name": "chatMessages",
            "value": "chatMessages",
            "description": "Multi-turn conversations with role-based messages and tool definitions"
          },
          {
            "name": "inlineJson",
            "value": "inlineJson",
            "description": "Flexible JSON format for custom data structures"
          }
        ]
      }
    },
    "InlineDataUpdate": {
      "type": "object",
      "description": "Base class for inline evaluation data with format discrimination.",
      "properties": {
        "dataFormat": {
          "$ref": "#/definitions/InlineDataFormat",
          "description": "Format of the inline data structure"
        }
      },
      "discriminator": "dataFormat",
      "required": [
        "dataFormat"
      ]
    },
    "InlineJson": {
      "type": "object",
      "description": "Custom JSON format for complex evaluation scenarios requiring flexible data structures.",
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of JSON strings with custom fields and metadata",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "items"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InlineData"
        }
      ],
      "x-ms-discriminator-value": "inlineJson"
    },
    "InlineJsonDataSource": {
      "type": "object",
      "description": "Data source using inline data provided directly in the request.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Optional unique identifier for the inline data source. This can be an agent id or a custom identifier to distinguish between different inline data sources."
        },
        "data": {
          "$ref": "#/definitions/InlineData",
          "description": "Inline data structured according to the specified format"
        }
      },
      "required": [
        "data"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSource"
        }
      ],
      "x-ms-discriminator-value": "inlineJsonData"
    },
    "InlineJsonDataSourceUpdate": {
      "type": "object",
      "description": "Data source using inline data provided directly in the request.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Optional unique identifier for the inline data source. This can be an agent id or a custom identifier to distinguish between different inline data sources."
        },
        "data": {
          "$ref": "#/definitions/InlineDataUpdate",
          "description": "Inline data structured according to the specified format"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDataSourceUpdate"
        }
      ],
      "x-ms-discriminator-value": "inlineJsonData"
    },
    "InlineJsonUpdate": {
      "type": "object",
      "description": "Custom JSON format for complex evaluation scenarios requiring flexible data structures.",
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of JSON strings with custom fields and metadata",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InlineDataUpdate"
        }
      ],
      "x-ms-discriminator-value": "inlineJson"
    },
    "InlineMessagesType": {
      "type": "string",
      "description": "The type of inline messages used for evaluation. This union allows for different inline message formats to be specified.",
      "enum": [
        "queryResponseMessage",
        "roleContentType"
      ],
      "x-ms-enum": {
        "name": "InlineMessagesType",
        "modelAsString": true,
        "values": [
          {
            "name": "queryResponseMessage",
            "value": "queryResponseMessage",
            "description": "Inline messages that consist of query-response pairs for evaluation. Each pair includes a query string and the corresponding response generated by the model."
          },
          {
            "name": "roleContentType",
            "value": "roleContentType",
            "description": "role content type message"
          }
        ]
      }
    },
    "InputData": {
      "type": "object",
      "description": "Abstract data class.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the data"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InputDataset": {
      "type": "object",
      "description": "Dataset as source for evaluation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Evaluation input data"
        }
      },
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InputData"
        }
      ],
      "x-ms-discriminator-value": "dataset"
    },
    "ManagedAzureAISearchIndex": {
      "type": "object",
      "description": "Managed Azure AI Search Index Definition",
      "properties": {
        "vectorStoreId": {
          "type": "string",
          "description": "Vector store id of managed index",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "vectorStoreId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "ManagedAzureSearch"
    },
    "Message": {
      "type": "object",
      "description": "Abstract base model representing a single message in a conversation.",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role of the message author. Known values: 'system', 'assistant', 'developer', 'user'.",
          "enum": [
            "system",
            "assistant",
            "developer",
            "user"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "content": {
          "description": "The content of the message."
        }
      },
      "discriminator": "role",
      "required": [
        "role",
        "content"
      ]
    },
    "ModelDeployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Publisher-specific name of the deployed model",
          "readOnly": true
        },
        "modelVersion": {
          "type": "string",
          "description": "Publisher-specific version of the deployed model",
          "readOnly": true
        },
        "modelPublisher": {
          "type": "string",
          "description": "Name of the deployed model's publisher",
          "readOnly": true
        },
        "capabilities": {
          "type": "object",
          "description": "Capabilities of deployed model",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku of the model deployment",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "Name of the connection the deployment comes from",
          "readOnly": true
        }
      },
      "required": [
        "modelName",
        "modelVersion",
        "modelPublisher",
        "capabilities",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Deployment"
        }
      ],
      "x-ms-discriminator-value": "ModelDeployment"
    },
    "NoAuthenticationCredentials": {
      "type": "object",
      "description": "Credentials that do not require authentication",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "PagedConnection": {
      "type": "object",
      "description": "Paged collection of Connection items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connection items on this page",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDatasetVersion": {
      "type": "object",
      "description": "Paged collection of DatasetVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DatasetVersion items on this page",
          "items": {
            "$ref": "#/definitions/DatasetVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDeployment": {
      "type": "object",
      "description": "Paged collection of Deployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluation": {
      "type": "object",
      "description": "Paged collection of Evaluation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Evaluation items on this page",
          "items": {
            "$ref": "#/definitions/Evaluation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluationResult": {
      "type": "object",
      "description": "Paged collection of EvaluationResult items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EvaluationResult items on this page",
          "items": {
            "$ref": "#/definitions/EvaluationResult"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of Index items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedRedTeam": {
      "type": "object",
      "description": "Paged collection of RedTeam items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RedTeam items on this page",
          "items": {
            "$ref": "#/definitions/RedTeam"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PendingUploadCredentialType": {
      "type": "string",
      "description": "The type of credential used to access the storage account.",
      "enum": [
        "SAS"
      ],
      "x-ms-enum": {
        "name": "PendingUploadCredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "sas",
            "value": "SAS",
            "description": "SAS credential type."
          }
        ]
      }
    },
    "PendingUploadRequest": {
      "type": "object",
      "description": "Represents a request for a pending upload.",
      "properties": {
        "pendingUploadId": {
          "type": "string",
          "description": "If PendingUploadId is not provided, a random GUID will be used."
        },
        "connectionName": {
          "type": "string",
          "description": "Azure Storage Account connection name to use for generating temporary SAS token"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type.",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "pendingUploadType"
      ]
    },
    "PendingUploadResponse": {
      "type": "object",
      "description": "Represents the response for a pending upload request",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Container-level read, write, list SAS."
        },
        "pendingUploadId": {
          "type": "string",
          "description": "ID for this upload request."
        },
        "version": {
          "type": "string",
          "description": "Version of asset to be created if user did not specify version when initially creating upload"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "blobReference",
        "pendingUploadId",
        "pendingUploadType"
      ]
    },
    "PendingUploadType": {
      "type": "string",
      "description": "The type of pending upload.",
      "enum": [
        "None",
        "BlobReference"
      ],
      "x-ms-enum": {
        "name": "PendingUploadType",
        "modelAsString": true,
        "values": [
          {
            "name": "none",
            "value": "None",
            "description": "No pending upload."
          },
          {
            "name": "BlobReference",
            "value": "BlobReference",
            "description": "Blob Reference is the only supported type."
          }
        ]
      }
    },
    "QueryResponseInlineMessages": {
      "type": "object",
      "description": "Query-response pairs for evaluating Q&A systems and response accuracy.",
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of query-response pairs with optional context and ground truth",
          "items": {
            "$ref": "#/definitions/QueryResponseMessage"
          }
        }
      },
      "required": [
        "items"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InlineData"
        }
      ],
      "x-ms-discriminator-value": "queryResponseMessage"
    },
    "QueryResponseInlineMessagesUpdate": {
      "type": "object",
      "description": "Query-response pairs for evaluating Q&A systems and response accuracy.",
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of query-response pairs with optional context and ground truth",
          "items": {
            "$ref": "#/definitions/QueryResponseMessage"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InlineDataUpdate"
        }
      ],
      "x-ms-discriminator-value": "queryResponseMessage"
    },
    "QueryResponseMessage": {
      "type": "object",
      "description": "Represents a message that contains a query and its corresponding response.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The query message sent to the model."
        },
        "response": {
          "type": "string",
          "description": "The response generated by the model in reply to the query."
        },
        "context": {
          "type": "string",
          "description": "Optional context information that may include additional details about the query or response, such as metadata or processing instructions."
        },
        "ground_truth": {
          "type": "string",
          "description": "Optional ground truth value for the query, which can be used to compare against the model's response during evaluation."
        }
      },
      "required": [
        "query"
      ]
    },
    "RedTeam": {
      "type": "object",
      "description": "Red team details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the red team run.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "displayName": {
          "type": "string",
          "description": "Name of the red-team run."
        },
        "numTurns": {
          "type": "integer",
          "format": "int32",
          "description": "Number of simulation rounds."
        },
        "attackStrategies": {
          "type": "array",
          "description": "List of attack strategies or nested lists of attack strategies.",
          "items": {
            "$ref": "#/definitions/AttackStrategy"
          }
        },
        "simulationOnly": {
          "type": "boolean",
          "description": "Simulation-only or Simulation + Evaluation. Default false, if true the scan outputs conversation not evaluation result.",
          "default": false
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to generate attack objectives for.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        },
        "applicationScenario": {
          "type": "string",
          "description": "Application scenario for the red team operation, to generate scenario specific attacks."
        },
        "tags": {
          "type": "object",
          "description": "Red team's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Red team's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the red-team. It is set by service and is read-only.",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/TargetConfig",
          "description": "Target configuration for the red-team run."
        }
      },
      "required": [
        "id",
        "target"
      ]
    },
    "RedactionLevel": {
      "type": "string",
      "description": "Controls the level of data redaction applied to evaluation results to protect sensitive information and ensure compliance with privacy requirements.",
      "enum": [
        "sensitive",
        "none"
      ],
      "x-ms-enum": {
        "name": "RedactionLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Sensitive",
            "value": "sensitive",
            "description": "Apply redaction to sensitive data in evaluation results. This is the recommended setting for production environments to ensure data privacy."
          },
          {
            "name": "None",
            "value": "none",
            "description": "Do not apply any data redaction to evaluation results. Use this setting only in development or testing environments where data privacy is not a concern."
          }
        ]
      }
    },
    "RiskCategory": {
      "type": "string",
      "description": "Risk category for the attack objective.",
      "enum": [
        "HateUnfairness",
        "Violence",
        "Sexual",
        "SelfHarm"
      ],
      "x-ms-enum": {
        "name": "RiskCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "HateUnfairness",
            "value": "HateUnfairness",
            "description": "Represents content related to hate or unfairness."
          },
          {
            "name": "Violence",
            "value": "Violence",
            "description": "Represents content related to violence."
          },
          {
            "name": "Sexual",
            "value": "Sexual",
            "description": "Represents content of a sexual nature."
          },
          {
            "name": "SelfHarm",
            "value": "SelfHarm",
            "description": "Represents content related to self-harm."
          }
        ]
      }
    },
    "SASCredentials": {
      "type": "object",
      "description": "Shared Access Signature (SAS) credential definition",
      "properties": {
        "SAS": {
          "type": "string",
          "description": "SAS token",
          "readOnly": true,
          "x-ms-client-name": "sasToken"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SasCredential": {
      "type": "object",
      "description": "SAS Credential definition",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS uri",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of credential",
          "enum": [
            "SAS"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        }
      },
      "required": [
        "sasUri",
        "type"
      ]
    },
    "Sku": {
      "type": "object",
      "description": "Sku information",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "Sku capacity"
        },
        "family": {
          "type": "string",
          "description": "Sku family"
        },
        "name": {
          "type": "string",
          "description": "Sku name"
        },
        "size": {
          "type": "string",
          "description": "Sku size"
        },
        "tier": {
          "type": "string",
          "description": "Sku tier"
        }
      },
      "required": [
        "capacity",
        "family",
        "name",
        "size",
        "tier"
      ]
    },
    "StorageAccountDestinationConfiguration": {
      "type": "object",
      "description": "Configuration for exporting evaluation results to Azure Blob Storage. This provides long-term storage and enables custom data processing workflows.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Name of the container within the Azure Blob Storage account where evaluation results will be stored"
        }
      },
      "required": [
        "containerName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationDestinationConfiguration"
        }
      ],
      "x-ms-discriminator-value": "storageAccountStorage"
    },
    "SystemMessage": {
      "type": "object",
      "description": "A message authored by the system to guide model behavior.",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "TargetConfig": {
      "type": "object",
      "description": "Abstract class for target configuration.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the model configuration."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TextContent": {
      "type": "object",
      "description": "Content for text messages in AI conversations.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text content of the message."
        }
      },
      "required": [
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AIContent"
        }
      ],
      "x-ms-discriminator-value": "text"
    },
    "ToolCallContent": {
      "type": "object",
      "description": "Content for text messages in AI conversations.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tool being called."
        },
        "toolCallId": {
          "type": "string",
          "description": "The unique identifier of the tool call."
        },
        "arguments": {
          "type": "object",
          "description": "The parameters for the tool call in JSON format.",
          "additionalProperties": {}
        }
      },
      "required": [
        "name",
        "toolCallId",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AIContent"
        }
      ],
      "x-ms-discriminator-value": "tool_call"
    },
    "ToolResultContent": {
      "type": "object",
      "description": "Content for tool results in AI conversations.",
      "properties": {
        "results": {
          "type": "object",
          "description": "The result of the tool call in JSON format.",
          "additionalProperties": {}
        }
      },
      "required": [
        "results"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AIContent"
        }
      ],
      "x-ms-discriminator-value": "tool_result"
    },
    "UserMessage": {
      "type": "object",
      "description": "A message authored by the end user as input to the model.",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "user"
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
