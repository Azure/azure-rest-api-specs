{
  "swagger": "2.0",
  "info": {
    "title": "Azure AI",
    "version": "2025-10-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Project endpoint. In the form \"https://your-ai-services-account-name.services.ai.azure.com/api/projects/_project\"\nif your Foundry Hub has only one Project, or to use the default Project in your Hub. Or in the form \n\"https://your-ai-services-account-name.services.ai.azure.com/api/projects/your-project-name\" if you want to explicitly\nspecify the Foundry Project name.",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://ai.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ai.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/connections": {
      "get": {
        "operationId": "Connections_List",
        "description": "List all connections in the project, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionType",
            "in": "query",
            "description": "List connections of this specific type",
            "required": false,
            "type": "string",
            "enum": [
              "AzureOpenAI",
              "AzureBlob",
              "AzureStorageAccount",
              "CognitiveSearch",
              "CosmosDB",
              "ApiKey",
              "AppConfig",
              "AppInsights",
              "CustomKeys"
            ],
            "x-ms-enum": {
              "name": "ConnectionType",
              "modelAsString": true,
              "values": [
                {
                  "name": "AzureOpenAI",
                  "value": "AzureOpenAI",
                  "description": "Azure OpenAI Service"
                },
                {
                  "name": "AzureBlobStorage",
                  "value": "AzureBlob",
                  "description": "Azure Blob Storage, with specified container"
                },
                {
                  "name": "AzureStorageAccount",
                  "value": "AzureStorageAccount",
                  "description": "Azure Blob Storage, with container not specified (used by Agents)"
                },
                {
                  "name": "AzureAISearch",
                  "value": "CognitiveSearch",
                  "description": "Azure AI Search"
                },
                {
                  "name": "CosmosDB",
                  "value": "CosmosDB",
                  "description": "CosmosDB"
                },
                {
                  "name": "APIKey",
                  "value": "ApiKey",
                  "description": "Generic connection that uses API Key authentication"
                },
                {
                  "name": "ApplicationConfiguration",
                  "value": "AppConfig",
                  "description": "Application Configuration"
                },
                {
                  "name": "ApplicationInsights",
                  "value": "AppInsights",
                  "description": "Application Insights"
                },
                {
                  "name": "Custom",
                  "value": "CustomKeys",
                  "description": "Custom Keys"
                }
              ]
            }
          },
          {
            "name": "defaultConnection",
            "in": "query",
            "description": "List connections that are default connections",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedConnection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_List_MaximumSet": {
            "$ref": "./examples/Connections_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/connections/{name}": {
      "get": {
        "operationId": "Connections_Get",
        "description": "Get a connection by name, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_Get_MaximumSet": {
            "$ref": "./examples/Connections_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/connections/{name}/getConnectionWithCredentials": {
      "post": {
        "operationId": "Connections_GetWithCredentials",
        "description": "Get a connection by name, with its connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_GetWithCredentials_MaximumSet": {
            "$ref": "./examples/Connections_GetWithCredentials_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/datasets": {
      "get": {
        "operationId": "Datasets_ListLatest",
        "description": "List the latest version of each DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListLatest_MaximumSet": {
            "$ref": "./examples/Datasets_ListLatest_MaximumSet_Gen.json"
          },
          "Datasets_ListLatest_MinimumSet": {
            "$ref": "./examples/Datasets_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions": {
      "get": {
        "operationId": "Datasets_ListVersions",
        "description": "List all versions of the given DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListVersions_MaximumSet": {
            "$ref": "./examples/Datasets_ListVersions_MaximumSet_Gen.json"
          },
          "Datasets_ListVersions_MinimumSet": {
            "$ref": "./examples/Datasets_ListVersions_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions/{version}": {
      "get": {
        "operationId": "Datasets_GetVersion",
        "description": "Get the specific version of the DatasetVersion. The service returns 404 Not Found error if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetVersion_MaximumSet": {
            "$ref": "./examples/Datasets_GetVersion_MaximumSet_Gen.json"
          },
          "Datasets_GetVersion_MinimumSet": {
            "$ref": "./examples/Datasets_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Datasets_CreateOrUpdateVersion",
        "description": "Create a new or update an existing DatasetVersion with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "datasetVersion",
            "in": "body",
            "description": "The DatasetVersion to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Datasets_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Datasets_DeleteVersion",
        "description": "Delete the specific version of the DatasetVersion. The service returns 204 No Content if the DatasetVersion was deleted successfully or if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the DatasetVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MaximumSet_Gen.json"
          },
          "Datasets_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/credentials": {
      "post": {
        "operationId": "Datasets_GetCredentials",
        "description": "Get the SAS credential to access the storage account associated with a Dataset version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AssetCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetCredentials_MaximumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MaximumSet_Gen.json"
          },
          "Datasets_GetCredentials_MinimumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "Datasets_StartPendingUploadVersion",
        "description": "Start a new or get an existing pending upload of a dataset for a specific version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pendingUploadRequest",
            "in": "body",
            "description": "The pending upload request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_StartPendingUploadVersion_MaximumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MaximumSet_Gen.json"
          },
          "Datasets_StartPendingUploadVersion_MinimumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "description": "List all deployed models in the project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "modelPublisher",
            "in": "query",
            "description": "Model publisher to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "Model name (the publisher specific name) to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "description": "Type of deployment to filter list by",
            "required": false,
            "type": "string",
            "enum": [
              "ModelDeployment"
            ],
            "x-ms-enum": {
              "name": "DeploymentType",
              "modelAsString": true,
              "values": [
                {
                  "name": "ModelDeployment",
                  "value": "ModelDeployment",
                  "description": "Model deployment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDeployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List_MaximumSet": {
            "$ref": "./examples/Deployments_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deployments/{name}": {
      "get": {
        "operationId": "Deployments_Get",
        "description": "Get a deployed model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get_MaximumSet": {
            "$ref": "./examples/Deployments_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs": {
      "get": {
        "operationId": "Evaluations_List",
        "description": "List evaluation runs",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_List_MaximumSet": {
            "$ref": "./examples/Evaluations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/evaluations/runs/{name}": {
      "get": {
        "operationId": "Evaluations_Get",
        "description": "Get an evaluation run by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Get_MaximumSet": {
            "$ref": "./examples/Evaluations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Evaluations_Delete",
        "description": "Delete an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Delete_MaximumSet": {
            "$ref": "./examples/Evaluations_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs/{name}:cancel": {
      "post": {
        "operationId": "Evaluations_Cancel",
        "description": "Cancel an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Cancel_MaximumSet": {
            "$ref": "./examples/Evaluations_Cancel_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs:run": {
      "post": {
        "operationId": "Evaluations_Create",
        "description": "Creates an evaluation run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "evaluation",
            "in": "body",
            "description": "Evaluation to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Create_MaximumSet": {
            "$ref": "./examples/Evaluations_Create_MaximumSet_Gen.json"
          },
          "Evaluations_Create_MinimumSet": {
            "$ref": "./examples/Evaluations_Create_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs:runAgent": {
      "post": {
        "operationId": "Evaluations_CreateAgentEvaluation",
        "description": "Creates an agent evaluation run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "evaluation",
            "in": "body",
            "description": "Agent evaluation to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentEvaluationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AgentEvaluation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_CreateAgentEvaluation_MaximumSet": {
            "$ref": "./examples/Evaluations_CreateAgentEvaluation_MaximumSet_Gen.json"
          },
          "Evaluations_CreateAgentEvaluation_MinimumSet": {
            "$ref": "./examples/Evaluations_CreateAgentEvaluation_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/evaluators": {
      "get": {
        "operationId": "Evaluators_ListVersions",
        "description": "List the latest version of each Evaluator",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object type, which is always list.",
                  "enum": [
                    "list"
                  ],
                  "x-ms-enum": {
                    "modelAsString": false
                  }
                },
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/EvaluatorVersion"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list.",
                  "x-ms-client-name": "firstId"
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list.",
                  "x-ms-client-name": "lastId"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list.",
                  "x-ms-client-name": "hasMore"
                }
              },
              "required": [
                "object",
                "data",
                "first_id",
                "last_id",
                "has_more"
              ]
            }
          }
        }
      }
    },
    "/evaluators/{name}/versions": {
      "get": {
        "operationId": "Evaluators_ListEvaluatorVersions",
        "description": "List all versions of the given Evaluator name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the evaluator",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "The object type, which is always list.",
                  "enum": [
                    "list"
                  ],
                  "x-ms-enum": {
                    "modelAsString": false
                  }
                },
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/EvaluatorVersion"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list.",
                  "x-ms-client-name": "firstId"
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list.",
                  "x-ms-client-name": "lastId"
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list.",
                  "x-ms-client-name": "hasMore"
                }
              },
              "required": [
                "object",
                "data",
                "first_id",
                "last_id",
                "has_more"
              ]
            }
          }
        }
      },
      "post": {
        "operationId": "Evaluators_CreateEvaluatorVersion",
        "description": "Create a new EvaluatorVersion with auto incremented version id",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluators/{name}/versions/{version}": {
      "get": {
        "operationId": "Evaluators_GetEvaluatorVersion",
        "description": "Get the specific version of the EvaluatorVersion. The service returns 404 Not Found error if the EvaluatorVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the EvaluatorVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Evaluators_UpdateEvaluatorVersion",
        "description": "Update an existing EvaluatorVersion with the given version id",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the EvaluatorVersion to update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Evaluators_DeleteEvaluatorVersion",
        "description": "Delete the specific version of the EvaluatorVersion. The service returns 204 No Content if the EvaluatorVersion was deleted successfully or if the EvaluatorVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the EvaluatorVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/indexes": {
      "get": {
        "operationId": "Indexes_ListLatest",
        "description": "List the latest version of each Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListLatest_MaximumSet": {
            "$ref": "./examples/Indexes_ListLatest_MaximumSet_Gen.json"
          },
          "Indexes_ListLatest_MinimumSet": {
            "$ref": "./examples/Indexes_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions": {
      "get": {
        "operationId": "Indexes_ListVersions",
        "description": "List all versions of the given Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListVersions_MaximumSet": {
            "$ref": "./examples/Indexes_ListVersions_MaximumSet_Gen.json"
          },
          "Indexes_ListVersions_MinimumSet": {
            "$ref": "./examples/Indexes_ListVersions_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "Indexes_GetVersion",
        "description": "Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_GetVersion_MaximumSet": {
            "$ref": "./examples/Indexes_GetVersion_MaximumSet_Gen.json"
          },
          "Indexes_GetVersion_MinimumSet": {
            "$ref": "./examples/Indexes_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Indexes_CreateOrUpdateVersion",
        "description": "Create a new or update an existing Index with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "in": "body",
            "description": "The Index to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Indexes_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Indexes_DeleteVersion",
        "description": "Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Index to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MaximumSet_Gen.json"
          },
          "Indexes_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/insights": {
      "get": {
        "operationId": "Insights_ListInsights",
        "description": "List all insights in reverse chronological order (newest first).",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by the type of analysis.",
            "required": false,
            "type": "string",
            "enum": [
              "EvaluationRunClusterInsight",
              "AgentClusterInsight",
              "EvaluationComparison"
            ],
            "x-ms-enum": {
              "name": "InsightType",
              "modelAsString": true,
              "values": [
                {
                  "name": "EvaluationRunClusterInsight",
                  "value": "EvaluationRunClusterInsight",
                  "description": "Insights on an Evaluation run result."
                },
                {
                  "name": "AgentClusterInsight",
                  "value": "AgentClusterInsight",
                  "description": "Cluster Insight on an Agent."
                },
                {
                  "name": "EvaluationComparison",
                  "value": "EvaluationComparison",
                  "description": "Evaluation Comparison."
                }
              ]
            }
          },
          {
            "name": "evalId",
            "in": "query",
            "description": "Filter by the evaluation ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "query",
            "description": "Filter by the evaluation run ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "query",
            "description": "Filter by the agent name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeCoordinates",
            "in": "query",
            "description": "Whether to include coordinates for visualization in the response. Defaults to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedInsight"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Insights_ListInsights": {
            "$ref": "./examples/Insights_ListInsights_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "Insights_GenerateInsights",
        "description": "Generate Insights",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "Unique, client-generated identifier for ensuring request idempotency. Use the same ID for retries to prevent duplicate evaluations.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "repeatabilityRequestId"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "Timestamp indicating when this request was first initiated. Used in conjunction with repeatability-request-id for idempotency control.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-client-name": "repeatabilityFirstSent"
          },
          {
            "name": "insight",
            "in": "body",
            "description": "Complete evaluation configuration including data source, evaluators, and result settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Insight"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Insight"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Insights_GenerateInsights": {
            "$ref": "./examples/Insights_GenerateInsights_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/insights/{id}": {
      "get": {
        "operationId": "Insights_GetInsight",
        "description": "Get a specific insight by Id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the insights report.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeCoordinates",
            "in": "query",
            "description": "Whether to include coordinates for visualization in the response. Defaults to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Insight"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Insights_GetInsight": {
            "$ref": "./examples/Insights_GetInsight_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/redTeams/runs": {
      "get": {
        "operationId": "RedTeams_List",
        "description": "List a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_List_MaximumSet": {
            "$ref": "./examples/RedTeams_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/redTeams/runs/{name}": {
      "get": {
        "operationId": "RedTeams_Get",
        "description": "Get a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the red team run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Get_MaximumSet": {
            "$ref": "./examples/RedTeams_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/redTeams/runs:run": {
      "post": {
        "operationId": "RedTeams_Create",
        "description": "Creates a redteam run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "RedTeam",
            "in": "body",
            "description": "Redteam to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Create_MaximumSet": {
            "$ref": "./examples/RedTeams_Create_MaximumSet_Gen.json"
          },
          "RedTeams_Create_MinimumSet": {
            "$ref": "./examples/RedTeams_Create_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "operationId": "Schedules_List",
        "description": "List all schedules.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSchedule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_List_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "operationId": "Schedules_Get",
        "description": "Get a schedule by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Get_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Schedules_CreateOrUpdate",
        "description": "Create or update a schedule by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Schedule",
            "in": "body",
            "description": "Schedule resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_CreateOrUpdate_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Schedules_Delete",
        "description": "Delete a schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Delete_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_Delete_MaximumSet_Gen.json"
          },
          "Schedules_Delete_MaximumSet - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules/{scheduleId}/runs": {
      "get": {
        "operationId": "Schedules_ListRuns",
        "description": "List all schedule runs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedScheduleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_ListRuns_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_ListRuns_MaximumSet_Gen.json"
          },
          "Schedules_ListRuns_MaximumSet - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_ListRuns_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules/{scheduleId}/runs/{runId}": {
      "get": {
        "operationId": "Schedules_GetRun",
        "description": "Get a schedule run by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Identifier of the schedule run.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScheduleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_GetRun_MaximumSet - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_GetRun_MaximumSet_Gen.json"
          },
          "Schedules_GetRun_MaximumSet - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_GetRun_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/sync_evals:run": {
      "post": {
        "operationId": "SyncEvals_Create",
        "description": "Synchronize evaluation runs from connected resources.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "eval",
            "in": "body",
            "description": "Creates a sync eval run.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncEvalInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvalRunOutputItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgentClusterInsightResult": {
      "type": "object",
      "description": "Insights from the agent cluster analysis.",
      "properties": {
        "clusterInsight": {
          "$ref": "#/definitions/ClusterInsightResult"
        }
      },
      "required": [
        "clusterInsight"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "AgentClusterInsight"
    },
    "AgentClusterInsightsRequest": {
      "type": "object",
      "description": "Insights on set of Agent Evaluation Results",
      "properties": {
        "agentName": {
          "type": "string",
          "description": "Identifier for the agent."
        },
        "modelConfiguration": {
          "$ref": "#/definitions/InsightModelConfiguration",
          "description": "Configuration of the model used in the insight generation."
        }
      },
      "required": [
        "agentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "AgentClusterInsight"
    },
    "AgentEvaluation": {
      "type": "object",
      "description": "Evaluation response for agent evaluation run.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the agent evaluation run."
        },
        "status": {
          "type": "string",
          "description": "Status of the agent evaluation. Options: Running, Completed, Failed."
        },
        "error": {
          "type": "string",
          "description": "The reason of the request failure for the long running process, if applicable."
        },
        "result": {
          "type": "array",
          "description": "The agent evaluation result.",
          "items": {
            "$ref": "#/definitions/AgentEvaluationResult"
          }
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "AgentEvaluationRedactionConfiguration": {
      "type": "object",
      "description": "The redaction configuration will allow the user to control what is redacted.",
      "properties": {
        "redactScoreProperties": {
          "type": "boolean",
          "description": "Redact score properties. If not specified, the default is to redact in production."
        }
      }
    },
    "AgentEvaluationRequest": {
      "type": "object",
      "description": "Evaluation request for agent run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "Identifier of the agent run."
        },
        "threadId": {
          "type": "string",
          "description": "Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future."
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "samplingConfiguration": {
          "$ref": "#/definitions/AgentEvaluationSamplingConfiguration",
          "description": "Sampling configuration for the evaluation."
        },
        "redactionConfiguration": {
          "$ref": "#/definitions/AgentEvaluationRedactionConfiguration",
          "description": "Redaction configuration for the evaluation."
        },
        "appInsightsConnectionString": {
          "type": "string",
          "description": "Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs."
        }
      },
      "required": [
        "runId",
        "evaluators",
        "appInsightsConnectionString"
      ]
    },
    "AgentEvaluationResult": {
      "type": "object",
      "description": "Result for the agent evaluation evaluator run.",
      "properties": {
        "evaluator": {
          "type": "string",
          "description": "Evaluator's name. This is the name of the evaluator that was used to evaluate the agent's completion."
        },
        "evaluatorId": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Score of the given evaluator. No restriction on range."
        },
        "status": {
          "type": "string",
          "description": "Status of the evaluator result. Options: Running, Completed, Failed, NotApplicable."
        },
        "reason": {
          "type": "string",
          "description": "Reasoning for the evaluation result."
        },
        "version": {
          "type": "string",
          "description": "Version of the evaluator that was used to evaluate the agent's completion."
        },
        "threadId": {
          "type": "string",
          "description": "The unique identifier of the thread."
        },
        "runId": {
          "type": "string",
          "description": "The unique identifier of the run."
        },
        "error": {
          "type": "string",
          "description": "A string explaining why there was an error, if applicable."
        },
        "additionalDetails": {
          "type": "object",
          "description": "Additional properties relevant to the evaluator. These will differ between evaluators.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "evaluator",
        "evaluatorId",
        "score",
        "status",
        "runId"
      ]
    },
    "AgentEvaluationSamplingConfiguration": {
      "type": "object",
      "description": "Definition for sampling strategy.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the sampling strategy."
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "Percentage of sampling per hour (0-100)."
        },
        "maxRequestRate": {
          "type": "number",
          "format": "float",
          "description": "Maximum request rate per hour (0 to 1000)."
        }
      },
      "required": [
        "name",
        "samplingPercent",
        "maxRequestRate"
      ]
    },
    "ApiKeyCredentials": {
      "type": "object",
      "description": "API Key Credential definition",
      "properties": {
        "key": {
          "type": "string",
          "description": "API Key",
          "readOnly": true,
          "x-ms-client-name": "apiKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "AssetCredentialResponse": {
      "type": "object",
      "description": "Represents a reference to a blob for consumption",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobReference"
      ]
    },
    "AssistantMessage": {
      "type": "object",
      "description": "A message generated by the assistant in response to previous messages.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Response content generated by the assistant."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "AttackStrategy": {
      "type": "string",
      "description": "Strategies for attacks.",
      "enum": [
        "easy",
        "moderate",
        "difficult",
        "ascii_art",
        "ascii_smuggler",
        "atbash",
        "base64",
        "binary",
        "caesar",
        "character_space",
        "jailbreak",
        "ansii_attack",
        "character_swap",
        "suffix_append",
        "string_join",
        "unicode_confusable",
        "unicode_substitution",
        "diacritic",
        "flip",
        "leetspeak",
        "rot13",
        "morse",
        "url",
        "baseline"
      ],
      "x-ms-enum": {
        "name": "AttackStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Easy",
            "value": "easy",
            "description": "Represents a default set of easy complexity attacks. Easy complexity attacks require less effort, such as translation of a prompt into some encoding, and does not require any Large Language Model to convert or orchestrate."
          },
          {
            "name": "Moderate",
            "value": "moderate",
            "description": "Represents a default set of moderate complexity attacks. Moderate complexity attacks require having access to resources such as another generative AI model."
          },
          {
            "name": "Difficult",
            "value": "difficult",
            "description": "Represents a default set of difficult complexity attacks. Difficult complexity attacks include attacks that require access to significant resources and effort to execute an attack such as knowledge of search-based algorithms in addition to a generative AI model."
          },
          {
            "name": "AsciiArt",
            "value": "ascii_art",
            "description": "Generates visual art using ASCII characters, often used for creative or obfuscation purposes."
          },
          {
            "name": "AsciiSmuggler",
            "value": "ascii_smuggler",
            "description": "Conceals data within ASCII characters, making it harder to detect."
          },
          {
            "name": "Atbash",
            "value": "atbash",
            "description": "Implements the Atbash cipher, a simple substitution cipher where each letter is mapped to its reverse."
          },
          {
            "name": "Base64",
            "value": "base64",
            "description": "Encodes binary data into a text format using Base64, commonly used for data transmission."
          },
          {
            "name": "Binary",
            "value": "binary",
            "description": "Converts text into binary code, representing data in a series of 0s and 1s."
          },
          {
            "name": "Caesar",
            "value": "caesar",
            "description": "Applies the Caesar cipher, a substitution cipher that shifts characters by a fixed number of positions."
          },
          {
            "name": "CharacterSpace",
            "value": "character_space",
            "description": "Alters text by adding spaces between characters, often used for obfuscation."
          },
          {
            "name": "Jailbreak",
            "value": "jailbreak",
            "description": "Injects specially crafted prompts to bypass AI safeguards, known as User Injected Prompt Attacks (UPIA)."
          },
          {
            "name": "AnsiiAttack",
            "value": "ansii_attack",
            "description": "Utilizes ANSI escape sequences to manipulate text appearance and behavior."
          },
          {
            "name": "CharacterSwap",
            "value": "character_swap",
            "description": "Swaps characters within text to create variations or obfuscate the original content."
          },
          {
            "name": "SuffixAppend",
            "value": "suffix_append",
            "description": "Appends an adversarial suffix to the prompt."
          },
          {
            "name": "StringJoin",
            "value": "string_join",
            "description": "Joins multiple strings together, often used for concatenation or obfuscation."
          },
          {
            "name": "UnicodeConfusable",
            "value": "unicode_confusable",
            "description": "Uses Unicode characters that look similar to standard characters, creating visual confusion."
          },
          {
            "name": "UnicodeSubstitution",
            "value": "unicode_substitution",
            "description": "Substitutes standard characters with Unicode equivalents, often for obfuscation."
          },
          {
            "name": "Diacritic",
            "value": "diacritic",
            "description": "Adds diacritical marks to characters, changing their appearance and sometimes their meaning."
          },
          {
            "name": "Flip",
            "value": "flip",
            "description": "Flips characters from front to back, creating a mirrored effect."
          },
          {
            "name": "Leetspeak",
            "value": "leetspeak",
            "description": "Transforms text into Leetspeak, a form of encoding that replaces letters with similar-looking numbers or symbols."
          },
          {
            "name": "ROT13",
            "value": "rot13",
            "description": "Applies the ROT13 cipher, a simple substitution cipher that shifts characters by 13 positions."
          },
          {
            "name": "Morse",
            "value": "morse",
            "description": "Encodes text into Morse code, using dots and dashes to represent characters."
          },
          {
            "name": "Url",
            "value": "url",
            "description": "Encodes text into URL format."
          },
          {
            "name": "Baseline",
            "value": "baseline",
            "description": "Represents the baseline direct adversarial probing, which is used by attack strategies as the attack objective."
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "AzureAIEvaluator": {
      "type": "object",
      "description": "Azure AI Evaluator class definition.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The object type, which is always `azure_ai_evaluator`.",
          "enum": [
            "azure_ai_evaluator"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "User provided name of the Azure AI Evaluator object instance."
        },
        "evaluator_name": {
          "type": "string",
          "description": "The reference name of the evaluator."
        },
        "evaluator_version": {
          "type": "string",
          "description": "The optional reference version of the evaluator."
        },
        "initialization_parameters": {
          "type": "object",
          "description": "The initialization parameters for the evaluation."
        },
        "data_mapping": {
          "type": "object",
          "description": "The model to use for the evaluation.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "type",
        "name",
        "evaluator_name"
      ]
    },
    "AzureAISearchIndex": {
      "type": "object",
      "description": "Azure AI Search Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to Azure AI Search",
          "x-ms-mutability": [
            "create"
          ]
        },
        "indexName": {
          "type": "string",
          "description": "Name of index in Azure AI Search resource to attach",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "indexName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "AzureSearch"
    },
    "AzureOpenAIModelConfiguration": {
      "type": "object",
      "description": "Azure OpenAI model configuration. The API version would be selected by the service for querying the model.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based `connection_name/deployment_name` (e.g. `my-aoai-connection/gpt-4o`)."
        }
      },
      "required": [
        "modelDeploymentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetConfig"
        }
      ],
      "x-ms-discriminator-value": "AzureOpenAIModel"
    },
    "BaseCredentials": {
      "type": "object",
      "description": "A base class for connection credentials",
      "properties": {
        "type": {
          "$ref": "#/definitions/CredentialType",
          "description": "The type of credential used by the connection",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BlobReference": {
      "type": "object",
      "description": "Blob reference details.",
      "properties": {
        "blobUri": {
          "type": "string",
          "description": "Blob URI path for client to upload data. Example: https://blob.windows.core.net/Container/Path"
        },
        "storageAccountArmId": {
          "type": "string",
          "description": "ARM ID of the storage account to use."
        },
        "credential": {
          "$ref": "#/definitions/SasCredential",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobUri",
        "storageAccountArmId",
        "credential"
      ]
    },
    "ChartCoordinate": {
      "type": "object",
      "description": "Coordinates for the analysis chart.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X-axis coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y-axis coordinate."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the chart element."
        }
      },
      "required": [
        "x",
        "y",
        "size"
      ]
    },
    "ClusterInsightResult": {
      "type": "object",
      "description": "Insights from the cluster analysis.",
      "properties": {
        "summary": {
          "$ref": "#/definitions/InsightSummary",
          "description": "Summary of the insights report."
        },
        "clusters": {
          "type": "array",
          "description": "List of clusters identified in the insights.",
          "items": {
            "$ref": "#/definitions/InsightCluster"
          }
        },
        "coordinates": {
          "type": "object",
          "description": "  Optional mapping of IDs to 2D coordinates used by the UX for visualization.\n\n  The map keys are string identifiers (for example, a cluster id or a sample id)\n  and the values are the coordinates and visual size for rendering on a 2D chart.\n\n  This property is omitted unless the client requests coordinates (for example,\n  by passing `includeCoordinates=true` as a query parameter).\n\n  Example:\n  {\n    \"cluster-1\": { \"x\": 12, \"y\": 34, \"size\": 8 },\n    \"sample-123\": { \"x\": 18, \"y\": 22, \"size\": 4 }\n  }\n\n  Coordinates are intended only for client-side visualization and do not\n  modify the canonical insights results.",
          "additionalProperties": {
            "$ref": "#/definitions/ChartCoordinate"
          }
        }
      },
      "required": [
        "summary",
        "clusters"
      ]
    },
    "ClusterTokenUsage": {
      "type": "object",
      "description": "Token usage for cluster analysis",
      "properties": {
        "inputTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "input token usage"
        },
        "outputTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "output token usage"
        },
        "totalTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "total token usage"
        }
      },
      "required": [
        "inputTokenUsage",
        "outputTokenUsage",
        "totalTokenUsage"
      ]
    },
    "CodeBasedEvaluatorDefinition": {
      "type": "object",
      "description": "Code-based evaluator definition using python code",
      "properties": {
        "code_text": {
          "type": "string",
          "description": "Inline code text for the evaluator"
        }
      },
      "required": [
        "code_text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluatorDefinition"
        }
      ],
      "x-ms-discriminator-value": "code"
    },
    "Connection": {
      "type": "object",
      "description": "Response from the list and get connections operations",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of the connection, provided by the user.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A unique identifier for the connection, generated by the service",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ConnectionType",
          "description": "Category of the connection",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The connection URL to be used for this service",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the connection is tagged as the default connection of its type",
          "readOnly": true
        },
        "credentials": {
          "$ref": "#/definitions/BaseCredentials",
          "description": "The credentials used by the connection",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Metadata of the connection",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "name",
        "id",
        "type",
        "target",
        "isDefault",
        "credentials",
        "metadata"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "description": "The Type (or category) of the connection",
      "enum": [
        "AzureOpenAI",
        "AzureBlob",
        "AzureStorageAccount",
        "CognitiveSearch",
        "CosmosDB",
        "ApiKey",
        "AppConfig",
        "AppInsights",
        "CustomKeys"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureOpenAI",
            "value": "AzureOpenAI",
            "description": "Azure OpenAI Service"
          },
          {
            "name": "AzureBlobStorage",
            "value": "AzureBlob",
            "description": "Azure Blob Storage, with specified container"
          },
          {
            "name": "AzureStorageAccount",
            "value": "AzureStorageAccount",
            "description": "Azure Blob Storage, with container not specified (used by Agents)"
          },
          {
            "name": "AzureAISearch",
            "value": "CognitiveSearch",
            "description": "Azure AI Search"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "CosmosDB"
          },
          {
            "name": "APIKey",
            "value": "ApiKey",
            "description": "Generic connection that uses API Key authentication"
          },
          {
            "name": "ApplicationConfiguration",
            "value": "AppConfig",
            "description": "Application Configuration"
          },
          {
            "name": "ApplicationInsights",
            "value": "AppInsights",
            "description": "Application Insights"
          },
          {
            "name": "Custom",
            "value": "CustomKeys",
            "description": "Custom Keys"
          }
        ]
      }
    },
    "CosmosDBIndex": {
      "type": "object",
      "description": "CosmosDB Vector Store Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to CosmosDB",
          "x-ms-mutability": [
            "create"
          ]
        },
        "databaseName": {
          "type": "string",
          "description": "Name of the CosmosDB Database",
          "x-ms-mutability": [
            "create"
          ]
        },
        "containerName": {
          "type": "string",
          "description": "Name of CosmosDB Container",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingConfiguration": {
          "$ref": "#/definitions/EmbeddingConfiguration",
          "description": "Embedding model configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "databaseName",
        "containerName",
        "embeddingConfiguration",
        "fieldMapping"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "CosmosDBNoSqlVectorStore"
    },
    "CreateEvalJsonlRunDataSource": {
      "type": "object",
      "description": "Eval jsonl input data.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of data source. Always jsonl.",
          "default": "jsonl",
          "enum": [
            "jsonl"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "source": {
          "$ref": "#/definitions/EvalJsonlFileContentSource",
          "description": "Determines what populates the `item` namespace in the data source."
        }
      },
      "required": [
        "type",
        "source"
      ]
    },
    "CredentialType": {
      "type": "string",
      "description": "The credential type used by the connection",
      "enum": [
        "ApiKey",
        "AAD",
        "SAS",
        "CustomKeys",
        "None"
      ],
      "x-ms-enum": {
        "name": "CredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "apiKey",
            "value": "ApiKey",
            "description": "API Key credential"
          },
          {
            "name": "entraId",
            "value": "AAD",
            "description": "Entra ID credential (formerly known as AAD)"
          },
          {
            "name": "SAS",
            "value": "SAS",
            "description": "Shared Access Signature (SAS) credential"
          },
          {
            "name": "custom",
            "value": "CustomKeys",
            "description": "Custom credential"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No credential"
          }
        ]
      }
    },
    "CronTrigger": {
      "type": "object",
      "description": "Cron based trigger.",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Cron expression that defines the schedule frequency."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the cron schedule.",
          "default": "UTC"
        },
        "startTime": {
          "type": "string",
          "description": "Start time for the cron schedule in ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the cron schedule in ISO 8601 format."
        }
      },
      "required": [
        "expression"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "Cron"
    },
    "CustomCredential": {
      "type": "object",
      "description": "Custom credential definition",
      "additionalProperties": {
        "type": "string"
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "CustomKeys"
    },
    "DailyRecurrenceSchedule": {
      "type": "object",
      "description": "Daily recurrence schedule.",
      "properties": {
        "hours": {
          "type": "array",
          "description": "Hours for the recurrence schedule.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "hours"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Daily"
    },
    "DatasetType": {
      "type": "string",
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder"
      ],
      "x-ms-enum": {
        "name": "DatasetType",
        "modelAsString": true,
        "values": [
          {
            "name": "uri_file",
            "value": "uri_file",
            "description": "URI file."
          },
          {
            "name": "uri_folder",
            "value": "uri_folder",
            "description": "URI folder."
          }
        ]
      }
    },
    "DatasetVersion": {
      "type": "object",
      "description": "DatasetVersion Definition",
      "properties": {
        "dataUri": {
          "type": "string",
          "description": "URI of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "$ref": "#/definitions/DatasetType",
          "description": "Dataset type"
        },
        "isReference": {
          "type": "boolean",
          "description": "Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "dataUri",
        "type",
        "name",
        "version"
      ]
    },
    "DayOfWeek": {
      "type": "string",
      "description": "Days of the week for recurrence schedule.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Sunday."
          },
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Monday."
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Tuesday."
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Wednesday."
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Thursday."
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Friday."
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Saturday."
          }
        ]
      }
    },
    "Deployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/DeploymentType",
          "description": "The type of the deployment"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "DeploymentType": {
      "type": "string",
      "enum": [
        "ModelDeployment"
      ],
      "x-ms-enum": {
        "name": "DeploymentType",
        "modelAsString": true,
        "values": [
          {
            "name": "ModelDeployment",
            "value": "ModelDeployment",
            "description": "Model deployment"
          }
        ]
      }
    },
    "DeveloperMessage": {
      "type": "object",
      "description": "A message authored by a developer to guide the model during evaluation.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Content provided by a developer to guide model behavior in an evaluation context."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "developer"
    },
    "EmbeddingConfiguration": {
      "type": "object",
      "description": "Embedding configuration class",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingField": {
          "type": "string",
          "description": "Embedding field",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "modelDeploymentName",
        "embeddingField"
      ]
    },
    "EntraIDCredentials": {
      "type": "object",
      "description": "Entra ID credential definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "EvalCompareReport": {
      "type": "object",
      "description": "Insights from the evaluation comparison.",
      "properties": {
        "comparisons": {
          "type": "array",
          "description": "Comparison results for each treatment run against the baseline.",
          "items": {
            "$ref": "#/definitions/EvalRunResultComparison"
          }
        },
        "method": {
          "type": "string",
          "description": "The statistical method used for comparison."
        }
      },
      "required": [
        "comparisons",
        "method"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "EvaluationComparison"
    },
    "EvalJsonlFileContentSource": {
      "type": "object",
      "description": "OpenAI definition: Eval inline file content or jsonl input data.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of jsonl source. Always `file_content`.",
          "default": "file_content",
          "enum": [
            "file_content"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "content": {
          "type": "object",
          "description": "The content of the jsonl file.",
          "properties": {
            "item": {
              "type": "object",
              "description": "Expected schema: QueryResponseInlineMessage"
            },
            "sample": {
              "type": "object",
              "description": "optional sample."
            }
          },
          "required": [
            "item"
          ]
        }
      },
      "required": [
        "type",
        "content"
      ]
    },
    "EvalResult": {
      "type": "object",
      "description": "Result of the evaluation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the check"
        },
        "type": {
          "type": "string",
          "description": "type of the check"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "score"
        },
        "passed": {
          "type": "boolean",
          "description": "indicates if the check passed or failed"
        }
      },
      "required": [
        "name",
        "type",
        "score",
        "passed"
      ]
    },
    "EvalRunOutputItem": {
      "type": "object",
      "description": "OpenAI definition: Eval output results.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The type of the object. Always eval.run.output_item",
          "default": "eval.run.output_item",
          "enum": [
            "eval.run.output_item"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the evaluation run output item."
        },
        "run_id": {
          "type": "string",
          "description": "The identifier of the evaluation run associated with this output item."
        },
        "eval_id": {
          "type": "string",
          "description": "The identifier of the evaluation group."
        },
        "created_at": {
          "type": "integer",
          "format": "int64",
          "description": "Unix timestamp (in seconds) when the evaluation run was created."
        },
        "status": {
          "type": "string",
          "description": "The status of the evaluation run."
        },
        "datasource_item_id": {
          "type": "integer",
          "format": "int64",
          "description": "The identifier for the data source item."
        },
        "datasource_item": {
          "type": "object",
          "description": "Details of the input data source item."
        },
        "results": {
          "type": "array",
          "description": "A list of results from the evaluation run. Expected Object: EvaluationRunOutputItemResult.",
          "items": {
            "type": "object"
          }
        },
        "sample": {
          "type": "object",
          "description": "A sample containing the input and output of the evaluation run."
        }
      },
      "required": [
        "object",
        "created_at",
        "status",
        "datasource_item",
        "results"
      ]
    },
    "EvalRunResultCompareItem": {
      "type": "object",
      "description": "Metric comparison for a treatment against the baseline.",
      "properties": {
        "treatmentRunId": {
          "type": "string",
          "description": "The treatment run ID."
        },
        "treatmentRunSummary": {
          "$ref": "#/definitions/EvalRunResultSummary",
          "description": "Summary statistics of the treatment run."
        },
        "deltaEstimate": {
          "type": "number",
          "format": "float",
          "description": "Estimated difference between treatment and baseline."
        },
        "pValue": {
          "type": "number",
          "format": "float",
          "description": "P-value for the treatment effect."
        },
        "treatmentEffect": {
          "$ref": "#/definitions/TreatmentEffectType",
          "description": "Type of treatment effect."
        }
      },
      "required": [
        "treatmentRunId",
        "treatmentRunSummary",
        "deltaEstimate",
        "pValue",
        "treatmentEffect"
      ]
    },
    "EvalRunResultComparison": {
      "type": "object",
      "description": "Comparison results for treatment runs against the baseline.",
      "properties": {
        "testingCriteria": {
          "type": "string",
          "description": "Name of the testing criteria."
        },
        "metric": {
          "type": "string",
          "description": "Metric being evaluated."
        },
        "evaluator": {
          "type": "string",
          "description": "Name of the evaluator for this testing criteria."
        },
        "baselineRunSummary": {
          "$ref": "#/definitions/EvalRunResultSummary",
          "description": "Summary statistics of the baseline run."
        },
        "compareItems": {
          "type": "array",
          "description": "List of comparison results for each treatment run.",
          "items": {
            "$ref": "#/definitions/EvalRunResultCompareItem"
          }
        }
      },
      "required": [
        "testingCriteria",
        "metric",
        "evaluator",
        "baselineRunSummary",
        "compareItems"
      ]
    },
    "EvalRunResultSummary": {
      "type": "object",
      "description": "Summary statistics of a metric in an evaluation run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "The evaluation run ID."
        },
        "sampleCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of samples in the evaluation run."
        },
        "average": {
          "type": "number",
          "format": "float",
          "description": "Average value of the metric in the evaluation run."
        },
        "standardDeviation": {
          "type": "number",
          "format": "float",
          "description": "Standard deviation of the metric in the evaluation run."
        }
      },
      "required": [
        "runId",
        "sampleCount",
        "average",
        "standardDeviation"
      ]
    },
    "Evaluation": {
      "type": "object",
      "description": "Evaluation Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluation.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "data": {
          "$ref": "#/definitions/InputData",
          "description": "Data for evaluation."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for evaluation. It helps to find the evaluation easily in AI Foundry. It does not need to be unique."
        },
        "description": {
          "type": "string",
          "description": "Description of the evaluation. It can be used to store additional information about the evaluation and is mutable."
        },
        "status": {
          "type": "string",
          "description": "Status of the evaluation. It is set by service and is read-only.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Evaluation's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "target": {
          "$ref": "#/definitions/EvaluationTarget",
          "description": "Specifies the type and configuration of the entity used for this evaluation."
        }
      },
      "required": [
        "id",
        "data",
        "evaluators"
      ]
    },
    "EvaluationComparisonRequest": {
      "type": "object",
      "description": "Evaluation Comparison Request",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Identifier for the evaluation."
        },
        "baselineRunId": {
          "type": "string",
          "description": "The baseline run ID for comparison."
        },
        "treatmentRunIds": {
          "type": "array",
          "description": "List of treatment run IDs for comparison.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "evalId",
        "baselineRunId",
        "treatmentRunIds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "EvaluationComparison"
    },
    "EvaluationResultSample": {
      "type": "object",
      "description": "A sample from the evaluation result.",
      "properties": {
        "evaluationResult": {
          "$ref": "#/definitions/EvalResult",
          "description": "Evaluation result for the analysis sample."
        }
      },
      "required": [
        "evaluationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightSample"
        }
      ],
      "x-ms-discriminator-value": "EvaluationResultSample"
    },
    "EvaluationRunClusterInsightResult": {
      "type": "object",
      "description": "Insights from the evaluation run cluster analysis.",
      "properties": {
        "clusterInsight": {
          "$ref": "#/definitions/ClusterInsightResult"
        }
      },
      "required": [
        "clusterInsight"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "EvaluationRunClusterInsight"
    },
    "EvaluationRunClusterInsightsRequest": {
      "type": "object",
      "description": "Insights on set of Evaluation Results",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Evaluation Id for the insights."
        },
        "runIds": {
          "type": "array",
          "description": "List of evaluation run IDs for the insights.",
          "items": {
            "type": "string"
          }
        },
        "modelConfiguration": {
          "$ref": "#/definitions/InsightModelConfiguration",
          "description": "Configuration of the model used in the insight generation."
        }
      },
      "required": [
        "evalId",
        "runIds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "EvaluationRunClusterInsight"
    },
    "EvaluationRunOutputItemResult": {
      "type": "object",
      "description": "Expect format of the results list of the evaluation run output items.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The result type (e.g., \"string_check\", \"azure_ai_evaluator\")."
        },
        "name": {
          "type": "string",
          "description": "The name of the test criteria (e.g., \"my_string_check_grader\", \"my_fluency\")."
        },
        "passed": {
          "type": "boolean",
          "description": "Whether the test criteria passed or failed."
        },
        "score": {
          "type": "number",
          "format": "double",
          "description": "The numeric score for this test criteria metric."
        },
        "metric": {
          "type": "string",
          "description": "The name of the metric (e.g., \"fluency\", \"f1_score\"). Most evaluators only have a single metric with the same name as the evaluator."
        },
        "label": {
          "type": "string",
          "description": "The label associated with the test criteria metric (e.g., \"pass\", \"fail\", \"good\", \"bad\", etc.)."
        },
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "The threshold used to determine pass/fail for this test criteria, if it is numerical."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the test criteria metric."
        },
        "sample": {
          "type": "object",
          "description": "A sample from the evaluation run output item, if available."
        },
        "properties": {
          "type": "object",
          "description": "Additional details about the test criteria metric.",
          "additionalProperties": {}
        }
      },
      "required": [
        "type",
        "name",
        "passed",
        "score",
        "metric",
        "properties"
      ]
    },
    "EvaluationTarget": {
      "type": "object",
      "description": "Abstract base model for defining evaluation targets.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationTargetType",
          "description": "Discriminator that defines the type of the evaluation target."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationTargetType": {
      "type": "string",
      "description": "Allowed types of evaluation targets.",
      "enum": [
        "modelResponseGeneration"
      ],
      "x-ms-enum": {
        "name": "EvaluationTargetType",
        "modelAsString": true,
        "values": [
          {
            "name": "modelResponseGeneration",
            "value": "modelResponseGeneration",
            "description": "Evaluation target that uses a model for response generation."
          }
        ]
      }
    },
    "EvaluatorCategory": {
      "type": "string",
      "description": "The category of the evaluator",
      "enum": [
        "quality",
        "safety",
        "agents"
      ],
      "x-ms-enum": {
        "name": "EvaluatorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "quality",
            "value": "quality",
            "description": "Quality"
          },
          {
            "name": "safety",
            "value": "safety",
            "description": "Risk & Safety"
          },
          {
            "name": "agents",
            "value": "agents",
            "description": "Agents"
          }
        ]
      }
    },
    "EvaluatorConfiguration": {
      "type": "object",
      "description": "Evaluator Configuration",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "initParams": {
          "type": "object",
          "description": "Initialization parameters of the evaluator.",
          "additionalProperties": {}
        },
        "dataMapping": {
          "type": "object",
          "description": "Data parameters of the evaluator.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "EvaluatorDefinition": {
      "type": "object",
      "description": "Base evaluator configuration with discriminator",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluatorDefinitionType",
          "description": "The type of evaluator definition"
        },
        "init_parameters": {
          "description": "The JSON schema (Draft 2020-12) for the evaluator's input parameters. This includes parameters like type, properties, required."
        },
        "data_schema": {
          "description": "The JSON schema (Draft 2020-12) for the evaluator's input data. This includes parameters like type, properties, required."
        },
        "metrics": {
          "type": "object",
          "description": "List of output metrics produced by this evaluator",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorMetric"
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluatorDefinitionType": {
      "type": "string",
      "description": "The type of evaluator definition",
      "enum": [
        "prompt",
        "code",
        "prompt_and_code",
        "service",
        "openai_graders"
      ],
      "x-ms-enum": {
        "name": "EvaluatorDefinitionType",
        "modelAsString": true,
        "values": [
          {
            "name": "prompt",
            "value": "prompt",
            "description": "Prompt-based definition"
          },
          {
            "name": "code",
            "value": "code",
            "description": "Code-based definition"
          },
          {
            "name": "prompt_and_code",
            "value": "prompt_and_code",
            "description": "Prompt & Code Based definition"
          },
          {
            "name": "service",
            "value": "service",
            "description": "Service-based evaluator"
          },
          {
            "name": "openai_graders",
            "value": "openai_graders",
            "description": "OpenAI graders"
          }
        ]
      }
    },
    "EvaluatorMetric": {
      "type": "object",
      "description": "Evaluator Metric",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluatorMetricType",
          "description": "Type of the metric."
        },
        "desirable_direction": {
          "$ref": "#/definitions/EvaluatorMetricDirection",
          "description": "It indicates whether a higher value is better or a lower value is better for this metric."
        },
        "min_value": {
          "type": "number",
          "format": "float",
          "description": "Minimum value for the metric"
        },
        "max_value": {
          "type": "number",
          "format": "float",
          "description": "Maximum value for the metric. If not specified, it is assumed to be unbounded."
        }
      }
    },
    "EvaluatorMetricDirection": {
      "type": "string",
      "description": "The direction of the metric indicating whether a higher value is better, a lower value is better, or neutral",
      "enum": [
        "increase",
        "decrease",
        "neutral"
      ],
      "x-ms-enum": {
        "name": "EvaluatorMetricDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "increase",
            "value": "increase",
            "description": "It indicates a higher value is better for this metric"
          },
          {
            "name": "decrease",
            "value": "decrease",
            "description": "It indicates a lower value is better for this metric"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "It indicates no preference for this metric direction"
          }
        ]
      }
    },
    "EvaluatorMetricType": {
      "type": "string",
      "description": "The type of the evaluator",
      "enum": [
        "ordinal",
        "continuous",
        "boolean"
      ],
      "x-ms-enum": {
        "name": "EvaluatorMetricType",
        "modelAsString": true,
        "values": [
          {
            "name": "ordinal",
            "value": "ordinal",
            "description": "Ordinal metric representing categories that can be ordered or ranked."
          },
          {
            "name": "continuous",
            "value": "continuous",
            "description": "Continuous metric representing values in a continuous range."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "Boolean metric representing true/false values"
          }
        ]
      }
    },
    "EvaluatorType": {
      "type": "string",
      "description": "The type of the evaluator",
      "enum": [
        "builtin",
        "custom"
      ],
      "x-ms-enum": {
        "name": "EvaluatorType",
        "modelAsString": true,
        "values": [
          {
            "name": "built_in",
            "value": "builtin",
            "description": "Built-in evaluator (Microsoft provided)"
          },
          {
            "name": "custom",
            "value": "custom",
            "description": "Custom evaluator"
          }
        ]
      }
    },
    "EvaluatorVersion": {
      "type": "object",
      "description": "Evaluator Definition",
      "properties": {
        "display_name": {
          "type": "string",
          "description": "Display Name for evaluator. It helps to find the evaluator easily in AI Foundry. It does not need to be unique."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata about the evaluator",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluator_type": {
          "$ref": "#/definitions/EvaluatorType",
          "description": "The type of the evaluator"
        },
        "categories": {
          "type": "array",
          "description": "The categories of the evaluator",
          "items": {
            "$ref": "#/definitions/EvaluatorCategory"
          }
        },
        "definition": {
          "$ref": "#/definitions/EvaluatorDefinition",
          "description": "Definition of the evaluator"
        },
        "created_by": {
          "type": "string",
          "description": "Creator of the evaluator",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "description": "Creation date/time of the evaluator",
          "readOnly": true
        },
        "modified_at": {
          "type": "string",
          "description": "Last modified date/time of the evaluator",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "required": [
        "evaluator_type",
        "categories",
        "definition",
        "created_by",
        "created_at",
        "modified_at",
        "name",
        "version"
      ]
    },
    "FieldMapping": {
      "type": "object",
      "description": "Field mapping configuration class",
      "properties": {
        "contentFields": {
          "type": "array",
          "description": "List of fields with text content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "filepathField": {
          "type": "string",
          "description": "Path of file to be used as a source of text content",
          "x-ms-mutability": [
            "create"
          ]
        },
        "titleField": {
          "type": "string",
          "description": "Field containing the title of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "urlField": {
          "type": "string",
          "description": "Field containing the url of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "vectorFields": {
          "type": "array",
          "description": "List of fields with vector content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadataFields": {
          "type": "array",
          "description": "List of fields with metadata content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "contentFields"
      ]
    },
    "FileDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "FolderDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "HourlyRecurrenceSchedule": {
      "type": "object",
      "description": "Hourly recurrence schedule.",
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Hourly"
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/IndexType",
          "description": "Type of index"
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name",
        "version"
      ]
    },
    "IndexType": {
      "type": "string",
      "enum": [
        "AzureSearch",
        "CosmosDBNoSqlVectorStore",
        "ManagedAzureSearch"
      ],
      "x-ms-enum": {
        "name": "IndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "azureSearch",
            "value": "AzureSearch",
            "description": "Azure search"
          },
          {
            "name": "cosmosDB",
            "value": "CosmosDBNoSqlVectorStore",
            "description": "CosmosDB"
          },
          {
            "name": "managedAzureSearch",
            "value": "ManagedAzureSearch",
            "description": "Managed Azure Search"
          }
        ]
      }
    },
    "InputData": {
      "type": "object",
      "description": "Abstract data class.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the data"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InputDataset": {
      "type": "object",
      "description": "Dataset as source for evaluation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Evaluation input data"
        }
      },
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InputData"
        }
      ],
      "x-ms-discriminator-value": "dataset"
    },
    "Insight": {
      "type": "object",
      "description": "The response body for cluster insights.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the insights report.",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/InsightsMetadata",
          "description": "Metadata about the insights report.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "The current state of the insights.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User friendly display name for the insight."
        },
        "request": {
          "$ref": "#/definitions/InsightRequest",
          "description": "Request for the insights analysis."
        },
        "result": {
          "$ref": "#/definitions/InsightResult",
          "description": "The result of the insights report.",
          "readOnly": true
        }
      },
      "required": [
        "id",
        "metadata",
        "state",
        "displayName",
        "request"
      ]
    },
    "InsightCluster": {
      "type": "object",
      "description": "A cluster of analysis samples.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the analysis cluster."
        },
        "label": {
          "type": "string",
          "description": "Label for the cluster"
        },
        "suggestion": {
          "type": "string",
          "description": "Suggestion for the cluster"
        },
        "description": {
          "type": "string",
          "description": "Description of the analysis cluster."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight of the analysis cluster. This indicate number of samples in the cluster."
        },
        "subClusters": {
          "type": "array",
          "description": "List of subclusters within this cluster. Empty if no subclusters exist.",
          "items": {
            "$ref": "#/definitions/InsightCluster"
          }
        },
        "samples": {
          "type": "array",
          "description": "List of samples that belong to this cluster. Empty if samples are part of subclusters.",
          "items": {
            "$ref": "#/definitions/InsightSample"
          }
        }
      },
      "required": [
        "id",
        "label",
        "suggestion",
        "description",
        "weight"
      ]
    },
    "InsightModelConfiguration": {
      "type": "object",
      "description": "Configuration of the model used in the insight generation.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/<modelDeploymentName>'."
        }
      },
      "required": [
        "modelDeploymentName"
      ]
    },
    "InsightRequest": {
      "type": "object",
      "description": "The request of the insights report.",
      "properties": {
        "type": {
          "$ref": "#/definitions/InsightType",
          "description": "The type of request."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InsightResult": {
      "type": "object",
      "description": "The result of the insights.",
      "properties": {
        "type": {
          "$ref": "#/definitions/InsightType",
          "description": "The type of insights result."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InsightSample": {
      "type": "object",
      "description": "A sample from the analysis.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the analysis sample."
        },
        "type": {
          "$ref": "#/definitions/SampleType",
          "description": "Sample type"
        },
        "features": {
          "type": "object",
          "description": "Features to help with additional filtering of data in UX.",
          "additionalProperties": {}
        },
        "correlationInfo": {
          "type": "object",
          "description": "Info about the correlation for the analysis sample.",
          "additionalProperties": {}
        }
      },
      "discriminator": "type",
      "required": [
        "id",
        "type",
        "features",
        "correlationInfo"
      ]
    },
    "InsightSummary": {
      "type": "object",
      "description": "Summary of the error cluster analysis.",
      "properties": {
        "sampleCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of samples analyzed."
        },
        "uniqueSubclusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of unique subcluster labels."
        },
        "uniqueClusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of unique clusters."
        },
        "method": {
          "type": "string",
          "description": "Method used for clustering."
        },
        "usage": {
          "$ref": "#/definitions/ClusterTokenUsage",
          "description": "Token usage while performing clustering analysis"
        }
      },
      "required": [
        "sampleCount",
        "uniqueSubclusterCount",
        "uniqueClusterCount",
        "method",
        "usage"
      ]
    },
    "InsightType": {
      "type": "string",
      "description": "The request of the insights.",
      "enum": [
        "EvaluationRunClusterInsight",
        "AgentClusterInsight",
        "EvaluationComparison"
      ],
      "x-ms-enum": {
        "name": "InsightType",
        "modelAsString": true,
        "values": [
          {
            "name": "EvaluationRunClusterInsight",
            "value": "EvaluationRunClusterInsight",
            "description": "Insights on an Evaluation run result."
          },
          {
            "name": "AgentClusterInsight",
            "value": "AgentClusterInsight",
            "description": "Cluster Insight on an Agent."
          },
          {
            "name": "EvaluationComparison",
            "value": "EvaluationComparison",
            "description": "Evaluation Comparison."
          }
        ]
      }
    },
    "InsightsMetadata": {
      "type": "object",
      "description": "Metadata about the insights.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the insights were created."
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the insights were completed."
        }
      },
      "required": [
        "createdAt"
      ]
    },
    "ManagedAzureAISearchIndex": {
      "type": "object",
      "description": "Managed Azure AI Search Index Definition",
      "properties": {
        "vectorStoreId": {
          "type": "string",
          "description": "Vector store id of managed index",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "vectorStoreId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "ManagedAzureSearch"
    },
    "Message": {
      "type": "object",
      "description": "Abstract base model representing a single message in a conversation.",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role of the message author. Known values: 'system', 'assistant', 'developer', 'user'.",
          "enum": [
            "system",
            "assistant",
            "developer",
            "user"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "discriminator": "role",
      "required": [
        "role"
      ]
    },
    "ModelDeployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Publisher-specific name of the deployed model",
          "readOnly": true
        },
        "modelVersion": {
          "type": "string",
          "description": "Publisher-specific version of the deployed model",
          "readOnly": true
        },
        "modelPublisher": {
          "type": "string",
          "description": "Name of the deployed model's publisher",
          "readOnly": true
        },
        "capabilities": {
          "type": "object",
          "description": "Capabilities of deployed model",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku of the model deployment",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "Name of the connection the deployment comes from",
          "readOnly": true
        }
      },
      "required": [
        "modelName",
        "modelVersion",
        "modelPublisher",
        "capabilities",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Deployment"
        }
      ],
      "x-ms-discriminator-value": "ModelDeployment"
    },
    "MonthlyRecurrenceSchedule": {
      "type": "object",
      "description": "Monthly recurrence schedule.",
      "properties": {
        "daysOfMonth": {
          "type": "array",
          "description": "Days of the month for the recurrence schedule.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "daysOfMonth"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Monthly"
    },
    "NoAuthenticationCredentials": {
      "type": "object",
      "description": "Credentials that do not require authentication",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "OneTimeTrigger": {
      "type": "object",
      "description": "One-time trigger.",
      "properties": {
        "triggerAt": {
          "type": "string",
          "description": "Date and time for the one-time trigger in ISO 8601 format."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the one-time trigger.",
          "default": "UTC"
        }
      },
      "required": [
        "triggerAt"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "OneTime"
    },
    "PagedConnection": {
      "type": "object",
      "description": "Paged collection of Connection items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connection items on this page",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDatasetVersion": {
      "type": "object",
      "description": "Paged collection of DatasetVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DatasetVersion items on this page",
          "items": {
            "$ref": "#/definitions/DatasetVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDeployment": {
      "type": "object",
      "description": "Paged collection of Deployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluation": {
      "type": "object",
      "description": "Paged collection of Evaluation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Evaluation items on this page",
          "items": {
            "$ref": "#/definitions/Evaluation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of Index items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedInsight": {
      "type": "object",
      "description": "Paged collection of Insight items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Insight items on this page",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedRedTeam": {
      "type": "object",
      "description": "Paged collection of RedTeam items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RedTeam items on this page",
          "items": {
            "$ref": "#/definitions/RedTeam"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSchedule": {
      "type": "object",
      "description": "Paged collection of Schedule items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schedule items on this page",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedScheduleRun": {
      "type": "object",
      "description": "Paged collection of ScheduleRun items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduleRun items on this page",
          "items": {
            "$ref": "#/definitions/ScheduleRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PendingUploadCredentialType": {
      "type": "string",
      "description": "The type of credential used to access the storage account.",
      "enum": [
        "SAS"
      ],
      "x-ms-enum": {
        "name": "PendingUploadCredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "sas",
            "value": "SAS",
            "description": "SAS credential type."
          }
        ]
      }
    },
    "PendingUploadRequest": {
      "type": "object",
      "description": "Represents a request for a pending upload.",
      "properties": {
        "pendingUploadId": {
          "type": "string",
          "description": "If PendingUploadId is not provided, a random GUID will be used."
        },
        "connectionName": {
          "type": "string",
          "description": "Azure Storage Account connection name to use for generating temporary SAS token"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type.",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "pendingUploadType"
      ]
    },
    "PendingUploadResponse": {
      "type": "object",
      "description": "Represents the response for a pending upload request",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Container-level read, write, list SAS."
        },
        "pendingUploadId": {
          "type": "string",
          "description": "ID for this upload request."
        },
        "version": {
          "type": "string",
          "description": "Version of asset to be created if user did not specify version when initially creating upload"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "blobReference",
        "pendingUploadId",
        "pendingUploadType"
      ]
    },
    "PendingUploadType": {
      "type": "string",
      "description": "The type of pending upload.",
      "enum": [
        "None",
        "BlobReference"
      ],
      "x-ms-enum": {
        "name": "PendingUploadType",
        "modelAsString": true,
        "values": [
          {
            "name": "none",
            "value": "None",
            "description": "No pending upload."
          },
          {
            "name": "BlobReference",
            "value": "BlobReference",
            "description": "Blob Reference is the only supported type."
          }
        ]
      }
    },
    "PromptBasedEvaluatorDefinition": {
      "type": "object",
      "description": "Prompt-based evaluator",
      "properties": {
        "prompt_text": {
          "type": "string",
          "description": "The prompt text used for evaluation"
        }
      },
      "required": [
        "prompt_text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluatorDefinition"
        }
      ],
      "x-ms-discriminator-value": "prompt"
    },
    "QueryResponseInlineMessage": {
      "type": "object",
      "description": "Query and response excepted input messsage defintion.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The object type, which is always query_response_inline_message.",
          "enum": [
            "azure_query_response_inline_message"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "query": {
          "type": "string",
          "description": "The input query string provided by the user or system. Can be image url."
        },
        "response": {
          "type": "string",
          "description": "The generated response corresponding to the input query. Can be image url."
        },
        "context": {
          "type": "string",
          "description": "Optional contextual information that may provide additional details or background relevant to the query-response pair."
        },
        "tools": {
          "type": "array",
          "description": "Optional list of tools or resources utilized during the evaluation or generation of the response.",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "type",
        "query"
      ]
    },
    "RecurrenceSchedule": {
      "type": "object",
      "description": "Recurrence schedule model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/RecurrenceType",
          "description": "Recurrence type for the recurrence schedule."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "RecurrenceTrigger": {
      "type": "object",
      "description": "Recurrence based trigger.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start time for the recurrence schedule in ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the recurrence schedule in ISO 8601 format."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the recurrence schedule.",
          "default": "UTC"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval for the recurrence schedule."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "Recurrence schedule for the recurrence trigger."
        }
      },
      "required": [
        "interval",
        "schedule"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "Recurrence"
    },
    "RecurrenceType": {
      "type": "string",
      "description": "Recurrence type.",
      "enum": [
        "Hourly",
        "Daily",
        "Weekly",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "RecurrenceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Hourly",
            "value": "Hourly",
            "description": "Hourly recurrence pattern."
          },
          {
            "name": "Daily",
            "value": "Daily",
            "description": "Daily recurrence pattern."
          },
          {
            "name": "Weekly",
            "value": "Weekly",
            "description": "Weekly recurrence pattern."
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Monthly recurrence pattern."
          }
        ]
      }
    },
    "RedTeam": {
      "type": "object",
      "description": "Red team details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the red team run.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "displayName": {
          "type": "string",
          "description": "Name of the red-team run."
        },
        "numTurns": {
          "type": "integer",
          "format": "int32",
          "description": "Number of simulation rounds."
        },
        "attackStrategies": {
          "type": "array",
          "description": "List of attack strategies or nested lists of attack strategies.",
          "items": {
            "$ref": "#/definitions/AttackStrategy"
          }
        },
        "simulationOnly": {
          "type": "boolean",
          "description": "Simulation-only or Simulation + Evaluation. Default false, if true the scan outputs conversation not evaluation result.",
          "default": false
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to generate attack objectives for.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        },
        "applicationScenario": {
          "type": "string",
          "description": "Application scenario for the red team operation, to generate scenario specific attacks."
        },
        "tags": {
          "type": "object",
          "description": "Red team's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Red team's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the red-team. It is set by service and is read-only.",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/TargetConfig",
          "description": "Target configuration for the red-team run."
        }
      },
      "required": [
        "id",
        "target"
      ]
    },
    "RiskCategory": {
      "type": "string",
      "description": "Risk category for the attack objective.",
      "enum": [
        "HateUnfairness",
        "Violence",
        "Sexual",
        "SelfHarm"
      ],
      "x-ms-enum": {
        "name": "RiskCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "HateUnfairness",
            "value": "HateUnfairness",
            "description": "Represents content related to hate or unfairness."
          },
          {
            "name": "Violence",
            "value": "Violence",
            "description": "Represents content related to violence."
          },
          {
            "name": "Sexual",
            "value": "Sexual",
            "description": "Represents content of a sexual nature."
          },
          {
            "name": "SelfHarm",
            "value": "SelfHarm",
            "description": "Represents content related to self-harm."
          }
        ]
      }
    },
    "SASCredentials": {
      "type": "object",
      "description": "Shared Access Signature (SAS) credential definition",
      "properties": {
        "SAS": {
          "type": "string",
          "description": "SAS token",
          "readOnly": true,
          "x-ms-client-name": "sasToken"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SampleType": {
      "type": "string",
      "description": "The type of sample used in the analysis.",
      "enum": [
        "EvaluationResultSample"
      ],
      "x-ms-enum": {
        "name": "SampleType",
        "modelAsString": true,
        "values": [
          {
            "name": "EvaluationResultSample",
            "value": "EvaluationResultSample",
            "description": "A sample from the evaluation result."
          }
        ]
      }
    },
    "SasCredential": {
      "type": "object",
      "description": "SAS Credential definition",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS uri",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of credential",
          "enum": [
            "SAS"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        }
      },
      "required": [
        "sasUri",
        "type"
      ]
    },
    "Schedule": {
      "type": "object",
      "description": "Schedule model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the schedule.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Name of the schedule."
        },
        "description": {
          "type": "string",
          "description": "Description of the schedule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled status of the schedule."
        },
        "provisioningStatus": {
          "$ref": "#/definitions/ScheduleProvisioningStatus",
          "description": "Provisioning status of the schedule.",
          "readOnly": true
        },
        "trigger": {
          "$ref": "#/definitions/Trigger",
          "description": "Trigger for the schedule."
        },
        "task": {
          "$ref": "#/definitions/ScheduleTask",
          "description": "Task for the schedule."
        },
        "tags": {
          "type": "object",
          "description": "Schedule's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Schedule's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemData": {
          "type": "object",
          "description": "System metadata for the resource.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "enabled",
        "trigger",
        "task",
        "systemData"
      ]
    },
    "ScheduleProvisioningStatus": {
      "type": "string",
      "description": "Schedule provisioning status.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ScheduleProvisioningStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Represents the creation status of the schedule."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents the updating status of the schedule."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents the deleting status of the schedule."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents the succeeded status of the schedule."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents the failed status of the schedule."
          }
        ]
      }
    },
    "ScheduleRun": {
      "type": "object",
      "description": "Schedule run model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the schedule run.",
          "readOnly": true
        },
        "scheduleId": {
          "type": "string",
          "description": "Identifier of the schedule."
        },
        "success": {
          "type": "boolean",
          "description": "Trigger success status of the schedule run.",
          "readOnly": true
        },
        "triggerTime": {
          "type": "string",
          "description": "Trigger time of the schedule run."
        },
        "error": {
          "type": "string",
          "description": "Error information for the schedule run.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Properties of the schedule run.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "scheduleId",
        "success",
        "properties"
      ]
    },
    "ScheduleTask": {
      "type": "object",
      "description": "Schedule task model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScheduleTaskType",
          "description": "Type of the task."
        },
        "configuration": {
          "type": "object",
          "description": "Configuration for the task.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definition": {
          "description": "Definition of the task."
        }
      },
      "required": [
        "type",
        "configuration",
        "definition"
      ]
    },
    "ScheduleTaskType": {
      "type": "string",
      "description": "Type of the task.",
      "enum": [
        "Evaluation",
        "Insight"
      ],
      "x-ms-enum": {
        "name": "ScheduleTaskType",
        "modelAsString": true,
        "values": [
          {
            "name": "Evaluation",
            "value": "Evaluation",
            "description": "Evaluation task."
          },
          {
            "name": "Insight",
            "value": "Insight",
            "description": "Insight task."
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "Sku information",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "Sku capacity"
        },
        "family": {
          "type": "string",
          "description": "Sku family"
        },
        "name": {
          "type": "string",
          "description": "Sku name"
        },
        "size": {
          "type": "string",
          "description": "Sku size"
        },
        "tier": {
          "type": "string",
          "description": "Sku tier"
        }
      },
      "required": [
        "capacity",
        "family",
        "name",
        "size",
        "tier"
      ]
    },
    "SyncEvalInput": {
      "type": "object",
      "description": "OpenAI Input data source definition for eval.",
      "properties": {
        "data_source": {
          "$ref": "#/definitions/CreateEvalJsonlRunDataSource",
          "description": "Identifier of the evaluator."
        },
        "testing_criteria": {
          "type": "array",
          "description": "Evaluators to be used for the evaluation.",
          "items": {
            "$ref": "#/definitions/AzureAIEvaluator"
          }
        },
        "properties": {
          "type": "object",
          "description": "Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "data_source",
        "testing_criteria"
      ]
    },
    "SystemMessage": {
      "type": "object",
      "description": "A message authored by the system to guide model behavior.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Plain text instructions provided by the system to steer model behavior."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "TargetConfig": {
      "type": "object",
      "description": "Abstract class for target configuration.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the model configuration."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TreatmentEffectType": {
      "type": "string",
      "description": "Treatment Effect Type.",
      "enum": [
        "TooFewSamples",
        "Inconclusive",
        "Changed",
        "Improved",
        "Degraded"
      ],
      "x-ms-enum": {
        "name": "TreatmentEffectType",
        "modelAsString": true,
        "values": [
          {
            "name": "TooFewSamples",
            "value": "TooFewSamples",
            "description": "Not enough samples to determine treatment effect."
          },
          {
            "name": "Inconclusive",
            "value": "Inconclusive",
            "description": "No significant difference between treatment and baseline."
          },
          {
            "name": "Changed",
            "value": "Changed",
            "description": "Indicates the metric changed with statistical significance, but the direction is neutral."
          },
          {
            "name": "Improved",
            "value": "Improved",
            "description": "Indicates the treatment significantly improved the metric compared to baseline."
          },
          {
            "name": "Degraded",
            "value": "Degraded",
            "description": "Indicates the treatment significantly degraded the metric compared to baseline."
          }
        ]
      }
    },
    "Trigger": {
      "type": "object",
      "description": "Base model for Trigger of the schedule.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TriggerType",
          "description": "Type of the trigger."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TriggerType": {
      "type": "string",
      "description": "Type of the trigger.",
      "enum": [
        "Cron",
        "Recurrence",
        "OneTime"
      ],
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Cron",
            "value": "Cron",
            "description": "Cron based trigger."
          },
          {
            "name": "Recurrence",
            "value": "Recurrence",
            "description": "Recurrence based trigger."
          },
          {
            "name": "OneTime",
            "value": "OneTime",
            "description": "One-time trigger."
          }
        ]
      }
    },
    "UserMessage": {
      "type": "object",
      "description": "A message authored by the end user as input to the model.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Input content or question provided by the end user."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "WeeklyRecurrenceSchedule": {
      "type": "object",
      "description": "Weekly recurrence schedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Days of the week for the recurrence schedule.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        }
      },
      "required": [
        "daysOfWeek"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Weekly"
    },
    "modelResponseGenerationTarget": {
      "type": "object",
      "description": "Evaluation target for generating responses using a given model and dataset.",
      "properties": {
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/modelDeploymentName'."
        },
        "modelParams": {
          "type": "object",
          "description": "Optional parameters passed to the model for evaluation.",
          "additionalProperties": {}
        }
      },
      "required": [
        "baseMessages",
        "modelDeploymentName",
        "modelParams"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationTarget"
        }
      ],
      "x-ms-discriminator-value": "modelResponseGeneration"
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
