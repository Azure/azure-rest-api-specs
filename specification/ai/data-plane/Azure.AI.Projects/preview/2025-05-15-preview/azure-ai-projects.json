{
  "swagger": "2.0",
  "info": {
    "title": "Azure AI",
    "version": "2025-05-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Project endpoint. In the form \"https://your-ai-services-account-name.services.ai.azure.com/api/projects/_project\"\nif your Foundry Hub has only one Project, or to use the default Project in your Hub. Or in the form \n\"https://your-ai-services-account-name.services.ai.azure.com/api/projects/your-project-name\" if you want to explicitly\nspecify the Foundry Project name.",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://ai.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ai.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/connections": {
      "get": {
        "operationId": "Connections_List",
        "description": "List all connections in the project, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionType",
            "in": "query",
            "description": "List connections of this specific type",
            "required": false,
            "type": "string",
            "enum": [
              "AzureOpenAI",
              "AzureBlob",
              "AzureStorageAccount",
              "CognitiveSearch",
              "CosmosDB",
              "ApiKey",
              "AppConfig",
              "AppInsights",
              "CustomKeys"
            ],
            "x-ms-enum": {
              "name": "ConnectionType",
              "modelAsString": true,
              "values": [
                {
                  "name": "AzureOpenAI",
                  "value": "AzureOpenAI",
                  "description": "Azure OpenAI Service"
                },
                {
                  "name": "AzureBlobStorage",
                  "value": "AzureBlob",
                  "description": "Azure Blob Storage, with specified container"
                },
                {
                  "name": "AzureStorageAccount",
                  "value": "AzureStorageAccount",
                  "description": "Azure Blob Storage, with container not specified (used by Agents)"
                },
                {
                  "name": "AzureAISearch",
                  "value": "CognitiveSearch",
                  "description": "Azure AI Search"
                },
                {
                  "name": "CosmosDB",
                  "value": "CosmosDB",
                  "description": "CosmosDB"
                },
                {
                  "name": "APIKey",
                  "value": "ApiKey",
                  "description": "Generic connection that uses API Key authentication"
                },
                {
                  "name": "ApplicationConfiguration",
                  "value": "AppConfig",
                  "description": "Application Configuration"
                },
                {
                  "name": "ApplicationInsights",
                  "value": "AppInsights",
                  "description": "Application Insights"
                },
                {
                  "name": "Custom",
                  "value": "CustomKeys",
                  "description": "Custom Keys"
                }
              ]
            }
          },
          {
            "name": "defaultConnection",
            "in": "query",
            "description": "List connections that are default connections",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedConnection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_List_MaximumSet": {
            "$ref": "./examples/Connections_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/connections/{name}": {
      "get": {
        "operationId": "Connections_Get",
        "description": "Get a connection by name, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_Get_MaximumSet": {
            "$ref": "./examples/Connections_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/connections/{name}/getConnectionWithCredentials": {
      "post": {
        "operationId": "Connections_GetWithCredentials",
        "description": "Get a connection by name, with its connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_GetWithCredentials_MaximumSet": {
            "$ref": "./examples/Connections_GetWithCredentials_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/datasets": {
      "get": {
        "operationId": "Datasets_ListLatest",
        "description": "List the latest version of each DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListLatest_MaximumSet": {
            "$ref": "./examples/Datasets_ListLatest_MaximumSet_Gen.json"
          },
          "Datasets_ListLatest_MinimumSet": {
            "$ref": "./examples/Datasets_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions": {
      "get": {
        "operationId": "Datasets_ListVersions",
        "description": "List all versions of the given DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListVersions_MaximumSet": {
            "$ref": "./examples/Datasets_ListVersions_MaximumSet_Gen.json"
          },
          "Datasets_ListVersions_MinimumSet": {
            "$ref": "./examples/Datasets_ListVersions_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}": {
      "get": {
        "operationId": "Datasets_GetVersion",
        "description": "Get the specific version of the DatasetVersion. The service returns 404 Not Found error if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetVersion_MaximumSet": {
            "$ref": "./examples/Datasets_GetVersion_MaximumSet_Gen.json"
          },
          "Datasets_GetVersion_MinimumSet": {
            "$ref": "./examples/Datasets_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Datasets_CreateOrUpdateVersion",
        "description": "Create a new or update an existing DatasetVersion with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "datasetVersion",
            "in": "body",
            "description": "The DatasetVersion to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Datasets_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Datasets_DeleteVersion",
        "description": "Delete the specific version of the DatasetVersion. The service returns 204 No Content if the DatasetVersion was deleted successfully or if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the DatasetVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MaximumSet_Gen.json"
          },
          "Datasets_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/credentials": {
      "post": {
        "operationId": "Datasets_GetCredentials",
        "description": "Get the SAS credential to access the storage account associated with a Dataset version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AssetCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetCredentials_MaximumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MaximumSet_Gen.json"
          },
          "Datasets_GetCredentials_MinimumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "Datasets_StartPendingUploadVersion",
        "description": "Start a new or get an existing pending upload of a dataset for a specific version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pendingUploadRequest",
            "in": "body",
            "description": "The pending upload request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_StartPendingUploadVersion_MaximumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MaximumSet_Gen.json"
          },
          "Datasets_StartPendingUploadVersion_MinimumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "description": "List all deployed models in the project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "modelPublisher",
            "in": "query",
            "description": "Model publisher to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "Model name (the publisher specific name) to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "description": "Type of deployment to filter list by",
            "required": false,
            "type": "string",
            "enum": [
              "ModelDeployment"
            ],
            "x-ms-enum": {
              "name": "DeploymentType",
              "modelAsString": true,
              "values": [
                {
                  "name": "ModelDeployment",
                  "value": "ModelDeployment",
                  "description": "Model deployment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDeployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List_MaximumSet": {
            "$ref": "./examples/Deployments_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deployments/{name}": {
      "get": {
        "operationId": "Deployments_Get",
        "description": "Get a deployed model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get_MaximumSet": {
            "$ref": "./examples/Deployments_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs": {
      "get": {
        "operationId": "Evaluations_List",
        "description": "List evaluation runs",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_List_MaximumSet": {
            "$ref": "./examples/Evaluations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/evaluations/runs/{name}": {
      "get": {
        "operationId": "Evaluations_Get",
        "description": "Get an evaluation run by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Get_MaximumSet": {
            "$ref": "./examples/Evaluations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Evaluations_Delete",
        "description": "Delete an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Delete_MaximumSet": {
            "$ref": "./examples/Evaluations_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs/{name}:cancel": {
      "post": {
        "operationId": "Evaluations_Cancel",
        "description": "Cancel an evaluation run by name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the evaluation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Cancel_MaximumSet": {
            "$ref": "./examples/Evaluations_Cancel_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs:run": {
      "post": {
        "operationId": "Evaluations_Create",
        "description": "Creates an evaluation run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "evaluation",
            "in": "body",
            "description": "Evaluation to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Evaluation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_Create_MaximumSet": {
            "$ref": "./examples/Evaluations_Create_MaximumSet_Gen.json"
          },
          "Evaluations_Create_MinimumSet": {
            "$ref": "./examples/Evaluations_Create_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/evaluations/runs:runAgent": {
      "post": {
        "operationId": "Evaluations_CreateAgentEvaluation",
        "description": "Creates an agent evaluation run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "evaluation",
            "in": "body",
            "description": "Agent evaluation to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentEvaluationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AgentEvaluation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluations_CreateAgentEvaluation_MaximumSet": {
            "$ref": "./examples/Evaluations_CreateAgentEvaluation_MaximumSet_Gen.json"
          },
          "Evaluations_CreateAgentEvaluation_MinimumSet": {
            "$ref": "./examples/Evaluations_CreateAgentEvaluation_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/fine_tuning/jobs": {
      "get": {
        "operationId": "FineTuningJobs_List",
        "description": "Returns a list of finetune jobs",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last job from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of fine-tuning jobs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Optional metadata filter. To filter, use the syntax metadata[k]=v. Alternatively, set metadata=null to indicate no metadata.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Response type",
                  "default": "list"
                },
                "data": {
                  "type": "array",
                  "description": "Items list.",
                  "items": {
                    "$ref": "#/definitions/FineTuningJob"
                  }
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available."
                }
              },
              "required": [
                "object",
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List FineTuning jobs": {
            "$ref": "./examples/FineTuningJobs_ListJobs.json"
          }
        }
      },
      "post": {
        "operationId": "FineTuningJobs_Create",
        "description": "Creates a fine-tuning job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fineTuningJob",
            "in": "body",
            "description": "fine-tuning job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobCreateParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Create FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Create.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}": {
      "get": {
        "operationId": "FineTuningJobs_Get",
        "description": "Get info about a fine-tuning job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a failed FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Get_FailedJob.json"
          },
          "Retrieve a successful FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Get_SuccessfulJob.json"
          }
        }
      },
      "delete": {
        "operationId": "FineTuningJobs_Delete",
        "description": "Delete a fine-tune job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to delete.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Delete.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}/cancel": {
      "post": {
        "operationId": "FineTuningJobs_Cancel",
        "description": "Cancel a fine-tune job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to cancel.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Cancel a FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Cancel.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints": {
      "get": {
        "operationId": "FineTuningJobs_ListCheckpoints",
        "description": "List checkpoints for a fine-tuning job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to get events for.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last checkpoint from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of checkpoints to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Response type",
                  "default": "list"
                },
                "data": {
                  "type": "array",
                  "description": "Items list.",
                  "items": {
                    "$ref": "#/definitions/FineTuningJobCheckpoint"
                  }
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available."
                }
              },
              "required": [
                "object",
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List the checkpoints from a FineTuning jobs": {
            "$ref": "./examples/FineTuningJobs_ListCheckpoints.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}/events": {
      "get": {
        "operationId": "FineTuningJobs_ListEvents",
        "description": "Get status updates for a fine-tuning job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to get events for.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last event from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of events to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Response type",
                  "default": "list"
                },
                "data": {
                  "type": "array",
                  "description": "Items list.",
                  "items": {
                    "$ref": "#/definitions/FineTuningJobEvent"
                  }
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available."
                }
              },
              "required": [
                "object",
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List the events from a FineTuning jobs": {
            "$ref": "./examples/FineTuningJobs_ListEvents.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}/pause": {
      "post": {
        "operationId": "FineTuningJobs_Pause",
        "description": "Pause a fine-tune job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to pause.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Pause a FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Pause.json"
          }
        }
      }
    },
    "/fine_tuning/jobs/{fine_tuning_job_id}/resume": {
      "post": {
        "operationId": "FineTuningJobs_Resume",
        "description": "Resume a fine-tune job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to resume.",
            "required": true,
            "type": "string",
            "maxLength": 1024
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Resume a FineTuning job": {
            "$ref": "./examples/FineTuningJobs_Resume.json"
          }
        }
      }
    },
    "/indexes": {
      "get": {
        "operationId": "Indexes_ListLatest",
        "description": "List the latest version of each Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListLatest_MaximumSet": {
            "$ref": "./examples/Indexes_ListLatest_MaximumSet_Gen.json"
          },
          "Indexes_ListLatest_MinimumSet": {
            "$ref": "./examples/Indexes_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions": {
      "get": {
        "operationId": "Indexes_ListVersions",
        "description": "List all versions of the given Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListVersions_MaximumSet": {
            "$ref": "./examples/Indexes_ListVersions_MaximumSet_Gen.json"
          },
          "Indexes_ListVersions_MinimumSet": {
            "$ref": "./examples/Indexes_ListVersions_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "Indexes_GetVersion",
        "description": "Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_GetVersion_MaximumSet": {
            "$ref": "./examples/Indexes_GetVersion_MaximumSet_Gen.json"
          },
          "Indexes_GetVersion_MinimumSet": {
            "$ref": "./examples/Indexes_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Indexes_CreateOrUpdateVersion",
        "description": "Create a new or update an existing Index with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "in": "body",
            "description": "The Index to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Indexes_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Indexes_DeleteVersion",
        "description": "Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Index to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MaximumSet_Gen.json"
          },
          "Indexes_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/redTeams/runs": {
      "get": {
        "operationId": "RedTeams_List",
        "description": "List a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_List_MaximumSet": {
            "$ref": "./examples/RedTeams_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/redTeams/runs/{name}": {
      "get": {
        "operationId": "RedTeams_Get",
        "description": "Get a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the red team run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Get_MaximumSet": {
            "$ref": "./examples/RedTeams_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/redTeams/runs:run": {
      "post": {
        "operationId": "RedTeams_Create",
        "description": "Creates a redteam run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "RedTeam",
            "in": "body",
            "description": "Redteam to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Create_MaximumSet": {
            "$ref": "./examples/RedTeams_Create_MaximumSet_Gen.json"
          },
          "RedTeams_Create_MinimumSet": {
            "$ref": "./examples/RedTeams_Create_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AgentEvaluation": {
      "type": "object",
      "description": "Evaluation response for agent evaluation run.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the agent evaluation run."
        },
        "status": {
          "type": "string",
          "description": "Status of the agent evaluation. Options: Running, Completed, Failed."
        },
        "error": {
          "type": "string",
          "description": "The reason of the request failure for the long running process, if applicable."
        },
        "result": {
          "type": "array",
          "description": "The agent evaluation result.",
          "items": {
            "$ref": "#/definitions/AgentEvaluationResult"
          }
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "AgentEvaluationRedactionConfiguration": {
      "type": "object",
      "description": "The redaction configuration will allow the user to control what is redacted.",
      "properties": {
        "redactScoreProperties": {
          "type": "boolean",
          "description": "Redact score properties. If not specified, the default is to redact in production."
        }
      }
    },
    "AgentEvaluationRequest": {
      "type": "object",
      "description": "Evaluation request for agent run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "Identifier of the agent run."
        },
        "threadId": {
          "type": "string",
          "description": "Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future."
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "samplingConfiguration": {
          "$ref": "#/definitions/AgentEvaluationSamplingConfiguration",
          "description": "Sampling configuration for the evaluation."
        },
        "redactionConfiguration": {
          "$ref": "#/definitions/AgentEvaluationRedactionConfiguration",
          "description": "Redaction configuration for the evaluation."
        },
        "appInsightsConnectionString": {
          "type": "string",
          "description": "Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs."
        }
      },
      "required": [
        "runId",
        "evaluators",
        "appInsightsConnectionString"
      ]
    },
    "AgentEvaluationResult": {
      "type": "object",
      "description": "Result for the agent evaluation evaluator run.",
      "properties": {
        "evaluator": {
          "type": "string",
          "description": "Evaluator's name. This is the name of the evaluator that was used to evaluate the agent's completion."
        },
        "evaluatorId": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Score of the given evaluator. No restriction on range."
        },
        "status": {
          "type": "string",
          "description": "Status of the evaluator result. Options: Running, Completed, Failed, NotApplicable."
        },
        "reason": {
          "type": "string",
          "description": "Reasoning for the evaluation result."
        },
        "version": {
          "type": "string",
          "description": "Version of the evaluator that was used to evaluate the agent's completion."
        },
        "threadId": {
          "type": "string",
          "description": "The unique identifier of the thread."
        },
        "runId": {
          "type": "string",
          "description": "The unique identifier of the run."
        },
        "error": {
          "type": "string",
          "description": "A string explaining why there was an error, if applicable."
        },
        "additionalDetails": {
          "type": "object",
          "description": "Additional properties relevant to the evaluator. These will differ between evaluators.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "evaluator",
        "evaluatorId",
        "score",
        "status",
        "runId"
      ]
    },
    "AgentEvaluationSamplingConfiguration": {
      "type": "object",
      "description": "Definition for sampling strategy.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the sampling strategy."
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "Percentage of sampling per hour (0-100)."
        },
        "maxRequestRate": {
          "type": "number",
          "format": "float",
          "description": "Maximum request rate per hour (0 to 1000)."
        }
      },
      "required": [
        "name",
        "samplingPercent",
        "maxRequestRate"
      ]
    },
    "ApiKeyCredentials": {
      "type": "object",
      "description": "API Key Credential definition",
      "properties": {
        "key": {
          "type": "string",
          "description": "API Key",
          "readOnly": true,
          "x-ms-client-name": "apiKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "AssetCredentialResponse": {
      "type": "object",
      "description": "Represents a reference to a blob for consumption",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobReference"
      ]
    },
    "AssistantMessage": {
      "type": "object",
      "description": "A message generated by the assistant in response to previous messages.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Response content generated by the assistant."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "AttackStrategy": {
      "type": "string",
      "description": "Strategies for attacks.",
      "enum": [
        "easy",
        "moderate",
        "difficult",
        "ascii_art",
        "ascii_smuggler",
        "atbash",
        "base64",
        "binary",
        "caesar",
        "character_space",
        "jailbreak",
        "ansii_attack",
        "character_swap",
        "suffix_append",
        "string_join",
        "unicode_confusable",
        "unicode_substitution",
        "diacritic",
        "flip",
        "leetspeak",
        "rot13",
        "morse",
        "url",
        "baseline"
      ],
      "x-ms-enum": {
        "name": "AttackStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Easy",
            "value": "easy",
            "description": "Represents a default set of easy complexity attacks. Easy complexity attacks require less effort, such as translation of a prompt into some encoding, and does not require any Large Language Model to convert or orchestrate."
          },
          {
            "name": "Moderate",
            "value": "moderate",
            "description": "Represents a default set of moderate complexity attacks. Moderate complexity attacks require having access to resources such as another generative AI model."
          },
          {
            "name": "Difficult",
            "value": "difficult",
            "description": "Represents a default set of difficult complexity attacks. Difficult complexity attacks include attacks that require access to significant resources and effort to execute an attack such as knowledge of search-based algorithms in addition to a generative AI model."
          },
          {
            "name": "AsciiArt",
            "value": "ascii_art",
            "description": "Generates visual art using ASCII characters, often used for creative or obfuscation purposes."
          },
          {
            "name": "AsciiSmuggler",
            "value": "ascii_smuggler",
            "description": "Conceals data within ASCII characters, making it harder to detect."
          },
          {
            "name": "Atbash",
            "value": "atbash",
            "description": "Implements the Atbash cipher, a simple substitution cipher where each letter is mapped to its reverse."
          },
          {
            "name": "Base64",
            "value": "base64",
            "description": "Encodes binary data into a text format using Base64, commonly used for data transmission."
          },
          {
            "name": "Binary",
            "value": "binary",
            "description": "Converts text into binary code, representing data in a series of 0s and 1s."
          },
          {
            "name": "Caesar",
            "value": "caesar",
            "description": "Applies the Caesar cipher, a substitution cipher that shifts characters by a fixed number of positions."
          },
          {
            "name": "CharacterSpace",
            "value": "character_space",
            "description": "Alters text by adding spaces between characters, often used for obfuscation."
          },
          {
            "name": "Jailbreak",
            "value": "jailbreak",
            "description": "Injects specially crafted prompts to bypass AI safeguards, known as User Injected Prompt Attacks (UPIA)."
          },
          {
            "name": "AnsiiAttack",
            "value": "ansii_attack",
            "description": "Utilizes ANSI escape sequences to manipulate text appearance and behavior."
          },
          {
            "name": "CharacterSwap",
            "value": "character_swap",
            "description": "Swaps characters within text to create variations or obfuscate the original content."
          },
          {
            "name": "SuffixAppend",
            "value": "suffix_append",
            "description": "Appends an adversarial suffix to the prompt."
          },
          {
            "name": "StringJoin",
            "value": "string_join",
            "description": "Joins multiple strings together, often used for concatenation or obfuscation."
          },
          {
            "name": "UnicodeConfusable",
            "value": "unicode_confusable",
            "description": "Uses Unicode characters that look similar to standard characters, creating visual confusion."
          },
          {
            "name": "UnicodeSubstitution",
            "value": "unicode_substitution",
            "description": "Substitutes standard characters with Unicode equivalents, often for obfuscation."
          },
          {
            "name": "Diacritic",
            "value": "diacritic",
            "description": "Adds diacritical marks to characters, changing their appearance and sometimes their meaning."
          },
          {
            "name": "Flip",
            "value": "flip",
            "description": "Flips characters from front to back, creating a mirrored effect."
          },
          {
            "name": "Leetspeak",
            "value": "leetspeak",
            "description": "Transforms text into Leetspeak, a form of encoding that replaces letters with similar-looking numbers or symbols."
          },
          {
            "name": "ROT13",
            "value": "rot13",
            "description": "Applies the ROT13 cipher, a simple substitution cipher that shifts characters by 13 positions."
          },
          {
            "name": "Morse",
            "value": "morse",
            "description": "Encodes text into Morse code, using dots and dashes to represent characters."
          },
          {
            "name": "Url",
            "value": "url",
            "description": "Encodes text into URL format."
          },
          {
            "name": "Baseline",
            "value": "baseline",
            "description": "Represents the baseline direct adversarial probing, which is used by attack strategies as the attack objective."
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "AzureAISearchIndex": {
      "type": "object",
      "description": "Azure AI Search Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to Azure AI Search",
          "x-ms-mutability": [
            "create"
          ]
        },
        "indexName": {
          "type": "string",
          "description": "Name of index in Azure AI Search resource to attach",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "indexName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "AzureSearch"
    },
    "AzureOpenAIModelConfiguration": {
      "type": "object",
      "description": "Azure OpenAI model configuration. The API version would be selected by the service for querying the model.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based `connection_name/deployment_name` (e.g. `my-aoai-connection/gpt-4o`)."
        }
      },
      "required": [
        "modelDeploymentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetConfig"
        }
      ],
      "x-ms-discriminator-value": "AzureOpenAIModel"
    },
    "BaseCredentials": {
      "type": "object",
      "description": "A base class for connection credentials",
      "properties": {
        "type": {
          "$ref": "#/definitions/CredentialType",
          "description": "The type of credential used by the connection",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BlobReference": {
      "type": "object",
      "description": "Blob reference details.",
      "properties": {
        "blobUri": {
          "type": "string",
          "description": "Blob URI path for client to upload data. Example: https://blob.windows.core.net/Container/Path"
        },
        "storageAccountArmId": {
          "type": "string",
          "description": "ARM ID of the storage account to use."
        },
        "credential": {
          "$ref": "#/definitions/SasCredential",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobUri",
        "storageAccountArmId",
        "credential"
      ]
    },
    "Connection": {
      "type": "object",
      "description": "Response from the list and get connections operations",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of the connection, provided by the user.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A unique identifier for the connection, generated by the service",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ConnectionType",
          "description": "Category of the connection",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The connection URL to be used for this service",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the connection is tagged as the default connection of its type",
          "readOnly": true
        },
        "credentials": {
          "$ref": "#/definitions/BaseCredentials",
          "description": "The credentials used by the connection",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Metadata of the connection",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "name",
        "id",
        "type",
        "target",
        "isDefault",
        "credentials",
        "metadata"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "description": "The Type (or category) of the connection",
      "enum": [
        "AzureOpenAI",
        "AzureBlob",
        "AzureStorageAccount",
        "CognitiveSearch",
        "CosmosDB",
        "ApiKey",
        "AppConfig",
        "AppInsights",
        "CustomKeys"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureOpenAI",
            "value": "AzureOpenAI",
            "description": "Azure OpenAI Service"
          },
          {
            "name": "AzureBlobStorage",
            "value": "AzureBlob",
            "description": "Azure Blob Storage, with specified container"
          },
          {
            "name": "AzureStorageAccount",
            "value": "AzureStorageAccount",
            "description": "Azure Blob Storage, with container not specified (used by Agents)"
          },
          {
            "name": "AzureAISearch",
            "value": "CognitiveSearch",
            "description": "Azure AI Search"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "CosmosDB"
          },
          {
            "name": "APIKey",
            "value": "ApiKey",
            "description": "Generic connection that uses API Key authentication"
          },
          {
            "name": "ApplicationConfiguration",
            "value": "AppConfig",
            "description": "Application Configuration"
          },
          {
            "name": "ApplicationInsights",
            "value": "AppInsights",
            "description": "Application Insights"
          },
          {
            "name": "Custom",
            "value": "CustomKeys",
            "description": "Custom Keys"
          }
        ]
      }
    },
    "CosmosDBIndex": {
      "type": "object",
      "description": "CosmosDB Vector Store Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to CosmosDB",
          "x-ms-mutability": [
            "create"
          ]
        },
        "databaseName": {
          "type": "string",
          "description": "Name of the CosmosDB Database",
          "x-ms-mutability": [
            "create"
          ]
        },
        "containerName": {
          "type": "string",
          "description": "Name of CosmosDB Container",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingConfiguration": {
          "$ref": "#/definitions/EmbeddingConfiguration",
          "description": "Embedding model configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "databaseName",
        "containerName",
        "embeddingConfiguration",
        "fieldMapping"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "CosmosDBNoSqlVectorStore"
    },
    "CredentialType": {
      "type": "string",
      "description": "The credential type used by the connection",
      "enum": [
        "ApiKey",
        "AAD",
        "SAS",
        "CustomKeys",
        "None"
      ],
      "x-ms-enum": {
        "name": "CredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "apiKey",
            "value": "ApiKey",
            "description": "API Key credential"
          },
          {
            "name": "entraId",
            "value": "AAD",
            "description": "Entra ID credential (formerly known as AAD)"
          },
          {
            "name": "SAS",
            "value": "SAS",
            "description": "Shared Access Signature (SAS) credential"
          },
          {
            "name": "custom",
            "value": "CustomKeys",
            "description": "Custom credential"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No credential"
          }
        ]
      }
    },
    "CustomCredential": {
      "type": "object",
      "description": "Custom credential definition",
      "properties": {
        "keys": {
          "type": "object",
          "description": "The credential type",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "keys"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "CustomKeys"
    },
    "DatasetType": {
      "type": "string",
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder"
      ],
      "x-ms-enum": {
        "name": "DatasetType",
        "modelAsString": true,
        "values": [
          {
            "name": "uri_file",
            "value": "uri_file",
            "description": "URI file."
          },
          {
            "name": "uri_folder",
            "value": "uri_folder",
            "description": "URI folder."
          }
        ]
      }
    },
    "DatasetVersion": {
      "type": "object",
      "description": "DatasetVersion Definition",
      "properties": {
        "dataUri": {
          "type": "string",
          "description": "URI of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "$ref": "#/definitions/DatasetType",
          "description": "Dataset type"
        },
        "isReference": {
          "type": "boolean",
          "description": "Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "dataUri",
        "type",
        "name",
        "version"
      ]
    },
    "Deployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/DeploymentType",
          "description": "The type of the deployment"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "DeploymentType": {
      "type": "string",
      "enum": [
        "ModelDeployment"
      ],
      "x-ms-enum": {
        "name": "DeploymentType",
        "modelAsString": true,
        "values": [
          {
            "name": "ModelDeployment",
            "value": "ModelDeployment",
            "description": "Model deployment"
          }
        ]
      }
    },
    "DeveloperMessage": {
      "type": "object",
      "description": "A message authored by a developer to guide the model during evaluation.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Content provided by a developer to guide model behavior in an evaluation context."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "developer"
    },
    "DpoHyperparametersParam": {
      "type": "object",
      "description": "The hyper parameter settings used in Direct Preference Optimization fine-tuning method.",
      "properties": {
        "batch_size": {
          "type": "integer",
          "format": "int32",
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance."
        },
        "beta": {
          "type": "number",
          "format": "double",
          "description": "The beta value for the DPO method. A higher beta value will increase the weight of the penalty between the policy and reference model."
        },
        "learning_rate_multiplier": {
          "type": "number",
          "format": "double",
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting."
        },
        "n_epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        }
      }
    },
    "DpoMethodParam": {
      "type": "object",
      "description": "Configuration for the Direct Preference Optimization fine-tuning method.",
      "properties": {
        "hyperparameters": {
          "$ref": "#/definitions/DpoHyperparametersParam",
          "description": "The hyperparameters used for the DPO fine-tuning job."
        }
      }
    },
    "EmbeddingConfiguration": {
      "type": "object",
      "description": "Embedding configuration class",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingField": {
          "type": "string",
          "description": "Embedding field",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "modelDeploymentName",
        "embeddingField"
      ]
    },
    "EntraIDCredentials": {
      "type": "object",
      "description": "Entra ID credential definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "Evaluation": {
      "type": "object",
      "description": "Evaluation Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluation.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "data": {
          "$ref": "#/definitions/InputData",
          "description": "Data for evaluation."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for evaluation. It helps to find the evaluation easily in AI Foundry. It does not need to be unique."
        },
        "description": {
          "type": "string",
          "description": "Description of the evaluation. It can be used to store additional information about the evaluation and is mutable."
        },
        "status": {
          "type": "string",
          "description": "Status of the evaluation. It is set by service and is read-only.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Evaluation's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluators": {
          "type": "object",
          "description": "Evaluators to be used for the evaluation.",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorConfiguration"
          }
        },
        "target": {
          "$ref": "#/definitions/EvaluationTarget",
          "description": "Specifies the type and configuration of the entity used for this evaluation."
        }
      },
      "required": [
        "id",
        "data",
        "evaluators"
      ]
    },
    "EvaluationTarget": {
      "type": "object",
      "description": "Abstract base model for defining evaluation targets.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationTargetType",
          "description": "Discriminator that defines the type of the evaluation target."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationTargetType": {
      "type": "string",
      "description": "Allowed types of evaluation targets.",
      "enum": [
        "modelResponseGeneration"
      ],
      "x-ms-enum": {
        "name": "EvaluationTargetType",
        "modelAsString": true,
        "values": [
          {
            "name": "modelResponseGeneration",
            "value": "modelResponseGeneration",
            "description": "Evaluation target that uses a model for response generation."
          }
        ]
      }
    },
    "EvaluatorConfiguration": {
      "type": "object",
      "description": "Evaluator Configuration",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the evaluator."
        },
        "initParams": {
          "type": "object",
          "description": "Initialization parameters of the evaluator.",
          "additionalProperties": {}
        },
        "dataMapping": {
          "type": "object",
          "description": "Data parameters of the evaluator.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "FieldMapping": {
      "type": "object",
      "description": "Field mapping configuration class",
      "properties": {
        "contentFields": {
          "type": "array",
          "description": "List of fields with text content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "filepathField": {
          "type": "string",
          "description": "Path of file to be used as a source of text content",
          "x-ms-mutability": [
            "create"
          ]
        },
        "titleField": {
          "type": "string",
          "description": "Field containing the title of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "urlField": {
          "type": "string",
          "description": "Field containing the url of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "vectorFields": {
          "type": "array",
          "description": "List of fields with vector content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadataFields": {
          "type": "array",
          "description": "List of fields with metadata content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "contentFields"
      ]
    },
    "FileDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "FineTuningEvaluationMetric": {
      "type": "string",
      "description": "The evaluation metric to use in RFT text similarity grader",
      "enum": [
        "bleu",
        "fuzzy_match",
        "gleu",
        "meteor",
        "rouge_1",
        "rouge_2",
        "rouge_3",
        "rouge_4",
        "rouge_5",
        "rouge_l",
        "cosine"
      ],
      "x-ms-enum": {
        "name": "FineTuningEvaluationMetric",
        "modelAsString": true,
        "values": [
          {
            "name": "bleu",
            "value": "bleu",
            "description": "bleu"
          },
          {
            "name": "fuzzy_match",
            "value": "fuzzy_match",
            "description": "fuzzy_match"
          },
          {
            "name": "gleu",
            "value": "gleu",
            "description": "gleu"
          },
          {
            "name": "meteor",
            "value": "meteor",
            "description": "meteor"
          },
          {
            "name": "rouge_1",
            "value": "rouge_1",
            "description": "rouge_1"
          },
          {
            "name": "rouge_2",
            "value": "rouge_2",
            "description": "rouge_2"
          },
          {
            "name": "rouge_3",
            "value": "rouge_3",
            "description": "rouge_3"
          },
          {
            "name": "rouge_4",
            "value": "rouge_4",
            "description": "rouge_4"
          },
          {
            "name": "rouge_5",
            "value": "rouge_5",
            "description": "rouge_5"
          },
          {
            "name": "rouge_l",
            "value": "rouge_l",
            "description": "rouge_l"
          },
          {
            "name": "cosine",
            "value": "cosine",
            "description": "cosine"
          }
        ]
      }
    },
    "FineTuningGrader": {
      "type": "object",
      "description": "The grader used for RFT fine-tuning. Abstract base class",
      "properties": {
        "type": {
          "type": "string",
          "description": "The grader type."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "FineTuningJob": {
      "type": "object",
      "description": "Fine-Tuning Job",
      "properties": {
        "id": {
          "type": "string",
          "description": "The job identifier."
        },
        "object": {
          "type": "string",
          "description": "The object type, which is always 'fine_tuning.job'.",
          "default": "fine_tuning.job"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the fine-tuning job was created."
        },
        "error": {
          "$ref": "#/definitions/FineTuningJobError",
          "description": "For fine-tuning jobs that have failed, this will contain more information on the cause of the failure."
        },
        "estimated_finish": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running."
        },
        "fine_tuned_model": {
          "type": "string",
          "description": "The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running."
        },
        "finished_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running."
        },
        "hyperparameters": {
          "$ref": "#/definitions/Hyperparameters",
          "description": "The hyperparameters used for the fine-tuning job. This value will only be returned when running supervised jobs"
        },
        "integrations": {
          "type": "array",
          "description": "A list of integrations to enable for this fine-tuning job.",
          "items": {
            "$ref": "#/definitions/FineTuningJobWandbIntegrationObject"
          }
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "$ref": "#/definitions/Method",
          "description": "The method used for fine-tuning."
        },
        "model": {
          "type": "string",
          "description": "The base model that is being fine-tuned."
        },
        "organization_id": {
          "type": "string",
          "description": "The organization that owns the fine-tuning job."
        },
        "result_files": {
          "type": "array",
          "description": "The compiled results file ID(s) for the fine-tuning job. The file is only available for successfully completed fine-tune runs.",
          "items": {
            "type": "string"
          }
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The seed used for the fine-tuning job."
        },
        "status": {
          "type": "string",
          "description": "The current status of the fine-tuning job, which can be either validating_files, queued, running, succeeded, failed, or cancelled."
        },
        "trained_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running."
        },
        "training_file": {
          "type": "string",
          "description": "The file ID used for training. You can retrieve the training data with the Files API."
        },
        "validation_file": {
          "type": "string",
          "description": "The file ID used for validation. You can retrieve the validation results with the Files API."
        },
        "additional_Parameters": {
          "type": "object",
          "description": "The additional 1P parameters used to train the fine-tuned model. This is Azure AI specific parameter.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "suffix": {
          "type": "string",
          "description": "A string of up to 64 characters that will be added to your fine-tuned model name."
        },
        "TrainingType": {
          "$ref": "#/definitions/TrainingType",
          "description": "The SKU used for training. This is Azure AI specific parameter"
        },
        "inference_configs": {
          "$ref": "#/definitions/InferenceConfigs",
          "description": "Inference configurations. This is Azure AI specific parameter"
        }
      },
      "required": [
        "id",
        "object",
        "created_at",
        "method",
        "model",
        "organization_id",
        "seed",
        "status",
        "training_file"
      ]
    },
    "FineTuningJobCheckpoint": {
      "type": "object",
      "description": "The fine_tuning.job.checkpoint object represents a model checkpoint for a fine-tuning job that is ready to use.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always fine_tuning.job.checkpoint",
          "default": "fine_tuning.job.checkpoint"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the fine-tuning checkpoint was created."
        },
        "fine_tuned_model_checkpoint": {
          "type": "string",
          "description": "The name of the fine-tuned checkpoint model that is created."
        },
        "fine_tuning_job_id": {
          "type": "string",
          "description": "The name of the fine-tuning job that this checkpoint was created from."
        },
        "id": {
          "type": "string",
          "description": "The checkpoint identifier, which can be referenced in the API endpoints."
        },
        "metrics": {
          "$ref": "#/definitions/FineTuningJobCheckpointMetric",
          "description": "Metrics at the step number during the fine-tuning job."
        },
        "step_number": {
          "type": "integer",
          "format": "int32",
          "description": "The step number that the checkpoint was created at."
        }
      },
      "required": [
        "object",
        "created_at",
        "fine_tuned_model_checkpoint",
        "fine_tuning_job_id",
        "id",
        "metrics",
        "step_number"
      ]
    },
    "FineTuningJobCheckpointMetric": {
      "type": "object",
      "description": "Metrics at the step number during the fine-tuning job.",
      "properties": {
        "full_valid_loss": {
          "type": "number",
          "format": "double",
          "description": "metric full validation loss"
        },
        "full_valid_mean_token_accuracy": {
          "type": "number",
          "format": "double",
          "description": "metric full valid mean token accuracy"
        },
        "step": {
          "type": "number",
          "format": "double",
          "description": "metric step"
        },
        "train_loss": {
          "type": "number",
          "format": "double",
          "description": "metric train loss"
        },
        "train_mean_token_accuracy": {
          "type": "number",
          "format": "double",
          "description": "metric train mean token accuracy"
        },
        "valid_loss": {
          "type": "number",
          "format": "double",
          "description": "metric valid loss"
        },
        "valid_mean_token_accuracy": {
          "type": "number",
          "format": "double",
          "description": "metric valid mean token accuracy"
        }
      }
    },
    "FineTuningJobError": {
      "type": "object",
      "description": "For fine-tuning jobs that have failed, this will contain more information on the cause of the failure.",
      "properties": {
        "code": {
          "type": "string",
          "description": "A machine-readable error code."
        },
        "message": {
          "type": "string",
          "description": "A human-readable error message."
        },
        "param": {
          "type": "string",
          "description": "The parameter that was invalid, usually training_file or validation_file. This field will be null if the failure was not parameter-specific."
        }
      }
    },
    "FineTuningJobEvent": {
      "type": "object",
      "description": "Fine-tuning job event object.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always fine_tuning.job.event",
          "default": "fine_tuning.job.event"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the fine-tuning event was created."
        },
        "data": {
          "description": "The data associated with the event."
        },
        "id": {
          "type": "string",
          "description": "The object identifier."
        },
        "level": {
          "type": "string",
          "description": "The log level of the event."
        },
        "message": {
          "type": "string",
          "description": "The message of the event."
        },
        "type": {
          "type": "string",
          "description": "The type of event."
        }
      },
      "required": [
        "object",
        "created_at",
        "id",
        "level",
        "message"
      ]
    },
    "FineTuningJobGraderMessageRole": {
      "type": "string",
      "description": "Training RFT message role options.",
      "enum": [
        "user",
        "system",
        "developer",
        "assistant"
      ],
      "x-ms-enum": {
        "name": "FineTuningJobGraderMessageRole",
        "modelAsString": true,
        "values": [
          {
            "name": "user",
            "value": "user",
            "description": "doc message role"
          },
          {
            "name": "system",
            "value": "system",
            "description": "system message role"
          },
          {
            "name": "developer",
            "value": "developer",
            "description": "developer message role"
          },
          {
            "name": "assistant",
            "value": "assistant",
            "description": "assistant message role"
          }
        ]
      }
    },
    "FineTuningJobGraderModelSamplingParam": {
      "type": "object",
      "description": "The sampling parameters for the model.",
      "properties": {
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "Seed parameter"
        },
        "temperature": {
          "type": "number",
          "format": "double",
          "description": "Temperature parameter"
        },
        "max_completions_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "Max completions tokens parameter"
        },
        "top_p": {
          "type": "number",
          "format": "double",
          "description": "Top parameter"
        },
        "reasoning_effort": {
          "$ref": "#/definitions/FineTuningJobGraderReasoningEffort",
          "description": "Reasoning effort parameter"
        }
      }
    },
    "FineTuningJobGraderReasoningEffort": {
      "type": "string",
      "description": "The sampling parameters for the model.",
      "enum": [
        "low",
        "medium",
        "high"
      ],
      "x-ms-enum": {
        "name": "FineTuningJobGraderReasoningEffort",
        "modelAsString": true,
        "values": [
          {
            "name": "low",
            "value": "low",
            "description": "Low reasoning effort"
          },
          {
            "name": "medium",
            "value": "medium",
            "description": "Medium reasoning effort"
          },
          {
            "name": "high",
            "value": "high",
            "description": "High reasoning effort"
          }
        ]
      }
    },
    "FineTuningJobWandbIntegration": {
      "type": "object",
      "description": "The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run.",
      "properties": {
        "project": {
          "type": "string",
          "description": "The name of the project that the new run will be created under."
        },
        "entity": {
          "type": "string",
          "description": "The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used."
        },
        "name": {
          "type": "string",
          "description": "A display name to set for the run. If not set, we will use the Job ID as the name."
        },
        "tags": {
          "type": "array",
          "description": "A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: 'openai/finetune', 'openai/{base-model}', 'openai/{ftjob}.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "project"
      ]
    },
    "FineTuningJobWandbIntegrationObject": {
      "type": "object",
      "description": "Integration to enable for fine-tuning job.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of integration to enable. Currently, only 'wandb' (Weights and Biases) is supported."
        },
        "wandb": {
          "$ref": "#/definitions/FineTuningJobWandbIntegration",
          "description": "The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run."
        }
      },
      "required": [
        "type",
        "wandb"
      ]
    },
    "FineTuningLabelModelGrader": {
      "type": "object",
      "description": "A LabelModelGrader object which uses a model to assign labels to each item in the evaluation.",
      "properties": {
        "input": {
          "type": "array",
          "description": "input labels",
          "items": {
            "$ref": "#/definitions/Input"
          }
        },
        "labels": {
          "type": "array",
          "description": "The labels to assign to each item in the evaluation.",
          "items": {
            "type": "string"
          }
        },
        "model": {
          "type": "string",
          "description": "The model to use for the evaluation. Must support structured outputs."
        },
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "passing_labels": {
          "type": "array",
          "description": "The labels that indicate a passing result. Must be a subset of labels.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "input",
        "labels",
        "model",
        "name",
        "passing_labels"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "label_model"
    },
    "FineTuningStringOperation": {
      "type": "string",
      "description": "String operations used in RFT string check grader",
      "enum": [
        "eq",
        "ne",
        "like",
        "ilike"
      ],
      "x-ms-enum": {
        "name": "FineTuningStringOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "eq",
            "value": "eq",
            "description": "Equal operator"
          },
          {
            "name": "ne",
            "value": "ne",
            "description": "Not equal operator"
          },
          {
            "name": "like",
            "value": "like",
            "description": "Like operator"
          },
          {
            "name": "ilike",
            "value": "ilike",
            "description": "Not like operator"
          }
        ]
      }
    },
    "FolderDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "Hyperparameters": {
      "type": "object",
      "description": "The hyperparameters used for the fine-tuning job. This value is now deprecated sin favor of `method`, and should be passed in under the `method` parameter.",
      "properties": {
        "batch_size": {
          "type": "integer",
          "format": "int32",
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance."
        },
        "learning_rate_multiplier": {
          "type": "integer",
          "format": "int32",
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting."
        },
        "n_epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        }
      }
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/IndexType",
          "description": "Type of index"
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name",
        "version"
      ]
    },
    "IndexType": {
      "type": "string",
      "enum": [
        "AzureSearch",
        "CosmosDBNoSqlVectorStore",
        "ManagedAzureSearch"
      ],
      "x-ms-enum": {
        "name": "IndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "azureSearch",
            "value": "AzureSearch",
            "description": "Azure search"
          },
          {
            "name": "cosmosDB",
            "value": "CosmosDBNoSqlVectorStore",
            "description": "CosmosDB"
          },
          {
            "name": "managedAzureSearch",
            "value": "ManagedAzureSearch",
            "description": "Managed Azure Search"
          }
        ]
      }
    },
    "InferenceConfigs": {
      "type": "object",
      "description": "Inference configurations",
      "properties": {
        "auto_inference_enabled": {
          "type": "boolean",
          "description": "Is model deployed after tuning completes"
        },
        "inference_sku": {
          "$ref": "#/definitions/InferenceSku",
          "description": "SKU used for inference"
        },
        "auto_deployment_id": {
          "type": "string",
          "description": "Deployment identifier"
        },
        "auto_deployment_status": {
          "type": "string",
          "description": "Deployment status"
        },
        "auto_deployment_error_message": {
          "type": "string",
          "description": "Deployment error information"
        }
      }
    },
    "InferenceSku": {
      "type": "string",
      "description": "SKU available for training",
      "enum": [
        "DeveloperTier",
        "Standard",
        "GlobalStandard"
      ],
      "x-ms-enum": {
        "name": "InferenceSku",
        "modelAsString": true,
        "values": [
          {
            "name": "DeveloperTier",
            "value": "DeveloperTier",
            "description": "DeveloperTier refers to a cross-region developer inference sku."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard refers to regional pay-go inference sku."
          },
          {
            "name": "GlobalStandard",
            "value": "GlobalStandard",
            "description": "Global Standard refers to a cross-region pay-go inference sku."
          }
        ]
      }
    },
    "Input": {
      "type": "object",
      "description": "A ScoreModelGrader object that uses a model to assign a score to the input.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Message type"
        },
        "role": {
          "$ref": "#/definitions/FineTuningJobGraderMessageRole",
          "description": "Message role"
        },
        "content": {
          "$ref": "#/definitions/InputContent",
          "description": "Message content"
        }
      },
      "required": [
        "type",
        "role",
        "content"
      ]
    },
    "InputContent": {
      "type": "object",
      "description": "Base for inputs to the model."
    },
    "InputContentOutputText": {
      "type": "object",
      "description": "Inputs to the model - can contain template strings.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the output text. Always `output_text`.",
          "enum": [
            "output_text"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "text": {
          "type": "string",
          "description": "The text output from the model."
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "InputData": {
      "type": "object",
      "description": "Abstract data class.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the data"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InputDataset": {
      "type": "object",
      "description": "Dataset as source for evaluation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Evaluation input data"
        }
      },
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InputData"
        }
      ],
      "x-ms-discriminator-value": "dataset"
    },
    "InputSimpleContent": {
      "type": "object",
      "description": "Inputs to the model - can contain template strings.",
      "properties": {
        "content": {
          "type": "string",
          "description": "content field"
        }
      },
      "required": [
        "content"
      ]
    },
    "Integration": {
      "type": "object",
      "description": "Integration to enable for fine-tuning job.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of integration to enable. Currently, only 'wandb' (Weights and Biases) is supported."
        },
        "wandb": {
          "$ref": "#/definitions/IntegrationWandb",
          "description": "The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run."
        }
      },
      "required": [
        "type",
        "wandb"
      ]
    },
    "IntegrationWandb": {
      "type": "object",
      "description": "The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run.",
      "properties": {
        "project": {
          "type": "string",
          "description": "The name of the project that the new run will be created under."
        },
        "entity": {
          "type": "string",
          "description": "The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used."
        },
        "name": {
          "type": "string",
          "description": "A display name to set for the run. If not set, we will use the Job ID as the name."
        },
        "tags": {
          "type": "array",
          "description": "A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: 'openai/finetune', 'openai/{base-model}', 'openai/{ftjob}.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "project"
      ]
    },
    "JobCreateParams": {
      "type": "object",
      "description": "Fine-Tuning Job",
      "properties": {
        "model": {
          "type": "string",
          "description": "The base model that is being fine-tuned."
        },
        "training_file": {
          "type": "string",
          "description": "The file ID used for training. You can retrieve the training data with the Files API."
        },
        "hyperparameters": {
          "$ref": "#/definitions/Hyperparameters",
          "description": "The hyperparameters used for the SFT fine-tuning job. This value is now deprecated in favor of method, and should be passed in under the method parameter."
        },
        "integrations": {
          "type": "array",
          "description": "A list of integrations to enable for this fine-tuning job.",
          "items": {
            "$ref": "#/definitions/Integration"
          }
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "$ref": "#/definitions/Method",
          "description": "The method used for fine-tuning."
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The seed used for the fine-tuning job."
        },
        "suffix": {
          "type": "string",
          "description": "A string of up to 64 characters that will be added to your fine-tuned model name."
        },
        "validation_file": {
          "type": "string",
          "description": "The file ID used for validation. You can retrieve the validation results with the Files API."
        },
        "TrainingType": {
          "$ref": "#/definitions/TrainingType",
          "description": "The SKU used for training. This is Azure AI specific parameter"
        },
        "inference_configs": {
          "$ref": "#/definitions/InferenceConfigs",
          "description": "Inference configurations. This is Azure AI specific parameter"
        }
      },
      "required": [
        "model",
        "training_file",
        "method",
        "seed"
      ]
    },
    "ManagedAzureAISearchIndex": {
      "type": "object",
      "description": "Managed Azure AI Search Index Definition",
      "properties": {
        "vectorStoreId": {
          "type": "string",
          "description": "Vector store id of managed index",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "vectorStoreId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "ManagedAzureSearch"
    },
    "Message": {
      "type": "object",
      "description": "Abstract base model representing a single message in a conversation.",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role of the message author. Known values: 'system', 'assistant', 'developer', 'user'.",
          "enum": [
            "system",
            "assistant",
            "developer",
            "user"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "discriminator": "role",
      "required": [
        "role"
      ]
    },
    "Method": {
      "type": "object",
      "description": "The method used for fine-tuning.",
      "properties": {
        "type": {
          "$ref": "#/definitions/MethodTrainingType",
          "description": "The type of training method."
        },
        "supervised": {
          "$ref": "#/definitions/SupervisedMethodParam",
          "description": "Configuration for the supervised fine-tuning method."
        },
        "dpo": {
          "$ref": "#/definitions/DpoMethodParam",
          "description": "Configuration for the DPO fine-tuning method."
        },
        "reinforcement": {
          "$ref": "#/definitions/ReinforcementMethodParam",
          "description": "Configuration for the reinforcement fine-tuning method."
        },
        "mistralClassifier": {
          "$ref": "#/definitions/MistralClassifierMethodParam",
          "description": "Configuration for the Mistral Classifier fine-tuning method."
        },
        "mistralCompletion": {
          "$ref": "#/definitions/MistralCompletionParam",
          "description": "Configuration for the Mistral Completion fine-tuning method."
        }
      },
      "required": [
        "type"
      ]
    },
    "MethodTrainingType": {
      "type": "string",
      "description": "Training method types",
      "enum": [
        "supervised",
        "dpo",
        "reinforcement",
        "mistralCompletion",
        "mistralClassifier"
      ],
      "x-ms-enum": {
        "name": "MethodTrainingType",
        "modelAsString": true,
        "values": [
          {
            "name": "supervised",
            "value": "supervised",
            "description": "Supervised fine-tuning type"
          },
          {
            "name": "dpo",
            "value": "dpo",
            "description": "DPO fine-tuning type"
          },
          {
            "name": "reinforcement",
            "value": "reinforcement",
            "description": "Reinforcement fine-tuning type"
          },
          {
            "name": "mistralCompletion",
            "value": "mistralCompletion",
            "description": "Mistral Completion fine-tuning type"
          },
          {
            "name": "mistralClassifier",
            "value": "mistralClassifier",
            "description": "Mistral Classifier fine-tuning type"
          }
        ]
      }
    },
    "MistralClassifierHyperparametersParam": {
      "type": "object",
      "description": "The hyper parameter settings used in Mistral Classifier Fine-Tuning job.",
      "properties": {
        "training_steps": {
          "type": "integer",
          "format": "int32",
          "description": "The number of training steps to perform. A training step refers to a single update of the model weights during the fine-tuning process. This update is typically calculated using a batch of samples from the training dataset."
        },
        "learning_rate": {
          "type": "number",
          "format": "double",
          "description": "A parameter describing how much to adjust the pre-trained model's weights in response to the estimated error each time the weights are updated during the fine-tuning process.",
          "default": 0.0001
        },
        "weight_decay": {
          "type": "number",
          "format": "double",
          "description": "(Advanced Usage) Weight decay adds a term to the loss function that is proportional to the sum of the squared weights. This term reduces the magnitude of the weights and prevents them from growing too large.",
          "default": 0.1
        },
        "warmup_fraction": {
          "type": "number",
          "format": "double",
          "description": "(Advanced Usage) A parameter that specifies the percentage of the total training steps at which the learning rate warm-up phase ends. During this phase, the learning rate gradually increases from a small value to the initial learning rate, helping to stabilize the training process and improve convergence. Similar to pct_start in mistral-finetune",
          "default": 0.05
        },
        "epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        },
        "seq_len": {
          "type": "integer",
          "format": "int32",
          "description": "Seq len parameter"
        }
      }
    },
    "MistralClassifierMethodParam": {
      "type": "object",
      "description": "Mistral Classifier Fine-Tuning method.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Mistral Classifier fine-tuning type",
          "enum": [
            "mistralClassifier"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "hyperparameters": {
          "$ref": "#/definitions/MistralClassifierHyperparametersParam",
          "description": "The hyperparameters used for the Mistral Classifier fine-tuning job."
        }
      },
      "required": [
        "type"
      ]
    },
    "MistralCompletionHyperParameters": {
      "type": "object",
      "description": "The hyper parameter settings used in Mistral Completion Fine-Tuning job.",
      "properties": {
        "training_steps": {
          "type": "integer",
          "format": "int32",
          "description": "The number of training steps to perform. A training step refers to a single update of the model weights during the fine-tuning process. This update is typically calculated using a batch of samples from the training dataset."
        },
        "learning_rate": {
          "type": "number",
          "format": "double",
          "description": "A parameter describing how much to adjust the pre-trained model's weights in response to the estimated error each time the weights are updated during the fine-tuning process.",
          "default": 0.0001
        },
        "weight_decay": {
          "type": "number",
          "format": "double",
          "description": "(Advanced Usage) Weight decay adds a term to the loss function that is proportional to the sum of the squared weights. This term reduces the magnitude of the weights and prevents them from growing too large.",
          "default": 0.1
        },
        "warmup_fraction": {
          "type": "number",
          "format": "double",
          "description": "(Advanced Usage) A parameter that specifies the percentage of the total training steps at which the learning rate warm-up phase ends. During this phase, the learning rate gradually increases from a small value to the initial learning rate, helping to stabilize the training process and improve convergence. Similar to pct_start in mistral-finetune",
          "default": 0.05
        },
        "epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        },
        "seq_len": {
          "type": "integer",
          "format": "int32",
          "description": "Seq len parameter"
        },
        "fim_ratio": {
          "type": "number",
          "format": "double",
          "description": "Fim ratio parameter"
        }
      }
    },
    "MistralCompletionParam": {
      "type": "object",
      "description": "Mistral Completion Fine-Tuning method.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Mistral Completion fine-tuning type",
          "enum": [
            "mistralCompletion"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "hyperparameters": {
          "$ref": "#/definitions/MistralCompletionHyperParameters",
          "description": "The hyperparameters used for the Mistral Completion fine-tuning job."
        }
      },
      "required": [
        "type"
      ]
    },
    "ModelDeployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Publisher-specific name of the deployed model",
          "readOnly": true
        },
        "modelVersion": {
          "type": "string",
          "description": "Publisher-specific version of the deployed model",
          "readOnly": true
        },
        "modelPublisher": {
          "type": "string",
          "description": "Name of the deployed model's publisher",
          "readOnly": true
        },
        "capabilities": {
          "type": "object",
          "description": "Capabilities of deployed model",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku of the model deployment",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "Name of the connection the deployment comes from",
          "readOnly": true
        }
      },
      "required": [
        "modelName",
        "modelVersion",
        "modelPublisher",
        "capabilities",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Deployment"
        }
      ],
      "x-ms-discriminator-value": "ModelDeployment"
    },
    "MultiGraderParam": {
      "type": "object",
      "description": "A MultiGrader object combines the output of multiple graders to produce a single score.",
      "properties": {
        "calculate_output": {
          "type": "string",
          "description": "A formula to calculate the output based on grader results."
        },
        "graders": {
          "type": "object",
          "description": "Graders to be combined",
          "additionalProperties": {
            "$ref": "#/definitions/FineTuningGrader"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the grader."
        }
      },
      "required": [
        "calculate_output",
        "graders",
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "multi"
    },
    "NoAuthenticationCredentials": {
      "type": "object",
      "description": "Credentials that do not require authentication",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "PagedConnection": {
      "type": "object",
      "description": "Paged collection of Connection items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connection items on this page",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDatasetVersion": {
      "type": "object",
      "description": "Paged collection of DatasetVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DatasetVersion items on this page",
          "items": {
            "$ref": "#/definitions/DatasetVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDeployment": {
      "type": "object",
      "description": "Paged collection of Deployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluation": {
      "type": "object",
      "description": "Paged collection of Evaluation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Evaluation items on this page",
          "items": {
            "$ref": "#/definitions/Evaluation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of Index items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedRedTeam": {
      "type": "object",
      "description": "Paged collection of RedTeam items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RedTeam items on this page",
          "items": {
            "$ref": "#/definitions/RedTeam"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PendingUploadCredentialType": {
      "type": "string",
      "description": "The type of credential used to access the storage account.",
      "enum": [
        "SAS"
      ],
      "x-ms-enum": {
        "name": "PendingUploadCredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "sas",
            "value": "SAS",
            "description": "SAS credential type."
          }
        ]
      }
    },
    "PendingUploadRequest": {
      "type": "object",
      "description": "Represents a request for a pending upload.",
      "properties": {
        "pendingUploadId": {
          "type": "string",
          "description": "If PendingUploadId is not provided, a random GUID will be used."
        },
        "connectionName": {
          "type": "string",
          "description": "Azure Storage Account connection name to use for generating temporary SAS token"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type.",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "pendingUploadType"
      ]
    },
    "PendingUploadResponse": {
      "type": "object",
      "description": "Represents the response for a pending upload request",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Container-level read, write, list SAS."
        },
        "pendingUploadId": {
          "type": "string",
          "description": "ID for this upload request."
        },
        "version": {
          "type": "string",
          "description": "Version of asset to be created if user did not specify version when initially creating upload"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "blobReference",
        "pendingUploadId",
        "pendingUploadType"
      ]
    },
    "PendingUploadType": {
      "type": "string",
      "description": "The type of pending upload.",
      "enum": [
        "None",
        "BlobReference"
      ],
      "x-ms-enum": {
        "name": "PendingUploadType",
        "modelAsString": true,
        "values": [
          {
            "name": "none",
            "value": "None",
            "description": "No pending upload."
          },
          {
            "name": "BlobReference",
            "value": "BlobReference",
            "description": "Blob Reference is the only supported type."
          }
        ]
      }
    },
    "PythonGraderParam": {
      "type": "object",
      "description": "A PythonGrader object that runs a python script on the input.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "source": {
          "type": "string",
          "description": "The source code of the python script."
        },
        "image_tag": {
          "type": "string",
          "description": "The image tag to use for the python script."
        }
      },
      "required": [
        "name",
        "source"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "python"
    },
    "RedTeam": {
      "type": "object",
      "description": "Red team details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the red team run.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "displayName": {
          "type": "string",
          "description": "Name of the red-team run."
        },
        "numTurns": {
          "type": "integer",
          "format": "int32",
          "description": "Number of simulation rounds."
        },
        "attackStrategies": {
          "type": "array",
          "description": "List of attack strategies or nested lists of attack strategies.",
          "items": {
            "$ref": "#/definitions/AttackStrategy"
          }
        },
        "simulationOnly": {
          "type": "boolean",
          "description": "Simulation-only or Simulation + Evaluation. Default false, if true the scan outputs conversation not evaluation result.",
          "default": false
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to generate attack objectives for.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        },
        "applicationScenario": {
          "type": "string",
          "description": "Application scenario for the red team operation, to generate scenario specific attacks."
        },
        "tags": {
          "type": "object",
          "description": "Red team's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Red team's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the red-team. It is set by service and is read-only.",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/TargetConfig",
          "description": "Target configuration for the red-team run."
        }
      },
      "required": [
        "id",
        "target"
      ]
    },
    "ReinforcementHyperparametersParam": {
      "type": "object",
      "description": "Configuration for the Reinforcement fine-tuning method.",
      "properties": {
        "batch_size": {
          "type": "integer",
          "format": "int32",
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance."
        },
        "compute_multiplier": {
          "type": "number",
          "format": "double",
          "description": "Multiplier on amount of compute used for exploring search space during training."
        },
        "eval_interval": {
          "type": "integer",
          "format": "int32",
          "description": "The number of training steps between evaluation runs."
        },
        "eval_samples": {
          "type": "integer",
          "format": "int32",
          "description": "Number of evaluation samples to generate per training step."
        },
        "learning_rate_multiplier": {
          "type": "number",
          "format": "double",
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting."
        },
        "n_epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        },
        "reasoning_effort": {
          "type": "string",
          "description": "Level of reasoning effort."
        }
      }
    },
    "ReinforcementMethodParam": {
      "type": "object",
      "description": "Configuration for the Reinforcement fine-tuning method.",
      "properties": {
        "grader": {
          "$ref": "#/definitions/FineTuningGrader",
          "description": "The grader used for the fine-tuning job."
        },
        "hyperparameters": {
          "$ref": "#/definitions/ReinforcementHyperparametersParam",
          "description": "The hyperparameters used for the reinforcement fine-tuning job."
        },
        "response_format": {
          "$ref": "#/definitions/ReinforcementResponseFormat",
          "description": "Gets the response format for the Reinforcement fine-tuning job."
        }
      },
      "required": [
        "grader"
      ]
    },
    "ReinforcementResponseFormat": {
      "type": "object",
      "description": "Gets the response format for the Reinforcement fine-tuning method.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Response format request - Currently only JSON schema is supported"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ReinforcementResponseJsonSchema": {
      "type": "object",
      "description": "Gets the response format for the Reinforcement fine-tuning method.",
      "properties": {
        "json_schema": {
          "type": "object",
          "description": "JSON schema response for RFT",
          "additionalProperties": {}
        }
      },
      "required": [
        "json_schema"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReinforcementResponseFormat"
        }
      ],
      "x-ms-discriminator-value": "json_schema"
    },
    "ResponseInputTextParam": {
      "type": "object",
      "description": "Inputs to the model - can contain template strings.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the input item. Always `input_text`",
          "enum": [
            "input_text"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "text": {
          "type": "string",
          "description": "The text input to the model."
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "RiskCategory": {
      "type": "string",
      "description": "Risk category for the attack objective.",
      "enum": [
        "HateUnfairness",
        "Violence",
        "Sexual",
        "SelfHarm"
      ],
      "x-ms-enum": {
        "name": "RiskCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "HateUnfairness",
            "value": "HateUnfairness",
            "description": "Represents content related to hate or unfairness."
          },
          {
            "name": "Violence",
            "value": "Violence",
            "description": "Represents content related to violence."
          },
          {
            "name": "Sexual",
            "value": "Sexual",
            "description": "Represents content of a sexual nature."
          },
          {
            "name": "SelfHarm",
            "value": "SelfHarm",
            "description": "Represents content related to self-harm."
          }
        ]
      }
    },
    "SASCredentials": {
      "type": "object",
      "description": "Shared Access Signature (SAS) credential definition",
      "properties": {
        "SAS": {
          "type": "string",
          "description": "SAS token",
          "readOnly": true,
          "x-ms-client-name": "sasToken"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SasCredential": {
      "type": "object",
      "description": "SAS Credential definition",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS uri",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of credential",
          "enum": [
            "SAS"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        }
      },
      "required": [
        "sasUri",
        "type"
      ]
    },
    "ScoreModelGraderParam": {
      "type": "object",
      "description": "A ScoreModelGrader object that uses a model to assign a score to the input.",
      "properties": {
        "input": {
          "type": "array",
          "description": "The input text. This may include template strings.",
          "items": {
            "$ref": "#/definitions/Input"
          }
        },
        "model": {
          "type": "string",
          "description": "The model to use for the evaluation."
        },
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "range": {
          "type": "array",
          "description": "The model to use for the evaluation.",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "sampling_params": {
          "$ref": "#/definitions/FineTuningJobGraderModelSamplingParam",
          "description": "The sampling parameters for the model."
        },
        "pass_threshold": {
          "type": "number",
          "format": "double",
          "description": "TBD"
        }
      },
      "required": [
        "input",
        "model",
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "score_model"
    },
    "Sku": {
      "type": "object",
      "description": "Sku information",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "Sku capacity"
        },
        "family": {
          "type": "string",
          "description": "Sku family"
        },
        "name": {
          "type": "string",
          "description": "Sku name"
        },
        "size": {
          "type": "string",
          "description": "Sku size"
        },
        "tier": {
          "type": "string",
          "description": "Sku tier"
        }
      },
      "required": [
        "capacity",
        "family",
        "name",
        "size",
        "tier"
      ]
    },
    "StringCheckGraderParam": {
      "type": "object",
      "description": "A StringCheckGrader object that performs a string comparison between input and reference using a specified operation.",
      "properties": {
        "input": {
          "type": "string",
          "description": "The input text. This may include template strings."
        },
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "operation": {
          "$ref": "#/definitions/FineTuningStringOperation",
          "description": "The string check operation to perform. One of eq, ne, like, or ilike."
        },
        "reference": {
          "type": "string",
          "description": "The reference text. This may include template strings."
        }
      },
      "required": [
        "input",
        "name",
        "operation",
        "reference"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "string_check"
    },
    "SupervisedHyperparametersParam": {
      "type": "object",
      "description": "The hyper parameter settings used in Supervised Fine-Tuning job.",
      "properties": {
        "batch_size": {
          "type": "integer",
          "format": "int32",
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance."
        },
        "learning_rate_multiplier": {
          "type": "integer",
          "format": "int32",
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting."
        },
        "n_epochs": {
          "type": "integer",
          "format": "int32",
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset."
        }
      }
    },
    "SupervisedMethodParam": {
      "type": "object",
      "description": "Supervised Fine-Tuning method.",
      "properties": {
        "hyperparameters": {
          "$ref": "#/definitions/SupervisedHyperparametersParam",
          "description": "The hyperparameters used for the SFT fine-tuning job."
        }
      }
    },
    "SystemMessage": {
      "type": "object",
      "description": "A message authored by the system to guide model behavior.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Plain text instructions provided by the system to steer model behavior."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "TargetConfig": {
      "type": "object",
      "description": "Abstract class for target configuration.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the model configuration."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TextSimilarityGraderParam": {
      "type": "object",
      "description": "ScoreModelGrader uses a model to assign a score to the input.",
      "properties": {
        "evaluation_metric": {
          "$ref": "#/definitions/FineTuningEvaluationMetric",
          "description": "The evaluation metric to use"
        },
        "input": {
          "type": "string",
          "description": "The text being graded."
        },
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "reference": {
          "type": "string",
          "description": "The text being graded against."
        },
        "pass_threshold": {
          "type": "number",
          "format": "double",
          "description": "TBD"
        }
      },
      "required": [
        "evaluation_metric",
        "input",
        "name",
        "reference"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningGrader"
        }
      ],
      "x-ms-discriminator-value": "text_similarity"
    },
    "TrainingType": {
      "type": "string",
      "description": "SKU available for training",
      "enum": [
        "Standard",
        "GlobalStandard",
        "DeveloperTier"
      ],
      "x-ms-enum": {
        "name": "TrainingType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard training job uses dedicated training capacity in a region"
          },
          {
            "name": "GlobalStandard",
            "value": "GlobalStandard",
            "description": "GlobalStandard training job uses dedicated capacity from a different region"
          },
          {
            "name": "DeveloperTier",
            "value": "DeveloperTier",
            "description": "DeveloperTier training job uses inference capacity when available"
          }
        ]
      }
    },
    "UserMessage": {
      "type": "object",
      "description": "A message authored by the end user as input to the model.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Input content or question provided by the end user."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "modelResponseGenerationTarget": {
      "type": "object",
      "description": "Evaluation target for generating responses using a given model and dataset.",
      "properties": {
        "baseMessages": {
          "type": "array",
          "description": "A list of messages comprising the conversation so far.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/modelDeploymentName'."
        },
        "modelParams": {
          "type": "object",
          "description": "Optional parameters passed to the model for evaluation.",
          "additionalProperties": {}
        }
      },
      "required": [
        "baseMessages",
        "modelDeploymentName",
        "modelParams"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationTarget"
        }
      ],
      "x-ms-discriminator-value": "modelResponseGeneration"
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
