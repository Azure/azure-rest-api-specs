{
  "swagger": "2.0",
  "info": {
    "title": "Azure Network Fabric Management Service API",
    "version": "2024-06-15-preview",
    "description": "Self service experience for Azure Network Fabric API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AccessControlLists"
    },
    {
      "name": "InternetGatewayRules"
    },
    {
      "name": "InternetGateways"
    },
    {
      "name": "IpCommunities"
    },
    {
      "name": "IpExtendedCommunities"
    },
    {
      "name": "IpPrefixes"
    },
    {
      "name": "L2IsolationDomains"
    },
    {
      "name": "L3IsolationDomains"
    },
    {
      "name": "InternalNetworks"
    },
    {
      "name": "ExternalNetworks"
    },
    {
      "name": "NeighborGroups"
    },
    {
      "name": "NetworkDeviceSkus"
    },
    {
      "name": "NetworkDevices"
    },
    {
      "name": "NetworkInterfaces"
    },
    {
      "name": "NetworkFabricControllers"
    },
    {
      "name": "NetworkFabricSkus"
    },
    {
      "name": "NetworkFabrics"
    },
    {
      "name": "NetworkToNetworkInterconnects"
    },
    {
      "name": "NetworkPacketBrokers"
    },
    {
      "name": "NetworkRacks"
    },
    {
      "name": "NetworkTapRules"
    },
    {
      "name": "NetworkTaps"
    },
    {
      "name": "RoutePolicies"
    },
    {
      "name": "NetworkMonitors"
    }
  ],
  "paths": {
    "/providers/Microsoft.ManagedNetworkFabric/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/accessControlLists": {
      "get": {
        "operationId": "AccessControlLists_ListBySubscription",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements AccessControlLists list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessControlListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules": {
      "get": {
        "operationId": "InternetGatewayRules_ListBySubscription",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "List all Internet Gateway rules in the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGateways": {
      "get": {
        "operationId": "InternetGateways_ListBySubscription",
        "tags": [
          "InternetGateways"
        ],
        "description": "Displays Internet Gateways list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipCommunities": {
      "get": {
        "operationId": "IpCommunities_ListBySubscription",
        "tags": [
          "IpCommunities"
        ],
        "description": "Implements IP Communities list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpCommunityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities": {
      "get": {
        "operationId": "IpExtendedCommunities_ListBySubscription",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "Implements IpExtendedCommunities list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes": {
      "get": {
        "operationId": "IpPrefixes_ListBySubscription",
        "tags": [
          "IpPrefixes"
        ],
        "description": "Implements IpPrefixes list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpPrefixListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains": {
      "get": {
        "operationId": "L2IsolationDomains_ListBySubscription",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Displays L2IsolationDomains list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains": {
      "get": {
        "operationId": "L3IsolationDomains_ListBySubscription",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Displays L3IsolationDomains list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/neighborGroups": {
      "get": {
        "operationId": "NeighborGroups_ListBySubscription",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Displays NeighborGroups list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NeighborGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus": {
      "get": {
        "operationId": "NetworkDeviceSkus_ListBySubscription",
        "tags": [
          "NetworkDeviceSkus"
        ],
        "description": "List Network Device SKUs for the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSkuListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDeviceSkus_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDeviceSkus_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus/{networkDeviceSkuName}": {
      "get": {
        "operationId": "NetworkDeviceSkus_Get",
        "tags": [
          "NetworkDeviceSkus"
        ],
        "description": "Get a Network Device SKU details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "networkDeviceSkuName",
            "in": "path",
            "description": "Name of the Network Device SKU.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDeviceSkus_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDeviceSkus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDevices": {
      "get": {
        "operationId": "NetworkDevices_ListBySubscription",
        "tags": [
          "NetworkDevices"
        ],
        "description": "List all the Network Device resources in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListBySubscription",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Lists all the NetworkFabricControllers by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus": {
      "get": {
        "operationId": "NetworkFabricSkus_ListBySubscription",
        "tags": [
          "NetworkFabricSkus"
        ],
        "description": "Implements Network Fabric SKUs list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkuListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricSkus_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricSkus_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus/{networkFabricSkuName}": {
      "get": {
        "operationId": "NetworkFabricSkus_Get",
        "tags": [
          "NetworkFabricSkus"
        ],
        "description": "Implements Network Fabric SKU GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "networkFabricSkuName",
            "in": "path",
            "description": "Name of the Network Fabric SKU.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricSkus_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricSkus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabrics": {
      "get": {
        "operationId": "NetworkFabrics_ListBySubscription",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "List all the Network Fabric resources in the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkMonitors": {
      "get": {
        "operationId": "NetworkMonitors_ListBySubscription",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Displays NetworkMonitors list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_ListBySubscription": {
            "$ref": "./examples/NetworkMonitors_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers": {
      "get": {
        "operationId": "NetworkPacketBrokers_ListBySubscription",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "Displays Network Packet Brokers list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkRacks": {
      "get": {
        "operationId": "NetworkRacks_ListBySubscription",
        "tags": [
          "NetworkRacks"
        ],
        "description": "List all Network Rack resources in the given subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkRackListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTapRules": {
      "get": {
        "operationId": "NetworkTapRules_ListBySubscription",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "List all the Network Tap Rule resources in the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTaps": {
      "get": {
        "operationId": "NetworkTaps_ListBySubscription",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Displays Network Taps list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/routePolicies": {
      "get": {
        "operationId": "RoutePolicies_ListBySubscription",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Implements RoutePolicies list by subscription GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoutePolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists": {
      "get": {
        "operationId": "AccessControlLists_ListByResourceGroup",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements AccessControlLists list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessControlListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}": {
      "get": {
        "operationId": "AccessControlLists_Get",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements Access Control List GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Get_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AccessControlLists_Create",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements Access Control List PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AccessControlList' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "201": {
            "description": "Resource 'AccessControlList' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Create_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AccessControlLists_Update",
        "tags": [
          "AccessControlLists"
        ],
        "description": "API to update certain properties of the Access Control List resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Access Control List properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlListPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Update_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AccessControlLists_Delete",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements Access Control List DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Delete_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/resync": {
      "post": {
        "operationId": "AccessControlLists_Resync",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Resync_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Resync.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/updateAdministrativeState": {
      "post": {
        "operationId": "AccessControlLists_UpdateAdministrativeState",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/validateConfiguration": {
      "post": {
        "operationId": "AccessControlLists_ValidateConfiguration",
        "tags": [
          "AccessControlLists"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accessControlListName",
            "in": "path",
            "description": "Name of the Access Control List.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules": {
      "get": {
        "operationId": "InternetGatewayRules_ListByResourceGroup",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "Implements Internet Gateway Rules list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules/{internetGatewayRuleName}": {
      "get": {
        "operationId": "InternetGatewayRules_Get",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "Gets an Internet Gateway Rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayRuleName",
            "in": "path",
            "description": "Name of the Internet Gateway rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "InternetGatewayRules_Create",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "Creates an Internet Gateway rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayRuleName",
            "in": "path",
            "description": "Name of the Internet Gateway rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InternetGatewayRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "201": {
            "description": "Resource 'InternetGatewayRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InternetGatewayRules_Update",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "API to update certain properties of the Internet Gateway Rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayRuleName",
            "in": "path",
            "description": "Name of the Internet Gateway rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Internet Gateway Rule properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternetGatewayRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InternetGatewayRules_Delete",
        "tags": [
          "InternetGatewayRules"
        ],
        "description": "Implements Internet Gateway Rules DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayRuleName",
            "in": "path",
            "description": "Name of the Internet Gateway rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways": {
      "get": {
        "operationId": "InternetGateways_ListByResourceGroup",
        "tags": [
          "InternetGateways"
        ],
        "description": "Displays Internet Gateways list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways/{internetGatewayName}": {
      "get": {
        "operationId": "InternetGateways_Get",
        "tags": [
          "InternetGateways"
        ],
        "description": "Implements Gateway GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayName",
            "in": "path",
            "description": "Name of the Internet Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Get.json"
          }
        }
      },
      "put": {
        "operationId": "InternetGateways_Create",
        "tags": [
          "InternetGateways"
        ],
        "description": "Creates a Network Fabric Service Internet Gateway resource instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayName",
            "in": "path",
            "description": "Name of the Internet Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InternetGateway' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "201": {
            "description": "Resource 'InternetGateway' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InternetGateways_Update",
        "tags": [
          "InternetGateways"
        ],
        "description": "Execute patch on Network Fabric Service Internet Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayName",
            "in": "path",
            "description": "Name of the Internet Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "API to update certain properties of the InternetGateway resource..",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternetGatewayPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InternetGateways_Delete",
        "tags": [
          "InternetGateways"
        ],
        "description": "Execute a delete on Network Fabric Service Internet Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "internetGatewayName",
            "in": "path",
            "description": "Name of the Internet Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities": {
      "get": {
        "operationId": "IpCommunities_ListByResourceGroup",
        "tags": [
          "IpCommunities"
        ],
        "description": "Implements IP Communities list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpCommunityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities/{ipCommunityName}": {
      "get": {
        "operationId": "IpCommunities_Get",
        "tags": [
          "IpCommunities"
        ],
        "description": "Implements an IP Community GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipCommunityName",
            "in": "path",
            "description": "Name of the IP Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IpCommunities_Create",
        "tags": [
          "IpCommunities"
        ],
        "description": "Implements an IP Community PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipCommunityName",
            "in": "path",
            "description": "Name of the IP Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IpCommunity' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "201": {
            "description": "Resource 'IpCommunity' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IpCommunities_Update",
        "tags": [
          "IpCommunities"
        ],
        "description": "API to update certain properties of the IP Community resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipCommunityName",
            "in": "path",
            "description": "Name of the IP Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "IP Community properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpCommunityPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IpCommunities_Delete",
        "tags": [
          "IpCommunities"
        ],
        "description": "Implements IP Community DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipCommunityName",
            "in": "path",
            "description": "Name of the IP Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities": {
      "get": {
        "operationId": "IpExtendedCommunities_ListByResourceGroup",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "Implements IpExtendedCommunities list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities/{ipExtendedCommunityName}": {
      "get": {
        "operationId": "IpExtendedCommunities_Get",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "Implements IP Extended Community GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipExtendedCommunityName",
            "in": "path",
            "description": "Name of the IP Extended Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IpExtendedCommunities_Create",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "Implements IP Extended Community PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipExtendedCommunityName",
            "in": "path",
            "description": "Name of the IP Extended Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IpExtendedCommunity' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "201": {
            "description": "Resource 'IpExtendedCommunity' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IpExtendedCommunities_Update",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "API to update certain properties of the IP Extended Community resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipExtendedCommunityName",
            "in": "path",
            "description": "Name of the IP Extended Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "IP Extended Community properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IpExtendedCommunities_Delete",
        "tags": [
          "IpExtendedCommunities"
        ],
        "description": "Implements IP Extended Community DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipExtendedCommunityName",
            "in": "path",
            "description": "Name of the IP Extended Community.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes": {
      "get": {
        "operationId": "IpPrefixes_ListByResourceGroup",
        "tags": [
          "IpPrefixes"
        ],
        "description": "Implements IpPrefixes list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpPrefixListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes/{ipPrefixName}": {
      "get": {
        "operationId": "IpPrefixes_Get",
        "tags": [
          "IpPrefixes"
        ],
        "description": "Implements IP Prefix GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipPrefixName",
            "in": "path",
            "description": "Name of the IP Prefix.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IpPrefixes_Create",
        "tags": [
          "IpPrefixes"
        ],
        "description": "Implements IP Prefix PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipPrefixName",
            "in": "path",
            "description": "Name of the IP Prefix.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IpPrefix' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "201": {
            "description": "Resource 'IpPrefix' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IpPrefixes_Update",
        "tags": [
          "IpPrefixes"
        ],
        "description": "API to update certain properties of the IP Prefix resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipPrefixName",
            "in": "path",
            "description": "Name of the IP Prefix.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "IP Prefix properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpPrefixPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IpPrefixes_Delete",
        "tags": [
          "IpPrefixes"
        ],
        "description": "Implements IP Prefix DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ipPrefixName",
            "in": "path",
            "description": "Name of the IP Prefix.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains": {
      "get": {
        "operationId": "L2IsolationDomains_ListByResourceGroup",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Displays L2IsolationDomains list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}": {
      "get": {
        "operationId": "L2IsolationDomains_Get",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Implements L2 Isolation Domain GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_Get_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "L2IsolationDomains_Create",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Creates layer 2 network connectivity between compute nodes within a rack and across racks.The configuration is applied on the devices only after the isolation domain is enabled.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'L2IsolationDomain' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "201": {
            "description": "Resource 'L2IsolationDomain' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_Create_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "L2IsolationDomains_Update",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "API to update certain properties of the L2 Isolation Domain resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "API to update certain properties of the L2 Isolation Domain resource..",
            "required": true,
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_Update_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "L2IsolationDomains_Delete",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Deletes layer 2 connectivity between compute nodes by managed by named L2 Isolation name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_Delete_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/commitConfiguration": {
      "post": {
        "operationId": "L2IsolationDomains_CommitConfiguration",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Commits the configuration of the given resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_CommitConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/updateAdministrativeState": {
      "post": {
        "operationId": "L2IsolationDomains_UpdateAdministrativeState",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Enables isolation domain across the fabric or on specified racks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/validateConfiguration": {
      "post": {
        "operationId": "L2IsolationDomains_ValidateConfiguration",
        "tags": [
          "L2IsolationDomains"
        ],
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l2IsolationDomainName",
            "in": "path",
            "description": "Name of the L2 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains": {
      "get": {
        "operationId": "L3IsolationDomains_ListByResourceGroup",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Displays L3IsolationDomains list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}": {
      "get": {
        "operationId": "L3IsolationDomains_Get",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Retrieves details of this L3 Isolation Domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_Get_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "L3IsolationDomains_Create",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Create isolation domain resources for layer 3 connectivity between compute nodes and for communication with external services .This configuration is applied on the devices only after the creation of networks is completed and isolation domain is enabled.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'L3IsolationDomain' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "201": {
            "description": "Resource 'L3IsolationDomain' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_Create_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "L3IsolationDomains_Update",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "API to update certain properties of the L3 Isolation Domain resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "API to update certain properties of the L3 Isolation Domain resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_Update_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "L3IsolationDomains_Delete",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Deletes layer 3 connectivity between compute nodes by managed by named L3 Isolation name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_Delete_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/commitConfiguration": {
      "post": {
        "operationId": "L3IsolationDomains_CommitConfiguration",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Commits the configuration of the given resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_CommitConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks": {
      "get": {
        "operationId": "ExternalNetworks_ListByL3IsolationDomain",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "Implements External Networks list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalNetworkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_ListByL3IsolationDomain.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}": {
      "get": {
        "operationId": "ExternalNetworks_Get",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "Implements ExternalNetworks GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_Get_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ExternalNetworks_Create",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "Creates ExternalNetwork PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ExternalNetwork' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "201": {
            "description": "Resource 'ExternalNetwork' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_Create_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ExternalNetworks_Update",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "API to update certain properties of the ExternalNetworks resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "ExternalNetwork properties to update. Only annotations are supported.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalNetworkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_Update_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ExternalNetworks_Delete",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "Implements ExternalNetworks DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateAdministrativeState": {
      "post": {
        "operationId": "ExternalNetworks_UpdateAdministrativeState",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "Executes update operation to enable or disable administrative State for externalNetwork.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateBfdAdministrativeState": {
      "post": {
        "operationId": "ExternalNetworks_UpdateBfdAdministrativeState",
        "tags": [
          "ExternalNetworks"
        ],
        "description": "BFD administrative state for either static or bgp for internalNetwork.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "externalNetworkName",
            "in": "path",
            "description": "Name of the External Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalNetworkBfdAdministrativeStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExternalNetworkBfdAdministrativeStateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_UpdateBfdAdministrativeState": {
            "$ref": "./examples/ExternalNetworks_UpdateBfdAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks": {
      "get": {
        "operationId": "InternalNetworks_ListByL3IsolationDomain",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Displays InternalNetworks list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalNetworkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_ListByL3IsolationDomain.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}": {
      "get": {
        "operationId": "InternalNetworks_Get",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Gets a InternalNetworks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "InternalNetworks_Create",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Creates InternalNetwork PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InternalNetwork' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "201": {
            "description": "Resource 'InternalNetwork' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InternalNetworks_Update",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Updates a InternalNetworks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "InternalNetwork properties to update. Only annotations are supported.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalNetworkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InternalNetworks_Delete",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Implements InternalNetworks DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateAdministrativeState": {
      "post": {
        "operationId": "InternalNetworks_UpdateAdministrativeState",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Update Administrative state of  InternalNetworks on resources referred by their resource ids.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateBfdAdministrativeState": {
      "post": {
        "operationId": "InternalNetworks_UpdateBfdAdministrativeState",
        "tags": [
          "InternalNetworks"
        ],
        "description": "BFD administrative state for either static or bgp for internalNetwork.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalNetworkBfdAdministrativeStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalNetworkBfdAdministrativeStateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateBfdAdministrativeState": {
            "$ref": "./examples/InternalNetworks_UpdateBfdAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateBgpAdministrativeState": {
      "post": {
        "operationId": "InternalNetworks_UpdateBgpAdministrativeState",
        "tags": [
          "InternalNetworks"
        ],
        "description": "Update BGP state for internalNetwork. Allowed only on edge devices.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "internalNetworkName",
            "in": "path",
            "description": "Name of the Internal Network.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalNetworkBgpAdministrativeStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InternalNetworkBgpAdministrativeStateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateBgpAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_UpdateBgpAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/updateAdministrativeState": {
      "post": {
        "operationId": "L3IsolationDomains_UpdateAdministrativeState",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Enables racks for this Isolation Domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/validateConfiguration": {
      "post": {
        "operationId": "L3IsolationDomains_ValidateConfiguration",
        "tags": [
          "L3IsolationDomains"
        ],
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "l3IsolationDomainName",
            "in": "path",
            "description": "Name of the L3 Isolation Domain.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups": {
      "get": {
        "operationId": "NeighborGroups_ListByResourceGroup",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Displays NeighborGroups list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NeighborGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}": {
      "get": {
        "operationId": "NeighborGroups_Get",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Gets the Neighbor Group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "neighborGroupName",
            "in": "path",
            "description": "Name of the Neighbor Group.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_Get_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NeighborGroups_Create",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Implements the Neighbor Group PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "neighborGroupName",
            "in": "path",
            "description": "Name of the Neighbor Group.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NeighborGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "201": {
            "description": "Resource 'NeighborGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_Create_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NeighborGroups_Update",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Updates the Neighbor Group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "neighborGroupName",
            "in": "path",
            "description": "Name of the Neighbor Group.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Neighbor Group properties to update. Only annotations are supported.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NeighborGroupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_Update_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NeighborGroups_Delete",
        "tags": [
          "NeighborGroups"
        ],
        "description": "Implements Neighbor Group DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "neighborGroupName",
            "in": "path",
            "description": "Name of the Neighbor Group.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices": {
      "get": {
        "operationId": "NetworkDevices_ListByResourceGroup",
        "tags": [
          "NetworkDevices"
        ],
        "description": "List all the Network Device resources in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}": {
      "get": {
        "operationId": "NetworkDevices_Get",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Gets the Network Device resource details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkDevices_Create",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Create a Network Device resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkDevice' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "201": {
            "description": "Resource 'NetworkDevice' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkDevices_Update",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Update certain properties of the Network Device resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Device properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkDevicePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkDevices_Delete",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Delete the Network Device resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces": {
      "get": {
        "operationId": "NetworkInterfaces_ListByNetworkDevice",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "List all the Network Interface resources in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_ListByNetworkDevice_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_ListByNetworkDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}": {
      "get": {
        "operationId": "NetworkInterfaces_Get",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Get the Network Interface resource details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "description": "Name of the Network Interface.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkInterfaces_Create",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Create a Network Interface resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "description": "Name of the Network Interface.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkInterface' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "201": {
            "description": "Resource 'NetworkInterface' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkInterfaces_Update",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Update certain properties of the Network Interface resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "description": "Name of the Network Interface.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "NetworkInterface properties to update. Only tags are supported.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterfacePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkInterfaces_Delete",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Delete the Network Interface resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "description": "Name of the Network Interface.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkInterfaces_UpdateAdministrativeState",
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Update the admin state of the Network Interface.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "description": "Name of the Network Interface.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/reboot": {
      "post": {
        "operationId": "NetworkDevices_Reboot",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Reboot the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Reboot_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Reboot.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/refreshConfiguration": {
      "post": {
        "operationId": "NetworkDevices_RefreshConfiguration",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Refreshes the configuration the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_RefreshConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_RefreshConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/runRoCommand": {
      "post": {
        "operationId": "NetworkDevices_RunRoCommand",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Run the RO Command on the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request the command.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRoCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceROCommandsOperationStatusResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_RunRoCommand_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_RunRoCommand.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/runRwCommand": {
      "post": {
        "operationId": "NetworkDevices_RunRwCommand",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Run the RW Command on the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request the command.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRwCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceRWCommands"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_RunRwCommand_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_RunRwCommand.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkDevices_UpdateAdministrativeState",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Updates the Administrative state of the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/upgrade": {
      "post": {
        "operationId": "NetworkDevices_Upgrade",
        "tags": [
          "NetworkDevices"
        ],
        "description": "Upgrades the version of the Network Device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkDeviceName",
            "in": "path",
            "description": "Name of the Network Device.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Upgrade_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Upgrade.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListByResourceGroup",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Lists all the NetworkFabricControllers thats available in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}": {
      "get": {
        "operationId": "NetworkFabricControllers_Get",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Shows the provisioning status of Network Fabric Controller.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricControllerName",
            "in": "path",
            "description": "Name of the Network Fabric Controller.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkFabricControllers_Create",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Creates a Network Fabric Controller.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricControllerName",
            "in": "path",
            "description": "Name of the Network Fabric Controller.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkFabricController' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "201": {
            "description": "Resource 'NetworkFabricController' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkFabricControllers_Update",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Updates are currently not supported for the Network Fabric Controller resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricControllerName",
            "in": "path",
            "description": "Name of the Network Fabric Controller.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Fabric Controller properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkFabricControllers_Delete",
        "tags": [
          "NetworkFabricControllers"
        ],
        "description": "Deletes the Network Fabric Controller resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricControllerName",
            "in": "path",
            "description": "Name of the Network Fabric Controller.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricControllers_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics": {
      "get": {
        "operationId": "NetworkFabrics_ListByResourceGroup",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "List all the Network Fabric resources in the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}": {
      "get": {
        "operationId": "NetworkFabrics_Get",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Get Network Fabric resource details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkFabrics_Create",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Create Network Fabric resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkFabric' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "201": {
            "description": "Resource 'NetworkFabric' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkFabrics_Update",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Update certain properties of the Network Fabric resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Fabric properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFabricPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkFabrics_Delete",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Delete Network Fabric resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/armConfigurationDiff": {
      "post": {
        "operationId": "NetworkFabrics_ArmConfigurationDiff",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Post action: Triggers diff of NetworkFabric ARM Configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArmConfigurationDiffResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_ArmConfigurationDiff_MaximumSet": {
            "$ref": "./examples/NetworkFabrics_ArmConfigurationDiff.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/commitBatchStatus": {
      "post": {
        "operationId": "NetworkFabrics_CommitBatchStatus",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Post action: Returns a status of commit batch operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommitBatchStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommitBatchStatusResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_CommitBatchStatus_MaximumSet": {
            "$ref": "./examples/NetworkFabrics_CommitBatchStatus.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/commitConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_CommitConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Atomic update of the given Network Fabric instance. Sync update of NFA resources at Fabric level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_CommitConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/deprovision": {
      "post": {
        "operationId": "NetworkFabrics_Deprovision",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Deprovisions the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Deprovision_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Deprovision.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/discardCommitBatch": {
      "post": {
        "operationId": "NetworkFabrics_DiscardCommitBatch",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Post action: Discards a Batch operation in progress.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscardCommitBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscardCommitBatchResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_DiscardCommitBatch": {
            "$ref": "./examples/NetworkFabrics_DiscardCommitBatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/getTopology": {
      "post": {
        "operationId": "NetworkFabrics_GetTopology",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Gets Topology of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_GetTopology_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_GetTopology.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/lockFabric": {
      "post": {
        "operationId": "NetworkFabrics_LockFabric",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Post action: Triggers network fabric lock operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFabricLockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_LockFabric_MaximumSet": {
            "$ref": "./examples/NetworkFabrics_LockFabric.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects": {
      "get": {
        "operationId": "NetworkToNetworkInterconnects_ListByNetworkFabric",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Implements Network To Network Interconnects list by Network Fabric GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnectListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_ListByNetworkFabric_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_ListByNetworkFabric.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}": {
      "get": {
        "operationId": "NetworkToNetworkInterconnects_Get",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Implements NetworkToNetworkInterconnects GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkToNetworkInterconnects_Create",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Configuration used to setup CE-PE connectivity PUT Method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkToNetworkInterconnect' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "201": {
            "description": "Resource 'NetworkToNetworkInterconnect' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkToNetworkInterconnects_Update",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Update certain properties of the Network To NetworkInterconnects resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network to Network Interconnect properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnectPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkToNetworkInterconnects_Delete",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Implements NetworkToNetworkInterconnects DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkToNetworkInterconnects_UpdateAdministrativeState",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Updates the Admin State.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateBfdAdministrativeState": {
      "post": {
        "operationId": "NetworkToNetworkInterconnects_UpdateBfdAdministrativeState",
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "description": "Updates the Admin State.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "networkToNetworkInterconnectName",
            "in": "path",
            "description": "Name of the Network to Network Interconnect.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NniBfdAdministrativeStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NniBfdAdministrativeStateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_UpdateBfdAdministrativeState": {
            "$ref": "./examples/NetworkToNetworkInterconnects_UpdateBfdAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/provision": {
      "post": {
        "operationId": "NetworkFabrics_Provision",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Provisions the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Provision_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Provision.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/refreshConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_RefreshConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Refreshes the configuration of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_RefreshConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_RefreshConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateInfraManagementBfdConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_UpdateInfraManagementBfdConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Updates the Infra Management BFD Configuration of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_UpdateInfraManagementBfdConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_UpdateInfraManagementBfdConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateWorkloadManagementBfdConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_UpdateWorkloadManagementBfdConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Updates the Workload Management BFD Configuration of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_UpdateWorkloadManagementBfdConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_UpdateWorkloadManagementBfdConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/upgrade": {
      "post": {
        "operationId": "NetworkFabrics_Upgrade",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Upgrades the version of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Network Fabric properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpgradeNetworkFabricProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_Upgrade_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Upgrade.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/validateConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_ValidateConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Validates the configuration of the underlying resources in the given Network Fabric instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Validate configuration properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/viewDeviceConfiguration": {
      "post": {
        "operationId": "NetworkFabrics_ViewDeviceConfiguration",
        "tags": [
          "NetworkFabrics"
        ],
        "description": "Post action: Triggers view of network fabric configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFabricName",
            "in": "path",
            "description": "Name of the Network Fabric.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ViewDeviceConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabrics_ViewDeviceConfiguration_MaximumSet": {
            "$ref": "./examples/NetworkFabrics_ViewDeviceConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors": {
      "get": {
        "operationId": "NetworkMonitors_ListByResourceGroup",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Displays NetworkMonitors list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_ListByResourceGroup": {
            "$ref": "./examples/NetworkMonitors_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}": {
      "get": {
        "operationId": "NetworkMonitors_Get",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Implements NetworkMonitor GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkMonitorName",
            "in": "path",
            "description": "Name of the Network Monitor.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_Get_MaximumSet": {
            "$ref": "./examples/NetworkMonitors_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkMonitors_Create",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Creates NetworkMonitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkMonitorName",
            "in": "path",
            "description": "Name of the Network Monitor.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkMonitor' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkMonitor"
            }
          },
          "201": {
            "description": "Resource 'NetworkMonitor' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkMonitor"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_Create": {
            "$ref": "./examples/NetworkMonitors_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkMonitors_Update",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "API to update certain properties of the NetworkMonitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkMonitorName",
            "in": "path",
            "description": "Name of the Network Monitor.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkMonitorPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkMonitor"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_Update": {
            "$ref": "./examples/NetworkMonitors_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkMonitors_Delete",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Deletes layer 2 connectivity between compute nodes by managed by named NetworkMonitor name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkMonitorName",
            "in": "path",
            "description": "Name of the Network Monitor.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_Delete_MaximumSet": {
            "$ref": "./examples/NetworkMonitors_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkMonitors/{networkMonitorName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkMonitors_UpdateAdministrativeState",
        "tags": [
          "NetworkMonitors"
        ],
        "description": "Enables isolation domain across the fabric or on specified racks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkMonitorName",
            "in": "path",
            "description": "Name of the Network Monitor.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkMonitors_UpdateAdministrativeState": {
            "$ref": "./examples/NetworkMonitors_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers": {
      "get": {
        "operationId": "NetworkPacketBrokers_ListByResourceGroup",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "Displays NetworkPacketBrokers list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers/{networkPacketBrokerName}": {
      "get": {
        "operationId": "NetworkPacketBrokers_Get",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "Retrieves details of this Network Packet Broker.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkPacketBrokerName",
            "in": "path",
            "description": "Name of the Network Packet Broker.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkPacketBrokers_Create",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "Creates a Network Packet Broker.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkPacketBrokerName",
            "in": "path",
            "description": "Name of the Network Packet Broker.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkPacketBroker' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "201": {
            "description": "Resource 'NetworkPacketBroker' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkPacketBrokers_Update",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "API to update certain properties of the Network Packet Broker resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkPacketBrokerName",
            "in": "path",
            "description": "Name of the Network Packet Broker.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Packet Broker properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkPacketBrokers_Delete",
        "tags": [
          "NetworkPacketBrokers"
        ],
        "description": "Deletes Network Packet Broker.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkPacketBrokerName",
            "in": "path",
            "description": "Name of the Network Packet Broker.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks": {
      "get": {
        "operationId": "NetworkRacks_ListByResourceGroup",
        "tags": [
          "NetworkRacks"
        ],
        "description": "List all Network Rack resources in the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkRackListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks/{networkRackName}": {
      "get": {
        "operationId": "NetworkRacks_Get",
        "tags": [
          "NetworkRacks"
        ],
        "description": "Get Network Rack resource details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkRackName",
            "in": "path",
            "description": "Name of the Network Rack.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkRacks_Create",
        "tags": [
          "NetworkRacks"
        ],
        "description": "Create Network Rack resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkRackName",
            "in": "path",
            "description": "Name of the Network Rack.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkRack' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "201": {
            "description": "Resource 'NetworkRack' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkRacks_Update",
        "tags": [
          "NetworkRacks"
        ],
        "description": "Update certain properties of the Network Rack resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkRackName",
            "in": "path",
            "description": "Name of the Network Rack.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Rack properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRackPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkRacks_Delete",
        "tags": [
          "NetworkRacks"
        ],
        "description": "Delete Network Rack resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkRackName",
            "in": "path",
            "description": "Name of the Network Rack.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules": {
      "get": {
        "operationId": "NetworkTapRules_ListByResourceGroup",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "List all the Network Tap Rule resources in the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}": {
      "get": {
        "operationId": "NetworkTapRules_Get",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Get Network Tap Rule resource details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkTapRules_Create",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Create Network Tap Rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkTapRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "201": {
            "description": "Resource 'NetworkTapRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkTapRules_Update",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Update certain properties of the Network Tap Rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Tap Rule properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkTapRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkTapRules_Delete",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Delete Network Tap Rule resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/resync": {
      "post": {
        "operationId": "NetworkTapRules_Resync",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Resync_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Resync.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkTapRules_UpdateAdministrativeState",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/validateConfiguration": {
      "post": {
        "operationId": "NetworkTapRules_ValidateConfiguration",
        "tags": [
          "NetworkTapRules"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapRuleName",
            "in": "path",
            "description": "Name of the Network Tap Rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps": {
      "get": {
        "operationId": "NetworkTaps_ListByResourceGroup",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Displays Network Taps list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTapListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}": {
      "get": {
        "operationId": "NetworkTaps_Get",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Retrieves details of this Network Tap.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Get.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkTaps_Create",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Creates a Network Tap.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkTap' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "201": {
            "description": "Resource 'NetworkTap' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkTaps_Update",
        "tags": [
          "NetworkTaps"
        ],
        "description": "API to update certain properties of the Network Tap resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Network Tap properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkTapPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkTaps_Delete",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Deletes Network Tap.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/resync": {
      "post": {
        "operationId": "NetworkTaps_Resync",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Resync_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Resync.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/updateAdministrativeState": {
      "post": {
        "operationId": "NetworkTaps_UpdateAdministrativeState",
        "tags": [
          "NetworkTaps"
        ],
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkTapName",
            "in": "path",
            "description": "Name of the Network Tap.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies": {
      "get": {
        "operationId": "RoutePolicies_ListByResourceGroup",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Implements RoutePolicies list by resource group GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoutePolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}": {
      "get": {
        "operationId": "RoutePolicies_Get",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Implements Route Policy GET method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_Get_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "RoutePolicies_Create",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Implements Route Policy PUT method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RoutePolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "201": {
            "description": "Resource 'RoutePolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_Create_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "RoutePolicies_Update",
        "tags": [
          "RoutePolicies"
        ],
        "description": "API to update certain properties of the Route Policy resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Route Policy properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutePolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_Update_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RoutePolicies_Delete",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Implements Route Policy DELETE method.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_Delete_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/commitConfiguration": {
      "post": {
        "operationId": "RoutePolicies_CommitConfiguration",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Commits the configuration of the given resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_CommitConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/updateAdministrativeState": {
      "post": {
        "operationId": "RoutePolicies_UpdateAdministrativeState",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Updated the admin state for this Route Policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_UpdateAdministrativeState.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/validateConfiguration": {
      "post": {
        "operationId": "RoutePolicies_ValidateConfiguration",
        "tags": [
          "RoutePolicies"
        ],
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "routePolicyName",
            "in": "path",
            "description": "Name of the Route Policy.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,127}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ValidateConfiguration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccessControlList": {
      "type": "object",
      "description": "The Access Control List resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessControlListProperties",
          "description": "The Access ControlList properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AccessControlListAction": {
      "type": "object",
      "description": "Action that need to performed.",
      "properties": {
        "type": {
          "$ref": "#/definitions/AclActionType",
          "description": "Type of actions that can be performed."
        },
        "counterName": {
          "type": "string",
          "description": "Name of the counter block to get match count information.",
          "minLength": 1
        },
        "remarkComment": {
          "type": "string",
          "description": "Remark comment"
        },
        "policeRateConfiguration": {
          "$ref": "#/definitions/PoliceRateConfigurationProperties",
          "description": "Police rate configuration"
        }
      }
    },
    "AccessControlListActionPatch": {
      "type": "object",
      "description": "Action that need to be performed",
      "properties": {
        "type": {
          "$ref": "#/definitions/AclActionType",
          "description": "Type of actions that can be performed."
        },
        "counterName": {
          "type": "string",
          "description": "Name of the counter block to get match count information.",
          "minLength": 1
        },
        "remarkComment": {
          "type": "string",
          "description": "Remark comment"
        },
        "policeRateConfiguration": {
          "$ref": "#/definitions/PoliceRateConfigurationProperties",
          "description": "Police rate configuration"
        }
      }
    },
    "AccessControlListListResult": {
      "type": "object",
      "description": "The response of a AccessControlList list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AccessControlList items on this page",
          "items": {
            "$ref": "#/definitions/AccessControlList"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AccessControlListMatchCondition": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "protocolTypes": {
          "type": "array",
          "description": "List of the protocols that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanMatchCondition": {
          "$ref": "#/definitions/VlanMatchCondition",
          "description": "Vlan match condition that needs to be matched."
        },
        "ipCondition": {
          "$ref": "#/definitions/IpMatchCondition",
          "description": "IP condition that needs to be matched."
        },
        "etherTypes": {
          "type": "array",
          "description": "List of ether type values that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "fragments": {
          "type": "array",
          "description": "List of IP fragment packets that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ipLengths": {
          "type": "array",
          "description": "List of IP Lengths that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ttlValues": {
          "type": "array",
          "description": "List of TTL [Time To Live] values that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "dscpMarkings": {
          "type": "array",
          "description": "List of DSCP Markings that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "protocolNeighbors": {
          "type": "array",
          "description": "Protocol neighbors that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "portCondition": {
          "$ref": "#/definitions/AccessControlListPortCondition",
          "description": "Defines the port condition that needs to be matched."
        },
        "icmpConfiguration": {
          "$ref": "#/definitions/IcmpConfigurationProperties",
          "description": "Internet Control Message Protocol (ICMP) configuration"
        }
      }
    },
    "AccessControlListMatchConditionPatch": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "protocolTypes": {
          "type": "array",
          "description": "List of the protocols that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanMatchCondition": {
          "$ref": "#/definitions/VlanMatchConditionPatch",
          "description": "Vlan match condition that needs to be matched."
        },
        "ipCondition": {
          "$ref": "#/definitions/IpMatchConditionPatch",
          "description": "IP condition that needs to be matched."
        },
        "etherTypes": {
          "type": "array",
          "description": "List of ether type values that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "fragments": {
          "type": "array",
          "description": "List of IP fragment packets that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ipLengths": {
          "type": "array",
          "description": "List of IP Lengths that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ttlValues": {
          "type": "array",
          "description": "List of TTL [Time To Live] values that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "dscpMarkings": {
          "type": "array",
          "description": "List of DSCP Markings that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "portCondition": {
          "$ref": "#/definitions/AccessControlListPortConditionPatch",
          "description": "Defines the port condition that needs to be matched."
        },
        "protocolNeighbors": {
          "type": "array",
          "description": "Protocol neighbors that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "icmpConfiguration": {
          "$ref": "#/definitions/IcmpConfigurationPatchProperties",
          "description": "Internet Control Message Protocol (ICMP) configuration"
        }
      }
    },
    "AccessControlListMatchConfiguration": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence Number of the match configuration.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "Type of IP Address. IPv4 or IPv6"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListMatchCondition"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListAction"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AccessControlListMatchConfigurationPatch": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence Number of the match configuration.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "Type of IP Address. IPv4 or IPv6"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListMatchConditionPatch"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListActionPatch"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AccessControlListPatch": {
      "type": "object",
      "description": "The Access Control Lists patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AccessControlListPatchProperties",
          "description": "Access Control Lists patch properties."
        }
      }
    },
    "AccessControlListPatchProperties": {
      "type": "object",
      "description": "Access Control Lists patch properties.",
      "properties": {
        "configurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Input method to configure Access Control List."
        },
        "aclsUrl": {
          "type": "string",
          "format": "uri",
          "description": "Access Control List file URL."
        },
        "defaultAction": {
          "$ref": "#/definitions/CommunityActionTypes",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny."
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListMatchConfigurationPatch"
          },
          "x-ms-identifiers": []
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/CommonDynamicMatchConfigurationPatch"
          },
          "x-ms-identifiers": []
        },
        "aclType": {
          "$ref": "#/definitions/AclType",
          "description": "Access Control List (ACL) Type"
        },
        "deviceRole": {
          "$ref": "#/definitions/DeviceRole",
          "description": "Device Role"
        },
        "globalAccessControlListActions": {
          "$ref": "#/definitions/GlobalAccessControlListActionPatchProperties",
          "description": "Global Access Control List (ACL) actions"
        },
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        }
      }
    },
    "AccessControlListPortCondition": {
      "type": "object",
      "description": "Defines the port condition that needs to be matched.",
      "properties": {
        "portType": {
          "$ref": "#/definitions/PortType",
          "description": "Port type that needs to be matched."
        },
        "layer4Protocol": {
          "$ref": "#/definitions/Layer4Protocol",
          "description": "Layer4 protocol type that needs to be matched."
        },
        "ports": {
          "type": "array",
          "description": "List of the Ports that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "portGroupNames": {
          "type": "array",
          "description": "List of the port Group Names that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "description": "List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "layer4Protocol"
      ]
    },
    "AccessControlListPortConditionPatch": {
      "type": "object",
      "description": "Defines the port condition that needs to be matched.",
      "properties": {
        "portType": {
          "$ref": "#/definitions/PortType",
          "description": "Port type that needs to be matched."
        },
        "layer4Protocol": {
          "$ref": "#/definitions/Layer4Protocol",
          "description": "Layer4 protocol type that needs to be matched."
        },
        "ports": {
          "type": "array",
          "description": "List of the Ports that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "portGroupNames": {
          "type": "array",
          "description": "List of the port Group Names that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "description": "List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccessControlListProperties": {
      "type": "object",
      "description": "Access Control List Properties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "configurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Input method to configure Access Control List."
        },
        "aclsUrl": {
          "type": "string",
          "format": "uri",
          "description": "Access Control List file URL."
        },
        "defaultAction": {
          "type": "string",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny.",
          "default": "Permit",
          "enum": [
            "Permit",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "CommunityActionTypes",
            "modelAsString": true,
            "values": [
              {
                "name": "Permit",
                "value": "Permit",
                "description": "Permit Community Action Types"
              },
              {
                "name": "Deny",
                "value": "Deny",
                "description": "Deny Community Action Types"
              }
            ]
          }
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AccessControlListMatchConfiguration"
          },
          "x-ms-identifiers": []
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/CommonDynamicMatchConfiguration"
          },
          "x-ms-identifiers": []
        },
        "lastSyncedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last synced timestamp.",
          "readOnly": true
        },
        "aclType": {
          "$ref": "#/definitions/AclType",
          "description": "Access Control List (ACL) Type"
        },
        "deviceRole": {
          "$ref": "#/definitions/DeviceRole",
          "description": "Device Role"
        },
        "globalAccessControlListActions": {
          "$ref": "#/definitions/GlobalAccessControlListActionProperties",
          "description": "Global Access Control List (ACL) actions"
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "configurationType"
      ]
    },
    "AclActionType": {
      "type": "string",
      "description": "Type of actions that can be performed.",
      "enum": [
        "Drop",
        "Count",
        "Log",
        "Remark",
        "PoliceRate"
      ],
      "x-ms-enum": {
        "name": "AclActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Drop",
            "value": "Drop",
            "description": "AclActionType Drop"
          },
          {
            "name": "Count",
            "value": "Count",
            "description": "AclActionType Count"
          },
          {
            "name": "Log",
            "value": "Log",
            "description": "AclActionType Log"
          },
          {
            "name": "Remark",
            "value": "Remark",
            "description": "AclActionType Remark"
          },
          {
            "name": "PoliceRate",
            "value": "PoliceRate",
            "description": "AclActionType PoliceRate"
          }
        ]
      }
    },
    "AclType": {
      "type": "string",
      "description": "Access Control List (ACL) Type",
      "enum": [
        "ControlPlaneTrafficPolicy",
        "Tenant",
        "Management"
      ],
      "x-ms-enum": {
        "name": "AclType",
        "modelAsString": true,
        "values": [
          {
            "name": "Cp",
            "value": "ControlPlaneTrafficPolicy",
            "description": "AclType Control Plane Traffic Policy"
          },
          {
            "name": "Tenant",
            "value": "Tenant",
            "description": "AclType Tenant"
          },
          {
            "name": "Management",
            "value": "Management",
            "description": "AclType Management"
          }
        ]
      }
    },
    "Action": {
      "type": "string",
      "description": "Specify action.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow",
            "description": "Action Allow"
          },
          {
            "name": "Deny",
            "value": "Deny",
            "description": "Action Deny"
          }
        ]
      }
    },
    "ActionIpCommunityPatchProperties": {
      "type": "object",
      "description": "IP Community Properties.",
      "properties": {
        "add": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        },
        "delete": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        },
        "set": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        }
      }
    },
    "ActionIpCommunityProperties": {
      "type": "object",
      "description": "IP Community Properties.",
      "properties": {
        "add": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        },
        "delete": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        },
        "set": {
          "$ref": "#/definitions/IpCommunityIdList",
          "description": "List of IP Community IDs."
        }
      }
    },
    "ActionIpExtendedCommunityPatchProperties": {
      "type": "object",
      "description": "IP Extended Community Properties.",
      "properties": {
        "add": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        },
        "delete": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        },
        "set": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        }
      }
    },
    "ActionIpExtendedCommunityProperties": {
      "type": "object",
      "description": "IP Extended Community Properties.",
      "properties": {
        "add": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        },
        "delete": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        },
        "set": {
          "$ref": "#/definitions/IpExtendedCommunityIdList",
          "description": "List of IP Extended Community IDs."
        }
      }
    },
    "AdministrativeState": {
      "type": "string",
      "description": "State defined to represent administrative actions or post actions on a particular resource.",
      "enum": [
        "Enabled",
        "Disabled",
        "MAT",
        "RMA",
        "UnderMaintenance"
      ],
      "x-ms-enum": {
        "name": "AdministrativeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enabled Administrative State"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Disabled Administrative State"
          },
          {
            "name": "MAT",
            "value": "MAT",
            "description": "MAT(Manual Action Taken) Administrative State"
          },
          {
            "name": "RMA",
            "value": "RMA",
            "description": "RMA(Return Material Authorization) Administrative State"
          },
          {
            "name": "UnderMaintenance",
            "value": "UnderMaintenance",
            "description": "UnderMaintenance Administrative State"
          }
        ]
      }
    },
    "AggregateRoute": {
      "type": "object",
      "description": "aggregateIpv4Route model.",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "IPv4 Prefix of the aggregate Ipv4Route.",
          "minLength": 1
        }
      },
      "required": [
        "prefix"
      ]
    },
    "AggregateRouteConfiguration": {
      "type": "object",
      "description": "List of IPv4 and IPv6 aggregate routes.",
      "properties": {
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Route prefixes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AggregateRoute"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of Ipv6Routes prefixes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AggregateRoute"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "AggregateRoutePatchConfiguration": {
      "type": "object",
      "description": "List of IPv4 and IPv6 aggregate routes.",
      "properties": {
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Route prefixes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AggregateRoute"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of Ipv6Routes prefixes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AggregateRoute"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "AllowASOverride": {
      "type": "string",
      "description": "Enable Or Disable state.",
      "enum": [
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "AllowASOverride",
        "modelAsString": true,
        "values": [
          {
            "name": "Enable",
            "value": "Enable",
            "description": "AllowASOverride-Enable"
          },
          {
            "name": "Disable",
            "value": "Disable",
            "description": "AllowASOverride-Disable"
          }
        ]
      }
    },
    "ArmConfigurationDiffResponse": {
      "type": "object",
      "description": "Arm Configuration Diff Response.",
      "properties": {
        "configurationDiffUrl": {
          "type": "string",
          "description": "Storage URL to the diff file."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "BfdAdministrativeState": {
      "type": "string",
      "description": "Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
      "enum": [
        "Enabled",
        "Disabled",
        "MAT",
        "RMA"
      ],
      "x-ms-enum": {
        "name": "BfdAdministrativeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Represents the enabled state of BFD administrative state."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Represents the disabled state of BFD administrative state."
          },
          {
            "name": "MAT",
            "value": "MAT",
            "description": "Represents the MAT(Manual Action Taken) state of BFD administrative state."
          },
          {
            "name": "RMA",
            "value": "RMA",
            "description": "Represents the RMA(Return Material Authorization) state of BFD administrative state."
          }
        ]
      }
    },
    "BfdConfiguration": {
      "type": "object",
      "description": "BFD configuration properties",
      "properties": {
        "administrativeState": {
          "type": "string",
          "description": "Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled",
            "MAT",
            "RMA"
          ],
          "x-ms-enum": {
            "name": "BfdAdministrativeState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Represents the enabled state of BFD administrative state."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Represents the disabled state of BFD administrative state."
              },
              {
                "name": "MAT",
                "value": "MAT",
                "description": "Represents the MAT(Manual Action Taken) state of BFD administrative state."
              },
              {
                "name": "RMA",
                "value": "RMA",
                "description": "Represents the RMA(Return Material Authorization) state of BFD administrative state."
              }
            ]
          },
          "readOnly": true
        },
        "intervalInMilliSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Interval in milliseconds. Example: 300.",
          "default": 300
        },
        "multiplier": {
          "type": "integer",
          "format": "int32",
          "description": "Multiplier for the Bfd Configuration. Example: 5.",
          "default": 5
        }
      }
    },
    "BfdPatchConfiguration": {
      "type": "object",
      "description": "BFD configuration properties",
      "properties": {
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
          "readOnly": true
        },
        "intervalInMilliSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Interval in milliseconds. Example: 300."
        },
        "multiplier": {
          "type": "integer",
          "format": "int32",
          "description": "Multiplier for the Bfd Configuration. Example: 5."
        }
      }
    },
    "BgpAdministrativeState": {
      "type": "string",
      "description": "Border Gateway Protocol (BGP) Administrative State values",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "BgpAdministrativeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "BgpAdministrativeState-Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "BgpAdministrativeState-Disabled"
          }
        ]
      }
    },
    "BgpConfiguration": {
      "type": "object",
      "description": "BGP configuration properties",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD configuration properties"
        },
        "defaultRouteOriginate": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "Originate a defaultRoute. Ex: \"True\" | \"False\"."
        },
        "allowAS": {
          "type": "integer",
          "format": "int32",
          "description": "Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.",
          "default": 2,
          "minimum": 0,
          "maximum": 10
        },
        "allowASOverride": {
          "$ref": "#/definitions/AllowASOverride",
          "description": "Enable Or Disable state."
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of Network Fabric. Example: 65048.",
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN. Example: 65047.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipv4ListenRangePrefixes": {
          "type": "array",
          "description": "List of BGP IPv4 Listen Range prefixes.",
          "items": {
            "type": "string"
          }
        },
        "ipv6ListenRangePrefixes": {
          "type": "array",
          "description": "List of BGP IPv6 Listen Ranges prefixes.",
          "items": {
            "type": "string"
          }
        },
        "ipv4NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv4 Neighbor Addresses.",
          "items": {
            "$ref": "#/definitions/NeighborAddress"
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "ipv6NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv6 Neighbor Address.",
          "items": {
            "$ref": "#/definitions/NeighborAddress"
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/InternalNetworkBmpProperties",
          "description": "InternalNetwork BMP Configuration"
        },
        "v4OverV6BgpSession": {
          "type": "string",
          "description": "V4 over V6 bgp session.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "V4OverV6BgpSessionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "V4OverV6BgpSessionState-Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "V4OverV6BgpSessionState-Disabled"
              }
            ]
          }
        },
        "v6OverV4BgpSession": {
          "type": "string",
          "description": "v6 over v4 bgp session.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "V6OverV4BgpSessionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "V6OverV4BgpSessionState-Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "V6OverV4BgpSessionState-Disabled"
              }
            ]
          }
        }
      },
      "required": [
        "peerASN"
      ]
    },
    "BgpPatchConfiguration": {
      "type": "object",
      "description": "BGP configuration properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD configuration properties"
        },
        "defaultRouteOriginate": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "Originate a defaultRoute. Ex: \"True\" | \"False\"."
        },
        "allowAS": {
          "type": "integer",
          "format": "int32",
          "description": "Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.",
          "minimum": 0,
          "maximum": 10
        },
        "allowASOverride": {
          "$ref": "#/definitions/AllowASOverride",
          "description": "Enable Or Disable state."
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of Network Fabric. Example: 65048.",
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN. Example: 65047.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipv4ListenRangePrefixes": {
          "type": "array",
          "description": "List of BGP IPv4 Listen Range prefixes.",
          "items": {
            "type": "string"
          }
        },
        "ipv6ListenRangePrefixes": {
          "type": "array",
          "description": "List of BGP IPv6 Listen Ranges prefixes.",
          "items": {
            "type": "string"
          }
        },
        "ipv4NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv4 Neighbor Addresses.",
          "items": {
            "$ref": "#/definitions/NeighborAddressPatch"
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "ipv6NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv6 Neighbor Address.",
          "items": {
            "$ref": "#/definitions/NeighborAddressPatch"
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/InternalNetworkBmpPatchProperties",
          "description": "InternalNetwork BMP Configuration"
        },
        "v4OverV6BgpSession": {
          "$ref": "#/definitions/V4OverV6BgpSessionState",
          "description": "V4 over V6 bgp session."
        },
        "v6OverV4BgpSession": {
          "$ref": "#/definitions/V6OverV4BgpSessionState",
          "description": "v6 over v4 bgp session."
        }
      }
    },
    "BitRate": {
      "type": "object",
      "description": "Bit rate in bits per second.",
      "properties": {
        "rate": {
          "type": "integer",
          "format": "int64",
          "description": "Bitrate."
        },
        "unit": {
          "$ref": "#/definitions/BitRateUnit",
          "description": "Bitrate unit."
        }
      }
    },
    "BitRateUnit": {
      "type": "string",
      "description": "Bit rate unit.",
      "enum": [
        "bps",
        "Kbps",
        "Mbps",
        "Gbps"
      ],
      "x-ms-enum": {
        "name": "BitRateUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "bps",
            "value": "bps",
            "description": "Bit rate unit in bits per second."
          },
          {
            "name": "Kbps",
            "value": "Kbps",
            "description": "Bit rate unit in kilobits per second."
          },
          {
            "name": "Mbps",
            "value": "Mbps",
            "description": "Bit rate unit in megabits per second."
          },
          {
            "name": "Gbps",
            "value": "Gbps",
            "description": "Bit rate unit in gigabits per second."
          }
        ]
      }
    },
    "BmpConfigurationPatchProperties": {
      "type": "object",
      "description": "BMP Configuration patch properties.",
      "properties": {
        "stationConfigurationState": {
          "$ref": "#/definitions/StationConfigurationState",
          "description": "Enabling a station. Either True/False."
        },
        "scopeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Scope resource ARM Identifier.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "stationName": {
          "type": "string",
          "description": "Name of the station."
        },
        "stationIp": {
          "type": "string",
          "description": "IP Address of the station."
        },
        "stationPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port of the station. Default value is 5000.",
          "minimum": 1,
          "maximum": 65535
        },
        "stationConnectionMode": {
          "$ref": "#/definitions/StationConnectionMode",
          "description": "Station Connection Mode."
        },
        "stationConnectionProperties": {
          "$ref": "#/definitions/StationConnectionPatchProperties",
          "description": "Station Connection Properties."
        },
        "stationNetwork": {
          "type": "string",
          "format": "arm-id",
          "description": "Network of the station",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/l3Isolationdomains/internalNetwork"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/l3Isolationdomains/externalNetwork"
              }
            ]
          }
        },
        "monitoredNetworks": {
          "type": "array",
          "description": "The List of Network ID's that need to be monitored.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains"
                }
              ]
            }
          }
        },
        "exportPolicy": {
          "$ref": "#/definitions/BmpExportPolicy",
          "description": "Export Policy for the BMP Configuration."
        },
        "monitoredAddressFamilies": {
          "type": "array",
          "description": "Monitored Address Families for the BMP Configuration.",
          "items": {
            "$ref": "#/definitions/BmpMonitoredAddressFamily"
          }
        }
      }
    },
    "BmpConfigurationProperties": {
      "type": "object",
      "description": "BGP Monitoring Protocol (BMP) Configuration properties.",
      "properties": {
        "stationConfigurationState": {
          "$ref": "#/definitions/StationConfigurationState",
          "description": "Enabling a station. Either True/False."
        },
        "scopeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Scope resource ARM Identifier.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "stationName": {
          "type": "string",
          "description": "Name of the station."
        },
        "stationIp": {
          "type": "string",
          "description": "IP Address of the station."
        },
        "stationPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port of the station. Default value is 5000.",
          "default": 5000,
          "minimum": 1,
          "maximum": 65535
        },
        "stationConnectionMode": {
          "$ref": "#/definitions/StationConnectionMode",
          "description": "Station Connection Mode."
        },
        "stationConnectionProperties": {
          "$ref": "#/definitions/StationConnectionProperties",
          "description": "Station Connection Properties."
        },
        "stationNetwork": {
          "type": "string",
          "format": "arm-id",
          "description": "Network of the station",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/l3Isolationdomains/internalNetwork"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/l3Isolationdomains/externalNetwork"
              }
            ]
          }
        },
        "monitoredNetworks": {
          "type": "array",
          "description": "The List of Network ID's that need to be monitored.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains"
                }
              ]
            }
          }
        },
        "exportPolicy": {
          "type": "string",
          "description": "Export Policy for the BMP Configuration.",
          "default": "All",
          "enum": [
            "Pre-Policy",
            "Post-Policy",
            "All"
          ],
          "x-ms-enum": {
            "name": "BmpExportPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "PrePolicy",
                "value": "Pre-Policy",
                "description": "BMP ExportPolicy Pre-Policy"
              },
              {
                "name": "PostPolicy",
                "value": "Post-Policy",
                "description": "BMP ExportPolicy Post-Policy"
              },
              {
                "name": "All",
                "value": "All",
                "description": "BMP ExportPolicy All"
              }
            ]
          }
        },
        "monitoredAddressFamilies": {
          "type": "array",
          "description": "Monitored Address Families for the BMP Configuration.",
          "default": [
            "All"
          ],
          "items": {
            "$ref": "#/definitions/BmpMonitoredAddressFamily"
          }
        }
      }
    },
    "BmpConfigurationState": {
      "type": "string",
      "description": "BGP Monitoring Protocol (BMP) configuration state.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "BmpConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Disabled"
          }
        ]
      }
    },
    "BmpExportPolicy": {
      "type": "string",
      "description": "Export Policy for the BGP Monitoring Protocol (BMP) Configuration.",
      "enum": [
        "Pre-Policy",
        "Post-Policy",
        "All"
      ],
      "x-ms-enum": {
        "name": "BmpExportPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "PrePolicy",
            "value": "Pre-Policy",
            "description": "BMP ExportPolicy Pre-Policy"
          },
          {
            "name": "PostPolicy",
            "value": "Post-Policy",
            "description": "BMP ExportPolicy Post-Policy"
          },
          {
            "name": "All",
            "value": "All",
            "description": "BMP ExportPolicy All"
          }
        ]
      }
    },
    "BmpMonitoredAddressFamily": {
      "type": "string",
      "description": "Monitored Address Family.",
      "enum": [
        "ipv4Unicast",
        "ipv6Unicast",
        "vpnIpv4",
        "vpnIpv6",
        "All"
      ],
      "x-ms-enum": {
        "name": "BmpMonitoredAddressFamily",
        "modelAsString": true,
        "values": [
          {
            "name": "ipv4Unicast",
            "value": "ipv4Unicast",
            "description": "IPv4 Unicast"
          },
          {
            "name": "ipv6Unicast",
            "value": "ipv6Unicast",
            "description": "IPv6 Unicast"
          },
          {
            "name": "vpnIpv4",
            "value": "vpnIpv4",
            "description": "VPN IPv4"
          },
          {
            "name": "vpnIpv6",
            "value": "vpnIpv6",
            "description": "VPN IPv6"
          },
          {
            "name": "All",
            "value": "All",
            "description": "All Address Families"
          }
        ]
      }
    },
    "BooleanEnumProperty": {
      "type": "string",
      "description": "Boolean union. Example- True/False",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "BooleanEnumProperty",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True",
            "description": "EnumProperty-True"
          },
          {
            "name": "False",
            "value": "False",
            "description": "EnumProperty-False"
          }
        ]
      }
    },
    "BurstSize": {
      "type": "object",
      "description": "Burst size in packets.",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Burst size."
        },
        "unit": {
          "$ref": "#/definitions/BurstSizeUnit",
          "description": "Burst size unit."
        }
      }
    },
    "BurstSizeUnit": {
      "type": "string",
      "description": "Burst size unit in packets.",
      "enum": [
        "Bytes",
        "KBytes",
        "MBytes",
        "GBytes"
      ],
      "x-ms-enum": {
        "name": "BurstSizeUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "Bytes",
            "value": "Bytes",
            "description": "Burst size unit in bytes."
          },
          {
            "name": "KBytes",
            "value": "KBytes",
            "description": "Burst size unit in kilobytes."
          },
          {
            "name": "MBytes",
            "value": "MBytes",
            "description": "Burst size unit in megabytes."
          },
          {
            "name": "GBytes",
            "value": "GBytes",
            "description": "Burst size unit in gigabytes."
          }
        ]
      }
    },
    "CommitBatchDetails": {
      "type": "object",
      "description": "Commit Batch Details.",
      "properties": {
        "failedDevices": {
          "type": "array",
          "description": "List of devices for which the commit operation failed.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommitBatchState": {
      "type": "string",
      "description": "Commit Batch State.",
      "enum": [
        "Processing",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CommitBatchState",
        "modelAsString": true,
        "values": [
          {
            "name": "Processing",
            "value": "Processing",
            "description": "CommitBatchState-PartialSuccess"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "CommitBatchState-Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "CommitBatchState-Failed"
          }
        ]
      },
      "readOnly": true
    },
    "CommitBatchStatusRequest": {
      "type": "object",
      "description": "Commit Batch Status Request.",
      "properties": {
        "commitBatchId": {
          "type": "string",
          "description": "Commit Batch Identifier. If not provided, the latest commit batch status will be returned."
        }
      }
    },
    "CommitBatchStatusResponse": {
      "type": "object",
      "description": "Commit Batch Status Response.",
      "properties": {
        "commitBatchId": {
          "type": "string",
          "description": "Commit Batch Identifier."
        },
        "commitBatchState": {
          "$ref": "#/definitions/CommitBatchState",
          "description": "Commit Batch State."
        },
        "commitBatchDetails": {
          "$ref": "#/definitions/CommitBatchDetails",
          "description": "Commit Batch Details."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "CommonDynamicMatchConfiguration": {
      "type": "object",
      "description": "Dynamic match configuration object.",
      "properties": {
        "ipGroups": {
          "type": "array",
          "description": "List of IP Groups.",
          "items": {
            "$ref": "#/definitions/IpGroupProperties"
          },
          "x-ms-identifiers": []
        },
        "vlanGroups": {
          "type": "array",
          "description": "List of vlan groups.",
          "items": {
            "$ref": "#/definitions/VlanGroupProperties"
          },
          "x-ms-identifiers": []
        },
        "portGroups": {
          "type": "array",
          "description": "List of the port groups.",
          "items": {
            "$ref": "#/definitions/PortGroupProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommonDynamicMatchConfigurationPatch": {
      "type": "object",
      "description": "Dynamic match configuration object.",
      "properties": {
        "ipGroups": {
          "type": "array",
          "description": "List of IP Groups.",
          "items": {
            "$ref": "#/definitions/IpGroupPatchProperties"
          },
          "x-ms-identifiers": []
        },
        "vlanGroups": {
          "type": "array",
          "description": "List of vlan groups.",
          "items": {
            "$ref": "#/definitions/VlanGroupPatchProperties"
          },
          "x-ms-identifiers": []
        },
        "portGroups": {
          "type": "array",
          "description": "List of the port groups.",
          "items": {
            "$ref": "#/definitions/PortGroupPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommonPostActionResponseForDeviceROCommands": {
      "type": "object",
      "description": "Common response for device Ro Commands.",
      "properties": {
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configuration state.",
          "readOnly": true
        },
        "outputUrl": {
          "type": "string",
          "description": "Predefined link containing Device RO Command output."
        },
        "deviceConfigurationPreview": {
          "type": "string",
          "description": "Device RO command Response limited to 4000 characters."
        }
      }
    },
    "CommonPostActionResponseForDeviceROCommandsOperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CommonPostActionResponseForDeviceROCommands",
          "description": "The additional properties of the operation status result."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkDevices"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        }
      },
      "required": [
        "status"
      ]
    },
    "CommonPostActionResponseForDeviceRWCommands": {
      "type": "object",
      "description": "Common response for device Rw Commands.",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configuration state.",
          "readOnly": true
        },
        "outputUrl": {
          "type": "string",
          "description": "Predefined link containing Device Rw Command output."
        }
      }
    },
    "CommonPostActionResponseForDeviceUpdate": {
      "type": "object",
      "description": "Common response for device updates.",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configuration state.",
          "readOnly": true
        },
        "successfulDevices": {
          "type": "array",
          "description": "List of ARM Resource IDs for which the given action applied successfully.",
          "items": {
            "type": "string"
          }
        },
        "failedDevices": {
          "type": "array",
          "description": "List of ARM Resource IDs for which the given action failed to apply.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommonPostActionResponseForStateUpdate": {
      "type": "object",
      "description": "Common response for the state updates.",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configuration state.",
          "readOnly": true
        }
      }
    },
    "CommunityActionTypes": {
      "type": "string",
      "description": "Community action types. Example: Permit | Deny.",
      "enum": [
        "Permit",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "CommunityActionTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Permit",
            "value": "Permit",
            "description": "Permit Community Action Types"
          },
          {
            "name": "Deny",
            "value": "Deny",
            "description": "Deny Community Action Types"
          }
        ]
      }
    },
    "Condition": {
      "type": "string",
      "description": "Specify prefix-list bounds.",
      "enum": [
        "EqualTo",
        "GreaterThanOrEqualTo",
        "LesserThanOrEqualTo",
        "Range"
      ],
      "x-ms-enum": {
        "name": "Condition",
        "modelAsString": true,
        "values": [
          {
            "name": "EqualTo",
            "value": "EqualTo",
            "description": "Condition-EqualTo"
          },
          {
            "name": "GreaterThanOrEqualTo",
            "value": "GreaterThanOrEqualTo",
            "description": "Condition-GreaterThanOrEqualTo"
          },
          {
            "name": "LesserThanOrEqualTo",
            "value": "LesserThanOrEqualTo",
            "description": "Condition-LesserThanOrEqualTo"
          },
          {
            "name": "Range",
            "value": "Range",
            "description": "Condition-Range"
          }
        ]
      }
    },
    "ConditionalDefaultRouteProperties": {
      "type": "object",
      "description": "Conditional Default Route Configuration properties.",
      "properties": {
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "ConfigurationState": {
      "type": "string",
      "description": "Configuration state for the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Rejected",
        "Accepted",
        "Provisioned",
        "ErrorProvisioning",
        "Deprovisioning",
        "Deprovisioned",
        "ErrorDeprovisioning",
        "DeferredControl",
        "Provisioning",
        "PendingCommit"
      ],
      "x-ms-enum": {
        "name": "ConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Success Configuration State"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed Configuration State"
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "Rejected Configuration State"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted Configuration State"
          },
          {
            "name": "Provisioned",
            "value": "Provisioned",
            "description": "Provisioned Configuration State"
          },
          {
            "name": "ErrorProvisioning",
            "value": "ErrorProvisioning",
            "description": "ErrorProvisioning Configuration State"
          },
          {
            "name": "Deprovisioning",
            "value": "Deprovisioning",
            "description": "Deprovisioning Configuration State"
          },
          {
            "name": "Deprovisioned",
            "value": "Deprovisioned",
            "description": "Deprovisioned Configuration State"
          },
          {
            "name": "ErrorDeprovisioning",
            "value": "ErrorDeprovisioning",
            "description": "ErrorDeprovisioning Configuration State"
          },
          {
            "name": "DeferredControl",
            "value": "DeferredControl",
            "description": "DeferredControl Configuration State"
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning Configuration State"
          },
          {
            "name": "PendingCommit",
            "value": "PendingCommit",
            "description": "PendingCommit Configuration State"
          }
        ]
      },
      "readOnly": true
    },
    "ConfigurationType": {
      "type": "string",
      "description": "Input method to configure Access Control List.",
      "enum": [
        "File",
        "Inline"
      ],
      "x-ms-enum": {
        "name": "ConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "File",
            "value": "File",
            "description": "File Configuration Type"
          },
          {
            "name": "Inline",
            "value": "Inline",
            "description": "Inline Configuration Type"
          }
        ]
      }
    },
    "ConnectedSubnet": {
      "type": "object",
      "description": "Connected Subnet properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the Connected Subnet.",
          "minLength": 1
        }
      },
      "required": [
        "prefix"
      ]
    },
    "ConnectedSubnetPatch": {
      "type": "object",
      "description": "Connected Subnet properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "prefix": {
          "type": "string",
          "description": "Prefix of the Connected Subnet.",
          "minLength": 1
        }
      },
      "required": [
        "prefix"
      ]
    },
    "ConnectedSubnetRoutePolicy": {
      "type": "object",
      "description": "Connected Subnet Route Policy properties.",
      "properties": {
        "exportRoutePolicy": {
          "$ref": "#/definitions/L3ExportRoutePolicy",
          "description": "Array of ARM Resource ID of the RoutePolicies."
        }
      }
    },
    "ConnectedSubnetRoutePolicyPatch": {
      "type": "object",
      "description": "Connected Subnet Route Policy properties.",
      "properties": {
        "exportRoutePolicy": {
          "$ref": "#/definitions/L3ExportRoutePolicyPatch",
          "description": "Array of ARM Resource ID of the RoutePolicies."
        }
      }
    },
    "ControllerServices": {
      "type": "object",
      "description": "Network Fabric Controller services.",
      "properties": {
        "ipv4AddressSpaces": {
          "type": "array",
          "description": "The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.",
          "items": {
            "type": "string"
          }
        },
        "ipv6AddressSpaces": {
          "type": "array",
          "description": "The IPv6 is not supported right now.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DestinationPatchProperties": {
      "type": "object",
      "description": "The network tap destination properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination name.",
          "minLength": 1
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType",
          "description": "Type of destination. Input can be IsolationDomain or Direct."
        },
        "destinationId": {
          "type": "string",
          "format": "arm-id",
          "description": "The destination Id. ARM Resource ID of either NNI or Internal Networks.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks"
              }
            ]
          }
        },
        "isolationDomainProperties": {
          "$ref": "#/definitions/IsolationDomainPatchProperties",
          "description": "Isolation Domain Properties."
        },
        "destinationTapRuleId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of destination Tap Rule that contains match configurations.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
              }
            ]
          }
        }
      }
    },
    "DestinationProperties": {
      "type": "object",
      "description": "The network tap destination properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination name.",
          "minLength": 1
        },
        "destinationType": {
          "$ref": "#/definitions/DestinationType",
          "description": "Type of destination. Input can be IsolationDomain or Direct."
        },
        "destinationId": {
          "type": "string",
          "format": "arm-id",
          "description": "The destination Id. ARM Resource ID of either NNI or Internal Networks.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks"
              }
            ]
          }
        },
        "isolationDomainProperties": {
          "$ref": "#/definitions/IsolationDomainProperties",
          "description": "Isolation Domain Properties."
        },
        "destinationTapRuleId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of destination Tap Rule that contains match configurations.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "destinationType",
        "destinationId"
      ]
    },
    "DestinationType": {
      "type": "string",
      "description": "Type of destination. Input can be IsolationDomain or Direct.",
      "enum": [
        "IsolationDomain",
        "Direct"
      ],
      "x-ms-enum": {
        "name": "DestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "IsolationDomain",
            "value": "IsolationDomain",
            "description": "DestinationType-IsolationDomain"
          },
          {
            "name": "Direct",
            "value": "Direct",
            "description": "DestinationType-Direct"
          }
        ]
      }
    },
    "DeviceAdministrativeState": {
      "type": "string",
      "description": "Administrative state.",
      "enum": [
        "RMA",
        "UngracefulRMA",
        "Resync",
        "GracefulQuarantine",
        "UngracefulQuarantine",
        "Quarantine",
        "UnderMaintenance",
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "DeviceAdministrativeState",
        "modelAsString": true,
        "values": [
          {
            "name": "RMA",
            "value": "RMA",
            "description": "Device AdministrativeState-RMA"
          },
          {
            "name": "UngracefulRMA",
            "value": "UngracefulRMA",
            "description": "Device AdministrativeState-RMA(Return Material Authorization) Ungraceful"
          },
          {
            "name": "Resync",
            "value": "Resync",
            "description": "Device AdministrativeState-Resync"
          },
          {
            "name": "GracefulQuarantine",
            "value": "GracefulQuarantine",
            "description": "Device AdministrativeState-GracefulQuarantine"
          },
          {
            "name": "UngracefulQuarantine",
            "value": "UngracefulQuarantine",
            "description": "Device AdministrativeState-UngracefulQuarantine"
          },
          {
            "name": "Quarantine",
            "value": "Quarantine",
            "description": "Device AdministrativeState-Quarantine"
          },
          {
            "name": "UnderMaintenance",
            "value": "UnderMaintenance",
            "description": "Device AdministrativeState-UnderMaintenance"
          },
          {
            "name": "Enable",
            "value": "Enable",
            "description": "Device AdministrativeState-Enable"
          },
          {
            "name": "Disable",
            "value": "Disable",
            "description": "Device AdministrativeState-Disable"
          }
        ]
      }
    },
    "DeviceInterfaceProperties": {
      "type": "object",
      "description": "Network device interface properties.",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Interface identifier. Example: HundredGigE0/0."
        },
        "interfaceType": {
          "type": "string",
          "description": "Interface type."
        },
        "supportedConnectorTypes": {
          "type": "array",
          "description": "List of supported connector types.",
          "items": {
            "$ref": "#/definitions/SupportedConnectorProperties"
          },
          "x-ms-identifiers": [
            "connectorType"
          ]
        }
      }
    },
    "DeviceRoCommand": {
      "type": "object",
      "description": "Provide the RO command",
      "properties": {
        "command": {
          "type": "string",
          "description": "Specify the command."
        }
      }
    },
    "DeviceRole": {
      "type": "string",
      "description": "Device Role",
      "enum": [
        "CE",
        "ToR",
        "NPB",
        "ManagementSwitch"
      ],
      "x-ms-enum": {
        "name": "DeviceRole",
        "modelAsString": true,
        "values": [
          {
            "name": "CE",
            "value": "CE",
            "description": "DeviceRole - Customer Edge (CE)"
          },
          {
            "name": "ToR",
            "value": "ToR",
            "description": "DeviceRole - Top of Rack (ToR)"
          },
          {
            "name": "NPB",
            "value": "NPB",
            "description": "DeviceRole - Network Packet Broker (NPB)"
          },
          {
            "name": "ManagementSwitch",
            "value": "ManagementSwitch",
            "description": "Device Role Management Switch"
          }
        ]
      }
    },
    "DeviceRwCommand": {
      "type": "object",
      "description": "Provide the Rw command",
      "properties": {
        "command": {
          "type": "string",
          "description": "Specify the command."
        }
      }
    },
    "DiscardCommitBatchRequest": {
      "type": "object",
      "description": "Discard Commit Batch Request.",
      "properties": {
        "commitBatchId": {
          "type": "string",
          "description": "Commit Batch Identifier. If not provided, the latest commit batch status will be returned."
        }
      }
    },
    "DiscardCommitBatchResponse": {
      "type": "object",
      "description": "Discard Commit Batch Response.",
      "properties": {
        "commitBatchId": {
          "type": "string",
          "description": "Commit Batch Identifier."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "EnableDisableState": {
      "type": "string",
      "description": "Administrative state.",
      "enum": [
        "Enable",
        "Disable",
        "UnderMaintenance"
      ],
      "x-ms-enum": {
        "name": "EnableDisableState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enable",
            "value": "Enable",
            "description": "AdministrativeState Enable"
          },
          {
            "name": "Disable",
            "value": "Disable",
            "description": "AdministrativeState Disable"
          },
          {
            "name": "UnderMaintenance",
            "value": "UnderMaintenance",
            "description": "AdministrativeState UnderMaintenance"
          }
        ]
      }
    },
    "Encapsulation": {
      "type": "string",
      "description": "Type of encapsulation.",
      "enum": [
        "None",
        "GRE"
      ],
      "x-ms-enum": {
        "name": "Encapsulation",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Encapsulation-None"
          },
          {
            "name": "GRE",
            "value": "GRE",
            "description": "Encapsulation-GRE"
          }
        ]
      }
    },
    "EncapsulationType": {
      "type": "string",
      "description": "Encapsulation Type that needs to be matched.",
      "enum": [
        "None",
        "GTPv1"
      ],
      "x-ms-enum": {
        "name": "EncapsulationType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "None EncapsulationType"
          },
          {
            "name": "GTPv1",
            "value": "GTPv1",
            "description": "GTPv1 EncapsulationType"
          }
        ]
      }
    },
    "ExportRoutePolicy": {
      "type": "object",
      "description": "Export Route Policy either IPv4 or IPv6.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ExportRoutePolicyInformation": {
      "type": "object",
      "description": "Export Route Policy Configuration.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Export IPv4 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Export IPv6 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ExportRoutePolicyInformationPatch": {
      "type": "object",
      "description": "Export Route Policy Configuration.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Export IPv4 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Export IPv6 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ExportRoutePolicyPatch": {
      "type": "object",
      "description": "Export Route Policy either IPv4 or IPv6.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ExpressRouteConnectionInformation": {
      "type": "object",
      "description": "The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.",
      "properties": {
        "expressRouteCircuitId": {
          "type": "string",
          "format": "arm-id",
          "description": "The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/expressRouteCircuits"
              }
            ]
          }
        },
        "expressRouteAuthorizationKey": {
          "type": "string",
          "format": "password",
          "description": "Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.",
          "x-ms-secret": true
        }
      },
      "required": [
        "expressRouteCircuitId",
        "expressRouteAuthorizationKey"
      ]
    },
    "ExtendedVlan": {
      "type": "string",
      "description": "Extended VLAN status.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ExtendedVlan",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Extended VLAN is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Extended VLAN is disabled."
          }
        ]
      }
    },
    "ExternalNetwork": {
      "type": "object",
      "description": "Defines the External Network resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExternalNetworkProperties",
          "description": "External Network Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExternalNetworkBfdAdministrativeStateRequest": {
      "type": "object",
      "description": "External Network Administrative State request",
      "properties": {
        "routeType": {
          "$ref": "#/definitions/ExternalNetworkRouteType",
          "description": "Route Type that helps to know which bfd we are updating."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "Administrative state."
        }
      }
    },
    "ExternalNetworkBfdAdministrativeStateResponse": {
      "type": "object",
      "description": "External Network Administrative State response",
      "properties": {
        "routeType": {
          "$ref": "#/definitions/ExternalNetworkRouteType",
          "description": "Route Type that helps to know which bfd we are updating."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "Administrative state."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "ExternalNetworkBmpPatchProperties": {
      "type": "object",
      "description": "BMP Monitoring Configuration patch properties.",
      "properties": {
        "configurationState": {
          "$ref": "#/definitions/BmpConfigurationState",
          "description": "BMP Configuration State."
        }
      }
    },
    "ExternalNetworkBmpProperties": {
      "type": "object",
      "description": "BGP Monitoring Protocol (BMP) Configuration properties.",
      "properties": {
        "configurationState": {
          "type": "string",
          "description": "BMP Configuration State.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "BmpConfigurationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Disabled"
              }
            ]
          }
        }
      }
    },
    "ExternalNetworkListResult": {
      "type": "object",
      "description": "The response of a ExternalNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExternalNetwork items on this page",
          "items": {
            "$ref": "#/definitions/ExternalNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExternalNetworkPatch": {
      "type": "object",
      "description": "The ExternalNetwork patch resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExternalNetworkPatchProperties",
          "description": "External Network Patch properties."
        }
      }
    },
    "ExternalNetworkPatchProperties": {
      "type": "object",
      "description": "External Network Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicyPatch",
          "description": "Import Route Policy either IPv4 or IPv6."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicyPatch",
          "description": "Export Route Policy either IPv4 or IPv6."
        },
        "peeringOption": {
          "$ref": "#/definitions/PeeringOption",
          "description": "Peering option list."
        },
        "optionBProperties": {
          "$ref": "#/definitions/L3OptionBPatchProperties",
          "description": "option B properties object"
        },
        "optionAProperties": {
          "$ref": "#/definitions/ExternalNetworkPatchPropertiesOptionAProperties",
          "description": "option A properties object"
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/ExternalNetworkStaticRoutePatchConfiguration",
          "description": "Static Route Configuration."
        }
      }
    },
    "ExternalNetworkPatchPropertiesOptionAProperties": {
      "type": "object",
      "description": "option A properties object",
      "properties": {
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU to use for option A peering.",
          "minimum": 64,
          "maximum": 9200
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan identifier. Example : 501",
          "minimum": 501,
          "maximum": 4094
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "Fabric ASN number. Example 65001",
          "minimum": 1,
          "maximum": 4294967295,
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN number.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD configuration properties"
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/ExternalNetworkBmpPatchProperties",
          "description": "BMP Monitor Configuration."
        },
        "v4OverV6BgpSession": {
          "$ref": "#/definitions/V4OverV6BgpSessionState",
          "description": "V4OverV6 BGP Session state"
        },
        "v6OverV4BgpSession": {
          "$ref": "#/definitions/V6OverV4BgpSessionState",
          "description": "V6OverV4 BGP Session state"
        },
        "nativeIpv4PrefixLimit": {
          "$ref": "#/definitions/NativeIpv4PrefixLimitPatchProperties",
          "description": "Native IPv4 prefix limit configuration"
        },
        "nativeIpv6PrefixLimit": {
          "$ref": "#/definitions/NativeIpv6PrefixLimitPatchProperties",
          "description": "Native IPv6 prefix limit configuration"
        }
      }
    },
    "ExternalNetworkProperties": {
      "type": "object",
      "description": "External Network Properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicy",
          "description": "Import Route Policy either IPv4 or IPv6."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicy",
          "description": "Export Route Policy either IPv4 or IPv6."
        },
        "peeringOption": {
          "$ref": "#/definitions/PeeringOption",
          "description": "Peering option list."
        },
        "optionBProperties": {
          "$ref": "#/definitions/L3OptionBProperties",
          "description": "option B properties object"
        },
        "optionAProperties": {
          "$ref": "#/definitions/ExternalNetworkPropertiesOptionAProperties",
          "description": "option A properties object"
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/ExternalNetworkStaticRouteConfiguration",
          "description": "Static Route Configuration."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "peeringOption"
      ]
    },
    "ExternalNetworkPropertiesOptionAProperties": {
      "type": "object",
      "description": "option A properties object",
      "properties": {
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU to use for option A peering.",
          "default": 1500,
          "minimum": 64,
          "maximum": 9200
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan identifier. Example : 501",
          "minimum": 501,
          "maximum": 4094
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "Fabric ASN number. Example 65001",
          "minimum": 1,
          "maximum": 4294967295,
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN number.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD configuration properties"
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/ExternalNetworkBmpProperties",
          "description": "BMP Monitor Configuration."
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "v4OverV6BgpSession": {
          "type": "string",
          "description": "V4OverV6 BGP Session state",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "V4OverV6BgpSessionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "V4OverV6BgpSessionState-Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "V4OverV6BgpSessionState-Disabled"
              }
            ]
          }
        },
        "v6OverV4BgpSession": {
          "type": "string",
          "description": "V6OverV4 BGP Session state",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "V6OverV4BgpSessionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "V6OverV4BgpSessionState-Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "V6OverV4BgpSessionState-Disabled"
              }
            ]
          }
        },
        "nativeIpv4PrefixLimit": {
          "$ref": "#/definitions/NativeIpv4PrefixLimitProperties",
          "description": "Native IPv4 prefix limits configuration"
        },
        "nativeIpv6PrefixLimit": {
          "$ref": "#/definitions/NativeIpv6PrefixLimitProperties",
          "description": "Native IPv6 prefix limits configuration"
        }
      },
      "required": [
        "vlanId",
        "peerASN"
      ]
    },
    "ExternalNetworkRouteType": {
      "type": "string",
      "description": "External Network RouteType.",
      "enum": [
        "Static",
        "OptionA"
      ],
      "x-ms-enum": {
        "name": "ExternalNetworkRouteType",
        "modelAsString": true,
        "values": [
          {
            "name": "Static",
            "value": "Static",
            "description": "ExternalNetwork Static."
          },
          {
            "name": "OptionA",
            "value": "OptionA",
            "description": "ExternalNetwork OptionA."
          }
        ]
      }
    },
    "ExternalNetworkStaticRouteConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties for ExternalNetwork.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "ExternalNetworkStaticRoutePatchConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties for External Network.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "FabricLockProperties": {
      "type": "object",
      "description": "Network Fabric Lock Configuration.",
      "properties": {
        "lockState": {
          "$ref": "#/definitions/LockConfigurationState",
          "description": "NetworkFabric Lock State."
        },
        "lockType": {
          "$ref": "#/definitions/NetworkFabricLockType",
          "description": "NetworkFabric Lock Type."
        }
      }
    },
    "FabricSkuType": {
      "type": "string",
      "description": "Type of Network Fabric SKU.",
      "enum": [
        "SingleRack",
        "MultiRack"
      ],
      "x-ms-enum": {
        "name": "FabricSkuType",
        "modelAsString": true,
        "values": [
          {
            "name": "SingleRack",
            "value": "SingleRack",
            "description": "FabricSkuType-SingleRack"
          },
          {
            "name": "MultiRack",
            "value": "MultiRack",
            "description": "FabricSkuType-MultiRack"
          }
        ]
      }
    },
    "FeatureFlagProperties": {
      "type": "object",
      "description": "Feature flag properties.",
      "properties": {
        "featureFlagName": {
          "type": "string",
          "description": "Feature flag name."
        },
        "featureFlagValue": {
          "type": "string",
          "description": "Feature flag value."
        }
      }
    },
    "GatewayType": {
      "type": "string",
      "description": "Gateway Type of the resource.",
      "enum": [
        "Infrastructure",
        "Workload"
      ],
      "x-ms-enum": {
        "name": "GatewayType",
        "modelAsString": true,
        "values": [
          {
            "name": "Infrastructure",
            "value": "Infrastructure",
            "description": "GatewayType Infrastructure"
          },
          {
            "name": "Workload",
            "value": "Workload",
            "description": "GatewayType Workload"
          }
        ]
      }
    },
    "GlobalAccessControlListActionPatchProperties": {
      "type": "object",
      "description": "Global Access Control List actions patch properties",
      "properties": {
        "enableCount": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "Configuration to enable or disable ACL action count."
        }
      }
    },
    "GlobalAccessControlListActionProperties": {
      "type": "object",
      "description": "Global Access Control List actions properties",
      "properties": {
        "enableCount": {
          "type": "string",
          "description": "Configuration to enable or disable ACL action count.",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "BooleanEnumProperty",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "EnumProperty-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "EnumProperty-False"
              }
            ]
          }
        }
      }
    },
    "GlobalNetworkTapRuleActionPatchProperties": {
      "type": "object",
      "description": "Global network tap rule actions patch properties",
      "properties": {
        "enableCount": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "Configuration to enable network tap rule counter."
        },
        "truncate": {
          "type": "string",
          "description": "Truncate. 0 indicates do not truncate.",
          "minLength": 1
        }
      }
    },
    "GlobalNetworkTapRuleActionProperties": {
      "type": "object",
      "description": "Global network tap rule actions properties",
      "properties": {
        "enableCount": {
          "type": "string",
          "description": "Configuration to enable network tap rule counter.",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "BooleanEnumProperty",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "EnumProperty-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "EnumProperty-False"
              }
            ]
          }
        },
        "truncate": {
          "type": "string",
          "description": "Truncate. 0 indicates do not truncate.",
          "minLength": 1
        }
      }
    },
    "HeaderAddressProperties": {
      "type": "object",
      "description": "Header name and source addresses associated with the header.",
      "properties": {
        "headerName": {
          "type": "string",
          "description": "Name of the header."
        },
        "addressList": {
          "type": "array",
          "description": "List of source remote IP to be allowed or denied.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IPAddressType": {
      "type": "string",
      "description": "IP Address type.",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "name": "IPAddressType",
        "modelAsString": true,
        "values": [
          {
            "name": "IPv4",
            "value": "IPv4",
            "description": "IPv4 IP address"
          },
          {
            "name": "IPv6",
            "value": "IPv6",
            "description": "IPv6 IP address"
          }
        ]
      }
    },
    "IcmpConfigurationPatchProperties": {
      "type": "object",
      "description": "Internet Control Message Protocol (ICMP) configuration patch properties",
      "properties": {
        "icmpTypes": {
          "type": "array",
          "description": "Internet Control Message Protocol (ICMP) types",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IcmpConfigurationProperties": {
      "type": "object",
      "description": "Internet Control Message Protocol (ICMP) configuration",
      "properties": {
        "icmpTypes": {
          "type": "array",
          "description": "Internet Control Message Protocol (ICMP) types",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdentitySelector": {
      "type": "object",
      "description": "IdentitySelector represents the selection of a managed identity for use.",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/ManagedServiceIdentitySelectorType",
          "description": "The type of managed identity that is being selected."
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The user assigned managed identity resource ID to use. Mutually exclusive with a system assigned identity type.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        }
      },
      "required": [
        "identityType"
      ]
    },
    "IdentitySelectorPatch": {
      "type": "object",
      "description": "IdentitySelector represents the selection of a managed identity for use.",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/ManagedServiceIdentitySelectorType",
          "description": "The type of managed identity that is being selected."
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The user assigned managed identity resource ID to use. Mutually exclusive with a system assigned identity type.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        }
      }
    },
    "ImportRoutePolicy": {
      "type": "object",
      "description": "Import Route Policy either IPv4 or IPv6.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "importIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ImportRoutePolicyInformation": {
      "type": "object",
      "description": "Import Route Policy Configuration.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Import IPv4 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "importIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Import IPv6 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ImportRoutePolicyInformationPatch": {
      "type": "object",
      "description": "Import Route Policy Configuration.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Import IPv4 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "importIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "Import IPv6 Route Policy Id.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "ImportRoutePolicyPatch": {
      "type": "object",
      "description": "Import Route Policy either IPv4 or IPv6.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "importIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "InterfaceType": {
      "type": "string",
      "description": "The Interface Type. Example: Management/Data",
      "enum": [
        "Management",
        "Data"
      ],
      "x-ms-enum": {
        "name": "InterfaceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Management",
            "value": "Management",
            "description": "InterfaceType-Management"
          },
          {
            "name": "Data",
            "value": "Data",
            "description": "InterfaceType-Data"
          }
        ]
      }
    },
    "InternalNetwork": {
      "type": "object",
      "description": "Defines the Internal Network resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InternalNetworkProperties",
          "description": "The Internal Network Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InternalNetworkBfdAdministrativeStateRequest": {
      "type": "object",
      "description": "Internal Network BFD Administrative State request",
      "properties": {
        "routeType": {
          "$ref": "#/definitions/InternalNetworkRouteType",
          "description": "Route Type that helps to know which bfd we are updating."
        },
        "neighborAddress": {
          "type": "string",
          "description": "NeighborAddress - Input should be either All or Specific Ipv4 Address or Specific Ipv6 Address."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "BFD Administrative state."
        }
      }
    },
    "InternalNetworkBfdAdministrativeStateResponse": {
      "type": "object",
      "description": "Internal Network BFD Administrative State response",
      "properties": {
        "neighborAddressAdministrativeStatus": {
          "type": "array",
          "description": "NeighborAddress administrative status",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/NeighborAddressBfdAdministrativeStatus"
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "InternalNetworkBgpAdministrativeStateRequest": {
      "type": "object",
      "description": "Internal Network Administrative State Request",
      "properties": {
        "neighborAddress": {
          "type": "string",
          "description": "NeighborAddress - Input should be either All or Specific Ipv4 Address or Specific Ipv6 Address."
        },
        "administrativeState": {
          "$ref": "#/definitions/BgpAdministrativeState",
          "description": "BGP Administrative state."
        }
      }
    },
    "InternalNetworkBgpAdministrativeStateResponse": {
      "type": "object",
      "description": "Internal Network Administrative State Response",
      "properties": {
        "neighborAddressAdministrativeStatus": {
          "type": "array",
          "description": "NeighborAddress administrative status",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/NeighborAddressBgpAdministrativeStatus"
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "InternalNetworkBmpPatchProperties": {
      "type": "object",
      "description": "Internal Network BMP Configuration",
      "properties": {
        "neighborIpExclusions": {
          "type": "array",
          "description": "BMP Collector Address.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "bmpConfigurationState": {
          "$ref": "#/definitions/BmpConfigurationState",
          "description": "BMP Monitoring configuration state."
        }
      }
    },
    "InternalNetworkBmpProperties": {
      "type": "object",
      "description": "Internal Network BMP Configuration",
      "properties": {
        "neighborIpExclusions": {
          "type": "array",
          "description": "BMP Collector Address.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "bmpConfigurationState": {
          "$ref": "#/definitions/BmpConfigurationState",
          "description": "BMP Monitoring configuration state."
        }
      }
    },
    "InternalNetworkListResult": {
      "type": "object",
      "description": "The response of a InternalNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InternalNetwork items on this page",
          "items": {
            "$ref": "#/definitions/InternalNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InternalNetworkPatch": {
      "type": "object",
      "description": "The InternalNetwork patch resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InternalNetworkPatchProperties",
          "description": "InternalNetwork Patch properties."
        }
      }
    },
    "InternalNetworkPatchProperties": {
      "type": "object",
      "description": "InternalNetwork Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum transmission unit. Default value is 1500.",
          "minimum": 64,
          "maximum": 9200
        },
        "connectedIPv4Subnets": {
          "type": "array",
          "description": "List of Connected IPv4 Subnets.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ConnectedSubnetPatch"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "connectedIPv6Subnets": {
          "type": "array",
          "description": "List of connected IPv6 Subnets.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ConnectedSubnetPatch"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicy",
          "description": "Import Route Policy either IPv4 or IPv6."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicy",
          "description": "Export Route Policy either IPv4 or IPv6."
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "isMonitoringEnabled": {
          "$ref": "#/definitions/IsMonitoringEnabled",
          "description": "To check whether monitoring of internal network is enabled or not."
        },
        "bgpConfiguration": {
          "$ref": "#/definitions/BgpPatchConfiguration",
          "description": "BGP configuration properties."
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/StaticRoutePatchConfiguration",
          "description": "Static Route Configuration properties."
        },
        "nativeIpv4PrefixLimit": {
          "$ref": "#/definitions/NativeIpv4PrefixLimitPatchProperties",
          "description": "Native IPv4 Prefix Limit Configuration properties."
        },
        "nativeIpv6PrefixLimit": {
          "$ref": "#/definitions/NativeIpv6PrefixLimitPatchProperties",
          "description": "Native IPv6 Prefix Limit Configuration properties."
        }
      }
    },
    "InternalNetworkProperties": {
      "type": "object",
      "description": "Internal Network Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum transmission unit. Default value is 1500.",
          "default": 1500,
          "minimum": 64,
          "maximum": 9200
        },
        "connectedIPv4Subnets": {
          "type": "array",
          "description": "List of Connected IPv4 Subnets.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ConnectedSubnet"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "connectedIPv6Subnets": {
          "type": "array",
          "description": "List of connected IPv6 Subnets.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ConnectedSubnet"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicy",
          "description": "Import Route Policy either IPv4 or IPv6."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicy",
          "description": "Export Route Policy either IPv4 or IPv6."
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "isMonitoringEnabled": {
          "type": "string",
          "description": "To check whether monitoring of internal network is enabled or not.",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsMonitoringEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "IsMonitoringEnabled-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "IsMonitoringEnabled-False"
              }
            ]
          }
        },
        "extension": {
          "type": "string",
          "description": "Extension. Example: NoExtension | NPB.",
          "default": "NoExtension",
          "enum": [
            "NoExtension",
            "NPB"
          ],
          "x-ms-enum": {
            "name": "Extension",
            "modelAsString": true,
            "values": [
              {
                "name": "NoExtension",
                "value": "NoExtension",
                "description": "Extension-NoExtension"
              },
              {
                "name": "NPB",
                "value": "NPB",
                "description": "Extension-NPB"
              }
            ]
          }
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan identifier. Example: 1001.",
          "minimum": 100,
          "maximum": 4094
        },
        "bgpConfiguration": {
          "$ref": "#/definitions/BgpConfiguration",
          "description": "BGP configuration properties."
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/StaticRouteConfiguration",
          "description": "Static Route Configuration properties."
        },
        "nativeIpv4PrefixLimit": {
          "$ref": "#/definitions/NativeIpv4PrefixLimitProperties",
          "description": "Native IPv4 Prefix Limit Configuration properties."
        },
        "nativeIpv6PrefixLimit": {
          "$ref": "#/definitions/NativeIpv6PrefixLimitProperties",
          "description": "Native IPv6 Prefix Limit Configuration properties."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "vlanId"
      ]
    },
    "InternalNetworkRouteType": {
      "type": "string",
      "description": "Internal Network RouteType.",
      "enum": [
        "Static",
        "Bgp"
      ],
      "x-ms-enum": {
        "name": "InternalNetworkRouteType",
        "modelAsString": true,
        "values": [
          {
            "name": "Static",
            "value": "Static",
            "description": "InternalNetwork Static."
          },
          {
            "name": "Bgp",
            "value": "Bgp",
            "description": "InternalNetwork Bgp."
          }
        ]
      }
    },
    "InternetGateway": {
      "type": "object",
      "description": "The Internet Gateway resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InternetGatewayProperties",
          "description": "The Internet Gateway Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InternetGatewayListResult": {
      "type": "object",
      "description": "The response of a InternetGateway list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InternetGateway items on this page",
          "items": {
            "$ref": "#/definitions/InternetGateway"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InternetGatewayPatch": {
      "type": "object",
      "description": "The Internet Gateway patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/InternetGatewayPatchProperties",
          "description": "Resource properties."
        }
      }
    },
    "InternetGatewayPatchProperties": {
      "type": "object",
      "description": "PatchProperties for InternetGateway ",
      "properties": {
        "internetGatewayRuleId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Internet Gateway Rule.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/internetGatewayRules"
              }
            ]
          }
        }
      }
    },
    "InternetGatewayProperties": {
      "type": "object",
      "description": "Internet Gateway Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "internetGatewayRuleId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Internet Gateway Rule.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/internetGatewayRules"
              }
            ]
          }
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 Address of Internet Gateway.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number of Internet Gateway.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/GatewayType",
          "description": "Gateway Type of the resource."
        },
        "internetGatewayType": {
          "$ref": "#/definitions/GatewayType",
          "description": "Gateway Type of the resource."
        },
        "networkFabricControllerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric Controller.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabricControllers"
              }
            ]
          }
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricControllerId"
      ]
    },
    "InternetGatewayRule": {
      "type": "object",
      "description": "The Internet Gateway Rule resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InternetGatewayRuleProperties",
          "description": "The Internet Gateway Rule properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InternetGatewayRuleListResult": {
      "type": "object",
      "description": "The response of a InternetGatewayRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InternetGatewayRule items on this page",
          "items": {
            "$ref": "#/definitions/InternetGatewayRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InternetGatewayRulePatch": {
      "type": "object",
      "description": "The Internet Gateway Rules patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InternetGatewayRuleProperties": {
      "type": "object",
      "description": "Internet Gateway Rule Properties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "ruleProperties": {
          "$ref": "#/definitions/RuleProperties",
          "description": "Rules for the InternetGateways"
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "internetGatewayIds": {
          "type": "array",
          "description": "List of Internet Gateway resource Id.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "ruleProperties"
      ]
    },
    "IpCommunity": {
      "type": "object",
      "description": "The IP Community resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpCommunityProperties",
          "description": "The IP Community Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IpCommunityIdList": {
      "type": "object",
      "description": "IP Community ID list properties.",
      "properties": {
        "ipCommunityIds": {
          "type": "array",
          "description": "List of IP Community resource IDs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpCommunityListResult": {
      "type": "object",
      "description": "The response of a IpCommunity list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IpCommunity items on this page",
          "items": {
            "$ref": "#/definitions/IpCommunity"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IpCommunityPatch": {
      "type": "object",
      "description": "The IP Community patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/IpCommunityPatchableProperties",
          "description": "IP Community patchable properties."
        }
      }
    },
    "IpCommunityPatchableProperties": {
      "type": "object",
      "description": "IP Community patchable properties.",
      "properties": {
        "ipCommunityRules": {
          "type": "array",
          "description": "List of IP Community Rules.",
          "items": {
            "$ref": "#/definitions/IpCommunityRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IpCommunityProperties": {
      "type": "object",
      "description": "IP Community Properties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "ipCommunityRules": {
          "type": "array",
          "description": "List of IP Community Rules.",
          "items": {
            "$ref": "#/definitions/IpCommunityRule"
          },
          "x-ms-identifiers": []
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "ipCommunityRules"
      ]
    },
    "IpCommunityRule": {
      "type": "object",
      "description": "IP Community patchable properties.",
      "properties": {
        "action": {
          "$ref": "#/definitions/CommunityActionTypes",
          "description": "Action to be taken on the configuration. Example: Permit | Deny."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "wellKnownCommunities": {
          "type": "array",
          "description": "Supported well known Community List.",
          "items": {
            "$ref": "#/definitions/WellKnownCommunities"
          }
        },
        "communityMembers": {
          "type": "array",
          "description": "List the community members of IP Community.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "communityMembers"
      ]
    },
    "IpExtendedCommunity": {
      "type": "object",
      "description": "The IP Extended Community resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpExtendedCommunityProperties",
          "description": "The IpExtendedCommunity properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IpExtendedCommunityIdList": {
      "type": "object",
      "description": "IP Extended Community Id list properties.",
      "properties": {
        "ipExtendedCommunityIds": {
          "type": "array",
          "description": "List of IP Extended Community resource IDs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpExtendedCommunityListResult": {
      "type": "object",
      "description": "The response of a IpExtendedCommunity list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IpExtendedCommunity items on this page",
          "items": {
            "$ref": "#/definitions/IpExtendedCommunity"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IpExtendedCommunityPatch": {
      "type": "object",
      "description": "The IP Extended Communities patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/IpExtendedCommunityPatchProperties",
          "description": "IP Extended Community patchable properties."
        }
      }
    },
    "IpExtendedCommunityPatchProperties": {
      "type": "object",
      "description": "IP Extended Community patchable properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "ipExtendedCommunityRules": {
          "type": "array",
          "description": "List of IP Extended Community Rules.",
          "items": {
            "$ref": "#/definitions/IpExtendedCommunityRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IpExtendedCommunityProperties": {
      "type": "object",
      "description": "IP Extended Community Properties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "ipExtendedCommunityRules": {
          "type": "array",
          "description": "List of IP Extended Community Rules.",
          "items": {
            "$ref": "#/definitions/IpExtendedCommunityRule"
          },
          "x-ms-identifiers": []
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "ipExtendedCommunityRules"
      ]
    },
    "IpExtendedCommunityRule": {
      "type": "object",
      "description": "List of IP Extended Community Rules.",
      "properties": {
        "action": {
          "$ref": "#/definitions/CommunityActionTypes",
          "description": "Action to be taken on the configuration. Example: Permit | Deny."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "routeTargets": {
          "type": "array",
          "description": "Route Target List.The expected formats are ASN(plain):NN >> example 4294967294:50, ASN.ASN:NN >> example 65533.65333:40, IP-address:NN >> example 10.10.10.10:65535. The possible values of ASN,NN are in range of 0-65535, ASN(plain) is in range of 0-4294967295.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "routeTargets"
      ]
    },
    "IpGroupPatchProperties": {
      "type": "object",
      "description": "IP Group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "IP Group name.",
          "minLength": 1
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "IP Address type."
        },
        "ipPrefixes": {
          "type": "array",
          "description": "List of IP Prefixes.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpGroupProperties": {
      "type": "object",
      "description": "IP Group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "IP Group name.",
          "minLength": 1
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "IP Address type."
        },
        "ipPrefixes": {
          "type": "array",
          "description": "List of IP Prefixes.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpMatchCondition": {
      "type": "object",
      "description": "Defines the condition that can be filtered using the selected IPs.",
      "properties": {
        "type": {
          "$ref": "#/definitions/SourceDestinationType",
          "description": "IP Address type that needs to be matched."
        },
        "prefixType": {
          "$ref": "#/definitions/PrefixType",
          "description": "IP Prefix Type that needs to be matched."
        },
        "ipPrefixValues": {
          "type": "array",
          "description": "The list of IP Prefixes that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ipGroupNames": {
          "type": "array",
          "description": "The List of IP Group Names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpMatchConditionPatch": {
      "type": "object",
      "description": "Defines the condition that can be filtered using the selected IPs.",
      "properties": {
        "type": {
          "$ref": "#/definitions/SourceDestinationType",
          "description": "IP Address type that needs to be matched."
        },
        "prefixType": {
          "$ref": "#/definitions/PrefixType",
          "description": "IP Prefix Type that needs to be matched."
        },
        "ipPrefixValues": {
          "type": "array",
          "description": "The list of IP Prefixes that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ipGroupNames": {
          "type": "array",
          "description": "The List of IP Group Names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpPrefix": {
      "type": "object",
      "description": "The IP Prefix resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpPrefixProperties",
          "description": "The IP Prefix properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IpPrefixListResult": {
      "type": "object",
      "description": "The response of a IpPrefix list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IpPrefix items on this page",
          "items": {
            "$ref": "#/definitions/IpPrefix"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IpPrefixPatch": {
      "type": "object",
      "description": "The IP Prefix patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/IpPrefixPatchProperties",
          "description": "IP Prefix patchable properties."
        }
      }
    },
    "IpPrefixPatchProperties": {
      "type": "object",
      "description": "IP Prefix patchable properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "ipPrefixRules": {
          "type": "array",
          "description": "The list of IP Prefix Rules.",
          "items": {
            "$ref": "#/definitions/IpPrefixRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IpPrefixProperties": {
      "type": "object",
      "description": "IP Prefix Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "ipPrefixRules": {
          "type": "array",
          "description": "The list of IP Prefix Rules.",
          "items": {
            "$ref": "#/definitions/IpPrefixRule"
          },
          "x-ms-identifiers": []
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "ipPrefixRules"
      ]
    },
    "IpPrefixRule": {
      "type": "object",
      "description": "IP Prefix Rule properties.",
      "properties": {
        "action": {
          "$ref": "#/definitions/CommunityActionTypes",
          "description": "Action to be taken on the configuration. Example: Permit | Deny."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "networkPrefix": {
          "type": "string",
          "description": "Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126"
        },
        "condition": {
          "$ref": "#/definitions/Condition",
          "description": "Specify prefix-list bounds."
        },
        "subnetMaskLength": {
          "type": "string",
          "description": "SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible values of IPv6 are 1 - 128."
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "networkPrefix"
      ]
    },
    "IsMonitoringEnabled": {
      "type": "string",
      "description": "To check whether monitoring of internal network is enabled or not.",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "IsMonitoringEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True",
            "description": "IsMonitoringEnabled-True"
          },
          {
            "name": "False",
            "value": "False",
            "description": "IsMonitoringEnabled-False"
          }
        ]
      }
    },
    "IsolationDomainPatchProperties": {
      "type": "object",
      "description": "Isolation Domain Properties.",
      "properties": {
        "encapsulation": {
          "$ref": "#/definitions/Encapsulation",
          "description": "Type of encapsulation."
        },
        "neighborGroupIds": {
          "type": "array",
          "description": "List of Neighbor Group IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
                }
              ]
            }
          }
        }
      }
    },
    "IsolationDomainProperties": {
      "type": "object",
      "description": "Isolation Domain Properties.",
      "properties": {
        "encapsulation": {
          "$ref": "#/definitions/Encapsulation",
          "description": "Type of encapsulation."
        },
        "neighborGroupIds": {
          "type": "array",
          "description": "List of Neighbor Group IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
                }
              ]
            }
          }
        }
      }
    },
    "L2IsolationDomain": {
      "type": "object",
      "description": "The L2 Isolation Domain resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/L2IsolationDomainProperties",
          "description": "The L2IsolationDomain properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "L2IsolationDomainListResult": {
      "type": "object",
      "description": "The response of a L2IsolationDomain list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The L2IsolationDomain items on this page",
          "items": {
            "$ref": "#/definitions/L2IsolationDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "L2IsolationDomainPatch": {
      "type": "object",
      "description": "The L2 Isolation Domain patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/L2IsolationDomainPatchProperties",
          "description": "Resource properties."
        }
      }
    },
    "L2IsolationDomainPatchProperties": {
      "type": "object",
      "description": "L2 Isolation Domain Patch Properties defines the patchable properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum transmission unit. Default value is 1500.",
          "minimum": 64,
          "maximum": 9200
        },
        "extendedVlan": {
          "$ref": "#/definitions/ExtendedVlan",
          "description": "Extended VLAN status."
        },
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the networkToNetworkInterconnectId of the L2 ISD resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        }
      }
    },
    "L2IsolationDomainProperties": {
      "type": "object",
      "description": "L2Isolation Domain Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan Identifier of the Network Fabric. Example: 501.",
          "minimum": 100,
          "maximum": 4094
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum transmission unit. Default value is 1500.",
          "default": 1500,
          "minimum": 64,
          "maximum": 9200
        },
        "extendedVlan": {
          "type": "string",
          "description": "Extended VLAN status, default value is Disabled.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ExtendedVlan",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Extended VLAN is enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Extended VLAN is disabled."
              }
            ]
          }
        },
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the networkToNetworkInterconnectId of the L2 ISD resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricId",
        "vlanId"
      ]
    },
    "L3ExportRoutePolicy": {
      "type": "object",
      "description": "Array of ARM Resource ID of the RoutePolicies.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "L3ExportRoutePolicyPatch": {
      "type": "object",
      "description": "Array of ARM Resource ID of the RoutePolicies.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        },
        "exportIpv6RoutePolicyId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the RoutePolicy.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/routePolicies"
              }
            ]
          }
        }
      }
    },
    "L3IsolationDomain": {
      "type": "object",
      "description": "The L3 Isolation Domain resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/L3IsolationDomainProperties",
          "description": "The L3 Isolation Domain Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "L3IsolationDomainListResult": {
      "type": "object",
      "description": "The response of a L3IsolationDomain list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The L3IsolationDomain items on this page",
          "items": {
            "$ref": "#/definitions/L3IsolationDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "L3IsolationDomainPatch": {
      "type": "object",
      "description": "The L3 Isolation Domain patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/L3IsolationDomainPatchProperties",
          "description": "Resource properties."
        }
      }
    },
    "L3IsolationDomainPatchProperties": {
      "type": "object",
      "description": "Resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "redistributeConnectedSubnets": {
          "$ref": "#/definitions/RedistributeConnectedSubnets",
          "description": "Advertise Connected Subnets. Ex: \"True\" | \"False\"."
        },
        "redistributeStaticRoutes": {
          "$ref": "#/definitions/RedistributeStaticRoutes",
          "description": "Advertise Static Routes. Ex: \"True\" | \"False\"."
        },
        "aggregateRouteConfiguration": {
          "$ref": "#/definitions/AggregateRoutePatchConfiguration",
          "description": "Aggregate route configurations."
        },
        "connectedSubnetRoutePolicy": {
          "$ref": "#/definitions/ConnectedSubnetRoutePolicyPatch",
          "description": "Connected Subnet RoutePolicy"
        },
        "staticRouteRoutePolicy": {
          "$ref": "#/definitions/StaticRouteRoutePolicyPatch",
          "description": "Static Route - route policy."
        },
        "routePrefixLimit": {
          "$ref": "#/definitions/RoutePrefixLimitPatchProperties",
          "description": "Virtual Routing and Forwarding (VRF) Limit configuration."
        }
      }
    },
    "L3IsolationDomainProperties": {
      "type": "object",
      "description": "L3 Isolation Domain Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "redistributeConnectedSubnets": {
          "type": "string",
          "description": "Advertise Connected Subnets. Ex: \"True\" | \"False\".",
          "default": "True",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "RedistributeConnectedSubnets",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "RedistributeConnectedSubnets-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "RedistributeConnectedSubnets-False"
              }
            ]
          }
        },
        "redistributeStaticRoutes": {
          "type": "string",
          "description": "Advertise Static Routes. Ex: \"True\" | \"False\".",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "RedistributeStaticRoutes",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "RedistributeStaticRoutes-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "RedistributeStaticRoutes-False"
              }
            ]
          }
        },
        "aggregateRouteConfiguration": {
          "$ref": "#/definitions/AggregateRouteConfiguration",
          "description": "Aggregate route configurations."
        },
        "connectedSubnetRoutePolicy": {
          "$ref": "#/definitions/ConnectedSubnetRoutePolicy",
          "description": "Connected Subnet RoutePolicy"
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network Fabric.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "staticRouteRoutePolicy": {
          "$ref": "#/definitions/StaticRouteRoutePolicy",
          "description": "Static Route - route policy."
        },
        "uniqueRdConfiguration": {
          "$ref": "#/definitions/L3UniqueRouteDistinguisherProperties",
          "description": "Unique Route Distinguisher configuration"
        },
        "routePrefixLimit": {
          "$ref": "#/definitions/RoutePrefixLimitProperties",
          "description": "VRF Limit configuration."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricId"
      ]
    },
    "L3OptionBPatchProperties": {
      "type": "object",
      "description": "Option B configuration.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "routeTargets": {
          "$ref": "#/definitions/RouteTargetPatchInformation",
          "description": "RouteTargets to be applied."
        }
      }
    },
    "L3OptionBProperties": {
      "type": "object",
      "description": "Option B configuration.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "routeTargets": {
          "$ref": "#/definitions/RouteTargetInformation",
          "description": "RouteTargets to be applied."
        }
      }
    },
    "L3UniqueRouteDistinguisherProperties": {
      "type": "object",
      "description": "Unique Route Distinguisher properties.",
      "properties": {
        "uniqueRds": {
          "type": "array",
          "description": "List of Unique Route Distinguisher addresses.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "LastOperationProperties": {
      "type": "object",
      "description": "Details of the last operations performed on the resource",
      "properties": {
        "details": {
          "type": "string",
          "description": "Details status of the last operation performed on the resource.",
          "readOnly": true
        }
      }
    },
    "Layer2Configuration": {
      "type": "object",
      "description": "Common properties for Layer2 Configuration.",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU of the packets between PE & CE.",
          "default": 1500,
          "minimum": 64,
          "maximum": 9200
        },
        "interfaces": {
          "type": "array",
          "description": "List of network device interfaces resource IDs.",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces"
                }
              ]
            }
          }
        }
      }
    },
    "Layer2ConfigurationPatch": {
      "type": "object",
      "description": "Common properties for Layer2 Configuration.",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU of the packets between PE & CE.",
          "minimum": 64,
          "maximum": 9200
        },
        "interfaces": {
          "type": "array",
          "description": "List of network device interfaces resource IDs.",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces"
                }
              ]
            }
          }
        }
      }
    },
    "Layer4Protocol": {
      "type": "string",
      "description": "Layer4 protocol type that needs to be matched.",
      "enum": [
        "TCP",
        "UDP",
        "SCTP"
      ],
      "x-ms-enum": {
        "name": "Layer4Protocol",
        "modelAsString": true,
        "values": [
          {
            "name": "TCP",
            "value": "TCP",
            "description": "TCP(Transmission Control Protocol) Protocol"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "UDP(User Datagram Protocol) Protocol"
          },
          {
            "name": "SCTP",
            "value": "SCTP",
            "description": "SCTP(Streaming Control Transmission Protocol) Protocol"
          }
        ]
      }
    },
    "LockConfigurationState": {
      "type": "string",
      "description": "Lock Configuration State.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "LockConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "LockConfigurationState Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "LockConfigurationState Disabled"
          }
        ]
      }
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "description": "Managed Resource Group configuration properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The NFC service will be hosted in a Managed resource group."
        },
        "location": {
          "type": "string",
          "description": "Managed resource group location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ManagedServiceIdentityPatch": {
      "type": "object",
      "description": "The managed service identities assigned to this resource.",
      "properties": {
        "type": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentity",
            "x-nullable": true
          }
        }
      }
    },
    "ManagedServiceIdentitySelectorType": {
      "type": "string",
      "description": "The type of managed identity.",
      "enum": [
        "SystemAssignedIdentity",
        "UserAssignedIdentity"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentitySelectorType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedIdentity",
            "value": "SystemAssignedIdentity",
            "description": "System Assigned Identity."
          },
          {
            "name": "UserAssignedIdentity",
            "value": "UserAssignedIdentity",
            "description": "User Assigned Identity."
          }
        ]
      }
    },
    "ManagementNetworkConfigurationProperties": {
      "type": "object",
      "description": "Configuration to be used to setup the management network.",
      "properties": {
        "infrastructureVpnConfiguration": {
          "$ref": "#/definitions/VpnConfigurationProperties",
          "description": "VPN Configuration properties."
        },
        "workloadVpnConfiguration": {
          "$ref": "#/definitions/VpnConfigurationProperties",
          "description": "VPN Configuration properties."
        }
      },
      "required": [
        "infrastructureVpnConfiguration",
        "workloadVpnConfiguration"
      ]
    },
    "ManagementNetworkPatchConfiguration": {
      "type": "object",
      "description": "Configuration to be used to setup the management network.",
      "properties": {
        "infrastructureVpnConfiguration": {
          "$ref": "#/definitions/VpnConfigurationPatchableProperties",
          "description": "VPN Configuration properties."
        },
        "workloadVpnConfiguration": {
          "$ref": "#/definitions/VpnConfigurationPatchableProperties",
          "description": "VPN Configuration properties."
        }
      }
    },
    "MicroBfdState": {
      "type": "string",
      "description": "Micro Bidirectional Forwarding Detection (BFD) enabled/disabled state.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MicroBfdState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "MicroBfdState-Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "MicroBfdState-Disabled"
          }
        ]
      }
    },
    "NNIDerivedUniqueRouteDistinguisherConfigurationState": {
      "type": "string",
      "description": "NNI Derived Unique Route Distinguisher Configuration State.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NNIDerivedUniqueRouteDistinguisherConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "NNI derived unique route distinguisher configuration state Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "NNI derived unique route distinguisher configuration state Disabled"
          }
        ]
      }
    },
    "NativeIpv4PrefixLimitPatchProperties": {
      "type": "object",
      "description": "External Network native IPv4 prefix limits patch properties",
      "properties": {
        "prefixLimits": {
          "type": "array",
          "description": "Prefix limits",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PrefixLimitPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NativeIpv4PrefixLimitProperties": {
      "type": "object",
      "description": "External Network native IPv4 prefix limit properties",
      "properties": {
        "prefixLimits": {
          "type": "array",
          "description": "Prefix limits",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PrefixLimitProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NativeIpv6PrefixLimitPatchProperties": {
      "type": "object",
      "description": "External Network native IPv6 prefix limits patch properties",
      "properties": {
        "prefixLimits": {
          "type": "array",
          "description": "Prefix limits",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PrefixLimitPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NativeIpv6PrefixLimitProperties": {
      "type": "object",
      "description": "External Network native IPv6 prefix limit properties",
      "properties": {
        "prefixLimits": {
          "type": "array",
          "description": "Prefix limits",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PrefixLimitProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NeighborAddress": {
      "type": "object",
      "description": "Neighbor Address properties.",
      "properties": {
        "address": {
          "type": "string",
          "description": "IP Address.",
          "minLength": 1
        },
        "bfdAdministrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "BFD Administrative State for each Neighbor Address. Example: Enabled | Disabled.",
          "readOnly": true
        },
        "bgpAdministrativeState": {
          "$ref": "#/definitions/BgpAdministrativeState",
          "description": "BGP Administrative State for each Neighbor Address. Example: Enabled | Disabled.",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        }
      }
    },
    "NeighborAddressBfdAdministrativeStatus": {
      "type": "object",
      "description": "Neighbor Address Bidirectional Forwarding Detection (BFD) Administrative Status",
      "properties": {
        "neighborAddress": {
          "type": "string",
          "description": "NeighborAddress - Input should be either All or Specific Ipv4 Address or Specific Ipv6 Address."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "BFD Administrative state."
        },
        "error": {
          "type": "string",
          "description": "Error message."
        }
      }
    },
    "NeighborAddressBgpAdministrativeStatus": {
      "type": "object",
      "description": "Neighbor Address BGP Administrative Status",
      "properties": {
        "neighborAddress": {
          "type": "string",
          "description": "NeighborAddress - Input should be either All or Specific Ipv4 Address or Specific Ipv6 Address."
        },
        "administrativeState": {
          "$ref": "#/definitions/BgpAdministrativeState",
          "description": "BGP Administrative state."
        },
        "error": {
          "type": "string",
          "description": "Error message."
        }
      }
    },
    "NeighborAddressPatch": {
      "type": "object",
      "description": "Neighbor Address properties.",
      "properties": {
        "address": {
          "type": "string",
          "description": "IP Address.",
          "minLength": 1
        },
        "bfdAdministrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "BFD Administrative State for each Neighbor Address. Example: Enabled | Disabled.",
          "readOnly": true
        },
        "bgpAdministrativeState": {
          "$ref": "#/definitions/BgpAdministrativeState",
          "description": "BGP Administrative State for each Neighbor Address. Example: Enabled | Disabled.",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        }
      }
    },
    "NeighborGroup": {
      "type": "object",
      "description": "Defines the Neighbor Group.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NeighborGroupProperties",
          "description": "The NeighborGroup Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NeighborGroupDestination": {
      "type": "object",
      "description": "An array of destination IPv4 Addresses or IPv6 Addresses.",
      "properties": {
        "ipv4Addresses": {
          "type": "array",
          "description": "Array of IPv4 Addresses.",
          "maxItems": 16,
          "items": {
            "type": "string"
          }
        },
        "ipv6Addresses": {
          "type": "array",
          "description": "Array of IPv6 Addresses.",
          "maxItems": 16,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NeighborGroupDestinationPatch": {
      "type": "object",
      "description": "An array of destination IPv4 Addresses or IPv6 Addresses.",
      "properties": {
        "ipv4Addresses": {
          "type": "array",
          "description": "Array of IPv4 Addresses.",
          "maxItems": 16,
          "items": {
            "type": "string"
          }
        },
        "ipv6Addresses": {
          "type": "array",
          "description": "Array of IPv6 Addresses.",
          "maxItems": 16,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NeighborGroupListResult": {
      "type": "object",
      "description": "The response of a NeighborGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NeighborGroup items on this page",
          "items": {
            "$ref": "#/definitions/NeighborGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NeighborGroupPatch": {
      "type": "object",
      "description": "The Neighbor Group Patch definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NeighborGroupPatchProperties",
          "description": "Neighbor Group Patch properties."
        }
      }
    },
    "NeighborGroupPatchProperties": {
      "type": "object",
      "description": "Neighbor Group Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "destination": {
          "$ref": "#/definitions/NeighborGroupDestinationPatch",
          "description": "An array of destination IPv4 Addresses or IPv6 Addresses."
        }
      }
    },
    "NeighborGroupProperties": {
      "type": "object",
      "description": "Neighbor Group Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "destination": {
          "$ref": "#/definitions/NeighborGroupDestination",
          "description": "An array of destination IPv4 Addresses or IPv6 Addresses."
        },
        "networkTapIds": {
          "type": "array",
          "description": "List of NetworkTap IDs where neighbor group is associated.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkTaps"
                }
              ]
            }
          },
          "readOnly": true
        },
        "networkTapRuleIds": {
          "type": "array",
          "description": "List of Network Tap Rule IDs where neighbor group is associated.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
                }
              ]
            }
          },
          "readOnly": true
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "destination"
      ]
    },
    "NetworkDevice": {
      "type": "object",
      "description": "The Network Device resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkDeviceProperties",
          "description": "The NetworkDevice properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkDeviceListResult": {
      "type": "object",
      "description": "The response of a NetworkDevice list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkDevice items on this page",
          "items": {
            "$ref": "#/definitions/NetworkDevice"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkDevicePatchParameters": {
      "type": "object",
      "description": "The Network Device Patch Parameters defines the patch parameters of the resource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkDevicePatchParametersProperties",
          "description": "Network Device Patch properties."
        }
      }
    },
    "NetworkDevicePatchParametersProperties": {
      "type": "object",
      "description": "Network Device Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "hostName": {
          "type": "string",
          "description": "The host name of the device.",
          "minLength": 1
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.",
          "minLength": 1
        }
      }
    },
    "NetworkDeviceProperties": {
      "type": "object",
      "description": "Network Device Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "hostName": {
          "type": "string",
          "description": "The host name of the device.",
          "minLength": 1
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.",
          "minLength": 1
        },
        "version": {
          "type": "string",
          "description": "Current version of the device as defined in SKU.",
          "readOnly": true
        },
        "networkDeviceSku": {
          "type": "string",
          "description": "Network Device SKU name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkDeviceRole": {
          "$ref": "#/definitions/NetworkDeviceRole",
          "description": "NetworkDeviceRole is the device role: Example: CE | ToR.",
          "readOnly": true
        },
        "networkRackId": {
          "type": "string",
          "description": "Reference to network rack resource id.",
          "readOnly": true
        },
        "managementIpv4Address": {
          "type": "string",
          "description": "Management IPv4 Address.",
          "readOnly": true
        },
        "managementIpv6Address": {
          "type": "string",
          "description": "Management IPv6 Address.",
          "readOnly": true
        },
        "rwDeviceConfig": {
          "type": "string",
          "description": "User configured read-write configuration applied on the network devices.",
          "readOnly": true
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "serialNumber"
      ]
    },
    "NetworkDeviceRole": {
      "type": "string",
      "description": "NetworkDeviceRole is the device role: Example: CE | ToR.",
      "enum": [
        "CE",
        "ToR",
        "NPB",
        "TS",
        "Management"
      ],
      "x-ms-enum": {
        "name": "NetworkDeviceRole",
        "modelAsString": true,
        "values": [
          {
            "name": "CE",
            "value": "CE",
            "description": "NetworkDeviceRole-CE(Customer Edge)"
          },
          {
            "name": "ToR",
            "value": "ToR",
            "description": "NetworkDeviceRole-ToR(top of rack)"
          },
          {
            "name": "NPB",
            "value": "NPB",
            "description": "NetworkDeviceRole-NPB(Network Packet Broker)"
          },
          {
            "name": "TS",
            "value": "TS",
            "description": "NetworkDeviceRole-TS(Terminal Server)"
          },
          {
            "name": "Management",
            "value": "Management",
            "description": "NetworkDeviceRole-Management"
          }
        ]
      }
    },
    "NetworkDeviceRoleName": {
      "type": "string",
      "description": "Available roles for the network device.",
      "enum": [
        "CE",
        "ToR",
        "NPB",
        "TS",
        "Management"
      ],
      "x-ms-enum": {
        "name": "NetworkDeviceRoleName",
        "modelAsString": true,
        "values": [
          {
            "name": "CE",
            "value": "CE",
            "description": "NetworkDeviceRoleName-CE(Customer Edge)"
          },
          {
            "name": "ToR",
            "value": "ToR",
            "description": "NetworkDeviceRoleName-ToR(top of rack)"
          },
          {
            "name": "NPB",
            "value": "NPB",
            "description": "NetworkDeviceRoleName-NPB(Network Packet Broker)"
          },
          {
            "name": "TS",
            "value": "TS",
            "description": "NetworkDeviceRoleName-TS(Terminal Server)"
          },
          {
            "name": "Management",
            "value": "Management",
            "description": "NetworkDeviceRoleName-Management"
          }
        ]
      }
    },
    "NetworkDeviceSku": {
      "type": "object",
      "description": "The NetworkDeviceSku resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkDeviceSkuProperties",
          "description": "The NetworkDeviceSku properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkDeviceSkuListResult": {
      "type": "object",
      "description": "The response of a NetworkDeviceSku list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkDeviceSku items on this page",
          "items": {
            "$ref": "#/definitions/NetworkDeviceSku"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkDeviceSkuProperties": {
      "type": "object",
      "description": "Network Device SKU Properties defines the properties of the resource.",
      "properties": {
        "model": {
          "type": "string",
          "description": "Model of the network device."
        },
        "manufacturer": {
          "type": "string",
          "description": "Manufacturer of the network device."
        },
        "supportedVersions": {
          "type": "array",
          "description": "List of supported version details of network device.",
          "items": {
            "$ref": "#/definitions/SupportedVersionProperties"
          },
          "x-ms-identifiers": [
            "version"
          ]
        },
        "supportedRoleTypes": {
          "type": "array",
          "description": "Available roles for the network device.",
          "items": {
            "$ref": "#/definitions/NetworkDeviceRoleName"
          }
        },
        "interfaces": {
          "type": "array",
          "description": "List of network device interfaces.",
          "items": {
            "$ref": "#/definitions/DeviceInterfaceProperties"
          },
          "x-ms-identifiers": [
            "identifier"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "model"
      ]
    },
    "NetworkFabric": {
      "type": "object",
      "description": "The Network Fabric resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkFabricProperties",
          "description": "The NetworkFabric Properties"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkFabricController": {
      "type": "object",
      "description": "The Network Fabric Controller resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkFabricControllerProperties",
          "description": "The NetworkFabricController Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkFabricControllerListResult": {
      "type": "object",
      "description": "The response of a NetworkFabricController list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkFabricController items on this page",
          "items": {
            "$ref": "#/definitions/NetworkFabricController"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkFabricControllerPatch": {
      "type": "object",
      "description": "The Network Fabric Controller Patch payload definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkFabricControllerPatchProperties",
          "description": "Network Fabric Controller patch properties."
        }
      }
    },
    "NetworkFabricControllerPatchProperties": {
      "type": "object",
      "description": "Network Fabric Controller patch properties.",
      "properties": {
        "infrastructureExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          },
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ]
        },
        "workloadExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          },
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ]
        }
      }
    },
    "NetworkFabricControllerProperties": {
      "type": "object",
      "description": "NetworkFabricControllerProperties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "infrastructureExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          },
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ]
        },
        "workloadExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          },
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ]
        },
        "infrastructureServices": {
          "$ref": "#/definitions/ControllerServices",
          "description": "InfrastructureServices IP ranges.",
          "readOnly": true
        },
        "workloadServices": {
          "$ref": "#/definitions/ControllerServices",
          "description": "WorkloadServices IP ranges.",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed Resource Group configuration properties."
        },
        "networkFabricIds": {
          "type": "array",
          "description": "The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
                }
              ]
            }
          },
          "readOnly": true
        },
        "isWorkloadManagementNetworkEnabled": {
          "type": "string",
          "description": "A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints.",
          "default": "True",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsWorkloadManagementNetworkEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "IsWorkloadManagementNetworkEnabled-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "IsWorkloadManagementNetworkEnabled-False"
              }
            ]
          }
        },
        "tenantInternetGatewayIds": {
          "type": "array",
          "description": "List of tenant InternetGateway resource IDs",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/internetGateways"
                }
              ]
            }
          },
          "readOnly": true
        },
        "ipv4AddressSpace": {
          "type": "string",
          "description": "IPv4 Network Fabric Controller Address Space.",
          "default": "10.0.0.0/19",
          "minLength": 1
        },
        "ipv6AddressSpace": {
          "type": "string",
          "description": "IPv6 Network Fabric Controller Address Space.",
          "default": "FC00::/59",
          "minLength": 1
        },
        "nfcSku": {
          "type": "string",
          "description": "Network Fabric Controller SKU.",
          "default": "Standard",
          "enum": [
            "Basic",
            "Standard",
            "HighPerformance"
          ],
          "x-ms-enum": {
            "name": "NfcSku",
            "modelAsString": true,
            "values": [
              {
                "name": "Basic",
                "value": "Basic",
                "description": "NfcSku-Basic"
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "NfcSku-Standard"
              },
              {
                "name": "HighPerformance",
                "value": "HighPerformance",
                "description": "NfcSku-HighPerformance"
              }
            ]
          }
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.",
          "readOnly": true
        }
      }
    },
    "NetworkFabricListResult": {
      "type": "object",
      "description": "The response of a NetworkFabric list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkFabric items on this page",
          "items": {
            "$ref": "#/definitions/NetworkFabric"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkFabricLockAction": {
      "type": "string",
      "description": "Network fabric lock action",
      "enum": [
        "Lock",
        "Unlock"
      ],
      "x-ms-enum": {
        "name": "NetworkFabricLockAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Lock",
            "value": "Lock",
            "description": "Perform lock operation"
          },
          {
            "name": "Unlock",
            "value": "Unlock",
            "description": "Perform unlock operation"
          }
        ]
      }
    },
    "NetworkFabricLockRequest": {
      "type": "object",
      "description": "Network Fabric Lock Request.",
      "properties": {
        "lockType": {
          "$ref": "#/definitions/NetworkFabricLockType",
          "description": "Type of lock to be applied"
        },
        "action": {
          "$ref": "#/definitions/NetworkFabricLockAction",
          "description": "Action to be performed on the lock"
        }
      }
    },
    "NetworkFabricLockType": {
      "type": "string",
      "description": "Network fabric lock type",
      "enum": [
        "Administrative",
        "Configuration"
      ],
      "x-ms-enum": {
        "name": "NetworkFabricLockType",
        "modelAsString": true,
        "values": [
          {
            "name": "Administrative",
            "value": "Administrative",
            "description": "A administrative lock/unlock operation will be performed"
          },
          {
            "name": "Configuration",
            "value": "Configuration",
            "description": "A lock/unlock operation will be performed on the configuration"
          }
        ]
      }
    },
    "NetworkFabricPatch": {
      "type": "object",
      "description": "The Network Fabric resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkFabricPatchProperties",
          "description": "Network Fabric Patch properties."
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentityPatch",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "NetworkFabricPatchProperties": {
      "type": "object",
      "description": "Network Fabric Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "rackCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of compute racks associated to Network Fabric.",
          "minimum": 1,
          "maximum": 8
        },
        "serverCountPerRack": {
          "type": "integer",
          "format": "int32",
          "description": "Number of servers.Possible values are from 1-16.",
          "minimum": 1,
          "maximum": 16
        },
        "ipv4Prefix": {
          "type": "string",
          "description": "IPv4Prefix for Management Network. Example: 10.1.0.0/19.",
          "minLength": 1
        },
        "ipv6Prefix": {
          "type": "string",
          "description": "IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.",
          "minLength": 1
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of CE devices for CE/PE connectivity.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "storageAccountConfiguration": {
          "$ref": "#/definitions/StorageAccountPatchConfiguration",
          "description": "Bring your own storage account configurations for Network Fabric."
        },
        "terminalServerConfiguration": {
          "$ref": "#/definitions/TerminalServerPatchConfiguration",
          "description": "Network and credentials configuration already applied to terminal server."
        },
        "managementNetworkConfiguration": {
          "$ref": "#/definitions/ManagementNetworkPatchConfiguration",
          "description": "Configuration to be used to setup the management network."
        },
        "hardwareAlertThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Hardware alert threshold percentage. Possible values are from 20 to 100.",
          "minimum": 20,
          "maximum": 100
        },
        "controlPlaneAcls": {
          "type": "array",
          "description": "Control Plane Access Control List ARM resource IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
                }
              ]
            }
          }
        },
        "trustedIpPrefixes": {
          "type": "array",
          "description": "Trusted IP Prefix ARM resource IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/ipPrefixes"
                }
              ]
            }
          }
        },
        "uniqueRdConfiguration": {
          "$ref": "#/definitions/UniqueRouteDistinguisherPatchProperties",
          "description": "Unique Route Distinguisher configuration"
        }
      }
    },
    "NetworkFabricProperties": {
      "type": "object",
      "description": "Network Fabric Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkFabricSku": {
          "type": "string",
          "description": "Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.",
          "minLength": 1,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "fabricVersion": {
          "type": "string",
          "description": "The version of Network Fabric.",
          "minLength": 1
        },
        "routerIds": {
          "type": "array",
          "description": "Array of router IDs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "storageAccountConfiguration": {
          "$ref": "#/definitions/StorageAccountConfiguration",
          "description": "Bring your own storage account configurations for Network Fabric."
        },
        "fabricLocks": {
          "type": "array",
          "description": "Network Fabric Lock details",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FabricLockProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "networkFabricControllerId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID for the NetworkFabricController the NetworkFabric belongs.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabricControllers"
              }
            ]
          }
        },
        "rackCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of compute racks associated to Network Fabric.",
          "minimum": 1,
          "maximum": 8
        },
        "serverCountPerRack": {
          "type": "integer",
          "format": "int32",
          "description": "Number of servers.Possible values are from 1-16.",
          "minimum": 1,
          "maximum": 16
        },
        "ipv4Prefix": {
          "type": "string",
          "description": "IPv4Prefix for Management Network. Example: 10.1.0.0/19.",
          "minLength": 1
        },
        "ipv6Prefix": {
          "type": "string",
          "description": "IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59",
          "minLength": 1
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of CE devices for CE/PE connectivity.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "terminalServerConfiguration": {
          "$ref": "#/definitions/TerminalServerConfiguration",
          "description": "Network and credentials configuration currently applied to terminal server."
        },
        "managementNetworkConfiguration": {
          "$ref": "#/definitions/ManagementNetworkConfigurationProperties",
          "description": "Configuration to be used to setup the management network."
        },
        "racks": {
          "type": "array",
          "description": "List of NetworkRack resource IDs under the Network Fabric. The number of racks allowed depends on the Network Fabric SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "l2IsolationDomains": {
          "type": "array",
          "description": "List of L2 Isolation Domain resource IDs under the Network Fabric.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "l3IsolationDomains": {
          "type": "array",
          "description": "List of L3 Isolation Domain resource IDs under the Network Fabric.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "hardwareAlertThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Hardware alert threshold percentage. Possible values are from 20 to 100.",
          "minimum": 20,
          "maximum": 100
        },
        "controlPlaneAcls": {
          "type": "array",
          "description": "Control Plane Access Control List ARM resource IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
                }
              ]
            }
          }
        },
        "featureFlags": {
          "type": "array",
          "description": "Feature flag status information",
          "items": {
            "$ref": "#/definitions/FeatureFlagProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "trustedIpPrefixes": {
          "type": "array",
          "description": "Trusted IP Prefixes ARM resource IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/ipPrefixes"
                }
              ]
            }
          }
        },
        "uniqueRdConfiguration": {
          "$ref": "#/definitions/UniqueRouteDistinguisherProperties",
          "description": "Unique Route Distinguisher configuration"
        },
        "storageArrayCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of Storage arrays associated with the Network Fabric.",
          "minimum": 1,
          "maximum": 2
        },
        "activeCommitBatches": {
          "type": "array",
          "description": "Active commit batch identifiers",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricSku",
        "networkFabricControllerId",
        "serverCountPerRack",
        "ipv4Prefix",
        "fabricASN",
        "terminalServerConfiguration",
        "managementNetworkConfiguration"
      ]
    },
    "NetworkFabricSku": {
      "type": "object",
      "description": "The Network Fabric SKU resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkFabricSkuProperties",
          "description": "The Network Fabric Sku properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkFabricSkuListResult": {
      "type": "object",
      "description": "The response of a NetworkFabricSku list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkFabricSku items on this page",
          "items": {
            "$ref": "#/definitions/NetworkFabricSku"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkFabricSkuProperties": {
      "type": "object",
      "description": "Network Fabric SKU Properties define properties of the resource.",
      "properties": {
        "type": {
          "$ref": "#/definitions/FabricSkuType",
          "description": "Type of Network Fabric SKU.",
          "readOnly": true
        },
        "maxComputeRacks": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of compute racks available for this Network Fabric SKU. The value of max count racks is 4 for 4 rack SKU and 8 for 8 rack SKU."
        },
        "maximumServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of servers available for this Network Fabric SKU."
        },
        "supportedVersions": {
          "type": "array",
          "description": "List of supported Network Fabric SKU versions.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "URL providing detailed configuration of the fabric SKU.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "NetworkFabricUpgradeAction": {
      "type": "string",
      "description": "Action to be performed while upgrading the fabric.",
      "enum": [
        "Start",
        "Complete"
      ],
      "x-ms-enum": {
        "name": "NetworkFabricUpgradeAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Start",
            "value": "Start",
            "description": "UpgradeAction-Start"
          },
          {
            "name": "Complete",
            "value": "Complete",
            "description": "UpgradeAction -Complete"
          }
        ]
      }
    },
    "NetworkInterface": {
      "type": "object",
      "description": "Defines the NetworkInterface resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkInterfaceProperties",
          "description": "The NetworkInterface properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkInterfaceListResult": {
      "type": "object",
      "description": "The response of a NetworkInterface list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkInterface items on this page",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkInterfacePatch": {
      "type": "object",
      "description": "The NetworkInterfacePatch resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkInterfacePatchProperties",
          "description": "Network Interface Patch properties."
        }
      }
    },
    "NetworkInterfacePatchProperties": {
      "type": "object",
      "description": "Network Interface Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "description": {
          "type": "string",
          "description": "Description of the interface."
        },
        "additionalDescription": {
          "type": "string",
          "description": "Additional description of the interface."
        }
      }
    },
    "NetworkInterfaceProperties": {
      "type": "object",
      "description": "Network Interface Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "physicalIdentifier": {
          "type": "string",
          "description": "Physical Identifier of the network interface.",
          "readOnly": true
        },
        "connectedTo": {
          "type": "string",
          "description": "The ARM resource id of the interface or compute server its connected to.",
          "readOnly": true
        },
        "interfaceType": {
          "$ref": "#/definitions/InterfaceType",
          "description": "The Interface Type. Example: Management/Data",
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4Address of the interface.",
          "readOnly": true
        },
        "ipv6Address": {
          "type": "string",
          "description": "IPv6Address of the interface.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the interface."
        },
        "additionalDescription": {
          "type": "string",
          "description": "Additional description of the interface."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      }
    },
    "NetworkMonitor": {
      "type": "object",
      "description": "The NetworkMonitor resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkMonitorProperties",
          "description": "The NetworkFabric Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkMonitorListResult": {
      "type": "object",
      "description": "The response of a NetworkMonitor list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkMonitor items on this page",
          "items": {
            "$ref": "#/definitions/NetworkMonitor"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkMonitorPatch": {
      "type": "object",
      "description": "The Network Monitor Patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkMonitorPatchProperties",
          "description": "Network Monitor Patch properties."
        }
      }
    },
    "NetworkMonitorPatchProperties": {
      "type": "object",
      "description": "The Network Monitor Patch Properties.",
      "properties": {
        "bmpConfiguration": {
          "$ref": "#/definitions/BmpConfigurationPatchProperties",
          "description": "BGP Monitoring Protocol (BMP) Configurations for the Network Monitor."
        }
      }
    },
    "NetworkMonitorProperties": {
      "type": "object",
      "description": "Network Monitor Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/BmpConfigurationProperties",
          "description": "BMP Configurations for the Network Fabric."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provides you the latest status of the NetworkMonitor resource",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      }
    },
    "NetworkPacketBroker": {
      "type": "object",
      "description": "The NetworkPacketBroker resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkPacketBrokerProperties",
          "description": "The NetworkPacketBroker properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkPacketBrokerListResult": {
      "type": "object",
      "description": "The response of a NetworkPacketBroker list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkPacketBroker items on this page",
          "items": {
            "$ref": "#/definitions/NetworkPacketBroker"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkPacketBrokerPatch": {
      "type": "object",
      "description": "The NetworkPacketBroker patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NetworkPacketBrokerProperties": {
      "type": "object",
      "description": "Network Packet Broker Properties defines the properties of the resource.",
      "properties": {
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of the Network Fabric.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "networkDeviceIds": {
          "type": "array",
          "description": "List of ARM resource IDs of Network Devices [NPB].",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkDevices"
                }
              ]
            }
          },
          "readOnly": true
        },
        "sourceInterfaceIds": {
          "type": "array",
          "description": "List of network interfaces across NPB devices that are used to mirror source traffic.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces"
                }
              ]
            }
          },
          "readOnly": true
        },
        "networkTapIds": {
          "type": "array",
          "description": "List of network Tap IDs configured on NPB.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkTaps"
                }
              ]
            }
          },
          "readOnly": true
        },
        "neighborGroupIds": {
          "type": "array",
          "description": "List of neighbor group IDs configured on NPB.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkTaps"
                }
              ]
            }
          },
          "readOnly": true
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricId"
      ]
    },
    "NetworkRack": {
      "type": "object",
      "description": "The Network Rack resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkRackProperties",
          "description": "The NetworkRack properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkRackListResult": {
      "type": "object",
      "description": "The response of a NetworkRack list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkRack items on this page",
          "items": {
            "$ref": "#/definitions/NetworkRack"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkRackPatch": {
      "type": "object",
      "description": "Network Rack patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NetworkRackProperties": {
      "type": "object",
      "description": "Network Rack Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkRackType": {
          "$ref": "#/definitions/NetworkRackType",
          "description": "Network Rack SKU name."
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of the Network Fabric.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "networkDevices": {
          "type": "array",
          "description": "List of network device ARM resource IDs.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.ManagedNetworkFabric/networkDevices"
                }
              ]
            }
          },
          "readOnly": true
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricId"
      ]
    },
    "NetworkRackType": {
      "type": "string",
      "description": "Network Rack SKU name.",
      "enum": [
        "Aggregate",
        "Compute",
        "Combined"
      ],
      "x-ms-enum": {
        "name": "NetworkRackType",
        "modelAsString": true,
        "values": [
          {
            "name": "Aggregate",
            "value": "Aggregate",
            "description": "NetworkRackType-Aggregate"
          },
          {
            "name": "Compute",
            "value": "Compute",
            "description": "NetworkRackType-Compute"
          },
          {
            "name": "Combined",
            "value": "Combined",
            "description": "NetworkRackType-Combined"
          }
        ]
      }
    },
    "NetworkTap": {
      "type": "object",
      "description": "The Network Tap resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkTapProperties",
          "description": "The NetworkTap Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkTapListResult": {
      "type": "object",
      "description": "The response of a NetworkTap list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkTap items on this page",
          "items": {
            "$ref": "#/definitions/NetworkTap"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkTapPatch": {
      "type": "object",
      "description": "The NetworkFabric resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkTapPatchProperties",
          "description": "Resource properties."
        }
      }
    },
    "NetworkTapPatchProperties": {
      "type": "object",
      "description": "The Network Tap resource patch definition.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "pollingType": {
          "$ref": "#/definitions/PollingType",
          "description": "Polling type."
        },
        "destinations": {
          "type": "array",
          "description": "List of destination properties to send the filter traffic.",
          "items": {
            "$ref": "#/definitions/DestinationPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkTapProperties": {
      "type": "object",
      "description": "Network Tap Properties defines the properties of the resource.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "networkPacketBrokerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM resource ID of the Network Packet Broker.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "sourceTapRuleId": {
          "type": "string",
          "format": "arm-id",
          "description": "Source Tap Rule Id. ARM Resource ID of the Network Tap Rule.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
              }
            ]
          }
        },
        "destinations": {
          "type": "array",
          "description": "List of destinations to send the filter traffic.",
          "items": {
            "$ref": "#/definitions/DestinationProperties"
          },
          "x-ms-identifiers": []
        },
        "pollingType": {
          "type": "string",
          "description": "Polling type.",
          "default": "Pull",
          "enum": [
            "Pull",
            "Push"
          ],
          "x-ms-enum": {
            "name": "PollingType",
            "modelAsString": true,
            "values": [
              {
                "name": "Pull",
                "value": "Pull",
                "description": "PollingType-Pull"
              },
              {
                "name": "Push",
                "value": "Push",
                "description": "PollingType-Push"
              }
            ]
          }
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configurations state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of Network Tap provisioning.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource. Example -Enabled/Disabled",
          "readOnly": true
        }
      },
      "required": [
        "networkPacketBrokerId",
        "destinations"
      ]
    },
    "NetworkTapRule": {
      "type": "object",
      "description": "The NetworkTapRule resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkTapRuleProperties",
          "description": "The NetworkTapRule Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkTapRuleAction": {
      "type": "object",
      "description": "Action that need to performed.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TapRuleActionType",
          "description": "Type of actions that can be performed."
        },
        "truncate": {
          "type": "string",
          "description": "Truncate. 0 indicates do not truncate.",
          "minLength": 1
        },
        "isTimestampEnabled": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "The parameter to enable or disable the timestamp."
        },
        "destinationId": {
          "type": "string",
          "format": "arm-id",
          "description": "Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration. This is used when Goto type is provided.",
          "minLength": 1
        }
      }
    },
    "NetworkTapRuleActionPatch": {
      "type": "object",
      "description": "Action that need to performed.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TapRuleActionType",
          "description": "Type of actions that can be performed."
        },
        "truncate": {
          "type": "string",
          "description": "Truncate. 0 indicates do not truncate.",
          "minLength": 1
        },
        "isTimestampEnabled": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "The parameter to enable or disable the timestamp."
        },
        "destinationId": {
          "type": "string",
          "format": "arm-id",
          "description": "Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration. This is used when Goto type is provided.",
          "minLength": 1
        }
      }
    },
    "NetworkTapRuleListResult": {
      "type": "object",
      "description": "The response of a NetworkTapRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkTapRule items on this page",
          "items": {
            "$ref": "#/definitions/NetworkTapRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkTapRuleMatchCondition": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "protocolTypes": {
          "type": "array",
          "description": "List of the protocols that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanMatchCondition": {
          "$ref": "#/definitions/VlanMatchCondition",
          "description": "Vlan match condition that needs to be matched."
        },
        "ipCondition": {
          "$ref": "#/definitions/IpMatchCondition",
          "description": "IP condition that needs to be matched."
        },
        "encapsulationType": {
          "type": "string",
          "description": "Encapsulation Type that needs to be matched.",
          "default": "None",
          "enum": [
            "None",
            "GTPv1"
          ],
          "x-ms-enum": {
            "name": "EncapsulationType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "None EncapsulationType"
              },
              {
                "name": "GTPv1",
                "value": "GTPv1",
                "description": "GTPv1 EncapsulationType"
              }
            ]
          }
        },
        "portCondition": {
          "$ref": "#/definitions/PortCondition",
          "description": "Defines the port condition that needs to be matched."
        }
      }
    },
    "NetworkTapRuleMatchConditionPatch": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "protocolTypes": {
          "type": "array",
          "description": "List of the protocols that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanMatchCondition": {
          "$ref": "#/definitions/VlanMatchConditionPatch",
          "description": "Vlan match condition that needs to be matched."
        },
        "ipCondition": {
          "$ref": "#/definitions/IpMatchConditionPatch",
          "description": "IP condition that needs to be matched."
        },
        "encapsulationType": {
          "$ref": "#/definitions/EncapsulationType",
          "description": "Encapsulation Type that needs to be matched."
        },
        "portCondition": {
          "$ref": "#/definitions/PortConditionPatch",
          "description": "Defines the port condition that needs to be matched."
        }
      }
    },
    "NetworkTapRuleMatchConfiguration": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence Number of the match configuration..",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "Type of IP Address. IPv4 or IPv6"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "items": {
            "$ref": "#/definitions/NetworkTapRuleMatchCondition"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "items": {
            "$ref": "#/definitions/NetworkTapRuleAction"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkTapRuleMatchConfigurationPatch": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence Number of the match configuration..",
          "minimum": 1,
          "maximum": 4294967295
        },
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "Type of IP Address. IPv4 or IPv6"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "items": {
            "$ref": "#/definitions/NetworkTapRuleMatchConditionPatch"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "items": {
            "$ref": "#/definitions/NetworkTapRuleActionPatch"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkTapRulePatch": {
      "type": "object",
      "description": "The NetworkTapRule resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NetworkTapRulePatchProperties",
          "description": "Network Tap Rule Patch properties."
        }
      }
    },
    "NetworkTapRulePatchProperties": {
      "type": "object",
      "description": "Network Tap Rule Patch properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "configurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Input method to configure Network Tap Rule."
        },
        "tapRulesUrl": {
          "type": "string",
          "format": "uri",
          "description": "Network Tap Rules file URL."
        },
        "globalNetworkTapRuleActions": {
          "$ref": "#/definitions/GlobalNetworkTapRuleActionPatchProperties",
          "description": "Global network tap rule actions"
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/NetworkTapRuleMatchConfigurationPatch"
          },
          "x-ms-identifiers": []
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/CommonDynamicMatchConfigurationPatch"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkTapRuleProperties": {
      "type": "object",
      "description": "Network Tap Rule Properties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "configurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Input method to configure Network Tap Rule."
        },
        "tapRulesUrl": {
          "type": "string",
          "format": "uri",
          "description": "Network Tap Rules file URL."
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/NetworkTapRuleMatchConfiguration"
          },
          "x-ms-identifiers": []
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/CommonDynamicMatchConfiguration"
          },
          "x-ms-identifiers": []
        },
        "networkTapId": {
          "type": "string",
          "description": "The ARM resource Id of the NetworkTap.",
          "readOnly": true
        },
        "pollingIntervalInSeconds": {
          "type": "number",
          "description": "Polling interval in seconds.",
          "default": 30,
          "enum": [
            30,
            60,
            90,
            120
          ],
          "x-ms-enum": {
            "name": "PollingIntervalInSeconds",
            "modelAsString": true,
            "values": [
              {
                "name": "Thirty",
                "value": 30,
                "description": "30 PollingIntervalInSeconds"
              },
              {
                "name": "sixty",
                "value": 60,
                "description": "60 PollingIntervalInSeconds"
              },
              {
                "name": "Ninety",
                "value": 90,
                "description": "90 PollingIntervalInSeconds"
              },
              {
                "name": "OneTwenty",
                "value": 120,
                "description": "120 PollingIntervalInSeconds"
              }
            ]
          }
        },
        "lastSyncedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last sync timestamp.",
          "readOnly": true
        },
        "globalNetworkTapRuleActions": {
          "$ref": "#/definitions/GlobalNetworkTapRuleActionProperties",
          "description": "Global network tap rule actions"
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "configurationType"
      ]
    },
    "NetworkToNetworkInterconnect": {
      "type": "object",
      "description": "The Network To Network Interconnect resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkToNetworkInterconnectProperties",
          "description": "The NetworkToNetworkInterconnect Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkToNetworkInterconnectListResult": {
      "type": "object",
      "description": "The response of a NetworkToNetworkInterconnect list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkToNetworkInterconnect items on this page",
          "items": {
            "$ref": "#/definitions/NetworkToNetworkInterconnect"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkToNetworkInterconnectPatch": {
      "type": "object",
      "description": "The Network To Network Interconnect resource patch definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. 'Microsoft.Compute/virtualMachines' or 'Microsoft.Storage/storageAccounts'",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NetworkToNetworkInterconnectPatchProperties",
          "description": "Resource properties."
        }
      }
    },
    "NetworkToNetworkInterconnectPatchProperties": {
      "type": "object",
      "description": "Network Tap Rule Patch properties.",
      "properties": {
        "layer2Configuration": {
          "$ref": "#/definitions/Layer2ConfigurationPatch",
          "description": "Common properties for Layer2Configuration."
        },
        "optionBLayer3Configuration": {
          "$ref": "#/definitions/OptionBLayer3ConfigurationPatchProperties",
          "description": "Common properties for Layer3Configuration."
        },
        "npbStaticRouteConfiguration": {
          "$ref": "#/definitions/NpbStaticRouteConfigurationPatch",
          "description": "NPB Static Route Configuration properties."
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/NniStaticRoutePatchConfiguration",
          "description": "Static Route Configuration."
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicyInformationPatch",
          "description": "Import Route Policy information."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicyInformationPatch",
          "description": "Export Route Policy information"
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "microBfdState": {
          "$ref": "#/definitions/MicroBfdState",
          "description": "Micro BFD enabled/disabled state."
        }
      }
    },
    "NetworkToNetworkInterconnectProperties": {
      "type": "object",
      "description": "Configuration used to setup CE-PE connectivity.",
      "properties": {
        "nniType": {
          "type": "string",
          "description": "Type of NNI used. Example: CE | NPB",
          "default": "CE",
          "enum": [
            "CE",
            "NPB"
          ],
          "x-ms-enum": {
            "name": "NniType",
            "modelAsString": true,
            "values": [
              {
                "name": "CE",
                "value": "CE",
                "description": "NniType-CE(Customer Edge)."
              },
              {
                "name": "NPB",
                "value": "NPB",
                "description": "NniType-NPB(Network Packet Broker)."
              }
            ]
          }
        },
        "isManagementType": {
          "type": "string",
          "description": "Configuration to use NNI for Infrastructure Management. Example: True/False.",
          "default": "True",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsManagementType",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True",
                "description": "IsManagementType-True"
              },
              {
                "name": "False",
                "value": "False",
                "description": "IsManagementType-False"
              }
            ]
          }
        },
        "useOptionB": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "Based on this option layer3 parameters are mandatory. Example: True/False"
        },
        "layer2Configuration": {
          "$ref": "#/definitions/Layer2Configuration",
          "description": "Common properties for Layer2 Configuration."
        },
        "optionBLayer3Configuration": {
          "$ref": "#/definitions/OptionBLayer3Configuration",
          "description": "Common properties for Layer3Configuration."
        },
        "npbStaticRouteConfiguration": {
          "$ref": "#/definitions/NpbStaticRouteConfiguration",
          "description": "NPB Static Route Configuration properties."
        },
        "staticRouteConfiguration": {
          "$ref": "#/definitions/NniStaticRouteConfiguration",
          "description": "Static Route Configuration."
        },
        "importRoutePolicy": {
          "$ref": "#/definitions/ImportRoutePolicyInformation",
          "description": "Import Route Policy information."
        },
        "exportRoutePolicy": {
          "$ref": "#/definitions/ExportRoutePolicyInformation",
          "description": "Export Route Policy information"
        },
        "egressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "ingressAclId": {
          "type": "string",
          "format": "arm-id",
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
              }
            ]
          }
        },
        "microBfdState": {
          "$ref": "#/definitions/MicroBfdState",
          "description": "Micro Bidirectional Forwarding Detection (BFD) enabled/disabled state."
        },
        "conditionalDefaultRouteConfiguration": {
          "$ref": "#/definitions/ConditionalDefaultRouteProperties",
          "description": "Conditional Default Route Configuration properties."
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "useOptionB"
      ]
    },
    "NniBfdAdministrativeStateRequest": {
      "type": "object",
      "description": "NNI Bidirectional Forwarding Detection (BFD) Administrative State request.",
      "properties": {
        "routeType": {
          "$ref": "#/definitions/RouteType",
          "description": "Route Type. Choose either Static or OptionA."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "State. Select either enable or disable."
        }
      }
    },
    "NniBfdAdministrativeStateResponse": {
      "type": "object",
      "description": "NNI Bidirectional Forwarding Detection (BFD) Administrative State response.",
      "properties": {
        "routeType": {
          "$ref": "#/definitions/RouteType",
          "description": "Route Type. Choose either Static or OptionA."
        },
        "administrativeState": {
          "$ref": "#/definitions/BfdAdministrativeState",
          "description": "State. Select either enable or disable."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "NniBmpPatchProperties": {
      "type": "object",
      "description": "BGP Monitoring Protocol (BMP) patch properties.",
      "properties": {
        "configurationState": {
          "$ref": "#/definitions/BmpConfigurationState",
          "description": "(BGP Monitoring Protocol (BMP) configuration state."
        }
      }
    },
    "NniBmpProperties": {
      "type": "object",
      "description": "BGP Monitoring Protocol (BMP) properties.",
      "properties": {
        "configurationState": {
          "type": "string",
          "description": "BGP Monitoring Protocol (BMP) Configuration State.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "BmpConfigurationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "BGP Monitoring Protocol (BMP) ConfigurationState - Disabled"
              }
            ]
          }
        }
      },
      "required": [
        "configurationState"
      ]
    },
    "NniStaticRouteConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties for NNI.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "NniStaticRoutePatchConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties for NNI.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "Bidirectional Forwarding Detection (BFD) configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "NpbStaticRouteConfiguration": {
      "type": "object",
      "description": "NPB Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD Configuration properties."
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "NpbStaticRouteConfigurationPatch": {
      "type": "object",
      "description": "NPB Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD Configuration properties."
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "OptionBLayer3Configuration": {
      "type": "object",
      "description": "OptionB Layer3 Configuration properties.",
      "properties": {
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of PE devices for CE/PE connectivity.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "VLAN for CE/PE Layer 3 connectivity.Example : 501",
          "minimum": 100,
          "maximum": 4094
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of CE devices for CE/PE connectivity.",
          "readOnly": true
        },
        "peLoopbackIpAddress": {
          "type": "array",
          "description": "Provider Edge (PE) Loopback IP Address.",
          "items": {
            "type": "string"
          }
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/NniBmpProperties",
          "description": "BGP Monitoring Protocol (BMP) Configuration."
        },
        "prefixLimits": {
          "type": "array",
          "description": "OptionB Layer3 prefix limit configuration.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/OptionBLayer3PrefixLimitProperties"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "peerASN",
        "vlanId"
      ]
    },
    "OptionBLayer3ConfigurationPatchProperties": {
      "type": "object",
      "description": "Common properties for Layer3Configuration.",
      "properties": {
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of PE devices for CE/PE connectivity.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "VLAN for CE/PE Layer 3 connectivity.Example : 501",
          "minimum": 100,
          "maximum": 4094
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of CE devices for CE/PE connectivity.",
          "readOnly": true
        },
        "peLoopbackIpAddress": {
          "type": "array",
          "description": "Provider Edge (PE) Loopback IP Address.",
          "items": {
            "type": "string"
          }
        },
        "bmpConfiguration": {
          "$ref": "#/definitions/NniBmpPatchProperties",
          "description": "BGP Monitoring Protocol (BMP) Configuration."
        },
        "prefixLimits": {
          "type": "array",
          "description": "OptionB Layer3 prefix limit configuration.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/OptionBLayer3PrefixLimitPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OptionBLayer3PrefixLimitPatchProperties": {
      "type": "object",
      "description": "OptionB Layer3 prefix limit patch properties.",
      "properties": {
        "maximumRoutes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of routes allowed."
        }
      }
    },
    "OptionBLayer3PrefixLimitProperties": {
      "type": "object",
      "description": "OptionB Layer3 prefix limit properties.",
      "properties": {
        "maximumRoutes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of routes allowed."
        }
      }
    },
    "PeeringOption": {
      "type": "string",
      "description": "Peering option list.",
      "enum": [
        "OptionA",
        "OptionB"
      ],
      "x-ms-enum": {
        "name": "PeeringOption",
        "modelAsString": true,
        "values": [
          {
            "name": "OptionA",
            "value": "OptionA",
            "description": "PeeringOption-OptionA"
          },
          {
            "name": "OptionB",
            "value": "OptionB",
            "description": "PeeringOption-OptionB"
          }
        ]
      }
    },
    "PoliceRateConfigurationProperties": {
      "type": "object",
      "description": "Police rate configuration properties",
      "properties": {
        "bitRate": {
          "$ref": "#/definitions/BitRate",
          "description": "Rate limit in bits per second."
        },
        "burstSize": {
          "$ref": "#/definitions/BurstSize",
          "description": "Burst size in packets."
        }
      }
    },
    "PollingType": {
      "type": "string",
      "description": "Polling type.",
      "enum": [
        "Pull",
        "Push"
      ],
      "x-ms-enum": {
        "name": "PollingType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pull",
            "value": "Pull",
            "description": "PollingType-Pull"
          },
          {
            "name": "Push",
            "value": "Push",
            "description": "PollingType-Push"
          }
        ]
      }
    },
    "PortCondition": {
      "type": "object",
      "description": "Port condition that needs to be matched.",
      "properties": {
        "portType": {
          "$ref": "#/definitions/PortType",
          "description": "Port type that needs to be matched."
        },
        "layer4Protocol": {
          "$ref": "#/definitions/Layer4Protocol",
          "description": "Layer4 protocol type that needs to be matched."
        },
        "ports": {
          "type": "array",
          "description": "List of the Ports that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "portGroupNames": {
          "type": "array",
          "description": "List of the port Group Names that need to be matched.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "layer4Protocol"
      ]
    },
    "PortConditionPatch": {
      "type": "object",
      "description": "Port condition that needs to be matched.",
      "properties": {
        "portType": {
          "$ref": "#/definitions/PortType",
          "description": "Port type that needs to be matched."
        },
        "layer4Protocol": {
          "$ref": "#/definitions/Layer4Protocol",
          "description": "Layer4 protocol type that needs to be matched."
        },
        "ports": {
          "type": "array",
          "description": "List of the Ports that need to be matched.",
          "items": {
            "type": "string"
          }
        },
        "portGroupNames": {
          "type": "array",
          "description": "List of the port Group Names that need to be matched.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortGroupPatchProperties": {
      "type": "object",
      "description": "Port Group Properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the port group.",
          "minLength": 1
        },
        "ports": {
          "type": "array",
          "description": "List of the ports that need to be matched.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortGroupProperties": {
      "type": "object",
      "description": "Port Group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the port group.",
          "minLength": 1
        },
        "ports": {
          "type": "array",
          "description": "List of the ports that need to be matched.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortType": {
      "type": "string",
      "description": "Port type that needs to be matched.",
      "enum": [
        "SourcePort",
        "DestinationPort",
        "Bidirectional"
      ],
      "x-ms-enum": {
        "name": "PortType",
        "modelAsString": true,
        "values": [
          {
            "name": "SourcePort",
            "value": "SourcePort",
            "description": "PortType SourcePort"
          },
          {
            "name": "DestinationPort",
            "value": "DestinationPort",
            "description": "PortType DestinationPort"
          },
          {
            "name": "Bidirectional",
            "value": "Bidirectional",
            "description": "PortType Bidirectional"
          }
        ]
      }
    },
    "PrefixLimitPatchProperties": {
      "type": "object",
      "description": "Prefix Limit Patch properties.",
      "properties": {
        "maximumRoutes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum routes allowed."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "Limit at which route prefixes a warning is generate."
        },
        "idleTimeExpiry": {
          "type": "integer",
          "format": "int32",
          "description": "Idle time expiry in seconds."
        }
      }
    },
    "PrefixLimitProperties": {
      "type": "object",
      "description": "Prefix Limit properties.",
      "properties": {
        "maximumRoutes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum routes allowed."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "Limit at which route prefixes a warning is generate."
        },
        "idleTimeExpiry": {
          "type": "integer",
          "format": "int32",
          "description": "Idle Time Expiry in seconds, default is 60.",
          "default": 60
        }
      }
    },
    "PrefixType": {
      "type": "string",
      "description": "IP Prefix Type that needs to be matched.",
      "enum": [
        "Prefix",
        "LongestPrefix"
      ],
      "x-ms-enum": {
        "name": "PrefixType",
        "modelAsString": true,
        "values": [
          {
            "name": "Prefix",
            "value": "Prefix",
            "description": "PrefixType Prefix"
          },
          {
            "name": "LongestPrefix",
            "value": "LongestPrefix",
            "description": "PrefixType LongestPrefix"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Accepted",
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted Provisioning State"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Succeeded Provisioning State"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Updating Provisioning State"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Deleting Provisioning State"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed Provisioning State"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Canceled Provisioning State"
          }
        ]
      },
      "readOnly": true
    },
    "RebootProperties": {
      "type": "object",
      "description": "Reboot properties.",
      "properties": {
        "rebootType": {
          "$ref": "#/definitions/RebootType",
          "description": "Type of reboot to be performed. Example: GracefulRebootWithZTP"
        }
      }
    },
    "RebootType": {
      "type": "string",
      "description": "Type of reboot to be performed. Example: GracefulRebootWithZTP",
      "enum": [
        "GracefulRebootWithZTP",
        "GracefulRebootWithoutZTP",
        "UngracefulRebootWithZTP",
        "UngracefulRebootWithoutZTP"
      ],
      "x-ms-enum": {
        "name": "RebootType",
        "modelAsString": true,
        "values": [
          {
            "name": "GracefulRebootWithZTP",
            "value": "GracefulRebootWithZTP",
            "description": "RebootType GracefulRebootWithZTP"
          },
          {
            "name": "GracefulRebootWithoutZTP",
            "value": "GracefulRebootWithoutZTP",
            "description": "RebootType GracefulRebootWithoutZTP"
          },
          {
            "name": "UngracefulRebootWithZTP",
            "value": "UngracefulRebootWithZTP",
            "description": "RebootType UngracefulRebootWithZTP"
          },
          {
            "name": "UngracefulRebootWithoutZTP",
            "value": "UngracefulRebootWithoutZTP",
            "description": "RebootType UngracefulRebootWithoutZTP"
          }
        ]
      }
    },
    "RedistributeConnectedSubnets": {
      "type": "string",
      "description": "Advertise Connected Subnets. Ex: \"True\" | \"False\".",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "RedistributeConnectedSubnets",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True",
            "description": "RedistributeConnectedSubnets-True"
          },
          {
            "name": "False",
            "value": "False",
            "description": "RedistributeConnectedSubnets-False"
          }
        ]
      }
    },
    "RedistributeStaticRoutes": {
      "type": "string",
      "description": "Advertise Static Routes. Ex: \"True\" | \"False\".",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "RedistributeStaticRoutes",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True",
            "description": "RedistributeStaticRoutes-True"
          },
          {
            "name": "False",
            "value": "False",
            "description": "RedistributeStaticRoutes-False"
          }
        ]
      }
    },
    "RoutePolicy": {
      "type": "object",
      "description": "The RoutePolicy resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RoutePolicyProperties",
          "description": "The RoutePolicy properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "RoutePolicyActionType": {
      "type": "string",
      "description": "Action type. Example: Permit | Deny | Continue.",
      "enum": [
        "Permit",
        "Deny",
        "Continue"
      ],
      "x-ms-enum": {
        "name": "RoutePolicyActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Permit",
            "value": "Permit",
            "description": "RoutePolicyActionType-Permit"
          },
          {
            "name": "Deny",
            "value": "Deny",
            "description": "RoutePolicyActionType-Deny"
          },
          {
            "name": "Continue",
            "value": "Continue",
            "description": "RoutePolicyActionType-Continue"
          }
        ]
      }
    },
    "RoutePolicyConditionType": {
      "type": "string",
      "description": "Type of the condition used.",
      "enum": [
        "Or",
        "And"
      ],
      "x-ms-enum": {
        "name": "RoutePolicyConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Or",
            "value": "Or",
            "description": "RoutePolicyConditionType-Or"
          },
          {
            "name": "And",
            "value": "And",
            "description": "RoutePolicyConditionType-And"
          }
        ]
      }
    },
    "RoutePolicyListResult": {
      "type": "object",
      "description": "The response of a RoutePolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RoutePolicy items on this page",
          "items": {
            "$ref": "#/definitions/RoutePolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RoutePolicyPatch": {
      "type": "object",
      "description": "The Route Policy patch resource definition.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/RoutePolicyPatchableProperties",
          "description": "The RoutePolicy patchable properties."
        }
      }
    },
    "RoutePolicyPatchableProperties": {
      "type": "object",
      "description": "Route Policy patchable properties.",
      "properties": {
        "defaultAction": {
          "$ref": "#/definitions/CommunityActionTypes",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny."
        },
        "statements": {
          "type": "array",
          "description": "Route Policy statements.",
          "items": {
            "$ref": "#/definitions/RoutePolicyStatementPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RoutePolicyProperties": {
      "type": "object",
      "description": "RoutePolicyProperties defines the resource properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "defaultAction": {
          "type": "string",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny.",
          "default": "Deny",
          "enum": [
            "Permit",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "CommunityActionTypes",
            "modelAsString": true,
            "values": [
              {
                "name": "Permit",
                "value": "Permit",
                "description": "Permit Community Action Types"
              },
              {
                "name": "Deny",
                "value": "Deny",
                "description": "Deny Community Action Types"
              }
            ]
          }
        },
        "statements": {
          "type": "array",
          "description": "Route Policy statements.",
          "items": {
            "$ref": "#/definitions/RoutePolicyStatementProperties"
          },
          "x-ms-identifiers": [
            "sequenceNumber"
          ]
        },
        "networkFabricId": {
          "type": "string",
          "format": "arm-id",
          "description": "Arm Resource ID of Network Fabric.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
              }
            ]
          }
        },
        "addressFamilyType": {
          "type": "string",
          "description": "AddressFamilyType. This parameter decides whether the given ipv4 or ipv6 route policy.",
          "default": "IPv4",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "AddressFamilyType",
            "modelAsString": true,
            "values": [
              {
                "name": "IPv4",
                "value": "IPv4",
                "description": "AddressType-IPv4"
              },
              {
                "name": "IPv6",
                "value": "IPv6",
                "description": "AddressType-IPv6"
              }
            ]
          }
        },
        "lastOperation": {
          "$ref": "#/definitions/LastOperationProperties",
          "description": "Details of the last operation performed on the resource",
          "readOnly": true
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Configuration state of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "statements",
        "networkFabricId"
      ]
    },
    "RoutePolicyStatementPatchProperties": {
      "type": "object",
      "description": "Route Policy Statement properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence to insert to/delete from existing route.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "condition": {
          "$ref": "#/definitions/StatementConditionPatchProperties",
          "description": "Route policy condition properties."
        },
        "action": {
          "$ref": "#/definitions/StatementActionPatchProperties",
          "description": "Route policy action properties."
        }
      },
      "required": [
        "sequenceNumber",
        "condition",
        "action"
      ]
    },
    "RoutePolicyStatementProperties": {
      "type": "object",
      "description": "Route Policy Statement properties.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence to insert to/delete from existing route.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "condition": {
          "$ref": "#/definitions/StatementConditionProperties",
          "description": "Route policy condition properties."
        },
        "action": {
          "$ref": "#/definitions/StatementActionProperties",
          "description": "Route policy action properties."
        }
      },
      "required": [
        "sequenceNumber",
        "condition",
        "action"
      ]
    },
    "RoutePrefixLimitPatchProperties": {
      "type": "object",
      "description": "VRP Limit patch configuration.",
      "properties": {
        "hardLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Hard limit for the routes."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "Threshold for the routes."
        }
      }
    },
    "RoutePrefixLimitProperties": {
      "type": "object",
      "description": "Layer3 Route prefix limit configuration.",
      "properties": {
        "hardLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Hard limit for the routes."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "Threshold for the routes."
        }
      }
    },
    "RouteTargetInformation": {
      "type": "object",
      "description": "Route Target Configuration.",
      "properties": {
        "importIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE.",
          "items": {
            "type": "string"
          }
        },
        "importIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes from CE.",
          "items": {
            "type": "string"
          }
        },
        "exportIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes into CE.",
          "items": {
            "type": "string"
          }
        },
        "exportIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RouteTargetPatchInformation": {
      "type": "object",
      "description": "Route Target Configuration.",
      "properties": {
        "importIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE.",
          "items": {
            "type": "string"
          }
        },
        "importIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes from CE.",
          "items": {
            "type": "string"
          }
        },
        "exportIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes into CE.",
          "items": {
            "type": "string"
          }
        },
        "exportIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RouteType": {
      "type": "string",
      "description": "Route type to be used.",
      "enum": [
        "Static",
        "OptionA"
      ],
      "x-ms-enum": {
        "name": "RouteType",
        "modelAsString": true,
        "values": [
          {
            "name": "Static",
            "value": "Static",
            "description": "RouteType-Static"
          },
          {
            "name": "OptionA",
            "value": "OptionA",
            "description": "RouteType-OptionA"
          }
        ]
      }
    },
    "RuleCondition": {
      "type": "string",
      "description": "Specify Rule condition.",
      "enum": [
        "And",
        "Or"
      ],
      "x-ms-enum": {
        "name": "RuleCondition",
        "modelAsString": true,
        "values": [
          {
            "name": "And",
            "value": "And",
            "description": "And Rule-Condition."
          },
          {
            "name": "Or",
            "value": "Or",
            "description": "Or Rule-Condition."
          }
        ]
      }
    },
    "RuleProperties": {
      "type": "object",
      "description": "Rules for the InternetGateways",
      "properties": {
        "action": {
          "$ref": "#/definitions/Action",
          "description": "Specify action."
        },
        "addressList": {
          "type": "array",
          "description": "List of Addresses to be allowed or denied.",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "#/definitions/RuleCondition",
          "description": "Specify rule condition."
        },
        "destinationAddressList": {
          "type": "array",
          "description": "List of Addresses to be allowed or denied.",
          "items": {
            "type": "string"
          }
        },
        "sourceAddressList": {
          "type": "array",
          "description": "List of source IPv4 and IPv6 address to be allowed or denied.",
          "items": {
            "type": "string"
          }
        },
        "headerAddressList": {
          "type": "array",
          "description": "List of header Name and source addresses associated with the header.",
          "items": {
            "$ref": "#/definitions/HeaderAddressProperties"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "action"
      ]
    },
    "SourceDestinationType": {
      "type": "string",
      "description": "IP Address type that needs to be matched.",
      "enum": [
        "SourceIP",
        "DestinationIP",
        "Bidirectional"
      ],
      "x-ms-enum": {
        "name": "SourceDestinationType",
        "modelAsString": true,
        "values": [
          {
            "name": "SourceIP",
            "value": "SourceIP",
            "description": "SourceDestinationType SourceIP"
          },
          {
            "name": "DestinationIP",
            "value": "DestinationIP",
            "description": "SourceDestinationType DestinationIP"
          },
          {
            "name": "Bidirectional",
            "value": "Bidirectional",
            "description": "SourceDestinationType Bidirectional"
          }
        ]
      }
    },
    "StatementActionPatchProperties": {
      "type": "object",
      "description": "Route policy action properties",
      "properties": {
        "localPreference": {
          "type": "integer",
          "format": "int64",
          "description": "Local Preference of the route policy.",
          "minimum": 0,
          "maximum": 4294967295
        },
        "actionType": {
          "$ref": "#/definitions/RoutePolicyActionType",
          "description": "Action type. Example: Permit | Deny | Continue."
        },
        "ipCommunityProperties": {
          "$ref": "#/definitions/ActionIpCommunityPatchProperties",
          "description": "IP Community Properties."
        },
        "ipExtendedCommunityProperties": {
          "$ref": "#/definitions/ActionIpExtendedCommunityPatchProperties",
          "description": "IP Extended Community Properties."
        }
      },
      "required": [
        "actionType"
      ]
    },
    "StatementActionProperties": {
      "type": "object",
      "description": "Route policy action properties.",
      "properties": {
        "localPreference": {
          "type": "integer",
          "format": "int64",
          "description": "Local Preference of the route policy.",
          "minimum": 0,
          "maximum": 4294967295
        },
        "actionType": {
          "$ref": "#/definitions/RoutePolicyActionType",
          "description": "Action type. Example: Permit | Deny | Continue."
        },
        "ipCommunityProperties": {
          "$ref": "#/definitions/ActionIpCommunityProperties",
          "description": "IP Community Properties."
        },
        "ipExtendedCommunityProperties": {
          "$ref": "#/definitions/ActionIpExtendedCommunityProperties",
          "description": "IP Extended Community Properties."
        }
      },
      "required": [
        "actionType"
      ]
    },
    "StatementConditionPatchProperties": {
      "type": "object",
      "description": "Route policy statement condition properties.",
      "properties": {
        "ipCommunityIds": {
          "type": "array",
          "description": "List of IP Community resource IDs.",
          "items": {
            "type": "string"
          }
        },
        "ipExtendedCommunityIds": {
          "type": "array",
          "description": "List of IP Extended Community resource IDs.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/RoutePolicyConditionType",
          "description": "Type of the condition used."
        },
        "ipPrefixId": {
          "type": "string",
          "description": "Arm Resource Id of IpPrefix."
        }
      }
    },
    "StatementConditionProperties": {
      "type": "object",
      "description": "Route policy statement condition properties.",
      "properties": {
        "ipCommunityIds": {
          "type": "array",
          "description": "List of IP Community resource IDs.",
          "items": {
            "type": "string"
          }
        },
        "ipExtendedCommunityIds": {
          "type": "array",
          "description": "List of IP Extended Community resource IDs.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the condition used.",
          "default": "Or",
          "enum": [
            "Or",
            "And"
          ],
          "x-ms-enum": {
            "name": "RoutePolicyConditionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Or",
                "value": "Or",
                "description": "RoutePolicyConditionType-Or"
              },
              {
                "name": "And",
                "value": "And",
                "description": "RoutePolicyConditionType-And"
              }
            ]
          }
        },
        "ipPrefixId": {
          "type": "string",
          "description": "Arm Resource Id of IpPrefix."
        }
      }
    },
    "StaticRouteConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRouteProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "extension": {
          "type": "string",
          "description": "Extension. Example: NoExtension | NPB.",
          "default": "NoExtension",
          "enum": [
            "NoExtension",
            "NPB"
          ],
          "x-ms-enum": {
            "name": "Extension",
            "modelAsString": true,
            "values": [
              {
                "name": "NoExtension",
                "value": "NoExtension",
                "description": "Extension-NoExtension"
              },
              {
                "name": "NPB",
                "value": "NPB",
                "description": "Extension-NPB"
              }
            ]
          }
        }
      }
    },
    "StaticRoutePatchConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD configuration properties"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoutePatchProperties"
          },
          "x-ms-identifiers": [
            "prefix"
          ]
        }
      }
    },
    "StaticRoutePatchProperties": {
      "type": "object",
      "description": "Route Properties.",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "Prefix of the route.",
          "minLength": 1
        },
        "nextHop": {
          "type": "array",
          "description": "List of next hop addresses.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "prefix",
        "nextHop"
      ]
    },
    "StaticRouteProperties": {
      "type": "object",
      "description": "Route Properties.",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "Prefix of the route.",
          "minLength": 1
        },
        "nextHop": {
          "type": "array",
          "description": "List of next hop addresses.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "prefix",
        "nextHop"
      ]
    },
    "StaticRouteRoutePolicy": {
      "type": "object",
      "description": "Static Route - route policy properties.",
      "properties": {
        "exportRoutePolicy": {
          "$ref": "#/definitions/L3ExportRoutePolicy",
          "description": "Array of ARM Resource ID of the RoutePolicies."
        }
      }
    },
    "StaticRouteRoutePolicyPatch": {
      "type": "object",
      "description": "Static Route - route policy properties.",
      "properties": {
        "exportRoutePolicy": {
          "$ref": "#/definitions/L3ExportRoutePolicyPatch",
          "description": "Array of ARM Resource ID of the RoutePolicies."
        }
      }
    },
    "StationConfigurationState": {
      "type": "string",
      "description": "Station Configuration State.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "StationConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "StationConfigurationState Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "StationConfigurationState Disabled"
          }
        ]
      }
    },
    "StationConnectionMode": {
      "type": "string",
      "description": "Station Connection Mode.",
      "enum": [
        "Active",
        "Passive"
      ],
      "x-ms-enum": {
        "name": "StationConnectionMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "StationConnectionMode Active"
          },
          {
            "name": "Passive",
            "value": "Passive",
            "description": "StationConnectionMode Passive"
          }
        ]
      }
    },
    "StationConnectionPatchProperties": {
      "type": "object",
      "description": "Station Connection PATCH Properties.",
      "properties": {
        "keepaliveIdleTime": {
          "type": "integer",
          "format": "int32",
          "description": "Connection keepalive idle time in seconds",
          "minimum": 1,
          "maximum": 3600
        },
        "probeInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Probe interval in seconds, default value is 60",
          "minimum": 1,
          "maximum": 3600
        },
        "probeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Probe count, default value is 10",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "StationConnectionProperties": {
      "type": "object",
      "description": "Station Connection Properties.",
      "properties": {
        "keepaliveIdleTime": {
          "type": "integer",
          "format": "int32",
          "description": "Connection keepalive idle time in seconds",
          "default": 180,
          "minimum": 1,
          "maximum": 3600
        },
        "probeInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Probe interval in seconds, default value is 60",
          "default": 60,
          "minimum": 1,
          "maximum": 3600
        },
        "probeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Probe count, default value is 10",
          "default": 10,
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "StorageAccountConfiguration": {
      "type": "object",
      "description": "Storage account configuration.",
      "properties": {
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Network Fabric storage account resource identifier.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "storageAccountIdentity": {
          "$ref": "#/definitions/IdentitySelector",
          "description": "The selection of the managed identity to use with this storage account. The identity type must be either system assigned or user assigned."
        }
      }
    },
    "StorageAccountPatchConfiguration": {
      "type": "object",
      "description": "Storage account configuration.",
      "properties": {
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Network Fabric storage account resource identifier.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "storageAccountIdentity": {
          "$ref": "#/definitions/IdentitySelectorPatch",
          "description": "The selection of the managed identity to use with this storage account. The identity type must be either system assigned or user assigned."
        }
      }
    },
    "SupportedConnectorProperties": {
      "type": "object",
      "description": "Supported connector properties.",
      "properties": {
        "connectorType": {
          "type": "string",
          "description": "Type of connector used. Example: Optical."
        },
        "maxSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum speed of the connector in Mbps."
        }
      }
    },
    "SupportedVersionProperties": {
      "type": "object",
      "description": "Supported version details of the network device.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Operating system and firmware combined versions."
        },
        "vendorOsVersion": {
          "type": "string",
          "description": "Operating system version."
        },
        "vendorFirmwareVersion": {
          "type": "string",
          "description": "Firmware version."
        },
        "isDefault": {
          "$ref": "#/definitions/BooleanEnumProperty",
          "description": "If true newly provisioned Fabric will use this device version by default to bootstrap the network devices for the first time."
        }
      }
    },
    "TapRuleActionType": {
      "type": "string",
      "description": "Type of actions that can be performed.",
      "enum": [
        "Drop",
        "Count",
        "Log",
        "Replicate",
        "Goto",
        "Redirect",
        "Mirror"
      ],
      "x-ms-enum": {
        "name": "TapRuleActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Drop",
            "value": "Drop",
            "description": "TapRuleActionType-Drop"
          },
          {
            "name": "Count",
            "value": "Count",
            "description": "TapRuleActionType-Count"
          },
          {
            "name": "Log",
            "value": "Log",
            "description": "TapRuleActionType-Log"
          },
          {
            "name": "Replicate",
            "value": "Replicate",
            "description": "TapRuleActionType-Replicate"
          },
          {
            "name": "Goto",
            "value": "Goto",
            "description": "TapRuleActionType-Goto"
          },
          {
            "name": "Redirect",
            "value": "Redirect",
            "description": "TapRuleActionType-Redirect"
          },
          {
            "name": "Mirror",
            "value": "Mirror",
            "description": "TapRuleActionType-Mirror"
          }
        ]
      }
    },
    "TerminalServerConfiguration": {
      "type": "object",
      "description": "Network and credentials configuration currently applied to terminal server.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username for the terminal server connection.",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Password for the terminal server connection.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of Terminal server.",
          "minLength": 1
        },
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        },
        "networkDeviceId": {
          "type": "string",
          "description": "ARM Resource ID used for the NetworkDevice.",
          "readOnly": true
        }
      },
      "required": [
        "username",
        "password",
        "primaryIpv4Prefix",
        "secondaryIpv4Prefix"
      ]
    },
    "TerminalServerPatchConfiguration": {
      "type": "object",
      "description": "Network and credentials configuration already applied to terminal server.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username for the terminal server connection.",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Password for the terminal server connection.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of Terminal server.",
          "minLength": 1
        },
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        }
      }
    },
    "UniqueRouteDistinguisherConfigurationState": {
      "type": "string",
      "description": "Unique Route Distinguisher Configuration State.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "UniqueRouteDistinguisherConfigurationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "UniqueRouteDistinguisherConfigurationState Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "UniqueRouteDistinguisherConfigurationState Disabled"
          }
        ]
      }
    },
    "UniqueRouteDistinguisherPatchProperties": {
      "type": "object",
      "description": "Unique Route Distinguisher configuration properties.",
      "properties": {
        "uniqueRdConfigurationState": {
          "$ref": "#/definitions/UniqueRouteDistinguisherConfigurationState",
          "description": "Unique Route Distinguisher configuration state. Default is Enabled."
        },
        "nniDerivedUniqueRdConfigurationState": {
          "$ref": "#/definitions/NNIDerivedUniqueRouteDistinguisherConfigurationState",
          "description": "NNI derived unique Route Distinguisher state. Default is Disabled."
        }
      }
    },
    "UniqueRouteDistinguisherProperties": {
      "type": "object",
      "description": "Unique Route Distinguisher properties.",
      "properties": {
        "uniqueRdConfigurationState": {
          "type": "string",
          "description": "Unique Route Distinguisher configuration state. Default is Enabled.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "UniqueRouteDistinguisherConfigurationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "UniqueRouteDistinguisherConfigurationState Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "UniqueRouteDistinguisherConfigurationState Disabled"
              }
            ]
          }
        },
        "uniqueRds": {
          "type": "array",
          "description": "List of Unique Route Distinguisher addresses.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "nniDerivedUniqueRdConfigurationState": {
          "type": "string",
          "description": "NNI derived unique Route Distinguisher state. Default is Disabled.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NNIDerivedUniqueRouteDistinguisherConfigurationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "NNI derived unique route distinguisher configuration state Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "NNI derived unique route distinguisher configuration state Disabled"
              }
            ]
          }
        }
      }
    },
    "UpdateAdministrativeState": {
      "type": "object",
      "description": "Update administrative state on list of resources.",
      "properties": {
        "resourceIds": {
          "type": "array",
          "description": "Network Fabrics or Network Rack resource Id.",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/EnableDisableState",
          "description": "Administrative state."
        }
      }
    },
    "UpdateDeviceAdministrativeState": {
      "type": "object",
      "description": "Update the administrative state on list of resources.",
      "properties": {
        "resourceIds": {
          "type": "array",
          "description": "Network Fabrics or Network Rack resource Id.",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/DeviceAdministrativeState",
          "description": "Administrative state."
        }
      }
    },
    "UpdateVersion": {
      "type": "object",
      "description": "Update version properties.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Specify the version."
        }
      }
    },
    "UpgradeNetworkFabricProperties": {
      "type": "object",
      "description": "Model used for Upgrade Network Fabric Properties",
      "properties": {
        "version": {
          "type": "string",
          "description": "Specify the version."
        },
        "action": {
          "$ref": "#/definitions/NetworkFabricUpgradeAction",
          "description": "Action to be performed while upgrading the fabric."
        }
      }
    },
    "V4OverV6BgpSessionState": {
      "type": "string",
      "description": "V4 over V6 BGP session state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "V4OverV6BgpSessionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "V4OverV6BgpSessionState-Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "V4OverV6BgpSessionState-Disabled"
          }
        ]
      }
    },
    "V6OverV4BgpSessionState": {
      "type": "string",
      "description": "V6 over V4 BGP session state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "V6OverV4BgpSessionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "V6OverV4BgpSessionState-Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "V6OverV4BgpSessionState-Disabled"
          }
        ]
      }
    },
    "ValidateAction": {
      "type": "string",
      "description": "Validate action that to be performed",
      "enum": [
        "Cabling",
        "Configuration",
        "Connectivity"
      ],
      "x-ms-enum": {
        "name": "ValidateAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Cabling",
            "value": "Cabling",
            "description": "ValidateAction-Cabling"
          },
          {
            "name": "Configuration",
            "value": "Configuration",
            "description": "ValidateAction-Configuration"
          },
          {
            "name": "Connectivity",
            "value": "Connectivity",
            "description": "ValidateAction-Connectivity"
          }
        ]
      }
    },
    "ValidateConfigurationProperties": {
      "type": "object",
      "description": "Validation configuration properties.",
      "properties": {
        "validateAction": {
          "$ref": "#/definitions/ValidateAction",
          "description": "Validate action that to be performed"
        }
      }
    },
    "ValidateConfigurationResponse": {
      "type": "object",
      "description": "The response of the action validate configuration.",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "configurationState": {
          "$ref": "#/definitions/ConfigurationState",
          "description": "Gets the configuration state.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "URL for the details of the response."
        }
      }
    },
    "ViewDeviceConfigurationResponse": {
      "type": "object",
      "description": "View Device Configuration Response.",
      "properties": {
        "deviceConfigurationUrl": {
          "type": "string",
          "description": "Storage URL to the device configuration file."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "VlanGroupPatchProperties": {
      "type": "object",
      "description": "Vlan group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Vlan group name.",
          "minLength": 1
        },
        "vlans": {
          "type": "array",
          "description": "List of vlans.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VlanGroupProperties": {
      "type": "object",
      "description": "Vlan group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Vlan group name.",
          "minLength": 1
        },
        "vlans": {
          "type": "array",
          "description": "List of vlans.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VlanMatchCondition": {
      "type": "object",
      "description": "The vlan match conditions that need to be matched.",
      "properties": {
        "vlans": {
          "type": "array",
          "description": "List of vlans that need to be matched. Inputs can be single vlan or the range of vlans.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "innerVlans": {
          "type": "array",
          "description": "List of inner vlans that need to be matched.Inputs can be single vlan or the range of vlans.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanGroupNames": {
          "type": "array",
          "description": "List of vlan group names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VlanMatchConditionPatch": {
      "type": "object",
      "description": "The vlan match conditions that need to be matched.",
      "properties": {
        "vlans": {
          "type": "array",
          "description": "List of vlans that need to be matched. Inputs can be single vlan or the range of vlans.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "innerVlans": {
          "type": "array",
          "description": "List of inner vlans that need to be matched.Inputs can be single vlan or the range of vlans.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vlanGroupNames": {
          "type": "array",
          "description": "List of vlan group names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VpnConfigurationPatchableProperties": {
      "type": "object",
      "description": "Network and credential configuration currently applied on terminal server.",
      "properties": {
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network To Network Interconnect.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "peeringOption": {
          "$ref": "#/definitions/PeeringOption",
          "description": "Peering option list."
        },
        "optionBProperties": {
          "$ref": "#/definitions/VpnOptionBPatchProperties",
          "description": "option B properties"
        },
        "optionAProperties": {
          "$ref": "#/definitions/VpnOptionAPatchProperties",
          "description": "option A properties"
        }
      }
    },
    "VpnConfigurationProperties": {
      "type": "object",
      "description": "Network and credential configuration currently applied on terminal server.",
      "properties": {
        "networkToNetworkInterconnectId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Resource ID of the Network To Network Interconnect.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          }
        },
        "administrativeState": {
          "$ref": "#/definitions/AdministrativeState",
          "description": "Administrative state of the resource.",
          "readOnly": true
        },
        "peeringOption": {
          "$ref": "#/definitions/PeeringOption",
          "description": "Peering option list."
        },
        "optionBProperties": {
          "$ref": "#/definitions/VpnOptionBProperties",
          "description": "option B properties"
        },
        "optionAProperties": {
          "$ref": "#/definitions/VpnOptionAProperties",
          "description": "option A properties"
        }
      },
      "required": [
        "peeringOption"
      ]
    },
    "VpnOptionAPatchProperties": {
      "type": "object",
      "description": "Peering optionA properties",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU to use for option A peering.",
          "minimum": 64,
          "maximum": 9200
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan Id.Example : 501",
          "minimum": 501,
          "maximum": 4094
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN number.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdPatchConfiguration",
          "description": "BFD Configuration properties."
        },
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        }
      }
    },
    "VpnOptionAProperties": {
      "type": "object",
      "description": "option A properties",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "description": "MTU to use for option A peering.",
          "default": 1500,
          "minimum": 64,
          "maximum": 9200
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan Id.Example : 501",
          "minimum": 501,
          "maximum": 4094
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "description": "Peer ASN number.Example : 28",
          "minimum": 1,
          "maximum": 4294967295
        },
        "bfdConfiguration": {
          "$ref": "#/definitions/BfdConfiguration",
          "description": "BFD Configuration properties."
        },
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        }
      },
      "required": [
        "vlanId",
        "peerASN"
      ]
    },
    "VpnOptionBPatchProperties": {
      "type": "object",
      "description": "Option B configuration to be used for Management VPN.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE. This is for backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "routeTargets": {
          "$ref": "#/definitions/RouteTargetPatchInformation",
          "description": "Route Targets to be applied."
        }
      }
    },
    "VpnOptionBProperties": {
      "type": "object",
      "description": "Option B configuration to be used for Management VPN.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE. This is for backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.",
          "items": {
            "type": "string"
          }
        },
        "routeTargets": {
          "$ref": "#/definitions/RouteTargetInformation",
          "description": "Route Targets to be applied."
        }
      }
    },
    "WellKnownCommunities": {
      "type": "string",
      "description": "`Internet` - Advertise routes to internet community.\n`LocalAS` - Advertise routes to only localAS peers.\n`NoAdvertise` - Don't advertise routes to any peer.\n`NoExport` - Don't export to next AS.\n`GShut` - Graceful Shutdown (GSHUT) withdraw routes before terminating BGP connection.",
      "enum": [
        "Internet",
        "LocalAS",
        "NoAdvertise",
        "NoExport",
        "GShut"
      ],
      "x-ms-enum": {
        "name": "WellKnownCommunities",
        "modelAsString": true,
        "values": [
          {
            "name": "Internet",
            "value": "Internet",
            "description": "WellKnownCommunities-Internet"
          },
          {
            "name": "LocalAS",
            "value": "LocalAS",
            "description": "WellKnownCommunities-LocalAS"
          },
          {
            "name": "NoAdvertise",
            "value": "NoAdvertise",
            "description": "WellKnownCommunities-NoAdvertise"
          },
          {
            "name": "NoExport",
            "value": "NoExport",
            "description": "WellKnownCommunities-NoExport"
          },
          {
            "name": "GShut",
            "value": "GShut",
            "description": "WellKnownCommunities-GShut"
          }
        ]
      }
    }
  },
  "parameters": {}
}
