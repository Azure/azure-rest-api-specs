{
  "swagger": "2.0",
  "info": {
    "title": "Informatica.DataManagement",
    "version": "2023-03-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "SingleSignOnOperations"
    },
    {
      "name": "Organizations"
    }
  ],
  "paths": {
    "/providers/Informatica.DataManagement/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List1": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List2": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Informatica.DataManagement/organizations": {
      "get": {
        "operationId": "Organizations_ListBySubscription",
        "tags": [
          "Organizations"
        ],
        "description": "List InformaticaOrganizationResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_ListBySubscription1": {
            "$ref": "./examples/Organizations_ListBySubscription_MaximumSet_Gen.json"
          },
          "Organizations_ListBySubscription": {
            "$ref": "./examples/Organizations_ListBySubscription_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations": {
      "get": {
        "operationId": "Organizations_ListByResourceGroup",
        "tags": [
          "Organizations"
        ],
        "description": "List InformaticaOrganizationResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_ListByResourceGroup1": {
            "$ref": "./examples/Organizations_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Organizations_ListByResourceGroup": {
            "$ref": "./examples/Organizations_ListByResourceGroup_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}": {
      "get": {
        "operationId": "Organizations_Get",
        "tags": [
          "Organizations"
        ],
        "description": "Get a InformaticaOrganizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Get1": {
            "$ref": "./examples/Organizations_Get_MaximumSet_Gen.json"
          },
          "Organizations_Get": {
            "$ref": "./examples/Organizations_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Organizations_CreateOrUpdate",
        "tags": [
          "Organizations"
        ],
        "description": "Create a InformaticaOrganizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InformaticaOrganizationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResource"
            }
          },
          "201": {
            "description": "Resource 'InformaticaOrganizationResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_CreateOrUpdate1": {
            "$ref": "./examples/Organizations_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Organizations_CreateOrUpdate": {
            "$ref": "./examples/Organizations_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Organizations_Update",
        "tags": [
          "Organizations"
        ],
        "description": "Update a InformaticaOrganizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationPropertiesUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InformaticaOrganizationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Update1": {
            "$ref": "./examples/Organizations_Update_MaximumSet_Gen.json"
          },
          "Organizations_Update": {
            "$ref": "./examples/Organizations_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Organizations_Delete",
        "tags": [
          "Organizations"
        ],
        "description": "Delete a InformaticaOrganizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_Delete1": {
            "$ref": "./examples/Organizations_Delete_MaximumSet_Gen.json"
          },
          "Organizations_Delete": {
            "$ref": "./examples/Organizations_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/singleSignOnConfigurations": {
      "get": {
        "operationId": "SingleSignOnOperations_ListByInformaticaOrganizationResource",
        "tags": [
          "SingleSignOnOperations"
        ],
        "description": "List SingleSignOn resources by InformaticaOrganizationResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOnOperations_ListByInformaticaOrganizationResource1": {
            "$ref": "./examples/SingleSignOnOperations_ListByInformaticaOrganizationResource_MaximumSet_Gen.json"
          },
          "SingleSignOnOperations_ListByInformaticaOrganizationResource": {
            "$ref": "./examples/SingleSignOnOperations_ListByInformaticaOrganizationResource_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/singleSignOnConfigurations/{configurationName}": {
      "get": {
        "operationId": "SingleSignOnOperations_Get",
        "tags": [
          "SingleSignOnOperations"
        ],
        "description": "Get a SingleSignOn",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the SSO Configuration",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOn"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOnOperations_Get1": {
            "$ref": "./examples/SingleSignOnOperations_Get_MaximumSet_Gen.json"
          },
          "SingleSignOnOperations_Get": {
            "$ref": "./examples/SingleSignOnOperations_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SingleSignOnOperations_CreateOrUpdate",
        "tags": [
          "SingleSignOnOperations"
        ],
        "description": "Create a SingleSignOn",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the SSO Configuration",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleSignOn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SingleSignOn' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SingleSignOn"
            }
          },
          "201": {
            "description": "Resource 'SingleSignOn' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SingleSignOn"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOnOperations_CreateOrUpdate1": {
            "$ref": "./examples/SingleSignOnOperations_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "SingleSignOnOperations_CreateOrUpdate": {
            "$ref": "./examples/SingleSignOnOperations_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SingleSignOnOperations_Delete",
        "tags": [
          "SingleSignOnOperations"
        ],
        "description": "Delete a SingleSignOn",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Name of the Organizations resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the SSO Configuration",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SingleSignOnOperations_Delete1": {
            "$ref": "./examples/SingleSignOnOperations_Delete_MaximumSet_Gen.json"
          },
          "SingleSignOnOperations_Delete": {
            "$ref": "./examples/SingleSignOnOperations_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "CompanyDetails": {
      "type": "object",
      "description": "Company Details",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "company Name"
        },
        "officeAddress": {
          "type": "string",
          "description": "Office Address"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        },
        "domain": {
          "type": "string",
          "description": "Domain name"
        },
        "business": {
          "type": "string",
          "description": "Business phone number"
        },
        "numberOfEmployees": {
          "type": "integer",
          "format": "int32",
          "description": "Number Of Employees"
        }
      }
    },
    "InformaticaOrganizationResource": {
      "type": "object",
      "description": "A Organization Resource by Informatica",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OrganizationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InformaticaOrganizationResourceListResult": {
      "type": "object",
      "description": "The response of a InformaticaOrganizationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InformaticaOrganizationResource items on this page",
          "items": {
            "$ref": "#/definitions/InformaticaOrganizationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InformaticaProperties": {
      "type": "object",
      "description": "Properties of the Informatica organization",
      "properties": {
        "organizationId": {
          "type": "string",
          "description": "Organization id"
        },
        "singleSignOnProperties": {
          "$ref": "#/definitions/InformaticaSingleSignOnProperties",
          "description": "The login URL specific to this Informatica Organization"
        }
      }
    },
    "InformaticaSingleSignOnProperties": {
      "type": "object",
      "description": "Single sign on Info of the SolarWinds account",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "Single sign-on state"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "The Id of the Enterprise App used for Single sign-on."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this SolarWinds Organization"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state"
        }
      }
    },
    "MarketplaceDetails": {
      "type": "object",
      "description": "Marketplace details",
      "properties": {
        "marketplaceSubscriptionId": {
          "type": "string",
          "description": "Marketplace Subscription Id"
        },
        "offerDetails": {
          "$ref": "#/definitions/OfferDetails",
          "description": "Marketplace offer details."
        }
      },
      "required": [
        "marketplaceSubscriptionId",
        "offerDetails"
      ]
    },
    "MarketplaceDetailsUpdate": {
      "type": "object",
      "description": "Marketplace details",
      "properties": {
        "marketplaceSubscriptionId": {
          "type": "string",
          "description": "Marketplace Subscription Id"
        },
        "offerDetails": {
          "$ref": "#/definitions/OfferDetailsUpdate",
          "description": "Marketplace offer details."
        }
      }
    },
    "OfferDetails": {
      "type": "object",
      "description": "Details of the product offering.",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "Id of the product publisher.",
          "maxLength": 50
        },
        "offerId": {
          "type": "string",
          "description": "Id of the product offering.",
          "maxLength": 50
        },
        "planId": {
          "type": "string",
          "description": "Id of the product offer plan.",
          "maxLength": 50
        },
        "planName": {
          "type": "string",
          "description": "Name of the product offer plan.",
          "maxLength": 50
        },
        "termUnit": {
          "type": "string",
          "description": "Offer plan term unit.",
          "maxLength": 25
        },
        "termId": {
          "type": "string",
          "description": "Offer plan term id.",
          "maxLength": 50
        }
      },
      "required": [
        "publisherId",
        "offerId",
        "planId",
        "planName",
        "termId"
      ]
    },
    "OfferDetailsUpdate": {
      "type": "object",
      "description": "Details of the product offering.",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "Id of the product publisher.",
          "maxLength": 50
        },
        "offerId": {
          "type": "string",
          "description": "Id of the product offering.",
          "maxLength": 50
        },
        "planId": {
          "type": "string",
          "description": "Id of the product offer plan.",
          "maxLength": 50
        },
        "planName": {
          "type": "string",
          "description": "Name of the product offer plan.",
          "maxLength": 50
        },
        "termUnit": {
          "type": "string",
          "description": "Offer plan term unit.",
          "maxLength": 25
        },
        "termId": {
          "type": "string",
          "description": "Offer plan term id.",
          "maxLength": 50
        }
      }
    },
    "OrganizationProperties": {
      "type": "object",
      "description": "Properties specific to the Informatica DataManagement Organization resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State of the resource",
          "readOnly": true
        },
        "informaticaProperties": {
          "$ref": "#/definitions/InformaticaProperties",
          "description": "Informatica Organization properties"
        },
        "marketplaceDetails": {
          "$ref": "#/definitions/MarketplaceDetails",
          "description": "Marketplace details"
        },
        "userDetails": {
          "$ref": "#/definitions/UserDetails",
          "description": "User details"
        },
        "companyDetails": {
          "$ref": "#/definitions/CompanyDetails",
          "description": "Company details"
        }
      }
    },
    "OrganizationPropertiesUpdate": {
      "type": "object",
      "description": "Properties specific to the Informatica DataManagement Organization resource",
      "properties": {
        "informaticaProperties": {
          "$ref": "#/definitions/InformaticaProperties",
          "description": "Informatica Organization properties"
        },
        "marketplaceDetails": {
          "$ref": "#/definitions/MarketplaceDetailsUpdate",
          "description": "Marketplace details"
        },
        "userDetails": {
          "$ref": "#/definitions/UserDetails",
          "description": "User details"
        },
        "companyDetails": {
          "$ref": "#/definitions/CompanyDetails",
          "description": "Company details"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning State of the Organization resource",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Organization resource creation request accepted"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Organization resource creation started"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Organization resource is being updated"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Organization resource deletion started"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Organization resource creation successful"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Organization resource creation failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Organization resource creation canceled"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Organization resource is deleted"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Organization resource state is unknown"
          }
        ]
      }
    },
    "SingleSignOn": {
      "type": "object",
      "description": "Single sign-on configurations for a Informatica resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InformaticaSingleSignOnProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SingleSignOnListResult": {
      "type": "object",
      "description": "The response of a SingleSignOn list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SingleSignOn items on this page",
          "items": {
            "$ref": "#/definitions/SingleSignOn"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SingleSignOnStates": {
      "type": "string",
      "description": "Various states of the SSO resource",
      "enum": [
        "Initial",
        "Enable",
        "Disable",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStates",
        "modelAsString": true,
        "values": [
          {
            "name": "Initial",
            "value": "Initial",
            "description": "SSO state Initial"
          },
          {
            "name": "Enable",
            "value": "Enable",
            "description": "SSO state Enable"
          },
          {
            "name": "Disable",
            "value": "Disable",
            "description": "SSO state Disable"
          },
          {
            "name": "Existing",
            "value": "Existing",
            "description": "SSO state Existing"
          }
        ]
      }
    },
    "UserDetails": {
      "type": "object",
      "description": "User Info of Informatica Organization resource",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "User first name.",
          "maxLength": 50
        },
        "lastName": {
          "type": "string",
          "description": "User last name.",
          "maxLength": 50
        },
        "emailAddress": {
          "$ref": "#/definitions/email",
          "description": "User email address."
        },
        "upn": {
          "type": "string",
          "description": "UPN of user"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user used by for contacting them if needed",
          "maxLength": 40
        }
      }
    },
    "email": {
      "type": "string",
      "description": "Reusable representation of an email address",
      "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
    }
  },
  "parameters": {}
}
