import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-providerhub-controller";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-apiview";
import "@azure-tools/cadl-azure-resource-manager";

@armProviderNamespace
@service({
  title: "Informatica.DataManagement",
  version: "2023-03-01-preview",
  description: "Azure Native Services Informatica DataManagement",
})
@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
@useDependency(Azure.Core.Versions.v1_0_Preview_1)

namespace Informatica.DataManagement;

using Azure.ResourceManager;
using Cadl.Rest;
using Cadl.Http;
using Cadl.Versioning;

@doc("Reusable representation of an email address")
@pattern("^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$")
scalar email extends string;

@doc("A Organization Resource by Informatica")
model InformaticaOrganizationResource is TrackedResource<OrganizationProperties> {
  @key("organizationName")
  @segment("organizations")
  @doc("Name of the Organizations resource")
  @path
  name: string;
  ...ManagedServiceIdentity;
  
}

interface Operations extends Azure.ResourceManager.Operations {}

@doc("Properties specific to the Informatica DataManagement Organization resource")
model OrganizationProperties {
  @visibility("read")
  @doc("Provisioning State of the resource")
  provisioningState?: ProvisioningState;
  
  @doc("Informatica Organization properties")
  informaticaProperties?: InformaticaProperties;

  @doc("Marketplace details")
  marketplaceDetails?: MarketplaceDetails;
  
  @doc("User details")
  userDetails?: UserDetails;
}

@doc("Marketplace details")
model MarketplaceDetails
{
  @doc("Marketplace Subscription Id")
  marketplaceSubscriptionId: string;

  @doc("Marketplace offer details.")
  offerDetails: OfferDetails;
}

@doc("Details of the product offering.")
model OfferDetails {
  @maxLength(50)
  @doc("Id of the product publisher.")
  publisherId: string;

  @maxLength(50)
  @doc("Id of the product offering.")
  offerId: string;

  @maxLength(50)
  @doc("Id of the product offer plan.")
  planId: string;

  @maxLength(50)
  @doc("Name of the product offer plan.")
  planName: string;

  @maxLength(25)
  @doc("Offer plan term unit.")
  termUnit?: string;

  @maxLength(50)
  @doc("Offer plan term id.")
  termId: string;
}

@doc("Properties of the Informatica organization")
model InformaticaProperties{

  @doc("Organization id")
  organizationId?: string;
  
  @doc("The login URL specific to this Informatica Organization")
  singleSignOnUrl?: string;
}

@doc("User Info of Informatica Organization resource")
model UserDetails {
  @maxLength(50)
  @doc("User first name.")
  firstName: string;

  @maxLength(50)
  @doc("User last name.")
  lastName: string;

  @doc("User email address.")
  emailAddress: email;

  @doc("UPN of user")
  upn?: string;

  @maxLength(40)
  @doc("Phone number of the user used by for contacting them if needed")
  phoneNumber?: string;
}

@doc("Provisioning State of the Organization resource")
enum ProvisioningState {
  @doc("Organization resource creation request accepted")
  "Accepted",
  @doc("Organization resource creation started")
  "Creating",
  @doc("Organization resource is being updated")
  "Updating",
  @doc("Organization resource deletion started")
  "Deleting",
  @doc("Organization resource creation successful")
  "Succeeded",
  @doc("Organization resource creation failed")
  "Failed",
  @doc("Organization resource creation canceled")
  "Canceled",
  @doc("Organization resource is deleted")
  "Deleted",
  @doc("Organization resource state is unknown")
  "NotSpecified"
}
