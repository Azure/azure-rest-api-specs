{
  "swagger": "2.0",
  "info": {
    "title": "Contoso Widget Manager",
    "version": "2022-11-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/widgets": {
      "get": {
        "operationId": "Widgets_ListWidgets",
        "description": "List Widget resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Widget"
                  },
                  "x-ms-identifiers": [],
                  "description": "The Widget items on this page",
                  "x-typespec-name": "Widget[]"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Widget items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<Widget, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Widgets_ListWidgets": {
            "$ref": "./examples/Widgets_ListWidgetsSample.json"
          }
        }
      }
    },
    "/widgets/{widgetName}": {
      "get": {
        "operationId": "Widgets_GetWidget",
        "description": "Fetch a Widget by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "widgetName",
            "in": "path",
            "required": true,
            "description": "The widget name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get widget by widget name.": {
            "$ref": "./examples/Widgets_GetWidgetSample.json"
          }
        }
      },
      "patch": {
        "operationId": "Widgets_CreateOrUpdateWidget",
        "description": "Creates or updates a Widget asynchronously.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "widgetName",
            "in": "path",
            "required": true,
            "description": "The widget name.",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource instance.",
            "schema": {
              "$ref": "#/definitions/WidgetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "Operation-Location": {
                "description": "The location for monitoring the operation state.",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "Operation-Location": {
                "description": "The location for monitoring the operation state.",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/merge-patch+json"
        ],
        "x-ms-examples": {
          "Widgets_CreateOrUpdateWidget": {
            "$ref": "./examples/Widgets_CreateOrUpdateWidgetSample.json"
          }
        }
      },
      "delete": {
        "operationId": "Widgets_DeleteWidget",
        "description": "Delete a Widget asynchronously.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "widgetName",
            "in": "path",
            "required": true,
            "description": "The widget name.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location for monitoring the operation state.",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                }
              },
              "description": "Provides status details for long running operations.",
              "required": [
                "id",
                "status"
              ],
              "x-typespec-name": "Azure.Core.Foundations.OperationStatus<never, Azure.Core.Foundations.Error>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete widget by widget name using long-running operation.": {
            "$ref": "./examples/Widgets_DeleteWidgetSample.json"
          }
        }
      }
    },
    "/widgets/{widgetName}/operations/{operationId}": {
      "get": {
        "operationId": "Widgets_GetWidgetOperationStatus",
        "description": "Gets status of a Widget operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "widgetName",
            "in": "path",
            "required": true,
            "description": "The widget name.",
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the operation.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                },
                "result": {
                  "$ref": "#/definitions/Widget",
                  "description": "The result of the operation."
                }
              },
              "description": "Provides status details for long running operations.",
              "required": [
                "id",
                "status"
              ],
              "x-typespec-name": "Azure.Core.ResourceOperationStatus<Widget, Widget, Azure.Core.Foundations.Error>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Widgets_GetWidgetOperationStatus": {
            "$ref": "./examples/Widgets_GetWidgetOperationStatusSample.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "description": "An array of details about specific errors that led to this reported error.",
          "x-typespec-name": "Azure.Core.Foundations.Error[]"
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "FakedSharedModel": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The created date."
        }
      },
      "description": "Faked shared model",
      "required": [
        "tag",
        "createdAt"
      ]
    },
    "FakedSharedModelUpdate": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The created date."
        }
      },
      "description": "Faked shared model"
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2022-11-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_11_01_Preview",
            "value": "2022-11-01-preview"
          }
        ]
      }
    },
    "Widget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The widget name.",
          "readOnly": true
        },
        "manufacturerId": {
          "type": "string",
          "description": "The ID of the widget's manufacturer."
        },
        "sharedModel": {
          "$ref": "#/definitions/FakedSharedModel",
          "description": "The faked shared model."
        }
      },
      "description": "A widget.",
      "required": [
        "name",
        "manufacturerId"
      ]
    },
    "WidgetUpdate": {
      "type": "object",
      "properties": {
        "manufacturerId": {
          "type": "string",
          "description": "The ID of the widget's manufacturer."
        },
        "sharedModel": {
          "$ref": "#/definitions/FakedSharedModelUpdate",
          "description": "The faked shared model."
        }
      },
      "description": "A widget."
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}
