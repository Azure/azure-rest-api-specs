{
  "swagger": "2.0",
  "info": {
    "description": "API for managing Azure VMware Private Clouds.",
    "version": "2019-12-11-preview",
    "title": "Azure VMware Solution Private Cloud Resource Provider API"
  },
  "tags": [
    {
      "name": "PrivateClouds",
      "description": ""
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.VMwareOnAzure/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of VMware On Azure management operations.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareOnAzure/privateClouds": {
      "get": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "list private clouds",
        "operationId": "PrivateClouds_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateCloudList"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareOnAzure/privateClouds/{privateCloudName}": {
      "get": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get a private cloud",
        "operationId": "PrivateClouds_GetById",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareOnAzure/privateClouds": {
      "get": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "list private clouds in a resource group",
        "operationId": "PrivateClouds_ListInResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareOnAzure/privateClouds/{privateCloudName}": {
      "get": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get a private cloud in a resource group",
        "operationId": "PrivateClouds_GetByIdInResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "create a private cloud",
        "operationId": "PrivateClouds_Create",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudRequest"
            },
            "x-exportParamName": "Parameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Url to poll for status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Url to poll for operation status."
              },
              "Retry-After": {
                "type": "string",
                "description": "How long to wait before polling."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateClouds"
        ],
        "summary": "delete a private cloud",
        "operationId": "PrivateClouds_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted operation"
          },
          "204": {
            "description": "no content"
          }
        }
      },
      "patch": {
        "tags": [
          "PrivateClouds"
        ],
        "operationId": "PrivateClouds_Update",
        "summary": "modify a private cloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudRequest"
            },
            "x-exportParamName": "Parameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PrivateCloudRequest": {
      "properties": {
        "clusterSize": {
          "type": "integer",
          "example": 4,
          "description": "number of hosts in PrivateCloud cluster"
        },
        "sku": {
          "type": "string",
          "example": "avs28",
          "description": "sku for the node/host"
        },
        "name": {
          "type": "string",
          "example": "FakePC",
          "description": "name of the private cloud"
        },
        "vpc": {
          "$ref": "#/definitions/Vpc"
        }
      },
      "example": {
        "clusterSize": 4,
        "sku": "avs28",
        "name": "FakePC",
        "vpc": "10.19.4.0/22"
      }
    },
    "Vpc": {
      "type": "string",
      "example": "10.19.4.0/22"
    },
    "PrivateCloud": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Deploying"
          ]
        },
        "clusterSize": {
          "type": "integer",
          "example": 4,
          "description": "number of hosts in PrivateCloud cluster"
        },
        "sku": {
          "type": "string",
          "example": "avs28",
          "description": "sku for the node/host"
        },
        "name": {
          "type": "string",
          "example": "FakePC",
          "description": "name of the private cloud"
        },
        "vpc": {
          "$ref": "#/definitions/Vpc"
        }
      },
      "example": {
        "clusterSize": 4,
        "sku": "avs28",
        "name": "FakePC",
        "vpc": "10.19.4.0/22",
        "provisioningState": "Succeeded"
      }
    },
    "PrivateCloudList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzurePrivateCloudResponse"
          }
        }
      },
      "example": {
        "value": [
          {
            "location": "West US",
            "type": "Microsoft.VMwareOnAzure/privateClouds",
            "properties": {
              "clusterSize": 4,
              "sku": "avs28",
              "name": "FakePC",
              "vpc": "10.19.4.0/22",
              "provisioningState": "Succeeded"
            },
            "tags": "{}"
          },
          {
            "location": "West US",
            "type": "Microsoft.VMwareOnAzure/privateClouds",
            "properties": {
              "clusterSize": 4,
              "sku": "avs28",
              "name": "FakePC",
              "vpc": "10.19.4.0/22",
              "provisioningState": "Succeeded"
            },
            "tags": "{}"
          }
        ]
      }
    },
    "AzurePrivateCloudRequest": {
      "properties": {
        "location": {
          "type": "string",
          "example": "West US"
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloudRequest"
        },
        "tags": {
          "type": "object",
          "properties": {}
        }
      },
      "example": {
        "location": "West US",
        "properties": {
          "clusterSize": 4,
          "sku": "avs28",
          "name": "FakePC",
          "vpc": "10.19.4.0/22"
        },
        "tags": "{}"
      }
    },
    "AzurePrivateCloudResponse": {
      "properties": {
        "location": {
          "type": "string",
          "example": "West US"
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloud"
        },
        "type": {
          "type": "string",
          "example": "Microsoft.VMwareOnAzure/privateClouds"
        },
        "tags": {
          "type": "object",
          "properties": {}
        }
      },
      "example": {
        "location": "West US",
        "type": "Microsoft.VMwareOnAzure/privateClouds",
        "properties": {
          "clusterSize": 4,
          "sku": "avs28",
          "name": "FakePC",
          "vpc": "10.19.4.0/22",
          "provisioningState": "Succeeded"
        },
        "tags": "{}"
      }
    },
    "OperationsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of VMware on Azure operations"
        }
      },
      "description": "List of VMware on Azure operations"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the operation being performed on this particular object. This name should match the action name that appears in RBAC / the event service."
        },
        "display": {
          "$ref": "#/definitions/Display",
          "description": "Displayed VMware on Azure operation information"
        }
      },
      "description": "VMware on Azure operation information"
    },
    "Display": {
      "type": "object",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly form of the resource provider name. This form is also expected to include the publisher/company responsible. Use Title Casing. Begin with \"Microsoft\" for 1st party services."
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly form of the resource type related to this action/operation. This form should match the public documentation for the resource provider. Use Title Casing. For examples, refer to the “name” section."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly name for the operation as shown to the user. This name should be concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the entity/resource to which it applies."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly description for the operation as shown to the user. This description should be thorough, yet concise. It will be used in tool-tips and detailed views."
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "description": "The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is 'user,system'"
        }
      },
      "description": "Detailed VMware on Azure operation information"
    },
    "ErrorResponse": {
      "description": "Describes the format of Error response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The unique identifier for a Microsoft Azure subscription.",
      "required": true,
      "type": "string",
      "x-exportParamName": "SubscriptionId"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group within the Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-exportParamName": "ResourceGroupName"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The Version of the API to be used with the client request.",
      "required": true,
      "type": "string",
      "x-exportParamName": "ApiVersion"
    },
    "PrivateCloudNameParameter": {
      "name": "privateCloudName",
      "in": "path",
      "description": "The name of the private cloud.",
      "required": true,
      "type": "string",
      "x-exportParamName": "PrivateCloudName",
      "x-ms-parameter-location": "method"
    }
  }
}