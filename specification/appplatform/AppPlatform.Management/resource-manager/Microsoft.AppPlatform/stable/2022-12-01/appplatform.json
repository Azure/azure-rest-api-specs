{
  "swagger": "2.0",
  "info": {
    "title": "AppPlatformManagementClient",
    "version": "2022-12-01",
    "description": "REST API for Azure Spring Apps",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ServiceResources"
    },
    {
      "name": "ConfigServerResources"
    },
    {
      "name": "ConfigurationServiceResources"
    },
    {
      "name": "ServiceRegistryResources"
    },
    {
      "name": "BuildServices"
    },
    {
      "name": "Builds"
    },
    {
      "name": "BuildResults"
    },
    {
      "name": "SupportedBuildpackResources"
    },
    {
      "name": "SupportedStackResources"
    },
    {
      "name": "BuildpackBindingResources"
    },
    {
      "name": "BuilderResources"
    },
    {
      "name": "BuildServiceAgentPoolResources"
    },
    {
      "name": "MonitoringSettingResources"
    },
    {
      "name": "AppResources"
    },
    {
      "name": "BindingResources"
    },
    {
      "name": "StorageResources"
    },
    {
      "name": "CertificateResources"
    },
    {
      "name": "CustomDomainResources"
    },
    {
      "name": "DeploymentResources"
    },
    {
      "name": "GatewayResources"
    },
    {
      "name": "GatewayRouteConfigResources"
    },
    {
      "name": "GatewayCustomDomainResources"
    },
    {
      "name": "ApiPortalResources"
    },
    {
      "name": "ApiPortalCustomDomainResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.AppPlatform/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.AppPlatform/runtimeVersions": {
      "get": {
        "operationId": "RuntimeVersionsOperations_ListRuntimeVersions",
        "description": "Lists all of the available runtime versions supported by Microsoft.AppPlatform provider.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AvailableRuntimeVersions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/Spring": {
      "get": {
        "operationId": "Services_ListBySubscription",
        "tags": [
          "ServiceResources"
        ],
        "description": "Handles requests to list all resources in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_ListBySubscription": {
            "$ref": "./examples/Services_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "Services_CheckNameAvailability",
        "tags": [
          "ServiceResources"
        ],
        "description": "Checks that the resource name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_CheckNameAvailability": {
            "$ref": "./examples/Services_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/skus": {
      "get": {
        "operationId": "SkusOperations_List",
        "description": "Lists all of the available skus of the Microsoft.AppPlatform provider.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceSku"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring": {
      "get": {
        "operationId": "Services_List",
        "tags": [
          "ServiceResources"
        ],
        "description": "Handles requests to list all resources in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_List": {
            "$ref": "./examples/Services_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "ServiceResources"
        ],
        "description": "Get a Service and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_Get": {
            "$ref": "./examples/Services_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "ServiceResources"
        ],
        "description": "Create a new Service or update an exiting Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "201": {
            "description": "Resource 'ServiceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_CreateOrUpdate": {
            "$ref": "./examples/Services_CreateOrUpdate.json"
          },
          "Services_CreateOrUpdate_Enterprise": {
            "$ref": "./examples/Services_CreateOrUpdate_Enterprise.json"
          },
          "Services_CreateOrUpdate_VNetInjection": {
            "$ref": "./examples/Services_CreateOrUpdate_VNetInjection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "ServiceResources"
        ],
        "description": "Operation to delete a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_Delete": {
            "$ref": "./examples/Services_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/Spring/{name}": {
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "ServiceResources"
        ],
        "description": "Operation to update an exiting Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_Update": {
            "$ref": "./examples/Services_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals": {
      "get": {
        "operationId": "ApiPortals_List",
        "tags": [
          "ApiPortalResources"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiPortalResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortals_List": {
            "$ref": "./examples/ApiPortals_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}": {
      "get": {
        "operationId": "ApiPortals_Get",
        "tags": [
          "ApiPortalResources"
        ],
        "description": "Get the API portal and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiPortalResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortals_Get": {
            "$ref": "./examples/ApiPortals_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ApiPortals_CreateOrUpdate",
        "tags": [
          "ApiPortalResources"
        ],
        "description": "Create the default API portal or update the existing API portal.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalResource",
            "in": "body",
            "description": "The API portal for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiPortalResource"
            },
            "x-ms-client-name": "apiPortalResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiPortalResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiPortalResource"
            }
          },
          "201": {
            "description": "Resource 'ApiPortalResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiPortalResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortals_CreateOrUpdate": {
            "$ref": "./examples/ApiPortals_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiPortals_Delete",
        "tags": [
          "ApiPortalResources"
        ],
        "description": "Delete the default API portal.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortals_Delete": {
            "$ref": "./examples/ApiPortals_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains": {
      "get": {
        "operationId": "ApiPortalCustomDomains_List",
        "tags": [
          "ApiPortalCustomDomainResources"
        ],
        "description": "Handle requests to list all API portal custom domains.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiPortalCustomDomainResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortalCustomDomains_List": {
            "$ref": "./examples/ApiPortalCustomDomains_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}": {
      "get": {
        "operationId": "ApiPortalCustomDomains_Get",
        "tags": [
          "ApiPortalCustomDomainResources"
        ],
        "description": "Get the API portal custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiPortalCustomDomainResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortalCustomDomains_Get": {
            "$ref": "./examples/ApiPortalCustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ApiPortalCustomDomains_CreateOrUpdate",
        "tags": [
          "ApiPortalCustomDomainResources"
        ],
        "description": "Create or update the API portal custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalCustomDomainResource",
            "in": "body",
            "description": "The API portal custom domain for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiPortalCustomDomainResource"
            },
            "x-ms-client-name": "apiPortalCustomDomainResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiPortalCustomDomainResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiPortalCustomDomainResource"
            }
          },
          "201": {
            "description": "Resource 'ApiPortalCustomDomainResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiPortalCustomDomainResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortalCustomDomains_CreateOrUpdate": {
            "$ref": "./examples/ApiPortalCustomDomains_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiPortalCustomDomains_Delete",
        "tags": [
          "ApiPortalCustomDomainResources"
        ],
        "description": "Delete the API portal custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortalCustomDomains_Delete": {
            "$ref": "./examples/ApiPortalCustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/validateDomain": {
      "post": {
        "operationId": "ApiPortals_ValidateDomain",
        "tags": [
          "ApiPortalResources"
        ],
        "description": "Check the domains are valid as well as not in use.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainValidatePayload"
            },
            "x-ms-client-name": "validatePayload"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainValidateResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiPortals_ValidateDomain": {
            "$ref": "./examples/ApiPortals_ValidateDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps": {
      "get": {
        "operationId": "Apps_List",
        "tags": [
          "AppResources"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AppResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_List": {
            "$ref": "./examples/Apps_List.json"
          },
          "Apps_List_VNetInjection": {
            "$ref": "./examples/Apps_List_VNetInjection.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}": {
      "get": {
        "operationId": "Apps_Get",
        "tags": [
          "AppResources"
        ],
        "description": "Get an App and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "syncStatus",
            "in": "query",
            "description": "Indicates whether sync status",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AppResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_Get": {
            "$ref": "./examples/Apps_Get.json"
          },
          "Apps_Get_VNetInjection": {
            "$ref": "./examples/Apps_Get_VNetInjection.json"
          }
        }
      },
      "put": {
        "operationId": "Apps_CreateOrUpdate",
        "tags": [
          "AppResources"
        ],
        "description": "Create a new App or update an exiting App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppResource"
            },
            "x-ms-client-name": "appResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AppResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AppResource"
            }
          },
          "201": {
            "description": "Resource 'AppResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AppResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_CreateOrUpdate": {
            "$ref": "./examples/Apps_CreateOrUpdate.json"
          },
          "Apps_CreateOrUpdate_VNetInjection": {
            "$ref": "./examples/Apps_CreateOrUpdate_VNetInjection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Apps_Delete",
        "tags": [
          "AppResources"
        ],
        "description": "Operation to delete an App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_Delete": {
            "$ref": "./examples/Apps_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/apps/{name}": {
      "patch": {
        "operationId": "Apps_Update",
        "tags": [
          "AppResources"
        ],
        "description": "Operation to update an exiting App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppResource"
            },
            "x-ms-client-name": "appResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AppResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_Update": {
            "$ref": "./examples/Apps_Update.json"
          },
          "Apps_Update_VNetInjection": {
            "$ref": "./examples/Apps_Update_VNetInjection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings": {
      "get": {
        "operationId": "Bindings_List",
        "tags": [
          "BindingResources"
        ],
        "description": "Handles requests to list all resources in an App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BindingResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bindings_List": {
            "$ref": "./examples/Bindings_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}": {
      "get": {
        "operationId": "Bindings_Get",
        "tags": [
          "BindingResources"
        ],
        "description": "Get a Binding and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BindingResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bindings_Get": {
            "$ref": "./examples/Bindings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Bindings_CreateOrUpdate",
        "tags": [
          "BindingResources"
        ],
        "description": "Create a new Binding or update an exiting Binding.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BindingResource"
            },
            "x-ms-client-name": "bindingResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BindingResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BindingResource"
            }
          },
          "201": {
            "description": "Resource 'BindingResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BindingResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bindings_CreateOrUpdate": {
            "$ref": "./examples/Bindings_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Bindings_Delete",
        "tags": [
          "BindingResources"
        ],
        "description": "Operation to delete a Binding.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bindings_Delete": {
            "$ref": "./examples/Bindings_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}/bindings/{name}": {
      "patch": {
        "operationId": "Bindings_Update",
        "tags": [
          "BindingResources"
        ],
        "description": "Operation to update an exiting Binding.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bindingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BindingResource"
            },
            "x-ms-client-name": "bindingResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BindingResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bindings_Update": {
            "$ref": "./examples/Bindings_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Handles requests to list all resources in an App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the deployments to be listed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List": {
            "$ref": "./examples/Deployments_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "Deployments_Get",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Get a Deployment and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get": {
            "$ref": "./examples/Deployments_Get.json"
          },
          "Deployments_Get_CustomContainer": {
            "$ref": "./examples/Deployments_Get_CustomContainer.json"
          }
        }
      },
      "put": {
        "operationId": "Deployments_CreateOrUpdate",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Create a new Deployment or update an exiting Deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            },
            "x-ms-client-name": "deploymentResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DeploymentResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            }
          },
          "201": {
            "description": "Resource 'DeploymentResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_CreateOrUpdate": {
            "$ref": "./examples/Deployments_CreateOrUpdate.json"
          },
          "Deployments_CreateOrUpdate_CustomContainer": {
            "$ref": "./examples/Deployments_CreateOrUpdate_CustomContainer.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Deployments_Delete",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Operation to delete a Deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Delete": {
            "$ref": "./examples/Deployments_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/deployments/{name}": {
      "patch": {
        "operationId": "Deployments_Update",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Operation to update an exiting Deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            },
            "x-ms-client-name": "deploymentResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Update": {
            "$ref": "./examples/Deployments_Update.json"
          },
          "Deployments_Update_CustomContainer": {
            "$ref": "./examples/Deployments_Update_CustomContainer.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/disableRemoteDebugging": {
      "post": {
        "operationId": "Deployments_DisableRemoteDebugging",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Disable remote debugging.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RemoteDebugging"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_DisableRemoteDebugging": {
            "$ref": "./examples/Deployments_DisableRemoteDebugging.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/enableRemoteDebugging": {
      "post": {
        "operationId": "Deployments_EnableRemoteDebugging",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Enable remote debugging.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "remoteDebuggingPayload",
            "in": "body",
            "description": "Parameters for enable remote debugging",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoteDebuggingPayload"
            },
            "x-ms-client-name": "remoteDebuggingPayload"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RemoteDebugging"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_EnableRemoteDebugging": {
            "$ref": "./examples/Deployments_EnableRemoteDebugging.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateHeapDump": {
      "post": {
        "operationId": "Deployments_GenerateHeapDump",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Generate Heap Dump",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticParameters"
            },
            "x-ms-client-name": "diagnosticParameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_GenerateHeapDump": {
            "$ref": "./examples/Deployments_GenerateHeapDump.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateThreadDump": {
      "post": {
        "operationId": "Deployments_GenerateThreadDump",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Generate Thread Dump",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticParameters"
            },
            "x-ms-client-name": "diagnosticParameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_GenerateHeapDump": {
            "$ref": "./examples/Deployments_GenerateThreadDump.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getLogFileUrl": {
      "post": {
        "operationId": "Deployments_GetLogFileUrl",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Get deployment log file URL",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogFileUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_GetLogFileUrl": {
            "$ref": "./examples/Deployments_GetLogFileUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getRemoteDebuggingConfig": {
      "post": {
        "operationId": "Deployments_GetRemoteDebuggingConfig",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Get remote debugging config.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RemoteDebugging"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_GetRemoteDebuggingConfig": {
            "$ref": "./examples/Deployments_GetRemoteDebuggingConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/restart": {
      "post": {
        "operationId": "Deployments_Restart",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Restart the deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Restart": {
            "$ref": "./examples/Deployments_Restart.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/start": {
      "post": {
        "operationId": "Deployments_Start",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Start the deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Start": {
            "$ref": "./examples/Deployments_Start.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/startJFR": {
      "post": {
        "operationId": "Deployments_StartJFR",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Start JFR",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticParameters"
            },
            "x-ms-client-name": "diagnosticParameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_StartJFR": {
            "$ref": "./examples/Deployments_StartJFR.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/stop": {
      "post": {
        "operationId": "Deployments_Stop",
        "tags": [
          "DeploymentResources"
        ],
        "description": "Stop the deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Stop": {
            "$ref": "./examples/Deployments_Stop.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains": {
      "get": {
        "operationId": "CustomDomains_List",
        "tags": [
          "CustomDomainResources"
        ],
        "description": "List the custom domains of one lifecycle application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_List": {
            "$ref": "./examples/CustomDomains_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}": {
      "get": {
        "operationId": "CustomDomains_Get",
        "tags": [
          "CustomDomainResources"
        ],
        "description": "Get the custom domain of one lifecycle application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Get": {
            "$ref": "./examples/CustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CustomDomains_CreateOrUpdate",
        "tags": [
          "CustomDomainResources"
        ],
        "description": "Create or update custom domain of one lifecycle application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            },
            "x-ms-client-name": "domainResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CustomDomainResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            }
          },
          "201": {
            "description": "Resource 'CustomDomainResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_CreateOrUpdate": {
            "$ref": "./examples/CustomDomains_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CustomDomains_Delete",
        "tags": [
          "CustomDomainResources"
        ],
        "description": "Delete the custom domain of one lifecycle application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Delete": {
            "$ref": "./examples/CustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}/domains/{name}": {
      "patch": {
        "operationId": "CustomDomains_Update",
        "tags": [
          "CustomDomainResources"
        ],
        "description": "Update custom domain of one lifecycle application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            },
            "x-ms-client-name": "domainResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Update": {
            "$ref": "./examples/CustomDomains_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/getResourceUploadUrl": {
      "post": {
        "operationId": "Apps_GetResourceUploadUrl",
        "tags": [
          "AppResources"
        ],
        "description": "Get an resource upload URL for an App, which may be artifacts or source archive.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceUploadDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_GetResourceUploadUrl": {
            "$ref": "./examples/Apps_GetResourceUploadUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/setActiveDeployments": {
      "post": {
        "operationId": "Apps_SetActiveDeployments",
        "tags": [
          "AppResources"
        ],
        "description": "Set existing Deployment under the app as active",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeDeploymentCollection",
            "in": "body",
            "description": "A list of Deployment name to be active.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveDeploymentCollection"
            },
            "x-ms-client-name": "activeDeploymentCollection"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AppResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_SetActiveDeployments": {
            "$ref": "./examples/Apps_SetActiveDeployments.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/validateDomain": {
      "post": {
        "operationId": "Apps_ValidateDomain",
        "tags": [
          "AppResources"
        ],
        "description": "Check the resource name is valid as well as not in use.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainValidatePayload"
            },
            "x-ms-client-name": "validatePayload"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainValidateResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apps_ValidateDomain": {
            "$ref": "./examples/Apps_ValidateDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices": {
      "get": {
        "operationId": "BuildService_ListBuildServices",
        "tags": [
          "BuildServices"
        ],
        "description": "List build services resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_ListBuildServices": {
            "$ref": "./examples/BuildService_ListBuildServices.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}": {
      "get": {
        "operationId": "BuildService_GetBuildService",
        "tags": [
          "BuildServices"
        ],
        "description": "Get a build service resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetBuildService": {
            "$ref": "./examples/BuildService_GetBuildService.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools": {
      "get": {
        "operationId": "BuildServiceAgentPool_List",
        "tags": [
          "BuildServiceAgentPoolResources"
        ],
        "description": "List build service agent pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildServiceAgentPoolResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceAgentPool_List": {
            "$ref": "./examples/BuildServiceAgentPool_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools/{agentPoolName}": {
      "get": {
        "operationId": "BuildServiceAgentPool_Get",
        "tags": [
          "BuildServiceAgentPoolResources"
        ],
        "description": "Get build service agent pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the build service agent pool resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildServiceAgentPoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceAgentPool_Get": {
            "$ref": "./examples/BuildServiceAgentPool_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BuildServiceAgentPool_UpdatePut",
        "tags": [
          "BuildServiceAgentPoolResources"
        ],
        "description": "Create or update build service agent pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the build service agent pool resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentPoolResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildServiceAgentPoolResource"
            },
            "x-ms-client-name": "agentPoolResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BuildServiceAgentPoolResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuildServiceAgentPoolResource"
            }
          },
          "201": {
            "description": "Resource 'BuildServiceAgentPoolResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuildServiceAgentPoolResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceAgentPool_UpdatePut": {
            "$ref": "./examples/BuildServiceAgentPool_UpdatePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders": {
      "get": {
        "operationId": "BuildServiceBuilder_List",
        "tags": [
          "BuilderResources"
        ],
        "description": "List KPack builders result.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuilderResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceBuilder_List": {
            "$ref": "./examples/BuildServiceBuilder_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}": {
      "get": {
        "operationId": "BuildServiceBuilder_Get",
        "tags": [
          "BuilderResources"
        ],
        "description": "Get a KPack builder.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuilderResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceBuilder_Get": {
            "$ref": "./examples/BuildServiceBuilder_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BuildServiceBuilder_CreateOrUpdate",
        "tags": [
          "BuilderResources"
        ],
        "description": "Create or update a KPack builder.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderResource",
            "in": "body",
            "description": "The target builder for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuilderResource"
            },
            "x-ms-client-name": "builderResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BuilderResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuilderResource"
            }
          },
          "201": {
            "description": "Resource 'BuilderResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuilderResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceBuilder_CreateOrUpdate": {
            "$ref": "./examples/BuildServiceBuilder_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BuildServiceBuilder_Delete",
        "tags": [
          "BuilderResources"
        ],
        "description": "Delete a KPack builder.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceBuilder_Delete": {
            "$ref": "./examples/BuildServiceBuilder_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings": {
      "get": {
        "operationId": "BuildpackBinding_List",
        "tags": [
          "BuildpackBindingResources"
        ],
        "description": "Handles requests to list all buildpack bindings in a builder.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildpackBindingResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildpackBinding_Get": {
            "$ref": "./examples/BuildpackBinding_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings/{buildpackBindingName}": {
      "get": {
        "operationId": "BuildpackBinding_Get",
        "tags": [
          "BuildpackBindingResources"
        ],
        "description": "Get a buildpack binding by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildpackBindingResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildpackBinding_Get": {
            "$ref": "./examples/BuildpackBinding_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BuildpackBinding_CreateOrUpdate",
        "tags": [
          "BuildpackBindingResources"
        ],
        "description": "Create or update a buildpack binding.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildpackBinding",
            "in": "body",
            "description": "The target buildpack binding for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildpackBindingResource"
            },
            "x-ms-client-name": "buildpackBinding"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BuildpackBindingResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuildpackBindingResource"
            }
          },
          "201": {
            "description": "Resource 'BuildpackBindingResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BuildpackBindingResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildpackBinding_CreateOrUpdate": {
            "$ref": "./examples/BuildpackBinding_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BuildpackBinding_Delete",
        "tags": [
          "BuildpackBindingResources"
        ],
        "description": "Operation to delete a Buildpack Binding",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildpackBinding_Delete": {
            "$ref": "./examples/BuildpackBinding_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/listDeployments": {
      "post": {
        "operationId": "BuildServiceBuilder_ListDeployments",
        "tags": [
          "BuilderResources"
        ],
        "description": "List deployments that are using the builder.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildServiceBuilder_ListDeployments": {
            "$ref": "./examples/BuildServiceBuilder_ListDeployments.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds": {
      "get": {
        "operationId": "BuildService_ListBuilds",
        "tags": [
          "Builds"
        ],
        "description": "List KPack builds.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_ListBuilds": {
            "$ref": "./examples/BuildService_ListBuilds.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}": {
      "get": {
        "operationId": "BuildService_GetBuild",
        "tags": [
          "Builds"
        ],
        "description": "Get a KPack build.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetBuild": {
            "$ref": "./examples/BuildService_GetBuild.json"
          }
        }
      },
      "put": {
        "operationId": "BuildService_CreateOrUpdateBuild",
        "tags": [
          "Builds"
        ],
        "description": "Create or update a KPack build.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "build",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Build"
            },
            "x-ms-client-name": "build"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Build' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "201": {
            "description": "Resource 'Build' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_CreateOrUpdateBuild": {
            "$ref": "./examples/BuildService_CreateOrUpdateBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results": {
      "get": {
        "operationId": "BuildService_ListBuildResults",
        "tags": [
          "BuildResults"
        ],
        "description": "List KPack build results.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildResultListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_ListBuildResults": {
            "$ref": "./examples/BuildService_ListBuildResults.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}": {
      "get": {
        "operationId": "BuildService_GetBuildResult",
        "tags": [
          "BuildResults"
        ],
        "description": "Get a KPack build result.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildResultName",
            "in": "path",
            "description": "The name of the build result resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetBuildResult": {
            "$ref": "./examples/BuildService_GetBuildResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}/getBuildResultLog": {
      "post": {
        "operationId": "BuildService_GetBuildResultLog",
        "tags": [
          "BuildResults"
        ],
        "description": "Get a KPack build result log download URL.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildResultName",
            "in": "path",
            "description": "The name of the build result resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BuildResultLog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetBuildResultLog": {
            "$ref": "./examples/BuildService_GetBuildResultLog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/getResourceUploadUrl": {
      "post": {
        "operationId": "BuildService_GetResourceUploadUrl",
        "tags": [
          "BuildServices"
        ],
        "description": "Get an resource upload URL for build service, which may be artifacts or source archive.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceUploadDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetResourceUploadUrl": {
            "$ref": "./examples/BuildService_GetResourceUploadUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks": {
      "get": {
        "operationId": "BuildService_ListSupportedBuildpacks",
        "tags": [
          "SupportedBuildpackResources"
        ],
        "description": "Get all supported buildpacks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SupportedBuildpackResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_ListSupportedBuildpacks": {
            "$ref": "./examples/BuildService_ListSupportedBuildpacks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks/{buildpackName}": {
      "get": {
        "operationId": "BuildService_GetSupportedBuildpack",
        "tags": [
          "SupportedBuildpackResources"
        ],
        "description": "Get the supported buildpack resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildpackName",
            "in": "path",
            "description": "The name of the buildpack resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SupportedBuildpackResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetSupportedBuildpack": {
            "$ref": "./examples/BuildService_GetSupportedBuildpack.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks": {
      "get": {
        "operationId": "BuildService_ListSupportedStacks",
        "tags": [
          "SupportedStackResources"
        ],
        "description": "Get all supported stacks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SupportedStackResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_ListSupportedStacks": {
            "$ref": "./examples/BuildService_ListSupportedStacks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks/{stackName}": {
      "get": {
        "operationId": "BuildService_GetSupportedStack",
        "tags": [
          "SupportedStackResources"
        ],
        "description": "Get the supported stack resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "The name of the stack resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SupportedStackResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BuildService_GetSupportedStack": {
            "$ref": "./examples/BuildService_GetSupportedStack.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates": {
      "get": {
        "operationId": "Certificates_List",
        "tags": [
          "CertificateResources"
        ],
        "description": "List all the certificates of one user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_List": {
            "$ref": "./examples/Certificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates/{certificateName}": {
      "get": {
        "operationId": "Certificates_Get",
        "tags": [
          "CertificateResources"
        ],
        "description": "Get the certificate resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_Get": {
            "$ref": "./examples/Certificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Certificates_CreateOrUpdate",
        "tags": [
          "CertificateResources"
        ],
        "description": "Create or update certificate resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateResource"
            },
            "x-ms-client-name": "certificateResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CertificateResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CertificateResource"
            }
          },
          "201": {
            "description": "Resource 'CertificateResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CertificateResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_CreateOrUpdate": {
            "$ref": "./examples/Certificates_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Certificates_Delete",
        "tags": [
          "CertificateResources"
        ],
        "description": "Delete the certificate resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_Delete": {
            "$ref": "./examples/Certificates_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/default": {
      "get": {
        "operationId": "ConfigServers_Get",
        "tags": [
          "ConfigServerResources"
        ],
        "description": "Get the config server and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigServers_Get": {
            "$ref": "./examples/ConfigServers_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConfigServers_UpdatePut",
        "tags": [
          "ConfigServerResources"
        ],
        "description": "Update the config server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configServerResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            },
            "x-ms-client-name": "configServerResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigServerResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            }
          },
          "201": {
            "description": "Resource 'ConfigServerResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigServers_UpdatePut": {
            "$ref": "./examples/ConfigServers_UpdatePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConfigServers_UpdatePatch",
        "tags": [
          "ConfigServerResources"
        ],
        "description": "Update the config server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configServerResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            },
            "x-ms-client-name": "configServerResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigServerResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigServers_UpdatePatch": {
            "$ref": "./examples/ConfigServers_UpdatePatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices": {
      "get": {
        "operationId": "ConfigurationServices_List",
        "tags": [
          "ConfigurationServiceResources"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationServices_List": {
            "$ref": "./examples/ConfigurationServices_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}": {
      "get": {
        "operationId": "ConfigurationServices_Get",
        "tags": [
          "ConfigurationServiceResources"
        ],
        "description": "Get the Application Configuration Service and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationServices_Get": {
            "$ref": "./examples/ConfigurationServices_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConfigurationServices_CreateOrUpdate",
        "tags": [
          "ConfigurationServiceResources"
        ],
        "description": "Create the default Application Configuration Service or update the existing Application Configuration Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationServiceResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceResource"
            },
            "x-ms-client-name": "configurationServiceResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigurationServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceResource"
            }
          },
          "201": {
            "description": "Resource 'ConfigurationServiceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationServices_CreateOrUpdate": {
            "$ref": "./examples/ConfigurationServices_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConfigurationServices_Delete",
        "tags": [
          "ConfigurationServiceResources"
        ],
        "description": "Disable the default Application Configuration Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationServices_Delete": {
            "$ref": "./examples/ConfigurationServices_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}/validate": {
      "post": {
        "operationId": "ConfigurationServices_Validate",
        "tags": [
          "ConfigurationServiceResources"
        ],
        "description": "Check if the Application Configuration Service settings are valid.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "settings",
            "in": "body",
            "description": "Application Configuration Service settings to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceSettings"
            },
            "x-ms-client-name": "settings"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceSettingsValidateResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationServices_Validate": {
            "$ref": "./examples/ConfigurationServices_Validate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/deployments/{subscriptionId}/{resourceGroupName}/{serviceName}": {
      "get": {
        "operationId": "Deployments_ListForCluster",
        "tags": [
          "ServiceResources"
        ],
        "description": "List deployments for a certain service",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the deployments to be listed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_ListForCluster": {
            "$ref": "./examples/Deployments_ListForCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/disableTestEndpoint": {
      "post": {
        "operationId": "Services_DisableTestEndpoint",
        "tags": [
          "ServiceResources"
        ],
        "description": "Disable test endpoint functionality for a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_DisableTestEndpoint": {
            "$ref": "./examples/Services_DisableTestEndpoint.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/enableTestEndpoint": {
      "post": {
        "operationId": "Services_EnableTestEndpoint",
        "tags": [
          "ServiceResources"
        ],
        "description": "Enable test endpoint functionality for a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TestKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_EnableTestEndpoint": {
            "$ref": "./examples/Services_EnableTestEndpoint.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways": {
      "get": {
        "operationId": "Gateways_List",
        "tags": [
          "GatewayResources"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gateways_List": {
            "$ref": "./examples/Gateways_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}": {
      "get": {
        "operationId": "Gateways_Get",
        "tags": [
          "GatewayResources"
        ],
        "description": "Get the Spring Cloud Gateway and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gateways_Get": {
            "$ref": "./examples/Gateways_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Gateways_CreateOrUpdate",
        "tags": [
          "GatewayResources"
        ],
        "description": "Create the default Spring Cloud Gateway or update the existing Spring Cloud Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayResource",
            "in": "body",
            "description": "The gateway for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            },
            "x-ms-client-name": "gatewayResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GatewayResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "201": {
            "description": "Resource 'GatewayResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gateways_CreateOrUpdate": {
            "$ref": "./examples/Gateways_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Gateways_Delete",
        "tags": [
          "GatewayResources"
        ],
        "description": "Disable the default Spring Cloud Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gateways_Delete": {
            "$ref": "./examples/Gateways_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains": {
      "get": {
        "operationId": "GatewayCustomDomains_List",
        "tags": [
          "GatewayCustomDomainResources"
        ],
        "description": "Handle requests to list all Spring Cloud Gateway custom domains.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayCustomDomainResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayCustomDomains_List": {
            "$ref": "./examples/GatewayCustomDomains_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains/{domainName}": {
      "get": {
        "operationId": "GatewayCustomDomains_Get",
        "tags": [
          "GatewayCustomDomainResources"
        ],
        "description": "Get the Spring Cloud Gateway custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayCustomDomainResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayCustomDomains_Get": {
            "$ref": "./examples/GatewayCustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "GatewayCustomDomains_CreateOrUpdate",
        "tags": [
          "GatewayCustomDomainResources"
        ],
        "description": "Create or update the Spring Cloud Gateway custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayCustomDomainResource",
            "in": "body",
            "description": "The gateway custom domain resource for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayCustomDomainResource"
            },
            "x-ms-client-name": "gatewayCustomDomainResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GatewayCustomDomainResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayCustomDomainResource"
            }
          },
          "201": {
            "description": "Resource 'GatewayCustomDomainResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayCustomDomainResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayCustomDomains_CreateOrUpdate": {
            "$ref": "./examples/GatewayCustomDomains_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GatewayCustomDomains_Delete",
        "tags": [
          "GatewayCustomDomainResources"
        ],
        "description": "Delete the Spring Cloud Gateway custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayCustomDomains_Delete": {
            "$ref": "./examples/GatewayCustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs": {
      "get": {
        "operationId": "GatewayRouteConfigs_List",
        "tags": [
          "GatewayRouteConfigResources"
        ],
        "description": "Handle requests to list all Spring Cloud Gateway route configs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayRouteConfigResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayRouteConfigs_List": {
            "$ref": "./examples/GatewayRouteConfigs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs/{routeConfigName}": {
      "get": {
        "operationId": "GatewayRouteConfigs_Get",
        "tags": [
          "GatewayRouteConfigResources"
        ],
        "description": "Get the Spring Cloud Gateway route configs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayRouteConfigResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayRouteConfigs_Get": {
            "$ref": "./examples/GatewayRouteConfigs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "GatewayRouteConfigs_CreateOrUpdate",
        "tags": [
          "GatewayRouteConfigResources"
        ],
        "description": "Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway route configs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayRouteConfigResource",
            "in": "body",
            "description": "The Spring Cloud Gateway route config for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayRouteConfigResource"
            },
            "x-ms-client-name": "gatewayRouteConfigResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GatewayRouteConfigResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayRouteConfigResource"
            }
          },
          "201": {
            "description": "Resource 'GatewayRouteConfigResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GatewayRouteConfigResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayRouteConfigs_CreateOrUpdate": {
            "$ref": "./examples/GatewayRouteConfigs_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GatewayRouteConfigs_Delete",
        "tags": [
          "GatewayRouteConfigResources"
        ],
        "description": "Delete the Spring Cloud Gateway route config.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GatewayRouteConfigs_Delete": {
            "$ref": "./examples/GatewayRouteConfigs_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/validateDomain": {
      "post": {
        "operationId": "Gateways_ValidateDomain",
        "tags": [
          "GatewayResources"
        ],
        "description": "Check the domains are valid as well as not in use.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainValidatePayload"
            },
            "x-ms-client-name": "validatePayload"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainValidateResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gateways_ValidateDomain": {
            "$ref": "./examples/Gateways_ValidateDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/listTestKeys": {
      "post": {
        "operationId": "Services_ListTestKeys",
        "tags": [
          "ServiceResources"
        ],
        "description": "List test keys for a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TestKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_ListTestKeys": {
            "$ref": "./examples/Services_ListTestKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/monitoringSettings/default": {
      "get": {
        "operationId": "MonitoringSettings_Get",
        "tags": [
          "MonitoringSettingResources"
        ],
        "description": "Get the Monitoring Setting and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MonitoringSettings_Get": {
            "$ref": "./examples/MonitoringSettings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MonitoringSettings_UpdatePut",
        "tags": [
          "MonitoringSettingResources"
        ],
        "description": "Update the Monitoring Setting.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoringSettingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            },
            "x-ms-client-name": "monitoringSettingResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MonitoringSettingResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            }
          },
          "201": {
            "description": "Resource 'MonitoringSettingResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MonitoringSettings_UpdatePut": {
            "$ref": "./examples/MonitoringSettings_UpdatePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "MonitoringSettings_UpdatePatch",
        "tags": [
          "MonitoringSettingResources"
        ],
        "description": "Update the Monitoring Setting.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoringSettingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            },
            "x-ms-client-name": "monitoringSettingResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoringSettingResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MonitoringSettings_UpdatePatch": {
            "$ref": "./examples/MonitoringSettings_UpdatePatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/regenerateTestKey": {
      "post": {
        "operationId": "Services_RegenerateTestKey",
        "tags": [
          "ServiceResources"
        ],
        "description": "Regenerate a test key for a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateTestKeyRequest",
            "in": "body",
            "description": "Parameters for the operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateTestKeyRequestPayload"
            },
            "x-ms-client-name": "regenerateTestKeyRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TestKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_RegenerateTestKey": {
            "$ref": "./examples/Services_RegenerateTestKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries": {
      "get": {
        "operationId": "ServiceRegistries_List",
        "tags": [
          "ServiceRegistryResources"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceRegistryResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceRegistries_List": {
            "$ref": "./examples/ServiceRegistries_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries/{serviceRegistryName}": {
      "get": {
        "operationId": "ServiceRegistries_Get",
        "tags": [
          "ServiceRegistryResources"
        ],
        "description": "Get the Service Registry and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceRegistryResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceRegistries_Get": {
            "$ref": "./examples/ServiceRegistries_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ServiceRegistries_CreateOrUpdate",
        "tags": [
          "ServiceRegistryResources"
        ],
        "description": "Create the default Service Registry or update the existing Service Registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRegistryResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceRegistryResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceRegistryResource"
            }
          },
          "201": {
            "description": "Resource 'ServiceRegistryResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceRegistryResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceRegistries_CreateOrUpdate": {
            "$ref": "./examples/ServiceRegistries_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ServiceRegistries_Delete",
        "tags": [
          "ServiceRegistryResources"
        ],
        "description": "Disable the default Service Registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceRegistries_Delete": {
            "$ref": "./examples/ServiceRegistries_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/start": {
      "post": {
        "operationId": "Services_Start",
        "tags": [
          "ServiceResources"
        ],
        "description": "Start a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_Start": {
            "$ref": "./examples/Services_Start.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/stop": {
      "post": {
        "operationId": "Services_Stop",
        "tags": [
          "ServiceResources"
        ],
        "description": "Stop a Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Services_Stop": {
            "$ref": "./examples/Services_Stop.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages": {
      "get": {
        "operationId": "Storages_List",
        "tags": [
          "StorageResources"
        ],
        "description": "List all the storages of one Azure Spring Apps resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storages_List": {
            "$ref": "./examples/Storages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages/{storageName}": {
      "get": {
        "operationId": "Storages_Get",
        "tags": [
          "StorageResources"
        ],
        "description": "Get the storage resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storages_Get": {
            "$ref": "./examples/Storages_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Storages_CreateOrUpdate",
        "tags": [
          "StorageResources"
        ],
        "description": "Create or update storage resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageResource"
            },
            "x-ms-client-name": "storageResource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageResource"
            }
          },
          "201": {
            "description": "Resource 'StorageResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storages_CreateOrUpdate": {
            "$ref": "./examples/Storages_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Storages_Delete",
        "tags": [
          "StorageResources"
        ],
        "description": "Delete the storage resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storages_Delete": {
            "$ref": "./examples/Storages_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/validate": {
      "post": {
        "operationId": "ConfigServers_Validate",
        "tags": [
          "ServiceResources"
        ],
        "description": "Check if the config server settings are valid.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configServerSettings",
            "in": "body",
            "description": "Config server settings to be validated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigServerSettings"
            },
            "x-ms-client-name": "configServerSettings"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigServerSettingsValidateResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigServers_Validate": {
            "$ref": "./examples/ConfigServers_Validate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ActiveDeploymentCollection": {
      "type": "object",
      "description": "Object that includes an array of Deployment resource name and set them as active.",
      "properties": {
        "activeDeploymentNames": {
          "type": "array",
          "description": "Collection of Deployment name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiPortalCustomDomainProperties": {
      "type": "object",
      "description": "The properties of custom domain for API portal",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of bound certificate."
        }
      }
    },
    "ApiPortalCustomDomainResource": {
      "type": "object",
      "description": "Custom domain of the API portal",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiPortalCustomDomainProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiPortalCustomDomainResourceListResult": {
      "type": "object",
      "description": "The response of a ApiPortalCustomDomainResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiPortalCustomDomainResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiPortalCustomDomainResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiPortalInstance": {
      "type": "object",
      "description": "Collection of instances belong to the API portal",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the API portal instance",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the API portal instance",
          "readOnly": true
        }
      }
    },
    "ApiPortalProperties": {
      "type": "object",
      "description": "API portal properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ApiPortalProvisioningState",
          "description": "State of the API portal.",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "description": "Indicates whether the API portal exposes endpoint."
        },
        "url": {
          "type": "string",
          "description": "URL of the API portal, exposed when 'public' is true.",
          "readOnly": true
        },
        "httpsOnly": {
          "type": "boolean",
          "description": "Indicate if only https is allowed."
        },
        "gatewayIds": {
          "type": "array",
          "description": "The array of resource Ids of gateway to integrate with API portal.",
          "items": {
            "type": "string"
          }
        },
        "sourceUrls": {
          "type": "array",
          "description": "Collection of OpenAPI source URL locations.",
          "items": {
            "type": "string"
          }
        },
        "ssoProperties": {
          "$ref": "#/definitions/SsoProperties",
          "description": "Single sign-on related configuration"
        },
        "resourceRequests": {
          "$ref": "#/definitions/ApiPortalResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to API portal.",
          "items": {
            "$ref": "#/definitions/ApiPortalInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ApiPortalProvisioningState": {
      "type": "string",
      "description": "State of the API portal.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ApiPortalProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ApiPortalResource": {
      "type": "object",
      "description": "API portal resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiPortalProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiPortalResourceListResult": {
      "type": "object",
      "description": "The response of a ApiPortalResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiPortalResource items on this page",
          "items": {
            "$ref": "#/definitions/ApiPortalResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiPortalResourceRequests": {
      "type": "object",
      "description": "Resource requests of the API portal",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu allocated to each API portal instance",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to each API portal instance",
          "readOnly": true
        }
      }
    },
    "AppResource": {
      "type": "object",
      "description": "App resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AppResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AppResourceListResult": {
      "type": "object",
      "description": "The response of a AppResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AppResource items on this page",
          "items": {
            "$ref": "#/definitions/AppResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AppResourceProperties": {
      "type": "object",
      "description": "App resource properties payload",
      "properties": {
        "public": {
          "type": "boolean",
          "description": "Indicates whether the App exposes public endpoint"
        },
        "url": {
          "type": "string",
          "description": "URL of the App",
          "readOnly": true
        },
        "addonConfigs": {
          "type": "object",
          "description": "Collection of addons",
          "additionalProperties": {
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            },
            "type": "object"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/AppResourceProvisioningState",
          "description": "Provisioning state of the App",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified dns Name.",
          "readOnly": true
        },
        "httpsOnly": {
          "type": "boolean",
          "description": "Indicate if only https is allowed."
        },
        "temporaryDisk": {
          "$ref": "#/definitions/TemporaryDisk",
          "description": "Temporary disk settings"
        },
        "persistentDisk": {
          "$ref": "#/definitions/PersistentDisk",
          "description": "Persistent disk settings"
        },
        "customPersistentDisks": {
          "type": "array",
          "description": "List of custom persistent disks",
          "items": {
            "$ref": "#/definitions/CustomPersistentDiskResource"
          },
          "x-ms-identifiers": []
        },
        "enableEndToEndTLS": {
          "type": "boolean",
          "description": "Indicate if end to end TLS is enabled."
        },
        "loadedCertificates": {
          "type": "array",
          "description": "Collection of loaded certificates",
          "items": {
            "$ref": "#/definitions/LoadedCertificate"
          },
          "x-ms-identifiers": []
        },
        "vnetAddons": {
          "$ref": "#/definitions/AppVNetAddons",
          "description": "Additional App settings in vnet injection instance"
        },
        "ingressSettings": {
          "$ref": "#/definitions/IngressSettings",
          "description": "App ingress settings payload."
        }
      }
    },
    "AppResourceProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the App",
      "enum": [
        "Succeeded",
        "Failed",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "AppResourceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "AppVNetAddons": {
      "type": "object",
      "description": "Additional App settings in vnet injection instance",
      "properties": {
        "publicEndpoint": {
          "type": "boolean",
          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet."
        },
        "publicEndpointUrl": {
          "type": "string",
          "description": "URL of the App in vnet injection instance which could be accessed from internet",
          "readOnly": true
        }
      }
    },
    "ApplicationInsightsAgentVersions": {
      "type": "object",
      "description": "Application Insights agent versions properties payload",
      "properties": {
        "java": {
          "type": "string",
          "description": "Indicates the version of application insight java agent",
          "readOnly": true
        }
      }
    },
    "AvailableRuntimeVersions": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of all supported runtime versions.",
          "items": {
            "$ref": "#/definitions/SupportedRuntimeVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.ActionType": {
      "type": "string",
      "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Actions are for internal-only APIs."
          }
        ]
      }
    },
    "Azure.ResourceManager.ResourceSku": {
      "type": "object",
      "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
      "properties": {
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      }
    },
    "AzureFileVolume": {
      "type": "object",
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes.",
      "properties": {
        "shareName": {
          "type": "string",
          "description": "The share name of the Azure File share."
        }
      },
      "required": [
        "shareName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomPersistentDiskProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureFileVolume"
    },
    "BackendProtocol": {
      "type": "string",
      "description": "How ingress should communicate with this app backend service.",
      "enum": [
        "GRPC",
        "Default"
      ],
      "x-ms-enum": {
        "name": "BackendProtocol",
        "modelAsString": true
      }
    },
    "BindingResource": {
      "type": "object",
      "description": "Binding resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BindingResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BindingResourceListResult": {
      "type": "object",
      "description": "The response of a BindingResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BindingResource items on this page",
          "items": {
            "$ref": "#/definitions/BindingResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BindingResourceProperties": {
      "type": "object",
      "description": "Binding resource properties payload",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The name of the bound resource",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The standard Azure resource type of the bound resource",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure resource id of the bound resource"
        },
        "key": {
          "type": "string",
          "description": "The key of the bound resource"
        },
        "bindingParameters": {
          "type": "object",
          "description": "Binding parameters of the Binding resource",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        },
        "generatedProperties": {
          "type": "string",
          "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "description": "Creation time of the Binding resource",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "description": "Update time of the Binding resource",
          "readOnly": true
        }
      }
    },
    "BindingType": {
      "type": "string",
      "description": "Buildpack Binding Type",
      "enum": [
        "ApplicationInsights",
        "ApacheSkyWalking",
        "AppDynamics",
        "Dynatrace",
        "NewRelic",
        "ElasticAPM"
      ],
      "x-ms-enum": {
        "name": "BindingType",
        "modelAsString": true
      }
    },
    "Build": {
      "type": "object",
      "description": "Build resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuildListResult": {
      "type": "object",
      "description": "The response of a Build list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Build items on this page",
          "items": {
            "$ref": "#/definitions/Build"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildProperties": {
      "type": "object",
      "description": "Build resource properties payload",
      "properties": {
        "relativePath": {
          "type": "string",
          "description": "The relative path of source code"
        },
        "builder": {
          "type": "string",
          "description": "The resource id of builder to build the source code"
        },
        "agentPool": {
          "type": "string",
          "description": "The resource id of agent pool"
        },
        "provisioningState": {
          "$ref": "#/definitions/BuildProvisioningState",
          "description": "Provisioning state of the KPack build result",
          "readOnly": true
        },
        "env": {
          "type": "object",
          "description": "The environment variables for this build",
          "additionalProperties": {
            "type": "string"
          }
        },
        "triggeredBuildResult": {
          "$ref": "#/definitions/TriggeredBuildResult",
          "description": "The build result triggered by this build",
          "readOnly": true
        },
        "resourceRequests": {
          "$ref": "#/definitions/BuildResourceRequests",
          "description": "The customized build resource for this build"
        }
      }
    },
    "BuildProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the KPack build result",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "BuildProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "BuildResourceRequests": {
      "type": "object",
      "description": "Resource request payload of Build Resource.",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \nThe default value is 1, this should not exceed build service agent pool cpu size.",
          "default": "1"
        },
        "memory": {
          "type": "string",
          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
          "default": "2Gi"
        }
      }
    },
    "BuildResult": {
      "type": "object",
      "description": "Build result resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildResultProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuildResultListResult": {
      "type": "object",
      "description": "The response of a BuildResult list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BuildResult items on this page",
          "items": {
            "$ref": "#/definitions/BuildResult"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildResultLog": {
      "type": "object",
      "description": "Build result log resource properties payload",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "The public download URL of this build result log"
        }
      }
    },
    "BuildResultProperties": {
      "type": "object",
      "description": "Build result resource properties payload",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this build result"
        },
        "provisioningState": {
          "$ref": "#/definitions/BuildResultProvisioningState",
          "description": "Provisioning state of the KPack build result",
          "readOnly": true
        },
        "buildPodName": {
          "type": "string",
          "description": "The build pod name which can be used to get the build log streaming."
        },
        "buildStages": {
          "type": "array",
          "description": "All of the build stage (init-container and container) resources in build pod.",
          "items": {
            "$ref": "#/definitions/BuildStageProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "BuildResultProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the KPack build result",
      "enum": [
        "Queuing",
        "Building",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "BuildResultProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "BuildResultUserSourceInfo": {
      "type": "object",
      "description": "Reference to a build result",
      "properties": {
        "buildResultId": {
          "type": "string",
          "description": "Resource id of an existing succeeded build result under the same Spring instance."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserSourceInfo"
        }
      ],
      "x-ms-discriminator-value": "BuildResult"
    },
    "BuildService": {
      "type": "object",
      "description": "Build service resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuildServiceAgentPoolProperties": {
      "type": "object",
      "description": "Build service agent pool properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the build service agent pool",
          "readOnly": true
        },
        "poolSize": {
          "$ref": "#/definitions/BuildServiceAgentPoolSizeProperties",
          "description": "build service agent pool size properties"
        }
      }
    },
    "BuildServiceAgentPoolResource": {
      "type": "object",
      "description": "The build service agent pool resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildServiceAgentPoolProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuildServiceAgentPoolResourceListResult": {
      "type": "object",
      "description": "The response of a BuildServiceAgentPoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BuildServiceAgentPoolResource items on this page",
          "items": {
            "$ref": "#/definitions/BuildServiceAgentPoolResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildServiceAgentPoolSizeProperties": {
      "type": "object",
      "description": "Build service agent pool size properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of build service agent pool size"
        },
        "cpu": {
          "type": "string",
          "description": "The cpu property of build service agent pool size",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "The memory property of build service agent pool size",
          "readOnly": true
        }
      }
    },
    "BuildServiceListResult": {
      "type": "object",
      "description": "The response of a BuildService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BuildService items on this page",
          "items": {
            "$ref": "#/definitions/BuildService"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildServiceProperties": {
      "type": "object",
      "description": "Build service resource properties payload",
      "properties": {
        "kPackVersion": {
          "type": "string",
          "description": "The installed KPack version in this build service."
        },
        "provisioningState": {
          "$ref": "#/definitions/BuildServiceProvisioningState",
          "description": "Provisioning state of the KPack build result",
          "readOnly": true
        },
        "resourceRequests": {
          "$ref": "#/definitions/BuildServicePropertiesResourceRequests",
          "description": "The runtime resource configuration of this build service."
        }
      }
    },
    "BuildServicePropertiesResourceRequests": {
      "type": "object",
      "description": "The runtime resource configuration of this build service.",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "vCPU allocated to the entire build service node pool.",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to the entire build service node pool.",
          "readOnly": true
        }
      }
    },
    "BuildServiceProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the KPack build result",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "BuildServiceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "BuildStageProperties": {
      "type": "object",
      "description": "The build stage (init-container and container) resources in build pod.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this build stage resource.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/KPackBuildStageProvisioningState",
          "description": "The provisioning state of this build stage resource.",
          "readOnly": true
        }
      }
    },
    "BuilderProperties": {
      "type": "object",
      "description": "KPack Builder properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/BuilderProvisioningState",
          "description": "Builder provision status.",
          "readOnly": true
        },
        "stack": {
          "$ref": "#/definitions/StackProperties",
          "description": "Builder cluster stack property."
        },
        "buildpackGroups": {
          "type": "array",
          "description": "Builder buildpack groups.",
          "items": {
            "$ref": "#/definitions/BuildpacksGroupProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BuilderProvisioningState": {
      "type": "string",
      "description": "Builder provision status.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "BuilderProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "BuilderResource": {
      "type": "object",
      "description": "KPack Builder resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuilderProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuilderResourceListResult": {
      "type": "object",
      "description": "The response of a BuilderResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BuilderResource items on this page",
          "items": {
            "$ref": "#/definitions/BuilderResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildpackBindingLaunchProperties": {
      "type": "object",
      "description": "Buildpack Binding Launch Properties",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Non-sensitive properties for launchProperties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "description": "Sensitive properties for launchProperties",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BuildpackBindingProperties": {
      "type": "object",
      "description": "Properties of a buildpack binding",
      "properties": {
        "bindingType": {
          "$ref": "#/definitions/BindingType",
          "description": "Buildpack Binding Type"
        },
        "provisioningState": {
          "$ref": "#/definitions/BuildpackBindingProvisioningState",
          "description": "State of the Buildpack Binding.",
          "readOnly": true
        },
        "launchProperties": {
          "$ref": "#/definitions/BuildpackBindingLaunchProperties",
          "description": "The object describes the buildpack binding launch properties"
        }
      }
    },
    "BuildpackBindingProvisioningState": {
      "type": "string",
      "description": "State of the Buildpack Binding.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "BuildpackBindingProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "BuildpackBindingResource": {
      "type": "object",
      "description": "Buildpack Binding Resource object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildpackBindingProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BuildpackBindingResourceListResult": {
      "type": "object",
      "description": "The response of a BuildpackBindingResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BuildpackBindingResource items on this page",
          "items": {
            "$ref": "#/definitions/BuildpackBindingResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BuildpackProperties": {
      "type": "object",
      "description": "Buildpack properties payload",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the buildpack"
        }
      }
    },
    "BuildpacksGroupProperties": {
      "type": "object",
      "description": "Buildpack group properties of the Builder",
      "properties": {
        "name": {
          "type": "string",
          "description": "Buildpack group name"
        },
        "buildpacks": {
          "type": "array",
          "description": "Buildpacks in the buildpack group",
          "items": {
            "$ref": "#/definitions/BuildpackProperties"
          }
        }
      }
    },
    "CertificateProperties": {
      "type": "object",
      "description": "Certificate resource payload.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for CertificateProperties."
        },
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of certificate.",
          "readOnly": true
        },
        "issuer": {
          "type": "string",
          "description": "The issuer of certificate.",
          "readOnly": true
        },
        "issuedDate": {
          "type": "string",
          "description": "The issue date of certificate.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "description": "The expiration date of certificate.",
          "readOnly": true
        },
        "activateDate": {
          "type": "string",
          "description": "The activate date of certificate.",
          "readOnly": true
        },
        "subjectName": {
          "type": "string",
          "description": "The subject name of certificate.",
          "readOnly": true
        },
        "dnsNames": {
          "type": "array",
          "description": "The domain list of certificate.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/CertificateResourceProvisioningState",
          "description": "Provisioning state of the Certificate",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "CertificateResource": {
      "type": "object",
      "description": "Certificate resource payload.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CertificateResourceListResult": {
      "type": "object",
      "description": "The response of a CertificateResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CertificateResource items on this page",
          "items": {
            "$ref": "#/definitions/CertificateResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CertificateResourceProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Certificate",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "CertificateResourceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "An error response from the service."
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ClusterResourceProperties": {
      "type": "object",
      "description": "Service properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the Service",
          "readOnly": true
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "Network profile of the Service"
        },
        "vnetAddons": {
          "$ref": "#/definitions/ServiceVNetAddons",
          "description": "Additional Service settings in vnet injection instance"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version of the Service",
          "readOnly": true
        },
        "serviceId": {
          "type": "string",
          "description": "ServiceInstanceEntity GUID which uniquely identifies a created resource",
          "readOnly": true
        },
        "powerState": {
          "$ref": "#/definitions/PowerState",
          "description": "Power state of the Service",
          "readOnly": true
        },
        "zoneRedundant": {
          "type": "boolean",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified dns name of the service instance",
          "readOnly": true
        }
      }
    },
    "ConfigServerGitProperty": {
      "type": "object",
      "description": "Property of git.",
      "properties": {
        "repositories": {
          "type": "array",
          "description": "Repositories of git.",
          "items": {
            "$ref": "#/definitions/GitPatternRepository"
          },
          "x-ms-identifiers": []
        },
        "uri": {
          "type": "string",
          "description": "URI of the repository"
        },
        "label": {
          "type": "string",
          "description": "Label of the repository"
        },
        "searchPaths": {
          "type": "array",
          "description": "Searching path of the repository",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string",
          "description": "Username of git repository basic auth."
        },
        "password": {
          "type": "string",
          "description": "Password of git repository basic auth."
        },
        "hostKey": {
          "type": "string",
          "description": "Public sshKey of git repository."
        },
        "hostKeyAlgorithm": {
          "type": "string",
          "description": "SshKey algorithm of git repository."
        },
        "privateKey": {
          "type": "string",
          "description": "Private sshKey algorithm of git repository."
        },
        "strictHostKeyChecking": {
          "type": "boolean",
          "description": "Strict host key checking or not."
        }
      },
      "required": [
        "uri"
      ]
    },
    "ConfigServerProperties": {
      "type": "object",
      "description": "Config server git properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ConfigServerState",
          "description": "State of the config server.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error when apply config server settings."
        },
        "configServer": {
          "$ref": "#/definitions/ConfigServerSettings",
          "description": "Settings of config server."
        }
      }
    },
    "ConfigServerResource": {
      "type": "object",
      "description": "Config Server resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigServerSettings": {
      "type": "object",
      "description": "The settings of config server.",
      "properties": {
        "gitProperty": {
          "$ref": "#/definitions/ConfigServerGitProperty",
          "description": "Property of git environment."
        }
      }
    },
    "ConfigServerSettingsErrorRecord": {
      "type": "object",
      "description": "Error record of the config server settings",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the config server settings error record"
        },
        "uri": {
          "type": "string",
          "description": "The uri of the config server settings error record"
        },
        "messages": {
          "type": "array",
          "description": "The detail error messages of the record",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConfigServerSettingsValidateResult": {
      "type": "object",
      "description": "Validation result for config server settings",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicate if the config server settings are valid"
        },
        "details": {
          "type": "array",
          "description": "The detail validation results",
          "items": {
            "$ref": "#/definitions/ConfigServerSettingsErrorRecord"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConfigServerState": {
      "type": "string",
      "description": "State of the config server.",
      "enum": [
        "NotAvailable",
        "Deleted",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ConfigServerState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ConfigurationServiceGitProperty": {
      "type": "object",
      "description": "Property of git environment.",
      "properties": {
        "repositories": {
          "type": "array",
          "description": "Repositories of Application Configuration Service git property.",
          "items": {
            "$ref": "#/definitions/ConfigurationServiceGitRepository"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConfigurationServiceGitPropertyValidateResult": {
      "type": "object",
      "description": "Validation result for configuration service settings",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicate if the configuration service settings are valid"
        },
        "gitReposValidationResult": {
          "type": "array",
          "description": "The detail validation results",
          "items": {
            "$ref": "#/definitions/ValidationMessages"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConfigurationServiceGitRepository": {
      "type": "object",
      "description": "Git repository property payload for Application Configuration Service",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the repository"
        },
        "patterns": {
          "type": "array",
          "description": "Collection of patterns of the repository",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string",
          "description": "URI of the repository"
        },
        "label": {
          "type": "string",
          "description": "Label of the repository"
        },
        "searchPaths": {
          "type": "array",
          "description": "Searching path of the repository",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string",
          "description": "Username of git repository basic auth."
        },
        "password": {
          "type": "string",
          "description": "Password of git repository basic auth."
        },
        "hostKey": {
          "type": "string",
          "description": "Public sshKey of git repository."
        },
        "hostKeyAlgorithm": {
          "type": "string",
          "description": "SshKey algorithm of git repository."
        },
        "privateKey": {
          "type": "string",
          "description": "Private sshKey algorithm of git repository."
        },
        "strictHostKeyChecking": {
          "type": "boolean",
          "description": "Strict host key checking or not."
        }
      },
      "required": [
        "name",
        "patterns",
        "uri",
        "label"
      ]
    },
    "ConfigurationServiceInstance": {
      "type": "object",
      "description": "Collection of instances belong to the Application Configuration Service",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Application Configuration Service instance",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Application Configuration Service instance",
          "readOnly": true
        }
      }
    },
    "ConfigurationServiceProperties": {
      "type": "object",
      "description": "Application Configuration Service properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ConfigurationServiceProvisioningState",
          "description": "State of the Application Configuration Service.",
          "readOnly": true
        },
        "resourceRequests": {
          "$ref": "#/definitions/ConfigurationServiceResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to Application Configuration Service.",
          "items": {
            "$ref": "#/definitions/ConfigurationServiceInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "settings": {
          "$ref": "#/definitions/ConfigurationServiceSettings",
          "description": "The settings of Application Configuration Service."
        }
      }
    },
    "ConfigurationServiceProvisioningState": {
      "type": "string",
      "description": "State of the Application Configuration Service.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ConfigurationServiceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ConfigurationServiceResource": {
      "type": "object",
      "description": "Application Configuration Service resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigurationServiceResourceListResult": {
      "type": "object",
      "description": "The response of a ConfigurationServiceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigurationServiceResource items on this page",
          "items": {
            "$ref": "#/definitions/ConfigurationServiceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigurationServiceResourceRequests": {
      "type": "object",
      "description": "Resource request payload of Application Configuration Service",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu allocated to each Application Configuration Service instance",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to each Application Configuration Service instance",
          "readOnly": true
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count of the Application Configuration Service",
          "readOnly": true
        }
      }
    },
    "ConfigurationServiceSettings": {
      "type": "object",
      "description": "The settings of Application Configuration Service.",
      "properties": {
        "gitProperty": {
          "$ref": "#/definitions/ConfigurationServiceGitProperty",
          "description": "Property of git environment."
        }
      }
    },
    "ConfigurationServiceSettingsValidateResult": {
      "type": "object",
      "description": "Validation result for configuration service settings",
      "properties": {
        "gitPropertyValidationResult": {
          "$ref": "#/definitions/ConfigurationServiceGitPropertyValidateResult",
          "description": "Validation result for configuration service settings"
        }
      }
    },
    "ContainerProbeSettings": {
      "type": "object",
      "description": "Container liveness and readiness probe settings",
      "properties": {
        "disableProbe": {
          "type": "boolean",
          "description": "Indicates whether disable the liveness and readiness probe"
        }
      }
    },
    "ContentCertificateProperties": {
      "type": "object",
      "description": "Properties of certificate imported from key vault.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of uploaded certificate.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CertificateProperties"
        }
      ],
      "x-ms-discriminator-value": "ContentCertificate"
    },
    "CustomContainer": {
      "type": "object",
      "description": "Custom container payload",
      "properties": {
        "server": {
          "type": "string",
          "description": "The name of the registry that contains the container image"
        },
        "containerImage": {
          "type": "string",
          "description": "Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry"
        },
        "command": {
          "type": "array",
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "type": "array",
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
          "items": {
            "type": "string"
          }
        },
        "imageRegistryCredential": {
          "$ref": "#/definitions/ImageRegistryCredential",
          "description": "Credential of the image registry"
        },
        "languageFramework": {
          "type": "string",
          "description": "Language framework of the container image uploaded"
        }
      }
    },
    "CustomContainerUserSourceInfo": {
      "type": "object",
      "description": "Custom container user source info",
      "properties": {
        "customContainer": {
          "$ref": "#/definitions/CustomContainer",
          "description": "Custom container payload"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserSourceInfo"
        }
      ],
      "x-ms-discriminator-value": "Container"
    },
    "CustomDomainProperties": {
      "type": "object",
      "description": "Custom domain of app resource payload.",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of bound certificate."
        },
        "appName": {
          "type": "string",
          "description": "The app name of domain.",
          "readOnly": true
        },
        "certName": {
          "type": "string",
          "description": "The bound certificate name of domain."
        },
        "provisioningState": {
          "$ref": "#/definitions/CustomDomainResourceProvisioningState",
          "description": "Provisioning state of the Domain",
          "readOnly": true
        }
      }
    },
    "CustomDomainResource": {
      "type": "object",
      "description": "Custom domain resource payload.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomDomainProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CustomDomainResourceListResult": {
      "type": "object",
      "description": "The response of a CustomDomainResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CustomDomainResource items on this page",
          "items": {
            "$ref": "#/definitions/CustomDomainResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CustomDomainResourceProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Domain",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "CustomDomainResourceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "CustomDomainValidatePayload": {
      "type": "object",
      "description": "Custom domain validate payload.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name to be validated"
        }
      },
      "required": [
        "name"
      ]
    },
    "CustomDomainValidateResult": {
      "type": "object",
      "description": "Validation result for custom domain.",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicates if domain name is valid."
        },
        "message": {
          "type": "string",
          "description": "Message of why domain name is invalid."
        }
      }
    },
    "CustomPersistentDiskProperties": {
      "type": "object",
      "description": "Custom persistent disk resource payload.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for CustomPersistentDiskProperties."
        },
        "mountPath": {
          "type": "string",
          "description": "The mount path of the persistent disk."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Indicates whether the persistent disk is a readOnly one."
        },
        "mountOptions": {
          "type": "array",
          "description": "These are the mount options for a persistent disk.",
          "items": {
            "type": "string"
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "mountPath"
      ]
    },
    "CustomPersistentDiskResource": {
      "type": "object",
      "description": "Custom persistent disk resource payload.",
      "properties": {
        "customPersistentDiskProperties": {
          "$ref": "#/definitions/CustomPersistentDiskProperties",
          "description": "Properties of the custom persistent disk resource payload."
        },
        "storageId": {
          "type": "string",
          "description": "The resource id of Azure Spring Apps Storage resource."
        }
      },
      "required": [
        "storageId"
      ]
    },
    "DeploymentInstance": {
      "type": "object",
      "description": "Deployment instance payload",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the deployment instance",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the deployment instance",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "Failed reason of the deployment instance",
          "readOnly": true
        },
        "discoveryStatus": {
          "type": "string",
          "description": "Discovery status of the deployment instance",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Start time of the deployment instance",
          "readOnly": true
        },
        "zone": {
          "type": "string",
          "description": "Availability zone information of the deployment instance",
          "readOnly": true
        }
      }
    },
    "DeploymentList": {
      "type": "object",
      "description": "A list of deployments resource ids.",
      "properties": {
        "deployments": {
          "type": "array",
          "description": "A list of deployment resource ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentResource": {
      "type": "object",
      "description": "Deployment resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeploymentResourceListResult": {
      "type": "object",
      "description": "The response of a DeploymentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeploymentResource items on this page",
          "items": {
            "$ref": "#/definitions/DeploymentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentResourceProperties": {
      "type": "object",
      "description": "Deployment resource properties payload",
      "properties": {
        "source": {
          "$ref": "#/definitions/UserSourceInfo",
          "description": "Uploaded source information of the deployment."
        },
        "deploymentSettings": {
          "$ref": "#/definitions/DeploymentSettings",
          "description": "Deployment settings of the Deployment"
        },
        "provisioningState": {
          "$ref": "#/definitions/DeploymentResourceProvisioningState",
          "description": "Provisioning state of the Deployment",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/DeploymentResourceStatus",
          "description": "Status of the Deployment",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "description": "Indicates whether the Deployment is active"
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to the Deployment",
          "items": {
            "$ref": "#/definitions/DeploymentInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "DeploymentResourceProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Deployment",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DeploymentResourceProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "DeploymentResourceStatus": {
      "type": "string",
      "description": "Status of the Deployment",
      "enum": [
        "Stopped",
        "Running"
      ],
      "x-ms-enum": {
        "name": "DeploymentResourceStatus",
        "modelAsString": true
      }
    },
    "DeploymentSettings": {
      "type": "object",
      "description": "Deployment settings payload",
      "properties": {
        "resourceRequests": {
          "$ref": "#/definitions/ResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later."
        },
        "environmentVariables": {
          "type": "object",
          "description": "Collection of environment variables",
          "additionalProperties": {
            "type": "string"
          }
        },
        "addonConfigs": {
          "type": "object",
          "description": "Collection of addons",
          "additionalProperties": {
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            },
            "type": "object"
          }
        },
        "livenessProbe": {
          "$ref": "#/definitions/Probe",
          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe",
          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "startupProbe": {
          "$ref": "#/definitions/Probe",
          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
          "default": 90
        },
        "containerProbeSettings": {
          "$ref": "#/definitions/ContainerProbeSettings",
          "description": "Container liveness and readiness probe settings"
        }
      }
    },
    "DiagnosticParameters": {
      "type": "object",
      "description": "Diagnostic parameters of diagnostic operations",
      "properties": {
        "appInstance": {
          "type": "string",
          "description": "App instance name"
        },
        "filePath": {
          "type": "string",
          "description": "Your target file path in your own BYOS"
        },
        "duration": {
          "type": "string",
          "description": "Duration of your JFR. 1 min can be represented by 1m or 60s."
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The error code compose of code and message.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of error."
        },
        "message": {
          "type": "string",
          "description": "The message of error."
        }
      }
    },
    "ExecAction": {
      "type": "object",
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "type": "array",
          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProbeAction"
        }
      ],
      "x-ms-discriminator-value": "ExecAction"
    },
    "GatewayApiMetadataProperties": {
      "type": "object",
      "description": "API metadata property for Spring Cloud Gateway",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)"
        },
        "documentation": {
          "type": "string",
          "description": "Location of additional documentation for the APIs available on the Gateway instance"
        },
        "version": {
          "type": "string",
          "description": "Version of APIs available on this Gateway instance (default: `unspecified`)."
        },
        "serverUrl": {
          "type": "string",
          "description": "Base URL that API consumers will use to access APIs on the Gateway instance."
        }
      }
    },
    "GatewayApiRoute": {
      "type": "object",
      "description": "API route config of the Spring Cloud Gateway",
      "properties": {
        "title": {
          "type": "string",
          "description": "A title, will be applied to methods in the generated OpenAPI documentation."
        },
        "description": {
          "type": "string",
          "description": "A description, will be applied to methods in the generated OpenAPI documentation."
        },
        "uri": {
          "type": "string",
          "description": "Full uri, will override `appName`."
        },
        "ssoEnabled": {
          "type": "boolean",
          "description": "Enable sso validation."
        },
        "tokenRelay": {
          "type": "boolean",
          "description": "Pass currently-authenticated user's identity token to application service, default is 'false'"
        },
        "predicates": {
          "type": "array",
          "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "description": "To modify the request before sending it to the target endpoint, or the received response.",
          "items": {
            "type": "string"
          }
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "Route processing order."
        },
        "tags": {
          "type": "array",
          "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayCorsProperties": {
      "type": "object",
      "description": "Cross-Origin Resource Sharing property",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "type": "array",
          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "type": "array",
          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients."
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`."
        },
        "exposedHeaders": {
          "type": "array",
          "description": "HTTP response headers to expose for cross-site requests.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayCustomDomainProperties": {
      "type": "object",
      "description": "The properties of custom domain for Spring Cloud Gateway",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of bound certificate."
        }
      }
    },
    "GatewayCustomDomainResource": {
      "type": "object",
      "description": "Custom domain of the Spring Cloud Gateway",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayCustomDomainProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayCustomDomainResourceListResult": {
      "type": "object",
      "description": "The response of a GatewayCustomDomainResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GatewayCustomDomainResource items on this page",
          "items": {
            "$ref": "#/definitions/GatewayCustomDomainResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GatewayInstance": {
      "type": "object",
      "description": "Collection of instances belong to the Spring Cloud Gateway",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Spring Cloud Gateway instance",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Spring Cloud Gateway instance",
          "readOnly": true
        }
      }
    },
    "GatewayOperatorProperties": {
      "type": "object",
      "description": "Properties of the Spring Cloud Gateway Operator.",
      "properties": {
        "resourceRequests": {
          "$ref": "#/definitions/GatewayOperatorResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
          "items": {
            "$ref": "#/definitions/GatewayInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "GatewayOperatorResourceRequests": {
      "type": "object",
      "description": "Properties of the Spring Cloud Gateway Operator.",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
          "readOnly": true
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count of the Spring Cloud Gateway Operator.",
          "readOnly": true
        }
      }
    },
    "GatewayProperties": {
      "type": "object",
      "description": "Spring Cloud Gateway properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/GatewayProvisioningState",
          "description": "State of the Spring Cloud Gateway.",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "description": "Indicates whether the Spring Cloud Gateway exposes endpoint."
        },
        "url": {
          "type": "string",
          "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
          "readOnly": true
        },
        "httpsOnly": {
          "type": "boolean",
          "description": "Indicate if only https is allowed."
        },
        "ssoProperties": {
          "$ref": "#/definitions/SsoProperties",
          "description": "Single sign-on related configuration"
        },
        "apiMetadataProperties": {
          "$ref": "#/definitions/GatewayApiMetadataProperties",
          "description": "API metadata property for Spring Cloud Gateway"
        },
        "corsProperties": {
          "$ref": "#/definitions/GatewayCorsProperties",
          "description": "Cross-Origin Resource Sharing property"
        },
        "resourceRequests": {
          "$ref": "#/definitions/GatewayResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory."
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to Spring Cloud Gateway.",
          "items": {
            "$ref": "#/definitions/GatewayInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "operatorProperties": {
          "$ref": "#/definitions/GatewayOperatorProperties",
          "description": "Properties of the Spring Cloud Gateway Operator.",
          "readOnly": true
        }
      }
    },
    "GatewayProvisioningState": {
      "type": "string",
      "description": "State of the Spring Cloud Gateway.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "GatewayProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "GatewayResource": {
      "type": "object",
      "description": "Spring Cloud Gateway resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayResourceListResult": {
      "type": "object",
      "description": "The response of a GatewayResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GatewayResource items on this page",
          "items": {
            "$ref": "#/definitions/GatewayResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GatewayResourceRequests": {
      "type": "object",
      "description": "Resource request payload of Spring Cloud Gateway.",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
          "default": "1"
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to each Spring Cloud Gateway instance.",
          "default": "2Gi"
        }
      }
    },
    "GatewayRouteConfigOpenApiProperties": {
      "type": "object",
      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of OpenAPI specification."
        }
      }
    },
    "GatewayRouteConfigProperties": {
      "type": "object",
      "description": "API route config of the Spring Cloud Gateway",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/GatewayProvisioningState",
          "description": "State of the Spring Cloud Gateway route config.",
          "readOnly": true
        },
        "appResourceId": {
          "type": "string",
          "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`."
        },
        "openApi": {
          "$ref": "#/definitions/GatewayRouteConfigOpenApiProperties",
          "description": "OpenAPI properties of Spring Cloud Gateway route config."
        },
        "protocol": {
          "$ref": "#/definitions/GatewayRouteConfigProtocol",
          "description": "Protocol of routed Azure Spring Apps applications.",
          "default": "HTTP"
        },
        "routes": {
          "type": "array",
          "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
          "items": {
            "$ref": "#/definitions/GatewayApiRoute"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "GatewayRouteConfigProtocol": {
      "type": "string",
      "description": "Protocol of routed Azure Spring Apps applications.",
      "enum": [
        "HTTP",
        "HTTPS"
      ],
      "x-ms-enum": {
        "name": "GatewayRouteConfigProtocol",
        "modelAsString": true
      }
    },
    "GatewayRouteConfigResource": {
      "type": "object",
      "description": "Spring Cloud Gateway route config resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayRouteConfigProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayRouteConfigResourceListResult": {
      "type": "object",
      "description": "The response of a GatewayRouteConfigResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GatewayRouteConfigResource items on this page",
          "items": {
            "$ref": "#/definitions/GatewayRouteConfigResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GitPatternRepository": {
      "type": "object",
      "description": "Git repository property payload for config server",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the repository"
        },
        "pattern": {
          "type": "array",
          "description": "Collection of pattern of the repository",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string",
          "description": "URI of the repository"
        },
        "label": {
          "type": "string",
          "description": "Label of the repository"
        },
        "searchPaths": {
          "type": "array",
          "description": "Searching path of the repository",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string",
          "description": "Username of git repository basic auth."
        },
        "password": {
          "type": "string",
          "description": "Password of git repository basic auth."
        },
        "hostKey": {
          "type": "string",
          "description": "Public sshKey of git repository."
        },
        "hostKeyAlgorithm": {
          "type": "string",
          "description": "SshKey algorithm of git repository."
        },
        "privateKey": {
          "type": "string",
          "description": "Private sshKey algorithm of git repository."
        },
        "strictHostKeyChecking": {
          "type": "boolean",
          "description": "Strict host key checking or not."
        }
      },
      "required": [
        "name",
        "uri"
      ]
    },
    "HttpGetAction": {
      "type": "object",
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to access on the HTTP server."
        },
        "scheme": {
          "$ref": "#/definitions/HttpSchemeType",
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProbeAction"
        }
      ],
      "x-ms-discriminator-value": "HTTPGetAction"
    },
    "HttpSchemeType": {
      "type": "string",
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
      "enum": [
        "HTTP",
        "HTTPS"
      ],
      "x-ms-enum": {
        "name": "HttpSchemeType",
        "modelAsString": true
      }
    },
    "ImageRegistryCredential": {
      "type": "object",
      "description": "Credential of the image registry",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the image registry credential"
        },
        "password": {
          "type": "string",
          "description": "The password of the image registry credential"
        }
      }
    },
    "IngressConfig": {
      "type": "object",
      "description": "Ingress configuration payload for Azure Spring Apps resource.",
      "properties": {
        "readTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Ingress read time out in seconds."
        }
      }
    },
    "IngressSettings": {
      "type": "object",
      "description": "App ingress settings payload.",
      "properties": {
        "readTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Ingress read time out in seconds."
        },
        "sendTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Ingress send time out in seconds."
        },
        "sessionAffinity": {
          "$ref": "#/definitions/SessionAffinity",
          "description": "Type of the affinity, set this to Cookie to enable session affinity."
        },
        "sessionCookieMaxAge": {
          "type": "integer",
          "format": "int32",
          "description": "Time in seconds until the cookie expires."
        },
        "backendProtocol": {
          "$ref": "#/definitions/BackendProtocol",
          "description": "How ingress should communicate with this app backend service."
        },
        "clientAuth": {
          "$ref": "#/definitions/IngressSettingsClientAuth",
          "description": "Client-Certification Authentication."
        }
      }
    },
    "IngressSettingsClientAuth": {
      "type": "object",
      "description": "Client-Certification Authentication.",
      "properties": {
        "certificates": {
          "type": "array",
          "description": "Collection of certificate resource id.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JarUploadedUserSourceInfo": {
      "type": "object",
      "description": "Uploaded Jar binary for a deployment",
      "properties": {
        "runtimeVersion": {
          "type": "string",
          "description": "Runtime version of the Jar file"
        },
        "jvmOptions": {
          "type": "string",
          "description": "JVM parameter"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UploadedUserSourceInfo"
        }
      ],
      "x-ms-discriminator-value": "Jar"
    },
    "KPackBuildStageProvisioningState": {
      "type": "string",
      "description": "The provisioning state of this build stage resource.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "KPackBuildStageProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "KeyVaultCertificateProperties": {
      "type": "object",
      "description": "Properties of certificate imported from key vault.",
      "properties": {
        "vaultUri": {
          "type": "string",
          "description": "The vault uri of user key vault."
        },
        "keyVaultCertName": {
          "type": "string",
          "description": "The certificate name of key vault."
        },
        "certVersion": {
          "type": "string",
          "description": "The certificate version of key vault."
        },
        "excludePrivateKey": {
          "type": "boolean",
          "description": "Optional. If set to true, it will not import private key from key vault."
        }
      },
      "required": [
        "vaultUri",
        "keyVaultCertName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CertificateProperties"
        }
      ],
      "x-ms-discriminator-value": "KeyVaultCertificate"
    },
    "LastModifiedByType": {
      "type": "string",
      "description": "The type of identity that last modified the resource.",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "LastModifiedByType",
        "modelAsString": true
      }
    },
    "LoadedCertificate": {
      "type": "object",
      "description": "Loaded certificate payload",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource Id of loaded certificate"
        },
        "loadTrustStore": {
          "type": "boolean",
          "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "LogFileUrlResponse": {
      "type": "object",
      "description": "Log file URL payload",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL of the log file"
        }
      },
      "required": [
        "url"
      ]
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "MetricDimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension"
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Whether this dimension should be included for the Shoebox export scenario"
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Specifications of the Metrics for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the metric"
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized friendly description of the metric"
        },
        "unit": {
          "type": "string",
          "description": "Unit that makes sense for the metric"
        },
        "category": {
          "type": "string",
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category."
        },
        "aggregationType": {
          "type": "string",
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "Supported aggregation types",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "Supported time grain types",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of the metric",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": []
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "Name of the MDM namespace. Optional."
        }
      }
    },
    "MonitoringSettingProperties": {
      "type": "object",
      "description": "Monitoring Setting properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/MonitoringSettingState",
          "description": "State of the Monitoring Setting.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error when apply Monitoring Setting changes."
        },
        "traceEnabled": {
          "type": "boolean",
          "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not"
        },
        "appInsightsInstrumentationKey": {
          "type": "string",
          "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings"
        },
        "appInsightsSamplingRate": {
          "type": "number",
          "format": "double",
          "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
          "maximum": 100
        },
        "appInsightsAgentVersions": {
          "$ref": "#/definitions/ApplicationInsightsAgentVersions",
          "description": "Indicates the versions of application insight agent"
        }
      }
    },
    "MonitoringSettingResource": {
      "type": "object",
      "description": "Monitoring Setting resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringSettingProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MonitoringSettingState": {
      "type": "string",
      "description": "State of the Monitoring Setting.",
      "enum": [
        "NotAvailable",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "MonitoringSettingState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "NameAvailability": {
      "type": "object",
      "description": "Name availability result payload",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the name is available"
        },
        "reason": {
          "type": "string",
          "description": "Reason why the name is not available"
        },
        "message": {
          "type": "string",
          "description": "Message why the name is not available"
        }
      }
    },
    "NameAvailabilityParameters": {
      "type": "object",
      "description": "Name availability parameters payload",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the resource to check name availability"
        },
        "name": {
          "type": "string",
          "description": "Name to be checked"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "NetCoreZipUploadedUserSourceInfo": {
      "type": "object",
      "description": "Uploaded Jar binary for a deployment",
      "properties": {
        "netCoreMainEntryPath": {
          "type": "string",
          "description": "The path to the .NET executable relative to zip root"
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Runtime version of the .Net file"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UploadedUserSourceInfo"
        }
      ],
      "x-ms-discriminator-value": "NetCoreZip"
    },
    "NetworkProfile": {
      "type": "object",
      "description": "Service network profile payload",
      "properties": {
        "serviceRuntimeSubnetId": {
          "type": "string",
          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "appSubnetId": {
          "type": "string",
          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceCidr": {
          "type": "string",
          "description": "Azure Spring Apps service reserved CIDR",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceRuntimeNetworkResourceGroup": {
          "type": "string",
          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "appNetworkResourceGroup": {
          "type": "string",
          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "outboundIPs": {
          "$ref": "#/definitions/NetworkProfileOutboundIPs",
          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
          "readOnly": true
        },
        "requiredTraffics": {
          "type": "array",
          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
          "items": {
            "$ref": "#/definitions/RequiredTraffic"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "ingressConfig": {
          "$ref": "#/definitions/IngressConfig",
          "description": "Ingress configuration payload for Azure Spring Apps resource."
        },
        "outboundType": {
          "type": "string",
          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "NetworkProfileOutboundIPs": {
      "type": "object",
      "description": "Desired outbound IP resources for Azure Spring Apps resource.",
      "properties": {
        "publicIPs": {
          "type": "array",
          "description": "A list of public IP addresses.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "OperationDetail": {
      "type": "object",
      "description": "Operation detail payload",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "actionType": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ActionType",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "readOnly": true
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Extra Operation properties",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "PagedResourceSku": {
      "type": "object",
      "description": "Object that includes an array of Azure Spring Apps SKU and a possible link for next set",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceSku items on this page",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.ResourceSku"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PersistentDisk": {
      "type": "object",
      "description": "Persistent disk payload",
      "properties": {
        "sizeInGB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the persistent disk in GB",
          "maximum": 50
        },
        "usedInGB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the used persistent disk in GB",
          "maximum": 50,
          "readOnly": true
        },
        "mountPath": {
          "type": "string",
          "description": "Mount path of the persistent disk"
        }
      }
    },
    "PowerState": {
      "type": "string",
      "description": "Power state of the Service",
      "enum": [
        "Running",
        "Stopped"
      ],
      "x-ms-enum": {
        "name": "PowerState",
        "modelAsString": true
      }
    },
    "Probe": {
      "type": "object",
      "description": "Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "probeAction": {
          "$ref": "#/definitions/ProbeAction",
          "description": "The action of the probe."
        },
        "disableProbe": {
          "type": "boolean",
          "description": "Indicate whether the probe is disabled."
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "How often (in seconds) to perform the probe. Minimum value is 1."
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds after which the probe times out. Minimum value is 1."
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1."
        }
      },
      "required": [
        "disableProbe"
      ]
    },
    "ProbeAction": {
      "type": "object",
      "description": "The action of the probe.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for ProbeAction."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ProbeActionType": {
      "type": "string",
      "description": "The type of the action to take to perform the health check.",
      "enum": [
        "HTTPGetAction",
        "TCPSocketAction",
        "ExecAction"
      ],
      "x-ms-enum": {
        "name": "ProbeActionType",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Service",
      "enum": [
        "Creating",
        "Updating",
        "Starting",
        "Stopping",
        "Deleting",
        "Deleted",
        "Succeeded",
        "Failed",
        "Moving",
        "Moved",
        "MoveFailed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "RegenerateTestKeyRequestPayload": {
      "type": "object",
      "description": "Regenerate test key request payload",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/TestKeyType",
          "description": "Type of the test key"
        }
      },
      "required": [
        "keyType"
      ]
    },
    "RemoteDebugging": {
      "type": "object",
      "description": "Remote debugging config.",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Application debugging port"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicate if remote debugging is enabled"
        }
      }
    },
    "RemoteDebuggingPayload": {
      "type": "object",
      "description": "Remote debugging payload.",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Application debugging port."
        }
      }
    },
    "RequiredTraffic": {
      "type": "object",
      "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The protocol of required traffic",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port of required traffic",
          "readOnly": true
        },
        "ips": {
          "type": "array",
          "description": "The ip list of required traffic",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "fqdns": {
          "type": "array",
          "description": "The FQDN list of required traffic",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "direction": {
          "$ref": "#/definitions/TrafficDirection",
          "description": "The direction of required traffic",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource Id for the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "ResourceRequests": {
      "type": "object",
      "description": "Deployment resource request payload",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier."
        },
        "memory": {
          "type": "string",
          "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier."
        }
      }
    },
    "ResourceSkuCapabilities": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets an invariant to describe the feature."
        },
        "value": {
          "type": "string",
          "description": "Gets an invariant if the feature is measured by quantity."
        }
      }
    },
    "ResourceSkuLocationInfo": {
      "type": "object",
      "description": "Locations and availability zones where the SKU is available",
      "properties": {
        "location": {
          "type": "string",
          "description": "Gets location of the SKU"
        },
        "zones": {
          "type": "array",
          "description": "Gets list of availability zones where the SKU is supported.",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "type": "array",
          "description": "Gets details of capabilities available to a SKU in specific zones.",
          "items": {
            "$ref": "#/definitions/ResourceSkuZoneDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceSkuRestrictionInfo": {
      "type": "object",
      "description": "Information about the restriction where the SKU cannot be used",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Gets locations where the SKU is restricted",
          "items": {
            "type": "string"
          }
        },
        "zones": {
          "type": "array",
          "description": "Gets list of availability zones where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceSkuRestrictions": {
      "type": "object",
      "description": "Restrictions where the SKU cannot be used",
      "properties": {
        "type": {
          "$ref": "#/definitions/ResourceSkuRestrictionsType",
          "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'"
        },
        "values": {
          "type": "array",
          "description": "Gets the value of restrictions. If the restriction type is set to\nlocation. This would be different locations where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ResourceSkuRestrictionInfo",
          "description": "Gets the information about the restriction where the SKU cannot be used."
        },
        "reasonCode": {
          "$ref": "#/definitions/ResourceSkuRestrictionsReasonCode",
          "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'"
        }
      }
    },
    "ResourceSkuRestrictionsReasonCode": {
      "type": "string",
      "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'",
      "enum": [
        "QuotaId",
        "NotAvailableForSubscription"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsReasonCode",
        "modelAsString": true
      }
    },
    "ResourceSkuRestrictionsType": {
      "type": "string",
      "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'",
      "enum": [
        "Location",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsType",
        "modelAsString": true
      }
    },
    "ResourceSkuZoneDetails": {
      "type": "object",
      "description": "Details of capabilities available to a SKU in specific zones",
      "properties": {
        "name": {
          "type": "array",
          "description": "Gets the set of zones that the SKU is available in with the\nspecified capabilities.",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "description": "Gets a list of capabilities that are available for the SKU in the\nspecified list of zones.",
          "items": {
            "$ref": "#/definitions/ResourceSkuCapabilities"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceUploadDefinition": {
      "type": "object",
      "description": "Resource upload definition payload",
      "properties": {
        "relativePath": {
          "type": "string",
          "description": "Source relative path"
        },
        "uploadUrl": {
          "type": "string",
          "description": "Upload URL"
        }
      }
    },
    "ServiceRegistryInstance": {
      "type": "object",
      "description": "Collection of instances belong to the Service Registry",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Service Registry instance",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Service Registry instance",
          "readOnly": true
        }
      }
    },
    "ServiceRegistryProperties": {
      "type": "object",
      "description": "Service Registry properties payload",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ServiceRegistryProvisioningState",
          "description": "State of the Service Registry.",
          "readOnly": true
        },
        "resourceRequests": {
          "$ref": "#/definitions/ServiceRegistryResourceRequests",
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true
        },
        "instances": {
          "type": "array",
          "description": "Collection of instances belong to Service Registry.",
          "items": {
            "$ref": "#/definitions/ServiceRegistryInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceRegistryProvisioningState": {
      "type": "string",
      "description": "State of the Service Registry.",
      "enum": [
        "Creating",
        "Updating",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ServiceRegistryProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ServiceRegistryResource": {
      "type": "object",
      "description": "Service Registry resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceRegistryProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceRegistryResourceListResult": {
      "type": "object",
      "description": "The response of a ServiceRegistryResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceRegistryResource items on this page",
          "items": {
            "$ref": "#/definitions/ServiceRegistryResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceRegistryResourceRequests": {
      "type": "object",
      "description": "Resource request payload of Service Registry",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "Cpu allocated to each Service Registry instance",
          "readOnly": true
        },
        "memory": {
          "type": "string",
          "description": "Memory allocated to each Service Registry instance",
          "readOnly": true
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count of the Service Registry",
          "readOnly": true
        }
      }
    },
    "ServiceResource": {
      "type": "object",
      "description": "Service resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServiceResourceListResult": {
      "type": "object",
      "description": "The response of a ServiceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceResource items on this page",
          "items": {
            "$ref": "#/definitions/ServiceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Specifications of the Metrics for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceVNetAddons": {
      "type": "object",
      "description": "Additional Service settings in vnet injection instance",
      "properties": {
        "logStreamPublicEndpoint": {
          "type": "boolean",
          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet."
        }
      }
    },
    "SessionAffinity": {
      "type": "string",
      "description": "Type of the affinity, set this to Cookie to enable session affinity.",
      "enum": [
        "Cookie",
        "None"
      ],
      "x-ms-enum": {
        "name": "SessionAffinity",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "Sku of Azure Spring Apps",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku",
          "default": "S0"
        },
        "tier": {
          "type": "string",
          "description": "Tier of the Sku",
          "default": "Standard"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Current capacity of the target resource"
        }
      }
    },
    "SkuCapacity": {
      "type": "object",
      "description": "The SKU capacity",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the minimum."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the maximum."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the default."
        },
        "scaleType": {
          "$ref": "#/definitions/SkuScaleType",
          "description": "Gets or sets the type of the scale."
        }
      },
      "required": [
        "minimum"
      ]
    },
    "SkuScaleType": {
      "type": "string",
      "description": "Gets or sets the type of the scale.",
      "enum": [
        "None",
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "SkuScaleType",
        "modelAsString": true
      }
    },
    "SourceUploadedUserSourceInfo": {
      "type": "object",
      "description": "Uploaded Java source code binary for a deployment",
      "properties": {
        "artifactSelector": {
          "type": "string",
          "description": "Selector for the artifact to be used for the deployment for multi-module projects. This should be\nthe relative path to the target module/project."
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Runtime version of the source file"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UploadedUserSourceInfo"
        }
      ],
      "x-ms-discriminator-value": "Source"
    },
    "SsoProperties": {
      "type": "object",
      "description": "Single sign-on related configuration",
      "properties": {
        "scope": {
          "type": "array",
          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string",
          "description": "The public identifier for the application"
        },
        "clientSecret": {
          "type": "string",
          "description": "The secret known only to the application and the authorization server"
        },
        "issuerUri": {
          "type": "string",
          "description": "The URI of Issuer Identifier"
        }
      }
    },
    "StackProperties": {
      "type": "object",
      "description": "KPack ClusterStack properties payload",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the ClusterStack."
        },
        "version": {
          "type": "string",
          "description": "Version of the ClusterStack"
        }
      }
    },
    "StorageAccount": {
      "type": "object",
      "description": "storage resource of type Azure Storage Account.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The account name of the Azure Storage Account."
        },
        "accountKey": {
          "type": "string",
          "description": "The account key of the Azure Storage Account.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "required": [
        "accountName",
        "accountKey"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/StorageProperties"
        }
      ],
      "x-ms-discriminator-value": "StorageAccount"
    },
    "StorageProperties": {
      "type": "object",
      "description": "Storage resource payload.",
      "properties": {
        "storageType": {
          "type": "string",
          "description": "Discriminator property for StorageProperties."
        }
      },
      "discriminator": "storageType",
      "required": [
        "storageType"
      ]
    },
    "StorageResource": {
      "type": "object",
      "description": "Storage resource payload.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageResourceListResult": {
      "type": "object",
      "description": "The response of a StorageResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageResource items on this page",
          "items": {
            "$ref": "#/definitions/StorageResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageType": {
      "type": "string",
      "description": "The type of the storage.",
      "enum": [
        "StorageAccount"
      ],
      "x-ms-enum": {
        "name": "StorageType",
        "modelAsString": true
      }
    },
    "SupportedBuildpackResource": {
      "type": "object",
      "description": "Supported buildpack resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportedBuildpackResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SupportedBuildpackResourceListResult": {
      "type": "object",
      "description": "The response of a SupportedBuildpackResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SupportedBuildpackResource items on this page",
          "items": {
            "$ref": "#/definitions/SupportedBuildpackResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SupportedBuildpackResourceProperties": {
      "type": "object",
      "description": "Supported buildpack resource properties",
      "properties": {
        "buildpackId": {
          "type": "string",
          "description": "The id of supported buildpack"
        }
      }
    },
    "SupportedRuntimePlatform": {
      "type": "string",
      "description": "The platform of this runtime version (possible values: \"Java\" or \".NET\").",
      "enum": [
        "Java",
        ".NET Core"
      ],
      "x-ms-enum": {
        "name": "SupportedRuntimePlatform",
        "modelAsString": true
      }
    },
    "SupportedRuntimeValue": {
      "type": "string",
      "description": "The raw value which could be passed to deployment CRUD operations.",
      "enum": [
        "Java_8",
        "Java_11",
        "Java_17",
        "NetCore_31"
      ],
      "x-ms-enum": {
        "name": "SupportedRuntimeValue",
        "modelAsString": true
      }
    },
    "SupportedRuntimeVersion": {
      "type": "object",
      "description": "Supported deployment runtime version descriptor.",
      "properties": {
        "value": {
          "$ref": "#/definitions/SupportedRuntimeValue",
          "description": "The raw value which could be passed to deployment CRUD operations."
        },
        "platform": {
          "$ref": "#/definitions/SupportedRuntimePlatform",
          "description": "The platform of this runtime version (possible values: \"Java\" or \".NET\")."
        },
        "version": {
          "type": "string",
          "description": "The detailed version (major.minor) of the platform."
        }
      }
    },
    "SupportedStackResource": {
      "type": "object",
      "description": "Supported stack resource payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportedStackResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SupportedStackResourceListResult": {
      "type": "object",
      "description": "The response of a SupportedStackResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SupportedStackResource items on this page",
          "items": {
            "$ref": "#/definitions/SupportedStackResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SupportedStackResourceProperties": {
      "type": "object",
      "description": "Supported stack resource properties",
      "properties": {
        "stackId": {
          "type": "string",
          "description": "The id of supported stack"
        },
        "version": {
          "type": "string",
          "description": "The version of supported stack"
        }
      }
    },
    "TCPSocketAction": {
      "type": "object",
      "description": "TCPSocketAction describes an action based on opening a socket",
      "allOf": [
        {
          "$ref": "#/definitions/ProbeAction"
        }
      ],
      "x-ms-discriminator-value": "TCPSocketAction"
    },
    "TemporaryDisk": {
      "type": "object",
      "description": "Temporary disk payload",
      "properties": {
        "sizeInGB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the temporary disk in GB",
          "maximum": 5
        },
        "mountPath": {
          "type": "string",
          "description": "Mount path of the temporary disk",
          "default": "/tmp"
        }
      }
    },
    "TestKeyType": {
      "type": "string",
      "description": "Type of the test key",
      "enum": [
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "TestKeyType",
        "modelAsString": true
      }
    },
    "TestKeys": {
      "type": "object",
      "description": "Test keys payload",
      "properties": {
        "primaryKey": {
          "type": "string",
          "description": "Primary key"
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary key"
        },
        "primaryTestEndpoint": {
          "type": "string",
          "description": "Primary test endpoint"
        },
        "secondaryTestEndpoint": {
          "type": "string",
          "description": "Secondary test endpoint"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the test endpoint feature enabled or not"
        }
      }
    },
    "TrafficDirection": {
      "type": "string",
      "description": "The direction of required traffic",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "TrafficDirection",
        "modelAsString": true
      }
    },
    "TriggeredBuildResult": {
      "type": "object",
      "description": "The build result triggered by a build",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique build id of this build result"
        }
      }
    },
    "Type": {
      "type": "string",
      "description": "The type of the underlying resource to mount as a persistent disk.",
      "enum": [
        "AzureFileVolume"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true
      }
    },
    "UploadedUserSourceInfo": {
      "type": "object",
      "description": "Source with uploaded location",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for UploadedUserSourceInfo."
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path of the storage which stores the source"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/UserSourceInfo"
        }
      ]
    },
    "UserAssignedManagedIdentity": {
      "type": "object",
      "description": "The details of the user-assigned managed identity assigned to an App.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal Id of user-assigned managed identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "Client Id of user-assigned managed identity.",
          "readOnly": true
        }
      }
    },
    "UserSourceInfo": {
      "type": "object",
      "description": "Source information for a deployment",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for UserSourceInfo."
        },
        "version": {
          "type": "string",
          "description": "Version of the source"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ValidationMessages": {
      "type": "object",
      "description": "Validate messages of the configuration service git repositories",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the configuration service git repository."
        },
        "messages": {
          "type": "array",
          "description": "Detailed validation messages.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-12-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_12_01",
            "value": "2022-12-01",
            "description": "The 2022-12-01 API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
