{
  "swagger": "2.0",
  "info": {
    "title": "ContainerServiceFleetClient",
    "version": "2022-09-02-preview",
    "description": "Azure Kubernetes Fleet Manager api client.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Fleets"
    },
    {
      "name": "FleetMembers"
    }
  ],
  "paths": {
    "/providers/Microsoft.ContainerService/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List the available operations.": {
            "$ref": "./examples/Operation_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/fleets": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_ListBySubscription",
        "description": "Lists fleets in the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Lists the Fleet resources in a subscription.": {
            "$ref": "./examples/Fleets_ListBySub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_ListByResourceGroup",
        "description": "Lists fleets in the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Lists the Fleet resources in a resource group.": {
            "$ref": "./examples/Fleets_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_Get",
        "description": "Gets a Fleet.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Fleet resource.": {
            "$ref": "./examples/Fleets_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_CreateOrUpdate",
        "description": "Creates or updates a Fleet.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if an entity matches this string.",
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if no entity matches this string.",
            "x-ms-client-name": "ifNoneMatch",
            "type": "string"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a Fleet resource with a long running operation.": {
            "$ref": "./examples/Fleets_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_Update",
        "description": "Update a Fleet",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if an entity matches this string.",
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/FleetPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a Fleet.": {
            "$ref": "./examples/Fleets_PatchTags.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_Delete",
        "description": "Delete a Fleet",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if an entity matches this string.",
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a Fleet resource asynchronously with a long running operation.": {
            "$ref": "./examples/Fleets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/listCredentials": {
      "post": {
        "tags": [
          "Fleets"
        ],
        "operationId": "Fleets_ListCredentials",
        "description": "Lists the user credentials of a Fleet.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetCredentialResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the user credentials of a Fleet.": {
            "$ref": "./examples/Fleets_ListCredentialsResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members": {
      "get": {
        "tags": [
          "FleetMembers"
        ],
        "operationId": "FleetMembers_ListByFleet",
        "description": "List FleetMember resources by Fleet",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMemberListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Lists the members of a Fleet.": {
            "$ref": "./examples/FleetMembers_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members/{fleetMemberName}": {
      "get": {
        "tags": [
          "FleetMembers"
        ],
        "operationId": "FleetMembers_Get",
        "description": "Get a FleetMember",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet member resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a FleetMember resource.": {
            "$ref": "./examples/FleetMembers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "FleetMembers"
        ],
        "operationId": "FleetMembers_Create",
        "description": "Create a FleetMember",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if an entity matches this string.",
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if no entity matches this string.",
            "x-ms-client-name": "ifNoneMatch",
            "type": "string"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet member resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a FleetMember resource with a long running operation.": {
            "$ref": "./examples/FleetMembers_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FleetMembers"
        ],
        "operationId": "FleetMembers_Delete",
        "description": "Delete a FleetMember",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "description": "The request should only proceed if an entity matches this string.",
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "fleetName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "required": true,
            "description": "The name of the Fleet member resource.",
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a FleetMember resource asynchronously with a long running operation.": {
            "$ref": "./examples/FleetMembers_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ClusterResourceId": {
      "type": "string",
      "description": "A type definition that refers the id to an ARM resource.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ContainerService/managedClusters"
          }
        ]
      }
    },
    "Fleet": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "description": "The Fleet resource.",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FleetCredentialResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the credential.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Base64-encoded Kubernetes configuration file.",
          "readOnly": true
        }
      },
      "description": "One credential result item."
    },
    "FleetCredentialResults": {
      "type": "object",
      "properties": {
        "kubeconfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FleetCredentialResult"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Array of base64-encoded Kubernetes configuration files.",
          "x-typespec-name": "FleetCredentialResult[]",
          "readOnly": true
        }
      },
      "description": "The Credential results response."
    },
    "FleetHubProfile": {
      "type": "object",
      "properties": {
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix used to create the FQDN for the Fleet hub.",
          "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$",
          "minLength": 1,
          "maxLength": 54,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "fqdn": {
          "type": "string",
          "description": "The FQDN of the Fleet hub.",
          "readOnly": true
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version of the Fleet hub.",
          "readOnly": true
        }
      },
      "description": "The FleetHubProfile configures the fleet hub."
    },
    "FleetListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fleet"
          },
          "description": "The Fleet items on this page",
          "x-typespec-name": "Fleet[]"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a Fleet list operation.",
      "required": [
        "value"
      ]
    },
    "FleetMember": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetMemberProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "description": "A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetMemberListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FleetMember"
          },
          "description": "The FleetMember items on this page",
          "x-typespec-name": "FleetMember[]"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a FleetMember list operation.",
      "required": [
        "value"
      ]
    },
    "FleetMemberProperties": {
      "type": "object",
      "properties": {
        "clusterResourceId": {
          "$ref": "#/definitions/ClusterResourceId",
          "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/FleetMemberProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "description": "A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.",
      "required": [
        "clusterResourceId"
      ]
    },
    "FleetMemberProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Joining",
        "Leaving",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "FleetMemberProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Joining",
            "value": "Joining"
          },
          {
            "name": "Leaving",
            "value": "Leaving"
          },
          {
            "name": "Updating",
            "value": "Updating"
          }
        ]
      }
    },
    "FleetPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Properties of a Fleet that can be patched."
    },
    "FleetProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/FleetProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "hubProfile": {
          "$ref": "#/definitions/FleetHubProfile",
          "description": "The FleetHubProfile configures the Fleet's hub."
        }
      },
      "description": "Fleet properties."
    },
    "FleetProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "FleetProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    }
  },
  "parameters": {}
}
