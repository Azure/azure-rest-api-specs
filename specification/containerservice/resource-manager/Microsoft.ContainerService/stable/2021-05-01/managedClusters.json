{
  "swagger": "2.0",
  "info": {
    "title": "ContainerServiceClient",
    "description": "The Container Service Client.",
    "version": "2021-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.ContainerService/operations": {
      "get": {
        "tags": [
          "managedClusters"
        ],
        "operationId": "Operations_List",
        "summary": "Gets a list of operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/osOptions/default": {
      "get": {
        "tags": [
          "managedClusters"
        ],
        "operationId": "ManagedClusters_GetOSOptions",
        "summary": "Gets supported OS options in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ResourceTypeParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OSOptionProfile"
            }
          }
        },
        "x-ms-examples": {
          "Get Container Service OS Options": {
            "$ref": "./examples/ContainerServiceGetOSOptions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_List",
        "summary": "Gets a list of managed clusters in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Managed Clusters": {
            "$ref": "./examples/ManagedClustersList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListByResourceGroup",
        "summary": "Lists managed clusters in the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Managed Clusters by Resource Group": {
            "$ref": "./examples/ManagedClustersListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/upgradeProfiles/default": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_GetUpgradeProfile",
        "summary": "Gets the upgrade profile of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterUpgradeProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Upgrade Profile for Managed Cluster": {
            "$ref": "./examples/ManagedClustersGetUpgradeProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/accessProfiles/{roleName}/listCredential": {
      "post": {
        "deprecated": true,
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_GetAccessProfile",
        "summary": "Gets an access profile of a managed cluster.",
        "description": "**WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](https://docs.microsoft.com/rest/api/aks/managedclusters/listclusterusercredentials) or [ListClusterAdminCredentials](https://docs.microsoft.com/rest/api/aks/managedclusters/listclusteradmincredentials) .",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role for managed cluster accessProfile resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterAccessProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "$ref": "./examples/ManagedClustersGetAccessProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterAdminCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterAdminCredentials",
        "summary": "Lists the admin credentials of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ServerFqdnParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "$ref": "./examples/ManagedClustersListClusterCredentialResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterUserCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterUserCredentials",
        "summary": "Lists the user credentials of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ServerFqdnParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "$ref": "./examples/ManagedClustersListClusterCredentialResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterMonitoringUserCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterMonitoringUserCredentials",
        "summary": "Lists the cluster monitoring user credentials of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ServerFqdnParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "$ref": "./examples/ManagedClustersListClusterCredentialResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Get",
        "summary": "Gets a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "$ref": "./examples/ManagedClustersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_CreateOrUpdate",
        "summary": "Creates or updates a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            },
            "description": "The managed cluster to create or update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update Managed Cluster": {
            "$ref": "./examples/ManagedClustersCreate_Update.json"
          },
          "Create/Update AAD Managed Cluster with EnableAzureRBAC": {
            "$ref": "./examples/ManagedClustersCreate_UpdateWithEnableAzureRBAC.json"
          },
          "Create Managed Cluster with PPG": {
            "$ref": "./examples/ManagedClustersCreate_PPG.json"
          },
          "Create Managed Cluster with OSSKU": {
            "$ref": "./examples/ManagedClustersCreate_OSSKU.json"
          },
          "Create Managed Cluster with GPUMIG": {
            "$ref": "./examples/ManagedClustersCreate_GPUMIG.json"
          },
          "Create/Update Managed Cluster with EnableAHUB": {
            "$ref": "./examples/ManagedClustersCreate_UpdateWithAHUB.json"
          },
          "Create Managed Cluster with EncryptionAtHost enabled": {
            "$ref": "./examples/ManagedClustersCreate_EnableEncryptionAtHost.json"
          },
          "Create Managed Cluster with UltraSSD enabled": {
            "$ref": "./examples/ManagedClustersCreate_EnableUltraSSD.json"
          },
          "Create Managed Cluster with PodIdentity enabled": {
            "$ref": "./examples/ManagedClustersCreate_PodIdentity.json"
          },
          "Create Managed Private Cluster with fqdn subdomain specified": {
            "$ref": "./examples/ManagedClustersCreate_PrivateClusterFQDNSubdomain.json"
          },
          "Create Managed Private Cluster with Public FQDN specified": {
            "$ref": "./examples/ManagedClustersCreate_PrivateClusterPublicFQDN.json"
          },
          "Create Managed Cluster with Node Public IP Prefix": {
            "$ref": "./examples/ManagedClustersCreate_NodePublicIPPrefix.json"
          },
          "Create Managed Cluster with FIPS enabled OS": {
            "$ref": "./examples/ManagedClustersCreate_EnabledFIPS.json"
          },
          "Create Managed Cluster with HTTP proxy configured": {
            "$ref": "./examples/ManagedClustersCreate_HTTPProxy.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_UpdateTags",
        "summary": "Updates tags on a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the Update Managed Cluster Tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Managed Cluster Tags": {
            "$ref": "./examples/ManagedClustersUpdateTags.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Delete",
        "summary": "Deletes a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Managed Cluster": {
            "$ref": "./examples/ManagedClustersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_ListByManagedCluster",
        "summary": "Gets a list of maintenance configurations in the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List maintenance configurations by Managed Cluster": {
            "$ref": "./examples/MaintenanceConfigurationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_Get",
        "summary": "Gets the specified maintenance configuration of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "configName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the maintenance configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Maintenance Configuration": {
            "$ref": "./examples/MaintenanceConfigurationsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_CreateOrUpdate",
        "summary": "Creates or updates a maintenance configuration in the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "configName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the maintenance configuration."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintenanceConfiguration"
            },
            "description": "The maintenance configuration to create or update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": false,
        "x-ms-examples": {
          "Create/Update Maintenance Configuration": {
            "$ref": "./examples/MaintenanceConfigurationsCreate_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_Delete",
        "summary": "Deletes a maintenance configuration.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "configName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the maintenance configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": false,
        "x-ms-examples": {
          "Delete Maintenance Configuration": {
            "$ref": "./examples/MaintenanceConfigurationsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_List",
        "summary": "Gets a list of agent pools in the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Agent Pools by Managed Cluster": {
            "$ref": "./examples/AgentPoolsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_Get",
        "summary": "Gets the specified managed cluster agent pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Agent Pool": {
            "$ref": "./examples/AgentPoolsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_CreateOrUpdate",
        "summary": "Creates or updates an agent pool in the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentPool"
            },
            "description": "The agent pool to create or update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update Agent Pool": {
            "$ref": "./examples/AgentPoolsCreate_Update.json"
          },
          "Update Agent Pool": {
            "$ref": "./examples/AgentPools_Update.json"
          },
          "Create Spot Agent Pool": {
            "$ref": "./examples/AgentPoolsCreate_Spot.json"
          },
          "Create Agent Pool with PPG": {
            "$ref": "./examples/AgentPoolsCreate_PPG.json"
          },
          "Create Agent Pool with OSSKU": {
            "$ref": "./examples/AgentPoolsCreate_OSSKU.json"
          },
          "Create Agent Pool with GPUMIG": {
            "$ref": "./examples/AgentPoolsCreate_GPUMIG.json"
          },
          "Create Agent Pool with Ephemeral OS Disk": {
            "$ref": "./examples/AgentPoolsCreate_Ephemeral.json"
          },
          "Create Agent Pool with KubeletConfig and LinuxOSConfig": {
            "$ref": "./examples/AgentPoolsCreate_CustomNodeConfig.json"
          },
          "Create Agent Pool with EncryptionAtHost enabled": {
            "$ref": "./examples/AgentPoolsCreate_EnableEncryptionAtHost.json"
          },
          "Create Agent Pool with UltraSSD enabled": {
            "$ref": "./examples/AgentPoolsCreate_EnableUltraSSD.json"
          },
          "Create Agent Pool with FIPS enabled OS": {
            "$ref": "./examples/AgentPoolsCreate_EnableFIPS.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_Delete",
        "summary": "Deletes an agent pool in the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Agent Pool": {
            "$ref": "./examples/AgentPoolsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/upgradeProfiles/default": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_GetUpgradeProfile",
        "summary": "Gets the upgrade profile for an agent pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolUpgradeProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Upgrade Profile for Agent Pool": {
            "$ref": "./examples/AgentPoolsGetUpgradeProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/availableAgentPoolVersions": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_GetAvailableAgentPoolVersions",
        "summary": "Gets a list of supported Kubernetes versions for the specified agent pool.",
        "description": "See [supported Kubernetes versions](https://docs.microsoft.com/azure/aks/supported-kubernetes-versions) for more details about the version lifecycle.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolAvailableVersions"
            }
          }
        },
        "x-ms-examples": {
          "Get available versions for agent pool": {
            "$ref": "./examples/AgentPoolsGetAgentPoolAvailableVersions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetServicePrincipalProfile": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ResetServicePrincipalProfile",
        "summary": "Reset the Service Principal Profile of a managed cluster.",
        "description": "This action cannot be performed on a cluster that is not using a service principal",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterServicePrincipalProfile"
            },
            "description": "The service principal profile to set on the managed cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Reset Service Principal Profile": {
            "$ref": "./examples/ManagedClustersResetServicePrincipalProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetAADProfile": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ResetAADProfile",
        "summary": "Reset the AAD Profile of a managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterAADProfile"
            },
            "description": "The AAD profile to set on the Managed Cluster"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Reset AAD Profile": {
            "$ref": "./examples/ManagedClustersResetAADProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/rotateClusterCertificates": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_RotateClusterCertificates",
        "summary": "Rotates the certificates of a managed cluster.",
        "description": "See [Certificate rotation](https://docs.microsoft.com/azure/aks/certificate-rotation) for more details about rotating managed cluster certificates.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Rotate Cluster Certificates": {
            "$ref": "./examples/ManagedClustersRotateClusterCertificates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/stop": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Stop",
        "summary": "Stops a Managed Cluster",
        "description": "This can only be performed on Azure Virtual Machine Scale set backed clusters. Stopping a cluster stops the control plane and agent nodes entirely, while maintaining all object and cluster state. A cluster does not accrue charges while it is stopped. See [stopping a cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details about stopping a cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Stop Managed Cluster": {
            "$ref": "./examples/ManagedClustersStop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/start": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Start",
        "summary": "Starts a previously stopped Managed Cluster",
        "description": "See [starting a cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details about starting a cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Start Managed Cluster": {
            "$ref": "./examples/ManagedClustersStart.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "summary": "Gets a list of private endpoint connections in the specified managed cluster.",
        "description": "To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Private Endpoint Connections by Managed Cluster": {
            "$ref": "./examples/PrivateEndpointConnectionsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "summary": "Gets the specified private endpoint connection.",
        "description": "To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Private Endpoint Connection": {
            "$ref": "./examples/PrivateEndpointConnectionsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Update",
        "summary": "Updates a private endpoint connection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The updated private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Private Endpoint Connection": {
            "$ref": "./examples/PrivateEndpointConnectionsUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "summary": "Deletes a private endpoint connection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Private Endpoint Connection": {
            "$ref": "./examples/PrivateEndpointConnectionsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/upgradeNodeImageVersion": {
      "post": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_UpgradeNodeImageVersion",
        "summary": "Upgrades the node image version of an agent pool to the latest.",
        "description": "Upgrading the node image version of an agent pool applies the newest OS and runtime updates to the nodes. AKS provides one new image per week with the latest updates. For more details on node image versions, see: https://docs.microsoft.com/azure/aks/node-image-upgrade",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upgrade Agent Pool Node Image Version": {
            "$ref": "./examples/AgentPoolsUpgradeNodeImageVersion.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "privateLinkResources"
        ],
        "operationId": "PrivateLinkResources_List",
        "summary": "Gets a list of private link resources in the specified managed cluster.",
        "description": "To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Private Link Resources by Managed Cluster": {
            "$ref": "./examples/PrivateLinkResourcesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resolvePrivateLinkServiceId": {
      "post": {
        "tags": [
          "resolvePrivateLinkServiceId"
        ],
        "operationId": "ResolvePrivateLinkServiceId_POST",
        "summary": "Gets the private link service ID for the specified managed cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            },
            "description": "Parameters required in order to resolve a private link service ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Resolve the Private Link Service ID for Managed Cluster": {
            "$ref": "./examples/ResolvePrivateLinkServiceId.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/runCommand": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_RunCommand",
        "summary": "Submits a command to run against the Managed Cluster.",
        "description": "AKS will create a pod to run the command. This is primarily useful for private clusters. For more information see [AKS Run Command](https://docs.microsoft.com/azure/aks/private-clusters#aks-run-command-preview).",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "requestPayload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunCommandRequest"
            },
            "description": "The run command request"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "200": {
            "description": "command finished with async pattern, tracking by location header. !!! this is for autorest only, you never get 200 from this api !!!",
            "schema": {
              "$ref": "#/definitions/RunCommandResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "submitNewCommand": {
            "$ref": "./examples/RunCommandRequest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/commandResults/{commandId}": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_GetCommandResult",
        "summary": "Gets the results of a command which has been run on the Managed Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "commandId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the command."
          }
        ],
        "responses": {
          "202": {
            "description": "command running in progress"
          },
          "200": {
            "description": "command finished",
            "schema": {
              "$ref": "#/definitions/RunCommandResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "commandSucceedResult": {
            "$ref": "./examples/RunCommandResultSucceed.json"
          },
          "commandFailedResult": {
            "$ref": "./examples/RunCommandResultFailed.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListOutboundNetworkDependenciesEndpoints",
        "summary": "Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified managed cluster.",
        "description": "Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified managed cluster. The operation returns properties of each egress endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OutboundNetworkDependenciesEndpoints by Managed Cluster": {
            "$ref": "./examples/OutboundNetworkDependenciesEndpointsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OperationValue"
          },
          "description": "The list of operations"
        }
      },
      "description": "The List Operation response."
    },
    "OperationValue": {
      "properties": {
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The origin of the operation."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the operation."
        },
        "display": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationValueDisplay",
          "description": "Describes the properties of a Operation Value Display."
        }
      },
      "description": "Describes the properties of a Operation value."
    },
    "OperationValueDisplay": {
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the resource the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provider for the operation."
        }
      },
      "description": "Describes the properties of a Operation Value Display."
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "ContainerServiceOSDisk": {
      "type": "integer",
      "format": "int32",
      "maximum": 2048,
      "minimum": 0,
      "description": "OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
    },
    "ContainerServiceStorageProfile": {
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerServiceStorageProfileTypes",
        "modelAsString": true
      },
      "enum": [
        "StorageAccount",
        "ManagedDisks"
      ],
      "description": "Specifies what kind of storage to use. If omitted, the default will be chosen on your behalf based on the choice of orchestrator."
    },
    "ContainerServiceVnetSubnetID": {
      "type": "string",
      "description": "specifies a subnet's resource id with subscription, resource group, vnet and subnet name"
    },
    "ContainerServiceVMSize": {
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerServiceVMSizeTypes",
        "modelAsString": true
      },
      "description": "Size of agent VMs. Note: This is no longer maintained.",
      "enum": [
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ]
    },
    "ManagedClusterServicePrincipalProfile": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The ID for the service principal."
        },
        "secret": {
          "type": "string",
          "description": "The secret password associated with the service principal in plain text."
        }
      },
      "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
      "required": [
        "clientId"
      ]
    },
    "ContainerServiceMasterProfile": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "enum": [
            1,
            3,
            5
          ],
          "x-ms-enum": {
            "name": "Count",
            "modelAsString": false
          },
          "description": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
          "default": 1
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix to be used to create the FQDN for the master pool."
        },
        "vmSize": {
          "$ref": "#/definitions/ContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "osDiskSizeGB": {
          "$ref": "#/definitions/ContainerServiceOSDisk",
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
        },
        "vnetSubnetID": {
          "$ref": "#/definitions/ContainerServiceVnetSubnetID",
          "description": "VNet SubnetID specifies the VNet's subnet identifier."
        },
        "firstConsecutiveStaticIP": {
          "type": "string",
          "description": "FirstConsecutiveStaticIP used to specify the first static ip of masters.",
          "default": "10.240.255.5"
        },
        "storageProfile": {
          "$ref": "#/definitions/ContainerServiceStorageProfile",
          "description": "Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice."
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the master pool."
        }
      },
      "required": [
        "dnsPrefix",
        "vmSize"
      ],
      "description": "Profile for the container service master."
    },
    "ManagedClusterAgentPoolProfileProperties": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1."
        },
        "vmSize": {
          "type": "string",
          "title": "The size of the agent pool VMs.",
          "description": "VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions"
        },
        "osDiskSizeGB": {
          "$ref": "#/definitions/ContainerServiceOSDisk"
        },
        "osDiskType": {
          "$ref": "#/definitions/OSDiskType"
        },
        "kubeletDiskType": {
          "$ref": "#/definitions/KubeletDiskType"
        },
        "vnetSubnetID": {
          "type": "string",
          "title": "The ID of the subnet which agent pool nodes and optionally pods will join on startup.",
          "description": "If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
        },
        "podSubnetID": {
          "type": "string",
          "title": "The ID of the subnet which pods will join when launched.",
          "description": "If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
        },
        "maxPods": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of pods that can run on a node."
        },
        "osType": {
          "$ref": "#/definitions/OSType"
        },
        "osSKU": {
          "$ref": "#/definitions/OSSKU"
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes for auto-scaling"
        },
        "minCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of nodes for auto-scaling"
        },
        "enableAutoScaling": {
          "type": "boolean",
          "description": "Whether to enable auto-scaler"
        },
        "type": {
          "$ref": "#/definitions/AgentPoolType"
        },
        "mode": {
          "$ref": "#/definitions/AgentPoolMode"
        },
        "orchestratorVersion": {
          "type": "string",
          "title": "The version of Kubernetes running on the Agent Pool.",
          "description": "As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool)."
        },
        "nodeImageVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The version of node image"
        },
        "upgradeSettings": {
          "$ref": "#/definitions/AgentPoolUpgradeSettings",
          "description": "Settings for upgrading the agentpool"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state."
        },
        "powerState": {
          "readOnly": true,
          "description": "Describes whether the Agent Pool is Running or Stopped",
          "$ref": "#/definitions/PowerState"
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'."
        },
        "enableNodePublicIP": {
          "type": "boolean",
          "title": "Whether each node is allocated its own public IP.",
          "description": "Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false."
        },
        "nodePublicIPPrefixID": {
          "type": "string",
          "title": "The public IP prefix ID which VM nodes should use IPs from.",
          "description": "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}"
        },
        "scaleSetPriority": {
          "$ref": "#/definitions/ScaleSetPriority",
          "description": "The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'."
        },
        "scaleSetEvictionPolicy": {
          "$ref": "#/definitions/ScaleSetEvictionPolicy",
          "title": "The Virtual Machine Scale Set eviction policy to use.",
          "description": "This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'."
        },
        "spotMaxPrice": {
          "$ref": "#/definitions/SpotMaxPrice",
          "title": "The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.",
          "description": "Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags to be persisted on the agent pool virtual machine scale set."
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The node labels to be persisted across all nodes in agent pool."
        },
        "nodeTaints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
        },
        "proximityPlacementGroupID": {
          "$ref": "#/definitions/ProximityPlacementGroupID",
          "description": "The ID for Proximity Placement Group."
        },
        "kubeletConfig": {
          "$ref": "#/definitions/KubeletConfig",
          "description": "The Kubelet configuration on the agent pool nodes."
        },
        "linuxOSConfig": {
          "$ref": "#/definitions/LinuxOSConfig",
          "description": "The OS configuration of Linux agent nodes."
        },
        "enableEncryptionAtHost": {
          "type": "boolean",
          "title": "Whether to enable host based OS and data drive encryption.",
          "description": "This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption"
        },
        "enableUltraSSD": {
          "type": "boolean",
          "description": "Whether to enable UltraSSD"
        },
        "enableFIPS": {
          "type": "boolean",
          "title": "Whether to use a FIPS-enabled OS.",
          "description": "See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details."
        },
        "gpuInstanceProfile": {
          "$ref": "#/definitions/GPUInstanceProfile",
          "description": "GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU."
        }
      },
      "description": "Properties for the container service agent pool profile."
    },
    "ManagedClusterAgentPoolProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "title": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "description": "Windows agent pool names must be 6 characters or less.",
              "pattern": "^[a-z][a-z0-9]{0,11}$"
            }
          }
        }
      ],
      "required": [
        "name"
      ],
      "description": "Profile for the container service agent pool."
    },
    "AgentPoolType": {
      "type": "string",
      "enum": [
        "VirtualMachineScaleSets",
        "AvailabilitySet"
      ],
      "x-ms-enum": {
        "name": "AgentPoolType",
        "modelAsString": true,
        "values": [
          {
            "value": "VirtualMachineScaleSets",
            "description": "Create an Agent Pool backed by a Virtual Machine Scale Set."
          },
          {
            "value": "AvailabilitySet",
            "description": "Use of this is strongly discouraged."
          }
        ]
      },
      "description": "The type of Agent Pool."
    },
    "AgentPoolMode": {
      "type": "string",
      "enum": [
        "System",
        "User"
      ],
      "x-ms-enum": {
        "name": "AgentPoolMode",
        "modelAsString": true,
        "values": [
          {
            "value": "System",
            "description": "System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory."
          },
          {
            "value": "User",
            "description": "User agent pools are primarily for hosting your application pods."
          }
        ]
      },
      "title": "The mode of an agent pool.",
      "description": "A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools"
    },
    "AgentPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentPool"
          },
          "description": "The list of agent pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of agent pool results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Agent Pools operation."
    },
    "AgentPoolUpgradeSettings": {
      "properties": {
        "maxSurge": {
          "type": "string",
          "title": "The maximum number or percentage of nodes that are surged during upgrade.",
          "description": "This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade"
        }
      },
      "description": "Settings for upgrading an agentpool"
    },
    "AgentPool": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        },
        {
          "properties": {
            "properties": {
              "description": "Properties of an agent pool.",
              "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "Agent Pool."
    },
    "ManagedClusterWindowsProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
        },
        "adminPassword": {
          "type": "string",
          "description": "Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
        },
        "licenseType": {
          "type": "string",
          "enum": [
            "None",
            "Windows_Server"
          ],
          "x-ms-enum": {
            "name": "licenseType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No additional licensing is applied."
              },
              {
                "value": "Windows_Server",
                "description": "Enables Azure Hybrid User Benefits for Windows VMs."
              }
            ]
          },
          "description": "The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details."
        },
        "enableCSIProxy": {
          "type": "boolean",
          "title": "Whether to enable CSI proxy.",
          "description": "For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy)."
        }
      },
      "required": [
        "adminUsername"
      ],
      "description": "Profile for Windows VMs in the managed cluster."
    },
    "ContainerServiceLinuxProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for Linux VMs.",
          "pattern": "^[A-Za-z][-A-Za-z0-9_]*$"
        },
        "ssh": {
          "$ref": "#/definitions/ContainerServiceSshConfiguration",
          "description": "The SSH configuration for Linux-based VMs running on Azure."
        }
      },
      "required": [
        "adminUsername",
        "ssh"
      ],
      "description": "Profile for Linux VMs in the container service cluster."
    },
    "ContainerServiceNetworkProfile": {
      "properties": {
        "networkPlugin": {
          "type": "string",
          "enum": [
            "azure",
            "kubenet"
          ],
          "default": "kubenet",
          "x-ms-enum": {
            "name": "NetworkPlugin",
            "modelAsString": true,
            "values": [
              {
                "value": "azure",
                "description": "Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https://docs.microsoft.com/azure/aks/concepts-network#azure-cni-advanced-networking) for more information."
              },
              {
                "value": "kubenet",
                "description": "Use the Kubenet network plugin. See [Kubenet (basic) networking](https://docs.microsoft.com/azure/aks/concepts-network#kubenet-basic-networking) for more information."
              }
            ]
          },
          "description": "Network plugin used for building the Kubernetes network."
        },
        "networkPolicy": {
          "type": "string",
          "enum": [
            "calico",
            "azure"
          ],
          "x-ms-enum": {
            "name": "NetworkPolicy",
            "modelAsString": true,
            "values": [
              {
                "value": "calico",
                "description": "Use Calico network policies. See [differences between Azure and Calico policies](https://docs.microsoft.com/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information."
              },
              {
                "value": "azure",
                "description": "Use Azure network policies. See [differences between Azure and Calico policies](https://docs.microsoft.com/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information."
              }
            ]
          },
          "description": "Network policy used for building the Kubernetes network."
        },
        "networkMode": {
          "type": "string",
          "enum": [
            "transparent",
            "bridge"
          ],
          "x-ms-enum": {
            "name": "networkMode",
            "modelAsString": true,
            "values": [
              {
                "value": "transparent",
                "description": "No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https://docs.microsoft.com/azure/aks/faq#transparent-mode) for more information."
              },
              {
                "value": "bridge",
                "description": "This is no longer supported"
              }
            ]
          },
          "title": "The network mode Azure CNI is configured with.",
          "description": "This cannot be specified if networkPlugin is anything other than 'azure'."
        },
        "podCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "10.244.0.0/16",
          "description": "A CIDR notation IP range from which to assign pod IPs when kubenet is used."
        },
        "serviceCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "10.0.0.0/16",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
        },
        "dnsServiceIP": {
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "default": "10.0.0.10",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
        },
        "dockerBridgeCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "172.17.0.1/16",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
        },
        "outboundType": {
          "type": "string",
          "enum": [
            "loadBalancer",
            "userDefinedRouting"
          ],
          "x-ms-enum": {
            "name": "outboundType",
            "modelAsString": true,
            "values": [
              {
                "value": "loadBalancer",
                "description": "The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https://docs.microsoft.com/azure/aks/egress-outboundtype#outbound-type-of-loadbalancer)."
              },
              {
                "value": "userDefinedRouting",
                "description": "Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https://docs.microsoft.com/azure/aks/egress-outboundtype#outbound-type-of-userdefinedrouting)."
              }
            ]
          },
          "default": "loadBalancer",
          "title": "The outbound (egress) routing method.",
          "description": "This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype)."
        },
        "loadBalancerSku": {
          "type": "string",
          "enum": [
            "standard",
            "basic"
          ],
          "x-ms-enum": {
            "name": "loadBalancerSku",
            "modelAsString": true,
            "values": [
              {
                "value": "standard",
                "description": "Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https://docs.microsoft.com/azure/aks/load-balancer-standard) article."
              },
              {
                "value": "basic",
                "description": "Use a basic Load Balancer with limited functionality."
              }
            ]
          },
          "title": "The load balancer sku for the managed cluster.",
          "description": "The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs."
        },
        "loadBalancerProfile": {
          "$ref": "#/definitions/ManagedClusterLoadBalancerProfile",
          "description": "Profile of the cluster load balancer."
        }
      },
      "description": "Profile of network configuration."
    },
    "MaintenanceConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceConfiguration"
          },
          "description": "The list of maintenance configurations."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of maintenance configuration results.",
          "readOnly": true
        }
      },
      "description": "The response from the List maintenance configurations operation."
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC timestamp of resource creation."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The type of identity that last modified the resource."
        }
      }
    },
    "MaintenanceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "readOnly": true,
          "description": "The system metadata relating to this resource."
        },
        "properties": {
          "description": "Properties of a default maintenance configuration.",
          "$ref": "#/definitions/MaintenanceConfigurationProperties",
          "x-ms-client-flatten": true
        }
      },
      "title": "Planned maintenance configuration, used to configure when updates can be deployed to a Managed Cluster.",
      "description": "See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned maintenance."
    },
    "MaintenanceConfigurationProperties": {
      "properties": {
        "timeInWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeInWeek"
          },
          "title": "Time slots during the week when planned maintenance is allowed to proceed.",
          "description": "If two array entries specify the same day of the week, the applied configuration is the union of times in both entries."
        },
        "notAllowedTime": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSpan"
          },
          "description": "Time slots on which upgrade is not allowed."
        }
      },
      "description": "Properties used to configure planned maintenance for a Managed Cluster."
    },
    "TimeInWeek": {
      "properties": {
        "day": {
          "$ref": "#/definitions/WeekDay",
          "description": "The day of the week."
        },
        "hourSlots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourInDay"
          },
          "title": "A list of hours in the day used to identify a time range.",
          "description": "Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range."
        }
      },
      "description": "Time in a week."
    },
    "WeekDay": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "WeekDay",
        "modelAsString": true
      },
      "description": "The weekday enum."
    },
    "HourInDay": {
      "type": "integer",
      "format": "int32",
      "maximum": 23,
      "minimum": 0,
      "description": "Hour in a day."
    },
    "TimeSpan": {
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The start of a time span"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The end of a time span"
        }
      },
      "title": "A time range.",
      "description": "For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z."
    },
    "RunCommandRequest": {
      "properties": {
        "command": {
          "type": "string",
          "description": "The command to run."
        },
        "context": {
          "type": "string",
          "description": "A base64 encoded zip file containing the files required by the command."
        },
        "clusterToken": {
          "type": "string",
          "description": "AuthToken issued for AKS AAD Server App."
        }
      },
      "description": "A run command request",
      "required": [
        "command"
      ]
    },
    "RunCommandResult": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The command id.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of command result.",
          "$ref": "#/definitions/CommandResultProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "run command result."
    },
    "CommandResultProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "provisioning State"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The exit code of the command"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time when the command started."
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time when the command finished."
        },
        "logs": {
          "type": "string",
          "readOnly": true,
          "description": "The command output."
        },
        "reason": {
          "type": "string",
          "readOnly": true,
          "description": "An explanation of why provisioningState is set to failed (if so)."
        }
      },
      "description": "The results of a run command"
    },
    "ManagedClusterLoadBalancerProfile": {
      "properties": {
        "managedOutboundIPs": {
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "description": "The desired number of outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "default": 1
            }
          },
          "description": "Desired managed outbound IPs for the cluster load balancer."
        },
        "outboundIPPrefixes": {
          "properties": {
            "publicIPPrefixes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "description": "A list of public IP prefix resources."
            }
          },
          "description": "Desired outbound IP Prefix resources for the cluster load balancer."
        },
        "outboundIPs": {
          "properties": {
            "publicIPs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "description": "A list of public IP resources."
            }
          },
          "description": "Desired outbound IP resources for the cluster load balancer."
        },
        "effectiveOutboundIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "description": "The effective outbound IP resources of the cluster load balancer."
        },
        "allocatedOutboundPorts": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "minimum": 0,
          "description": "The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.",
          "default": 0
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "maximum": 120,
          "minimum": 4,
          "description": "Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.",
          "default": 30
        }
      },
      "description": "Profile of the managed cluster load balancer."
    },
    "ResourceReference": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified Azure resource id."
        }
      },
      "description": "A reference to an Azure resource."
    },
    "ContainerServiceSshConfiguration": {
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerServiceSshPublicKey"
          },
          "description": "The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified."
        }
      },
      "description": "SSH configuration for Linux-based VMs running on Azure.",
      "required": [
        "publicKeys"
      ]
    },
    "ContainerServiceSshPublicKey": {
      "properties": {
        "keyData": {
          "type": "string",
          "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
        }
      },
      "required": [
        "keyData"
      ],
      "description": "Contains information about SSH certificate public key data."
    },
    "ContainerServiceDiagnosticsProfile": {
      "properties": {
        "vmDiagnostics": {
          "$ref": "#/definitions/ContainerServiceVMDiagnostics",
          "description": "Profile for diagnostics on the container service VMs."
        }
      },
      "description": "Profile for diagnostics on the container service cluster.",
      "required": [
        "vmDiagnostics"
      ]
    },
    "ContainerServiceVMDiagnostics": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the VM diagnostic agent is provisioned on the VM."
        },
        "storageUri": {
          "readOnly": true,
          "type": "string",
          "description": "The URI of the storage account where diagnostics are stored."
        }
      },
      "description": "Profile for diagnostics on the container service VMs.",
      "required": [
        "enabled"
      ]
    },
    "ManagedClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedCluster"
          },
          "description": "The list of managed clusters."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of managed cluster results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Managed Clusters operation."
    },
    "ManagedCluster": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ManagedClusterSKU",
          "description": "The managed cluster SKU."
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the Virtual Machine."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "properties": {
              "description": "Properties of a managed cluster.",
              "$ref": "#/definitions/ManagedClusterProperties",
              "x-ms-client-flatten": true
            },
            "identity": {
              "$ref": "#/definitions/ManagedClusterIdentity",
              "description": "The identity of the managed cluster, if configured."
            }
          }
        }
      ],
      "description": "Managed cluster."
    },
    "ManagedClusterProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current provisioning state."
        },
        "powerState": {
          "$ref": "#/definitions/PowerState",
          "description": "The Power State of the cluster.",
          "readOnly": true
        },
        "maxAgentPools": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The max number of agent pools for the managed cluster."
        },
        "kubernetesVersion": {
          "type": "string",
          "title": "The version of Kubernetes the Managed Cluster is running.",
          "description": "When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details."
        },
        "dnsPrefix": {
          "type": "string",
          "title": "The DNS prefix of the Managed Cluster.",
          "description": "This cannot be updated once the Managed Cluster has been created."
        },
        "fqdnSubdomain": {
          "type": "string",
          "title": "The FQDN subdomain of the private cluster with custom private dns zone.",
          "description": "This cannot be updated once the Managed Cluster has been created."
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "The FQDN of the master pool."
        },
        "privateFQDN": {
          "readOnly": true,
          "type": "string",
          "description": "The FQDN of private cluster."
        },
        "azurePortalFQDN": {
          "readOnly": true,
          "type": "string",
          "title": "The special FQDN used by the Azure Portal to access the Managed Cluster. This FQDN is for use only by the Azure Portal and should not be used by other clients.",
          "description": "The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterAgentPoolProfile"
          },
          "description": "The agent pool properties."
        },
        "linuxProfile": {
          "$ref": "#/definitions/ContainerServiceLinuxProfile",
          "description": "The profile for Linux VMs in the Managed Cluster."
        },
        "windowsProfile": {
          "$ref": "#/definitions/ManagedClusterWindowsProfile",
          "description": "The profile for Windows VMs in the Managed Cluster."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ManagedClusterServicePrincipalProfile",
          "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs."
        },
        "addonProfiles": {
          "additionalProperties": {
            "$ref": "#/definitions/ManagedClusterAddonProfile"
          },
          "description": "The profile of managed cluster add-on."
        },
        "podIdentityProfile": {
          "$ref": "#/definitions/ManagedClusterPodIdentityProfile",
          "title": "The pod identity profile of the Managed Cluster.",
          "description": "See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration."
        },
        "nodeResourceGroup": {
          "type": "string",
          "description": "The name of the resource group containing agent pool nodes."
        },
        "enableRBAC": {
          "type": "boolean",
          "description": "Whether to enable Kubernetes Role-Based Access Control."
        },
        "enablePodSecurityPolicy": {
          "type": "boolean",
          "description": "(DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy."
        },
        "networkProfile": {
          "$ref": "#/definitions/ContainerServiceNetworkProfile",
          "description": "The network configuration profile."
        },
        "aadProfile": {
          "$ref": "#/definitions/ManagedClusterAADProfile",
          "description": "The Azure Active Directory configuration."
        },
        "autoUpgradeProfile": {
          "$ref": "#/definitions/ManagedClusterAutoUpgradeProfile",
          "description": "The auto upgrade configuration."
        },
        "autoScalerProfile": {
          "type": "object",
          "properties": {
            "balance-similar-node-groups": {
              "type": "string",
              "title": "Detects similar node pools and balances the number of nodes between them.",
              "description": "Valid values are 'true' and 'false'"
            },
            "expander": {
              "type": "string",
              "enum": [
                "least-waste",
                "most-pods",
                "priority",
                "random"
              ],
              "x-ms-enum": {
                "name": "expander",
                "modelAsString": true,
                "values": [
                  {
                    "value": "least-waste",
                    "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                  },
                  {
                    "value": "most-pods",
                    "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                  },
                  {
                    "value": "priority",
                    "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                  },
                  {
                    "value": "random",
                    "description": "Used when you don't have a particular need for the node groups to scale differently."
                  }
                ]
              },
              "title": "The expander to use when scaling up",
              "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
            },
            "max-empty-bulk-delete": {
              "type": "string",
              "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
              "description": "The default is 10."
            },
            "max-graceful-termination-sec": {
              "type": "string",
              "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
              "description": "The default is 600."
            },
            "max-node-provision-time": {
              "type": "string",
              "title": "The maximum time the autoscaler waits for a node to be provisioned.",
              "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "max-total-unready-percentage": {
              "type": "string",
              "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
              "description": "The default is 45. The maximum is 100 and the minimum is 0."
            },
            "new-pod-scale-up-delay": {
              "type": "string",
              "title": "Ignore unscheduled pods before they're a certain age.",
              "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
            },
            "ok-total-unready-count": {
              "type": "string",
              "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
              "description": "This must be an integer. The default is 3."
            },
            "scan-interval": {
              "type": "string",
              "title": "How often cluster is reevaluated for scale up or down.",
              "description": "The default is '10'. Values must be an integer number of seconds."
            },
            "scale-down-delay-after-add": {
              "type": "string",
              "title": "How long after scale up that scale down evaluation resumes",
              "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-delay-after-delete": {
              "type": "string",
              "title": "How long after node deletion that scale down evaluation resumes.",
              "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-delay-after-failure": {
              "type": "string",
              "title": "How long after scale down failure that scale down evaluation resumes.",
              "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-unneeded-time": {
              "type": "string",
              "title": "How long a node should be unneeded before it is eligible for scale down.",
              "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-unready-time": {
              "type": "string",
              "title": "How long an unready node should be unneeded before it is eligible for scale down",
              "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-utilization-threshold": {
              "type": "string",
              "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
              "description": "The default is '0.5'."
            },
            "skip-nodes-with-local-storage": {
              "type": "string",
              "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
              "description": "The default is true."
            },
            "skip-nodes-with-system-pods": {
              "type": "string",
              "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
              "description": "The default is true."
            }
          },
          "description": "Parameters to be applied to the cluster-autoscaler when enabled"
        },
        "apiServerAccessProfile": {
          "$ref": "#/definitions/ManagedClusterAPIServerAccessProfile",
          "description": "The access profile for managed cluster API server."
        },
        "diskEncryptionSetID": {
          "type": "string",
          "title": "The Resource ID of the disk encryption set to use for enabling encryption at rest.",
          "description": "This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'"
        },
        "identityProfile": {
          "additionalProperties": {
            "allOf": [
              {
                "$ref": "#/definitions/UserAssignedIdentity"
              }
            ]
          },
          "description": "Identities associated with the cluster."
        },
        "privateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "description": "Private link resources associated with the cluster."
        },
        "disableLocalAccounts": {
          "type": "boolean",
          "title": "If local accounts should be disabled on the Managed Cluster.",
          "description": "If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview)."
        },
        "httpProxyConfig": {
          "$ref": "#/definitions/ManagedClusterHTTPProxyConfig",
          "description": "Configurations for provisioning the cluster with HTTP proxy servers."
        }
      },
      "description": "Properties of the managed cluster."
    },
    "PowerState": {
      "description": "Describes the Power State of the cluster",
      "properties": {
        "code": {
          "type": "string",
          "description": "Tells whether the cluster is Running or Stopped",
          "enum": [
            "Running",
            "Stopped"
          ],
          "x-ms-enum": {
            "name": "code",
            "modelAsString": true,
            "values": [
              {
                "value": "Running",
                "description": "The cluster is running."
              },
              {
                "value": "Stopped",
                "description": "The cluster is stopped."
              }
            ]
          }
        }
      }
    },
    "ManagedClusterAPIServerAccessProfile": {
      "properties": {
        "authorizedIPRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The IP ranges authorized to access the Kubernetes API server.",
          "description": "IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges)."
        },
        "enablePrivateCluster": {
          "type": "boolean",
          "title": "Whether to create the cluster as a private cluster or not.",
          "description": "For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters)."
        },
        "privateDNSZone": {
          "type": "string",
          "title": "The private DNS zone mode for the cluster.",
          "description": "The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'."
        },
        "enablePrivateClusterPublicFQDN": {
          "type": "boolean",
          "description": "Whether to create additional public FQDN for private cluster or not."
        }
      },
      "description": "Access profile for managed cluster API server."
    },
    "ManagedClusterIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of the system assigned identity which is used by master components."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the system assigned identity which is used by master components."
        },
        "type": {
          "type": "string",
          "title": "The type of identity used for the managed cluster.",
          "description": "For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false,
            "values": [
              {
                "value": "SystemAssigned",
                "description": "Use an implicitly created system assigned managed identity to manage cluster resources. Master components in the control plane such as kube-controller-manager will use the system assigned managed identity to manipulate Azure resources."
              },
              {
                "value": "UserAssigned",
                "description": "Use a user-specified identity to manage cluster resources. Master components in the control plane such as kube-controller-manager will use the specified user assigned managed identity to manipulate Azure resources."
              },
              {
                "value": "None",
                "description": "Do not use a managed identity for the Managed Cluster, service principal will be used instead."
              }
            ]
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "title": "The user identity associated with the managed cluster. This identity will be used in control plane. Only one user assigned identity is allowed.",
          "description": "The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the managed cluster."
    },
    "UserAssignedIdentity": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the user assigned identity."
        },
        "clientId": {
          "type": "string",
          "description": "The client ID of the user assigned identity."
        },
        "objectId": {
          "type": "string",
          "description": "The object ID of the user assigned identity."
        }
      },
      "description": "Details about a user assigned identity."
    },
    "ManagedClusterAccessProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "properties": {
              "description": "AccessProfile of a managed cluster.",
              "$ref": "#/definitions/AccessProfile",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "Managed cluster Access Profile.",
      "x-ms-azure-resource": false
    },
    "AccessProfile": {
      "type": "object",
      "properties": {
        "kubeConfig": {
          "type": "string",
          "format": "byte",
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "Profile for enabling a user to access a managed cluster."
    },
    "ManagedClusterPoolUpgradeProfile": {
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version (major.minor.patch)."
        },
        "name": {
          "type": "string",
          "description": "The Agent Pool name."
        },
        "osType": {
          "$ref": "#/definitions/OSType"
        },
        "upgrades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kubernetesVersion": {
                "type": "string",
                "description": "The Kubernetes version (major.minor.patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether the Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of orchestrator types and versions available for upgrade."
        }
      },
      "required": [
        "kubernetesVersion",
        "osType"
      ],
      "description": "The list of available upgrade versions."
    },
    "ManagedClusterUpgradeProfileProperties": {
      "properties": {
        "controlPlaneProfile": {
          "$ref": "#/definitions/ManagedClusterPoolUpgradeProfile",
          "description": "The list of available upgrade versions for the control plane."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterPoolUpgradeProfile"
          },
          "description": "The list of available upgrade versions for agent pools."
        }
      },
      "required": [
        "controlPlaneProfile",
        "agentPoolProfiles"
      ],
      "description": "Control plane and agent pool upgrade profiles."
    },
    "ManagedClusterAutoUpgradeProfile": {
      "properties": {
        "upgradeChannel": {
          "type": "string",
          "enum": [
            "rapid",
            "stable",
            "patch",
            "node-image",
            "none"
          ],
          "x-ms-enum": {
            "name": "upgradeChannel",
            "modelAsString": true,
            "values": [
              {
                "value": "rapid",
                "description": "Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1."
              },
              {
                "value": "stable",
                "description": "Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6."
              },
              {
                "value": "patch",
                "description": "Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9."
              },
              {
                "value": "node-image",
                "description": "Automatically upgrade the node image to the latest version available. Microsoft provides patches and new images for image nodes frequently (usually weekly), but your running nodes won't get the new images unless you do a node image upgrade. Turning on the node-image channel will automatically update your node images whenever a new version is available."
              },
              {
                "value": "none",
                "description": "Disables auto-upgrades and keeps the cluster at its current version of Kubernetes."
              }
            ]
          },
          "title": "The upgrade channel for auto upgrade. The default is 'none'.",
          "description": "For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel)."
        }
      },
      "description": "Auto upgrade profile for a managed cluster."
    },
    "ManagedClusterAADProfile": {
      "properties": {
        "managed": {
          "type": "boolean",
          "description": "Whether to enable managed AAD."
        },
        "enableAzureRBAC": {
          "type": "boolean",
          "description": "Whether to enable Azure RBAC for Kubernetes authorization."
        },
        "adminGroupObjectIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of AAD group object IDs that will have admin role of the cluster."
        },
        "clientAppID": {
          "type": "string",
          "description": "The client AAD application ID."
        },
        "serverAppID": {
          "type": "string",
          "description": "The server AAD application ID."
        },
        "serverAppSecret": {
          "type": "string",
          "description": "The server AAD application secret."
        },
        "tenantID": {
          "type": "string",
          "description": "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription."
        }
      },
      "title": "AADProfile specifies attributes for Azure Active Directory integration.",
      "description": "For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad)."
    },
    "ManagedClusterAddonProfile": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the add-on is enabled or not."
        },
        "config": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value pairs for configuring an add-on."
        },
        "identity": {
          "readOnly": true,
          "description": "Information of user assigned identity used by this add-on.",
          "allOf": [
            {
              "$ref": "#/definitions/UserAssignedIdentity"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "description": "A Kubernetes add-on profile for a managed cluster."
    },
    "ManagedClusterPodIdentity": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the pod identity."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the pod identity."
        },
        "bindingSelector": {
          "type": "string",
          "description": "The binding selector to use for the AzureIdentityBinding resource."
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentity",
          "description": "The user assigned identity details."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The current provisioning state of the pod identity.",
          "enum": [
            "Assigned",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ManagedClusterPodIdentityProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningInfo": {
          "readOnly": true,
          "properties": {
            "error": {
              "$ref": "#/definitions/ManagedClusterPodIdentityProvisioningError",
              "description": "Pod identity assignment error (if any)."
            }
          }
        }
      },
      "required": [
        "name",
        "namespace",
        "identity"
      ],
      "description": "Details about the pod identity assigned to the Managed Cluster."
    },
    "ManagedClusterPodIdentityProvisioningError": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ManagedClusterPodIdentityProvisioningErrorBody",
          "description": "Details about the error."
        }
      },
      "description": "An error response from the pod identity provisioning."
    },
    "ManagedClusterPodIdentityProvisioningErrorBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterPodIdentityProvisioningErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the pod identity provisioning."
    },
    "ManagedClusterPodIdentityException": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the pod identity exception."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the pod identity exception."
        },
        "podLabels": {
          "type": "object",
          "description": "The pod labels to match.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "namespace",
        "podLabels"
      ],
      "title": "A pod identity exception, which allows pods with certain labels to access the Azure Instance Metadata Service (IMDS) endpoint without being intercepted by the node-managed identity (NMI) server.",
      "description": "See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details."
    },
    "ManagedClusterPodIdentityProfile": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the pod identity addon is enabled."
        },
        "allowNetworkPluginKubenet": {
          "type": "boolean",
          "title": "Whether pod identity is allowed to run on clusters with Kubenet networking.",
          "description": "Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information."
        },
        "userAssignedIdentities": {
          "description": "The pod identities to use in the cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterPodIdentity"
          }
        },
        "userAssignedIdentityExceptions": {
          "description": "The pod identity exceptions to allow.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterPodIdentityException"
          }
        }
      },
      "title": "The pod identity profile of the Managed Cluster.",
      "description": "See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration."
    },
    "ManagedClusterUpgradeProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the upgrade profile."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the upgrade profile."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the upgrade profile."
        },
        "properties": {
          "$ref": "#/definitions/ManagedClusterUpgradeProfileProperties",
          "description": "The properties of the upgrade profile.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available upgrades for compute pools."
    },
    "AgentPoolUpgradeProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the agent pool upgrade profile."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the agent pool upgrade profile."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the agent pool upgrade profile."
        },
        "properties": {
          "$ref": "#/definitions/AgentPoolUpgradeProfileProperties",
          "description": "The properties of the agent pool upgrade profile.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available upgrades for an agent pool."
    },
    "AgentPoolUpgradeProfileProperties": {
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version (major.minor.patch)."
        },
        "osType": {
          "$ref": "#/definitions/OSType"
        },
        "upgrades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kubernetesVersion": {
                "type": "string",
                "description": "The Kubernetes version (major.minor.patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether the Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of orchestrator types and versions available for upgrade."
        },
        "latestNodeImageVersion": {
          "type": "string",
          "description": "The latest AKS supported node image version."
        }
      },
      "required": [
        "kubernetesVersion",
        "osType"
      ],
      "description": "The list of available upgrade versions."
    },
    "AgentPoolAvailableVersions": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the agent pool version list."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the agent pool version list."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the agent pool version list."
        },
        "properties": {
          "$ref": "#/definitions/AgentPoolAvailableVersionsProperties",
          "description": "Properties of agent pool available versions.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available versions for an agent pool."
    },
    "AgentPoolAvailableVersionsProperties": {
      "properties": {
        "agentPoolVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "default": {
                "type": "boolean",
                "description": "Whether this version is the default agent pool version."
              },
              "kubernetesVersion": {
                "type": "string",
                "description": "The Kubernetes version (major.minor.patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of versions available for agent pool."
        }
      },
      "description": "The list of available agent pool versions."
    },
    "OSType": {
      "type": "string",
      "default": "Linux",
      "enum": [
        "Linux",
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OSType",
        "modelAsString": true,
        "values": [
          {
            "value": "Linux",
            "description": "Use Linux."
          },
          {
            "value": "Windows",
            "description": "Use Windows."
          }
        ]
      },
      "description": "The operating system type. The default is Linux."
    },
    "OSSKU": {
      "type": "string",
      "enum": [
        "Ubuntu",
        "CBLMariner"
      ],
      "x-ms-enum": {
        "name": "OSSKU",
        "modelAsString": true
      },
      "description": "Specifies an OS SKU. This value must not be specified if OSType is Windows."
    },
    "ScaleSetPriority": {
      "type": "string",
      "default": "Regular",
      "enum": [
        "Spot",
        "Regular"
      ],
      "x-ms-enum": {
        "name": "ScaleSetPriority",
        "modelAsString": true,
        "values": [
          {
            "value": "Spot",
            "description": "Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https://docs.microsoft.com/azure/aks/spot-node-pool) for more information."
          },
          {
            "value": "Regular",
            "description": "Regular VMs will be used."
          }
        ]
      },
      "description": "The Virtual Machine Scale Set priority."
    },
    "ScaleSetEvictionPolicy": {
      "type": "string",
      "default": "Delete",
      "enum": [
        "Delete",
        "Deallocate"
      ],
      "x-ms-enum": {
        "name": "ScaleSetEvictionPolicy",
        "modelAsString": true,
        "values": [
          {
            "value": "Delete",
            "description": "Nodes in the underlying Scale Set of the node pool are deleted when they're evicted."
          },
          {
            "value": "Deallocate",
            "description": "Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading."
          }
        ]
      },
      "title": "The Virtual Machine Scale Set eviction policy.",
      "description": "The eviction policy specifies what to do with the VM when it is evicted. The default is Delete. For more information about eviction see [spot VMs](https://docs.microsoft.com/azure/virtual-machines/spot-vms)"
    },
    "SpotMaxPrice": {
      "type": "number",
      "default": -1,
      "title": "The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.",
      "description": "Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)"
    },
    "ProximityPlacementGroupID": {
      "type": "string",
      "description": "The ID for Proximity Placement Group."
    },
    "CredentialResults": {
      "properties": {
        "kubeconfigs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CredentialResult"
          },
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "The list credential result response."
    },
    "CredentialResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the credential."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "readOnly": true,
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "The credential result response."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Details about the error."
        }
      },
      "description": "An error response from the Container service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the Container service."
    },
    "ManagedClusterSKU": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of a managed cluster SKU.",
          "enum": [
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ManagedClusterSKUName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "title": "The tier of a managed cluster SKU.",
          "description": "If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.",
          "enum": [
            "Paid",
            "Free"
          ],
          "x-ms-enum": {
            "name": "ManagedClusterSKUTier",
            "modelAsString": true,
            "values": [
              {
                "value": "Paid",
                "description": "Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones."
              },
              {
                "value": "Free",
                "description": "No guaranteed SLA, no additional charges. Free tier clusters have an SLO of 99.5%."
              }
            ]
          }
        }
      },
      "description": "The SKU of a Managed Cluster."
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "A list of private endpoint connections",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the private endpoint connection."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the private endpoint connection.",
          "externalDocs": {
            "url": "https://aka.ms/search-naming-rules"
          }
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The current provisioning state.",
          "enum": [
            "Succeeded",
            "Creating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PrivateEndpointConnectionProvisioningState",
            "modelAsString": true
          }
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private endpoint."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Private endpoint which a connection belongs to.",
      "properties": {
        "id": {
          "description": "The resource ID of the private endpoint",
          "type": "string"
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The state of a private link service connection.",
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "description": "The private link service connection status.",
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the private link resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the private link resource.",
          "externalDocs": {
            "url": "https://aka.ms/search-naming-rules"
          }
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        },
        "groupId": {
          "type": "string",
          "description": "The group ID of the resource."
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The RequiredMembers of the resource"
        },
        "privateLinkServiceID": {
          "readOnly": true,
          "type": "string",
          "description": "The private link service ID of the resource, this field is exposed only to NRP internally."
        }
      }
    },
    "OSDiskType": {
      "type": "string",
      "enum": [
        "Managed",
        "Ephemeral"
      ],
      "x-ms-enum": {
        "name": "OSDiskType",
        "modelAsString": true,
        "values": [
          {
            "value": "Managed",
            "description": "Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read/write latency."
          },
          {
            "value": "Ephemeral",
            "description": "Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read/write latency, along with faster node scaling and cluster upgrades."
          }
        ]
      },
      "title": "The OS disk type to be used for machines in the agent pool.",
      "description": "The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os)."
    },
    "KubeletDiskType": {
      "type": "string",
      "enum": [
        "OS",
        "Temporary"
      ],
      "x-ms-enum": {
        "name": "KubeletDiskType",
        "modelAsString": true,
        "values": [
          {
            "value": "OS",
            "description": "Kubelet will use the OS disk for its data."
          },
          {
            "value": "Temporary",
            "description": "Kubelet will use the temporary disk for its data."
          }
        ]
      },
      "description": "Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage."
    },
    "KubeletConfig": {
      "title": "Kubelet configurations of agent nodes.",
      "description": "See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
      "type": "object",
      "properties": {
        "cpuManagerPolicy": {
          "type": "string",
          "title": "The CPU Manager policy to use.",
          "description": "The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'."
        },
        "cpuCfsQuota": {
          "type": "boolean",
          "title": "If CPU CFS quota enforcement is enabled for containers that specify CPU limits.",
          "description": "The default is true."
        },
        "cpuCfsQuotaPeriod": {
          "type": "string",
          "title": "The CPU CFS quota period value.",
          "description": "The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'."
        },
        "imageGcHighThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "The percent of disk usage after which image garbage collection is always run.",
          "description": "To disable image garbage collection, set to 100. The default is 85%"
        },
        "imageGcLowThreshold": {
          "type": "integer",
          "format": "int32",
          "title": "The percent of disk usage before which image garbage collection is never run.",
          "description": "This cannot be set higher than imageGcHighThreshold. The default is 80%"
        },
        "topologyManagerPolicy": {
          "type": "string",
          "title": "The Topology Manager policy to use.",
          "description": "For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'."
        },
        "allowedUnsafeSysctls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`)."
        },
        "failSwapOn": {
          "type": "boolean",
          "description": "If set to true it will make the Kubelet fail to start if swap is enabled on the node."
        },
        "containerLogMaxSizeMB": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum size (e.g. 10Mi) of container log file before it is rotated."
        },
        "containerLogMaxFiles": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of container log files that can be present for a container. The number must be ≥ 2.",
          "minimum": 2
        },
        "podMaxPids": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of processes per pod."
        }
      }
    },
    "LinuxOSConfig": {
      "title": "OS configurations of Linux agent nodes.",
      "description": "See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
      "type": "object",
      "properties": {
        "sysctls": {
          "$ref": "#/definitions/SysctlConfig",
          "description": "Sysctl settings for Linux agent nodes."
        },
        "transparentHugePageEnabled": {
          "type": "string",
          "title": "Whether transparent hugepages are enabled.",
          "description": "Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge)."
        },
        "transparentHugePageDefrag": {
          "type": "string",
          "title": "Whether the kernel should make aggressive use of memory compaction to make more hugepages available.",
          "description": "Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge)."
        },
        "swapFileSizeMB": {
          "type": "integer",
          "format": "int32",
          "description": "The size in MB of a swap file that will be created on each node."
        }
      }
    },
    "SysctlConfig": {
      "description": "Sysctl settings for Linux agent nodes.",
      "type": "object",
      "properties": {
        "netCoreSomaxconn": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.somaxconn."
        },
        "netCoreNetdevMaxBacklog": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.netdev_max_backlog."
        },
        "netCoreRmemDefault": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.rmem_default."
        },
        "netCoreRmemMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.rmem_max."
        },
        "netCoreWmemDefault": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.wmem_default."
        },
        "netCoreWmemMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.wmem_max."
        },
        "netCoreOptmemMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.core.optmem_max."
        },
        "netIpv4TcpMaxSynBacklog": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_max_syn_backlog."
        },
        "netIpv4TcpMaxTwBuckets": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_max_tw_buckets."
        },
        "netIpv4TcpFinTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_fin_timeout."
        },
        "netIpv4TcpKeepaliveTime": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_keepalive_time."
        },
        "netIpv4TcpKeepaliveProbes": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_keepalive_probes."
        },
        "netIpv4TcpkeepaliveIntvl": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.tcp_keepalive_intvl."
        },
        "netIpv4TcpTwReuse": {
          "type": "boolean",
          "description": "Sysctl setting net.ipv4.tcp_tw_reuse."
        },
        "netIpv4IpLocalPortRange": {
          "type": "string",
          "description": "Sysctl setting net.ipv4.ip_local_port_range."
        },
        "netIpv4NeighDefaultGcThresh1": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh1."
        },
        "netIpv4NeighDefaultGcThresh2": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh2."
        },
        "netIpv4NeighDefaultGcThresh3": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh3."
        },
        "netNetfilterNfConntrackMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.netfilter.nf_conntrack_max."
        },
        "netNetfilterNfConntrackBuckets": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting net.netfilter.nf_conntrack_buckets."
        },
        "fsInotifyMaxUserWatches": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting fs.inotify.max_user_watches."
        },
        "fsFileMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting fs.file-max."
        },
        "fsAioMaxNr": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting fs.aio-max-nr."
        },
        "fsNrOpen": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting fs.nr_open."
        },
        "kernelThreadsMax": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting kernel.threads-max."
        },
        "vmMaxMapCount": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting vm.max_map_count."
        },
        "vmSwappiness": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting vm.swappiness."
        },
        "vmVfsCachePressure": {
          "type": "integer",
          "format": "int32",
          "description": "Sysctl setting vm.vfs_cache_pressure."
        }
      }
    },
    "ManagedClusterHTTPProxyConfig": {
      "description": "Cluster HTTP proxy configuration.",
      "type": "object",
      "properties": {
        "httpProxy": {
          "type": "string",
          "description": "The HTTP proxy server endpoint to use."
        },
        "httpsProxy": {
          "type": "string",
          "description": "The HTTPS proxy server endpoint to use."
        },
        "noProxy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The endpoints that should not go through proxy."
        },
        "trustedCa": {
          "type": "string",
          "description": "Alternative CA cert to use for connecting to proxy servers."
        }
      }
    },
    "GPUInstanceProfile": {
      "type": "string",
      "enum": [
        "MIG1g",
        "MIG2g",
        "MIG3g",
        "MIG4g",
        "MIG7g"
      ],
      "x-ms-enum": {
        "name": "GPUInstanceProfile ",
        "modelAsString": true
      },
      "description": "GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU."
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The type of extendedLocation.",
      "enum": [
        "EdgeZone"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true
      }
    },
    "ExtendedLocation": {
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type of the extended location."
        }
      }
    },
    "OSOptionProperty": {
      "properties": {
        "os-type": {
          "type": "string",
          "description": "The OS type."
        },
        "enable-fips-image": {
          "type": "boolean",
          "description": "Whether the image is FIPS-enabled."
        }
      },
      "required": [
        "os-type",
        "enable-fips-image"
      ],
      "description": "OS option property."
    },
    "OSOptionPropertyList": {
      "properties": {
        "osOptionPropertyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OSOptionProperty"
          },
          "description": "The list of OS options."
        }
      },
      "required": [
        "osOptionPropertyList"
      ],
      "description": "The list of OS option properties."
    },
    "OSOptionProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the OS option resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the OS option resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the OS option resource."
        },
        "properties": {
          "$ref": "#/definitions/OSOptionPropertyList",
          "description": "The list of OS options.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The OS option profile."
    },
    "EndpointDependency": {
      "description": "A domain name that AKS agent nodes are reaching at.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The Ports and Protocols used when connecting to domainName.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          }
        }
      }
    },
    "EndpointDetail": {
      "description": "connect information from the AKS agent nodes to a single endpoint.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "An IP Address that Domain Name currently resolves to.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "type": "integer"
        },
        "protocol": {
          "description": "The protocol used for connection",
          "type": "string"
        },
        "description": {
          "description": "Description of the detail",
          "type": "string"
        }
      }
    },
    "OutboundEnvironmentEndpoint": {
      "description": "Egress endpoints which AKS agent nodes connect to for common purpose.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of endpoints accessed by the AKS agent node, e.g. azure-resource-management, apiserver, etc.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints that AKS agent nodes connect to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          }
        }
      }
    },
    "OutboundEnvironmentEndpointCollection": {
      "description": "Collection of OutboundEnvironmentEndpoint",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "description": "The name of the managed cluster resource.",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of a supported Azure region.",
      "x-ms-parameter-location": "method"
    },
    "ResourceTypeParameter": {
      "name": "resource-type",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The resource type for which the OS options needs to be returned",
      "x-ms-parameter-location": "method"
    },
    "ServerFqdnParameter": {
      "name": "server-fqdn",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "server fqdn type for credentials to be returned",
      "x-ms-parameter-location": "method"
    }
  }
}
