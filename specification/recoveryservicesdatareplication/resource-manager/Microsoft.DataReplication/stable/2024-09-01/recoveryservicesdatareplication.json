{
  "swagger": "2.0",
  "info": {
    "title": "Azure Site Recovery Management Service API",
    "version": "2024-09-01",
    "description": "A first party Azure service enabling the data replication.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "EmailConfiguration"
    },
    {
      "name": "Vault"
    },
    {
      "name": "Event"
    },
    {
      "name": "Fabric"
    },
    {
      "name": "FabricAgent"
    },
    {
      "name": "Job"
    },
    {
      "name": "Policy"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "PrivateEndpointConnectionProxies"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "ProtectedItem"
    },
    {
      "name": "RecoveryPoint"
    },
    {
      "name": "ReplicationExtension"
    },
    {
      "name": "OperationResults"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataReplication/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of REST API operations supported by Microsoft.DataReplication.": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailability_Post",
        "summary": "Performs the resource name availability check.",
        "description": "Checks the resource name availability.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Resource details.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponseModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Performs the resource name availability check.": {
            "$ref": "./examples/CheckNameAvailability_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/replicationFabrics": {
      "get": {
        "operationId": "Fabric_ListBySubscription",
        "tags": [
          "Fabric"
        ],
        "description": "Gets the list of fabrics in the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the fabrics by subscription.": {
            "$ref": "./examples/Fabric_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/replicationVaults": {
      "get": {
        "operationId": "Vault_ListBySubscription",
        "tags": [
          "Vault"
        ],
        "description": "Gets the list of vaults in the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VaultModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the vaults by subscription.": {
            "$ref": "./examples/Vault_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/deployments/{deploymentId}/preflight": {
      "post": {
        "operationId": "DeploymentPreflight_Post",
        "summary": "Performs resource deployment validation.",
        "description": "Performs resource deployment preflight validation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "Deployment Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Deployment preflight model.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeploymentPreflightModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentPreflightModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Performs resource deployment validation.": {
            "$ref": "./examples/DeploymentPreflight_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/operationResults/{operationId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{operationId}": {
      "get": {
        "operationId": "OperationResults_Get",
        "tags": [
          "OperationResults"
        ],
        "summary": "Gets the operation result status.",
        "description": "Gets the operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the Operation Results": {
            "$ref": "./examples/OperationResults_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics": {
      "get": {
        "operationId": "Fabric_List",
        "tags": [
          "Fabric"
        ],
        "description": "Gets the list of fabrics in the given subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token from the previous call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the fabrics.": {
            "$ref": "./examples/Fabric_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}": {
      "get": {
        "operationId": "Fabric_Get",
        "tags": [
          "Fabric"
        ],
        "description": "Gets the details of the fabric.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the fabric.": {
            "$ref": "./examples/Fabric_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Fabric_Create",
        "tags": [
          "Fabric"
        ],
        "description": "Creates the fabric.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fabric properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FabricModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FabricModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FabricModel"
            }
          },
          "201": {
            "description": "Resource 'FabricModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FabricModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the fabric.": {
            "$ref": "./examples/Fabric_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Fabric_Update",
        "tags": [
          "Fabric"
        ],
        "description": "Performs update on the fabric.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fabric properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FabricModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricModel"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates the fabric.": {
            "$ref": "./examples/Fabric_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Fabric_Delete",
        "tags": [
          "Fabric"
        ],
        "description": "Removes the fabric.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the fabric.": {
            "$ref": "./examples/Fabric_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/fabricAgents": {
      "get": {
        "operationId": "FabricAgent_List",
        "tags": [
          "FabricAgent"
        ],
        "description": "Gets the list of fabric agents in the given fabric.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricAgentModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the fabric agents": {
            "$ref": "./examples/FabricAgent_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/fabricAgents/{fabricAgentName}": {
      "get": {
        "operationId": "FabricAgent_Get",
        "tags": [
          "FabricAgent"
        ],
        "description": "Gets the details of the fabric agent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "fabricAgentName",
            "in": "path",
            "description": "The fabric agent name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FabricAgentModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the fabric agent.": {
            "$ref": "./examples/FabricAgent_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FabricAgent_Create",
        "tags": [
          "FabricAgent"
        ],
        "description": "Creates the fabric agent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "fabricAgentName",
            "in": "path",
            "description": "The fabric agent name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Fabric agent model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FabricAgentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FabricAgentModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FabricAgentModel"
            }
          },
          "201": {
            "description": "Resource 'FabricAgentModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FabricAgentModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the fabric agent": {
            "$ref": "./examples/FabricAgent_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FabricAgent_Delete",
        "tags": [
          "FabricAgent"
        ],
        "description": "Deletes fabric agent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "fabricAgentName",
            "in": "path",
            "description": "The fabric agent name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the Fabric Agent": {
            "$ref": "./examples/FabricAgent_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults": {
      "get": {
        "operationId": "Vault_List",
        "tags": [
          "Vault"
        ],
        "description": "Gets the list of vaults in the given subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token from the previous call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VaultModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the vaults.": {
            "$ref": "./examples/Vault_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}": {
      "get": {
        "operationId": "Vault_Get",
        "tags": [
          "Vault"
        ],
        "description": "Gets the details of the vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VaultModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the vault.": {
            "$ref": "./examples/Vault_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Vault_Create",
        "tags": [
          "Vault"
        ],
        "description": "Creates the vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Vault properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VaultModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VaultModel"
            }
          },
          "201": {
            "description": "Resource 'VaultModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VaultModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the vault.": {
            "$ref": "./examples/Vault_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Vault_Update",
        "tags": [
          "Vault"
        ],
        "description": "Performs update on the vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Vault properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VaultModel"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates the vault.": {
            "$ref": "./examples/Vault_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Vault_Delete",
        "tags": [
          "Vault"
        ],
        "description": "Removes the vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the vault.": {
            "$ref": "./examples/Vault_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/alertSettings": {
      "get": {
        "operationId": "EmailConfiguration_List",
        "tags": [
          "EmailConfiguration"
        ],
        "description": "Gets the list of alert configuration settings for the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EmailConfigurationModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the email configuration settings": {
            "$ref": "./examples/EmailConfiguration_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/alertSettings/{emailConfigurationName}": {
      "get": {
        "operationId": "EmailConfiguration_Get",
        "tags": [
          "EmailConfiguration"
        ],
        "description": "Gets the details of the alert configuration setting.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "emailConfigurationName",
            "in": "path",
            "description": "The email configuration name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EmailConfigurationModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the email configuration setting.": {
            "$ref": "./examples/EmailConfiguration_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EmailConfiguration_Create",
        "tags": [
          "EmailConfiguration"
        ],
        "description": "Creates an alert configuration setting for the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "emailConfigurationName",
            "in": "path",
            "description": "The email configuration name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "EmailConfiguration model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailConfigurationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EmailConfigurationModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EmailConfigurationModel"
            }
          },
          "201": {
            "description": "Resource 'EmailConfigurationModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EmailConfigurationModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates email configuration settings.": {
            "$ref": "./examples/EmailConfiguration_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/events": {
      "get": {
        "operationId": "Event_List",
        "tags": [
          "Event"
        ],
        "description": "Gets the list of events in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "odataOptions",
            "in": "query",
            "description": "OData options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the events.": {
            "$ref": "./examples/Event_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/events/{eventName}": {
      "get": {
        "operationId": "Event_Get",
        "tags": [
          "Event"
        ],
        "description": "Gets the details of the event.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "eventName",
            "in": "path",
            "description": "The event name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the event.": {
            "$ref": "./examples/Event_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/jobs": {
      "get": {
        "operationId": "Job_List",
        "tags": [
          "Job"
        ],
        "description": "Gets the list of jobs in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "odataOptions",
            "in": "query",
            "description": "OData options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the jobs.": {
            "$ref": "./examples/Job_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/jobs/{jobName}": {
      "get": {
        "operationId": "Job_Get",
        "tags": [
          "Job"
        ],
        "description": "Gets the details of the job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the job.": {
            "$ref": "./examples/Job_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateEndpointConnectionProxies": {
      "get": {
        "operationId": "PrivateEndpointConnectionProxies_List",
        "tags": [
          "PrivateEndpointConnectionProxies"
        ],
        "description": "Gets the all private endpoint connections proxies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Private Endpoint Connection Proxy": {
            "$ref": "./examples/PrivateEndpointConnectionProxy_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateEndpointConnectionProxies/{privateEndpointConnectionProxyName}": {
      "get": {
        "operationId": "PrivateEndpointConnectionProxies_Get",
        "tags": [
          "PrivateEndpointConnectionProxies"
        ],
        "description": "Gets the private endpoint connection proxy details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionProxyName",
            "in": "path",
            "description": "The private endpoint connection proxy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Private Endpoint Connection Proxy": {
            "$ref": "./examples/PrivateEndpointConnectionProxy_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnectionProxies_Create",
        "tags": [
          "PrivateEndpointConnectionProxies"
        ],
        "description": "Create a new private endpoint connection proxy which includes both auto and manual approval types. Creating the proxy resource will also create a private endpoint connection resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionProxyName",
            "in": "path",
            "description": "The private endpoint connection proxy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Private endpoint connection creation input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionProxy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionProxy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates the Private Endpoint Connection Proxy.": {
            "$ref": "./examples/PrivateEndpointConnectionProxy_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnectionProxies_Delete",
        "tags": [
          "PrivateEndpointConnectionProxies"
        ],
        "description": "Returns the operation to track the deletion of private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionProxyName",
            "in": "path",
            "description": "The private endpoint connection proxy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the Private Endpoint Proxy Connection": {
            "$ref": "./examples/PrivateEndpointConnectionProxy_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateEndpointConnectionProxies/{privateEndpointConnectionProxyName}/validate": {
      "post": {
        "operationId": "PrivateEndpointConnectionProxies_Validate",
        "tags": [
          "PrivateEndpointConnectionProxies"
        ],
        "description": "Returns remote private endpoint connection information after validation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionProxyName",
            "in": "path",
            "description": "The private endpoint connection proxy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The private endpoint connection proxy input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validates the Private Endpoint Connection Proxy": {
            "$ref": "./examples/PrivateEndpointConnectionProxy_Validate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the all private endpoint connections configured on the vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Private Endpoint Connections.": {
            "$ref": "./examples/PrivateEndpointConnection_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the private endpoint connection details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The private endpoint connection name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the Private Endpoint Connection": {
            "$ref": "./examples/PrivateEndpointConnection_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Update",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Updated the private endpoint connection status (Approval/Rejected). This gets invoked by resource admin.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The private endpoint connection name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Private endpoint connection update input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates the Private Endpoint Connection.": {
            "$ref": "./examples/PrivateEndpointConnection_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The private endpoint connection name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the Private Endpoint Connection": {
            "$ref": "./examples/PrivateEndpointConnection_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_List",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the list of private link resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResource_List - generated by [MaximumSet] rule": {
            "$ref": "./examples/PrivateLinkResource_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the details of site recovery private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "description": "The private link name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Private Link Resource": {
            "$ref": "./examples/PrivateLinkResource_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems": {
      "get": {
        "operationId": "ProtectedItem_List",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Gets the list of protected items in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "odataOptions",
            "in": "query",
            "description": "OData options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProtectedItemModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the protected items.": {
            "$ref": "./examples/ProtectedItem_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}": {
      "get": {
        "operationId": "ProtectedItem_Get",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Gets the details of the protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProtectedItemModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the protected item.": {
            "$ref": "./examples/ProtectedItem_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ProtectedItem_Create",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Creates the protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Protected item model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectedItemModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProtectedItemModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProtectedItemModel"
            }
          },
          "201": {
            "description": "Resource 'ProtectedItemModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProtectedItemModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the protected item.": {
            "$ref": "./examples/ProtectedItem_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ProtectedItem_Update",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Performs update on the protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Protected item model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectedItemModelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProtectedItemModel"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Protected Item": {
            "$ref": "./examples/ProtectedItem_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ProtectedItem_Delete",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Removes the protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "A flag indicating whether to do force delete or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the protected item.": {
            "$ref": "./examples/ProtectedItem_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/plannedFailover": {
      "post": {
        "operationId": "ProtectedItem_PlannedFailover",
        "tags": [
          "ProtectedItem"
        ],
        "description": "Performs the planned failover on the protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Planned failover model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedFailoverModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlannedFailoverModel"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Performs planned failover.": {
            "$ref": "./examples/ProtectedItem_PlannedFailover.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints": {
      "get": {
        "operationId": "RecoveryPoint_List",
        "tags": [
          "RecoveryPoint"
        ],
        "description": "Gets the list of recovery points of the given protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecoveryPointModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the recovery points.": {
            "$ref": "./examples/RecoveryPoints_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointName}": {
      "get": {
        "operationId": "RecoveryPoint_Get",
        "tags": [
          "RecoveryPoint"
        ],
        "description": "Gets the details of the recovery point of a protected item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "The protected item name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "recoveryPointName",
            "in": "path",
            "description": "The recovery point name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecoveryPointModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the recovery point.": {
            "$ref": "./examples/RecoveryPoints_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationExtensions": {
      "get": {
        "operationId": "ReplicationExtension_List",
        "tags": [
          "ReplicationExtension"
        ],
        "description": "Gets the list of replication extensions in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicationExtensionModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the replication extensions.": {
            "$ref": "./examples/ReplicationExtension_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationExtensions/{replicationExtensionName}": {
      "get": {
        "operationId": "ReplicationExtension_Get",
        "tags": [
          "ReplicationExtension"
        ],
        "description": "Gets the details of the replication extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationExtensionName",
            "in": "path",
            "description": "The replication extension name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicationExtensionModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the replication extension.": {
            "$ref": "./examples/ReplicationExtension_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ReplicationExtension_Create",
        "tags": [
          "ReplicationExtension"
        ],
        "description": "Creates the replication extension in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationExtensionName",
            "in": "path",
            "description": "The replication extension name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Replication extension model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationExtensionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ReplicationExtensionModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ReplicationExtensionModel"
            }
          },
          "201": {
            "description": "Resource 'ReplicationExtensionModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ReplicationExtensionModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the replication extension.": {
            "$ref": "./examples/ReplicationExtension_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ReplicationExtension_Delete",
        "tags": [
          "ReplicationExtension"
        ],
        "description": "Deletes the replication extension in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationExtensionName",
            "in": "path",
            "description": "The replication extension name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the replication extension.": {
            "$ref": "./examples/ReplicationExtension_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationPolicies": {
      "get": {
        "operationId": "Policy_List",
        "tags": [
          "Policy"
        ],
        "description": "Gets the list of policies in the given vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyModelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the policies.": {
            "$ref": "./examples/Policy_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationPolicies/{policyName}": {
      "get": {
        "operationId": "Policy_Get",
        "tags": [
          "Policy"
        ],
        "description": "Gets the details of the policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The policy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the policy.": {
            "$ref": "./examples/Policy_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Policy_Create",
        "tags": [
          "Policy"
        ],
        "description": "Creates the policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The policy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Policy model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PolicyModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PolicyModel"
            }
          },
          "201": {
            "description": "Resource 'PolicyModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PolicyModel"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Puts the policy.": {
            "$ref": "./examples/Policy_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Policy_Delete",
        "tags": [
          "Policy"
        ],
        "description": "Removes the policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The vault name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The policy name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the policy.": {
            "$ref": "./examples/Policy_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzStackHCIClusterProperties": {
      "type": "object",
      "description": "AzStackHCI cluster properties.",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "Gets or sets the AzStackHCICluster FQDN name.",
          "minLength": 1
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the AzStackHCICluster resource name.",
          "minLength": 1
        },
        "storageAccountName": {
          "type": "string",
          "description": "Gets or sets the Storage account name.",
          "minLength": 1
        },
        "storageContainers": {
          "type": "array",
          "description": "Gets or sets the list of AzStackHCICluster Storage Container.",
          "items": {
            "$ref": "#/definitions/StorageContainerProperties"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clusterName",
        "resourceName",
        "storageAccountName",
        "storageContainers"
      ]
    },
    "AzStackHCIFabricModelCustomProperties": {
      "type": "object",
      "description": "AzStackHCI fabric model custom properties.",
      "properties": {
        "azStackHciSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the AzStackHCI site.",
          "minLength": 1
        },
        "applianceName": {
          "type": "array",
          "description": "Gets or sets the Appliance name.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "cluster": {
          "$ref": "#/definitions/AzStackHCIClusterProperties",
          "description": "AzStackHCI cluster properties."
        },
        "fabricResourceId": {
          "type": "string",
          "description": "Gets or sets the fabric resource Id.",
          "readOnly": true
        },
        "fabricContainerId": {
          "type": "string",
          "description": "Gets or sets the fabric container Id.",
          "readOnly": true
        },
        "migrationSolutionId": {
          "type": "string",
          "description": "Gets or sets the Migration solution ARM Id.",
          "minLength": 1
        },
        "migrationHubUri": {
          "type": "string",
          "description": "Gets or sets the migration hub Uri.",
          "readOnly": true
        }
      },
      "required": [
        "azStackHciSiteId",
        "cluster",
        "migrationSolutionId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FabricModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "AzStackHCI"
    },
    "CheckNameAvailabilityModel": {
      "type": "object",
      "description": "Check name availability model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the resource name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the resource type."
        }
      }
    },
    "CheckNameAvailabilityResponseModel": {
      "type": "object",
      "description": "Check name availability response model.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether resource name is available or not."
        },
        "reason": {
          "type": "string",
          "description": "Gets or sets the reason for resource name unavailability."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the message for resource name unavailability."
        }
      }
    },
    "ConnectionDetails": {
      "type": "object",
      "description": "Private endpoint connection details at member level.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets id."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "Gets or sets private IP address."
        },
        "linkIdentifier": {
          "type": "string",
          "description": "Gets or sets link identifier."
        },
        "groupId": {
          "type": "string",
          "description": "Gets or sets group id."
        },
        "memberName": {
          "type": "string",
          "description": "Gets or sets member name."
        }
      }
    },
    "DeploymentPreflightModel": {
      "type": "object",
      "description": "Deployment preflight model.",
      "properties": {
        "resources": {
          "type": "array",
          "description": "Gets or sets the list of resources.",
          "items": {
            "$ref": "#/definitions/DeploymentPreflightResource"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DeploymentPreflightResource": {
      "type": "object",
      "description": "Deployment preflight resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the resource name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the resource type."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "apiVersion": {
          "type": "string",
          "description": "Gets or sets the Api version."
        },
        "properties": {
          "description": "Gets or sets the properties of the resource."
        }
      }
    },
    "DiskControllerInputs": {
      "type": "object",
      "description": "Disk controller.",
      "properties": {
        "controllerName": {
          "type": "string",
          "description": "Gets or sets the controller name (IDE,SCSI).",
          "minLength": 1
        },
        "controllerId": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the controller ID."
        },
        "controllerLocation": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the controller Location."
        }
      },
      "required": [
        "controllerName",
        "controllerId",
        "controllerLocation"
      ]
    },
    "EmailConfigurationModel": {
      "type": "object",
      "description": "Email configuration model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailConfigurationModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EmailConfigurationModelListResult": {
      "type": "object",
      "description": "The response of a EmailConfigurationModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EmailConfigurationModel items on this page",
          "items": {
            "$ref": "#/definitions/EmailConfigurationModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EmailConfigurationModelProperties": {
      "type": "object",
      "description": "Email configuration model properties.",
      "properties": {
        "sendToOwners": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to send email to subscription administrator."
        },
        "customEmailAddresses": {
          "type": "array",
          "description": "Gets or sets the custom email address for sending emails.",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "type": "string",
          "description": "Gets or sets the locale for the email notification."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the email configuration.",
          "readOnly": true
        }
      },
      "required": [
        "sendToOwners"
      ]
    },
    "ErrorModel": {
      "type": "object",
      "description": "Error model.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the error type.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets or sets the error severity.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time of error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message.",
          "readOnly": true
        },
        "causes": {
          "type": "string",
          "description": "Gets or sets the possible causes of error.",
          "readOnly": true
        },
        "recommendation": {
          "type": "string",
          "description": "Gets or sets the recommended action to resolve error.",
          "readOnly": true
        }
      }
    },
    "EventModel": {
      "type": "object",
      "description": "Event model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventModelCustomProperties": {
      "type": "object",
      "description": "Event model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for EventModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "EventModelListResult": {
      "type": "object",
      "description": "The response of a EventModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventModel items on this page",
          "items": {
            "$ref": "#/definitions/EventModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventModelProperties": {
      "type": "object",
      "description": "Event model properties.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the resource type.",
          "readOnly": true
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the resource name.",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "description": "Gets or sets the event type.",
          "readOnly": true
        },
        "eventName": {
          "type": "string",
          "description": "Gets or sets the event name.",
          "readOnly": true
        },
        "timeOfOccurrence": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the time at which the event occurred at source.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets or sets the event severity.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the event description.",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "description": "Gets or sets the event correlation Id.",
          "readOnly": true
        },
        "healthErrors": {
          "type": "array",
          "description": "Gets or sets the errors associated with this event.",
          "items": {
            "$ref": "#/definitions/HealthErrorModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "customProperties": {
          "$ref": "#/definitions/EventModelCustomProperties",
          "description": "Event model custom properties."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the event.",
          "readOnly": true
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "FabricAgentModel": {
      "type": "object",
      "description": "Fabric agent model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricAgentModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FabricAgentModelCustomProperties": {
      "type": "object",
      "description": "Fabric agent model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for FabricAgentModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "FabricAgentModelListResult": {
      "type": "object",
      "description": "The response of a FabricAgentModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FabricAgentModel items on this page",
          "items": {
            "$ref": "#/definitions/FabricAgentModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FabricAgentModelProperties": {
      "type": "object",
      "description": "Fabric agent model properties.",
      "properties": {
        "correlationId": {
          "type": "string",
          "description": "Gets or sets the fabric agent correlation Id.",
          "readOnly": true
        },
        "machineId": {
          "type": "string",
          "description": "Gets or sets the machine Id where fabric agent is running.",
          "minLength": 1
        },
        "machineName": {
          "type": "string",
          "description": "Gets or sets the machine name where fabric agent is running.",
          "minLength": 1
        },
        "authenticationIdentity": {
          "$ref": "#/definitions/IdentityModel",
          "description": "Identity model."
        },
        "resourceAccessIdentity": {
          "$ref": "#/definitions/IdentityModel",
          "description": "Identity model."
        },
        "isResponsive": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the fabric agent is responsive.",
          "readOnly": true
        },
        "lastHeartbeat": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the time when last heartbeat was sent by the fabric agent.",
          "readOnly": true
        },
        "versionNumber": {
          "type": "string",
          "description": "Gets or sets the fabric agent version.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the fabric agent.",
          "readOnly": true
        },
        "healthErrors": {
          "type": "array",
          "description": "Gets or sets the list of health errors.",
          "items": {
            "$ref": "#/definitions/HealthErrorModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "customProperties": {
          "$ref": "#/definitions/FabricAgentModelCustomProperties",
          "description": "Fabric agent model custom properties."
        }
      },
      "required": [
        "machineId",
        "machineName",
        "authenticationIdentity",
        "resourceAccessIdentity",
        "customProperties"
      ]
    },
    "FabricModel": {
      "type": "object",
      "description": "Fabric model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FabricModelCustomProperties": {
      "type": "object",
      "description": "Fabric model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for FabricModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "FabricModelListResult": {
      "type": "object",
      "description": "The response of a FabricModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FabricModel items on this page",
          "items": {
            "$ref": "#/definitions/FabricModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FabricModelProperties": {
      "type": "object",
      "description": "Fabric model properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the fabric.",
          "readOnly": true
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets or sets the service endpoint.",
          "readOnly": true
        },
        "serviceResourceId": {
          "type": "string",
          "description": "Gets or sets the service resource Id.",
          "readOnly": true
        },
        "health": {
          "$ref": "#/definitions/HealthStatus",
          "description": "Gets or sets the fabric health.",
          "readOnly": true
        },
        "healthErrors": {
          "type": "array",
          "description": "Gets or sets the list of health errors.",
          "items": {
            "$ref": "#/definitions/HealthErrorModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "customProperties": {
          "$ref": "#/definitions/FabricModelCustomProperties",
          "description": "Fabric model custom properties."
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "FabricModelUpdate": {
      "type": "object",
      "description": "Fabric model update.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/FabricModelProperties",
          "description": "Fabric model properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the Id of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the resource.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "FailoverJobModelCustomProperties": {
      "type": "object",
      "description": "Failover job model custom properties.",
      "properties": {
        "protectedItemDetails": {
          "type": "array",
          "description": "Gets or sets the failed over protected item details.",
          "items": {
            "$ref": "#/definitions/FailoverProtectedItemProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "FailoverJobDetails"
    },
    "FailoverProtectedItemProperties": {
      "type": "object",
      "description": "Failover properties of the protected item.",
      "properties": {
        "protectedItemName": {
          "type": "string",
          "description": "Gets or sets the protected item name.",
          "readOnly": true
        },
        "vmName": {
          "type": "string",
          "description": "Gets or sets the VM name.",
          "readOnly": true
        },
        "testVmName": {
          "type": "string",
          "description": "Gets or sets the test VM name.",
          "readOnly": true
        },
        "recoveryPointId": {
          "type": "string",
          "description": "Gets or sets the recovery point Id.",
          "readOnly": true
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the recovery point time.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the network name.",
          "readOnly": true
        },
        "subnet": {
          "type": "string",
          "description": "Gets or sets the network subnet.",
          "readOnly": true
        }
      }
    },
    "GroupConnectivityInformation": {
      "type": "object",
      "description": "Represents of a connection's group information.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Gets or sets group id."
        },
        "memberName": {
          "type": "string",
          "description": "Gets or sets member name."
        },
        "customerVisibleFqdns": {
          "type": "array",
          "description": "Gets or sets customer visible FQDNs.",
          "items": {
            "type": "string"
          }
        },
        "internalFqdn": {
          "type": "string",
          "description": "Gets or sets Internal Fqdn."
        },
        "redirectMapId": {
          "type": "string",
          "description": "Gets or sets the redirect map id."
        },
        "privateLinkServiceArmRegion": {
          "type": "string",
          "description": "Gets or sets the private link service arm region."
        }
      }
    },
    "HealthErrorModel": {
      "type": "object",
      "description": "Health error model.",
      "properties": {
        "affectedResourceType": {
          "type": "string",
          "description": "Gets or sets the type of affected resource type."
        },
        "affectedResourceCorrelationIds": {
          "type": "array",
          "description": "Gets or sets the list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue.",
          "items": {
            "type": "string"
          }
        },
        "childErrors": {
          "type": "array",
          "description": "Gets or sets a list of child health errors associated with this error.",
          "items": {
            "$ref": "#/definitions/InnerHealthErrorModel"
          },
          "x-ms-identifiers": []
        },
        "code": {
          "type": "string",
          "description": "Gets or sets the error code.",
          "readOnly": true
        },
        "healthCategory": {
          "type": "string",
          "description": "Gets or sets the health category.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Gets or sets the error category.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets or sets the error severity.",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "Gets or sets the error source.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the error creation time.",
          "readOnly": true
        },
        "isCustomerResolvable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the error is customer resolvable.",
          "readOnly": true
        },
        "summary": {
          "type": "string",
          "description": "Gets or sets the error summary.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message.",
          "readOnly": true
        },
        "causes": {
          "type": "string",
          "description": "Gets or sets possible causes of the error.",
          "readOnly": true
        },
        "recommendation": {
          "type": "string",
          "description": "Gets or sets recommended action to resolve the error.",
          "readOnly": true
        }
      }
    },
    "HealthStatus": {
      "type": "string",
      "description": "Gets or sets the fabric health.",
      "enum": [
        "Normal",
        "Warning",
        "Critical"
      ],
      "x-ms-enum": {
        "name": "HealthStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Normal",
            "value": "Normal",
            "description": "Healthy Status."
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "Warning Status."
          },
          {
            "name": "Critical",
            "value": "Critical",
            "description": "Critical Status."
          }
        ]
      }
    },
    "HyperVMigrateFabricModelCustomProperties": {
      "type": "object",
      "description": "HyperV migrate fabric model custom properties.",
      "properties": {
        "hyperVSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the HyperV site.",
          "minLength": 1
        },
        "fabricResourceId": {
          "type": "string",
          "description": "Gets or sets the fabric resource Id.",
          "readOnly": true
        },
        "fabricContainerId": {
          "type": "string",
          "description": "Gets or sets the fabric container Id.",
          "readOnly": true
        },
        "migrationSolutionId": {
          "type": "string",
          "description": "Gets or sets the migration solution ARM Id.",
          "minLength": 1
        },
        "migrationHubUri": {
          "type": "string",
          "description": "Gets or sets the migration hub Uri.",
          "readOnly": true
        }
      },
      "required": [
        "hyperVSiteId",
        "migrationSolutionId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FabricModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVMigrate"
    },
    "HyperVToAzStackHCIDiskInput": {
      "type": "object",
      "description": "HyperVToAzStack disk input.",
      "properties": {
        "diskId": {
          "type": "string",
          "description": "Gets or sets the disk Id.",
          "minLength": 1
        },
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the target storage account ARM Id."
        },
        "isDynamic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk size in GB."
        },
        "diskFileFormat": {
          "type": "string",
          "description": "Gets or sets the type of the virtual hard disk, vhd or vhdx.",
          "minLength": 1
        },
        "isOsDisk": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether disk is os disk."
        },
        "diskBlockSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk block size."
        },
        "diskLogicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk logical sector size."
        },
        "diskPhysicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk physical sector size."
        },
        "diskIdentifier": {
          "type": "string",
          "description": "Gets or sets a value of disk identifier."
        },
        "diskController": {
          "$ref": "#/definitions/DiskControllerInputs",
          "description": "Disk controller."
        }
      },
      "required": [
        "diskId",
        "diskSizeGB",
        "diskFileFormat",
        "isOsDisk"
      ]
    },
    "HyperVToAzStackHCIEventModelCustomProperties": {
      "type": "object",
      "description": "HyperV to  AzStackHCI event model custom properties. This class provides provider specific details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and DataContract.HealthEvents.HealthEventType.AgentHealth.",
      "properties": {
        "eventSourceFriendlyName": {
          "type": "string",
          "description": "Gets or sets the friendly name of the source which has raised this health event.",
          "readOnly": true
        },
        "protectedItemFriendlyName": {
          "type": "string",
          "description": "Gets or sets the protected item friendly name.",
          "readOnly": true
        },
        "sourceApplianceName": {
          "type": "string",
          "description": "Gets or sets the source appliance name.",
          "readOnly": true
        },
        "targetApplianceName": {
          "type": "string",
          "description": "Gets or sets the source target name.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets or sets the server type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCINicInput": {
      "type": "object",
      "description": "HyperVToAzStackHCI NIC properties.",
      "properties": {
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id.",
          "minLength": 1
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the network name.",
          "readOnly": true
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster."
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster."
        },
        "selectionTypeForFailover": {
          "$ref": "#/definitions/VMNicSelection",
          "description": "Gets or sets the selection type of the NIC."
        },
        "isStaticIpMigrationEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether static ip migration is enabled."
        },
        "isMacMigrationEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether mac address migration is enabled."
        }
      },
      "required": [
        "nicId",
        "selectionTypeForFailover"
      ]
    },
    "HyperVToAzStackHCIPlannedFailoverModelCustomProperties": {
      "type": "object",
      "description": "HyperV to AzStackHCI planned failover model custom properties.",
      "properties": {
        "shutdownSourceVM": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether VM needs to be shut down."
        }
      },
      "required": [
        "shutdownSourceVM"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlannedFailoverModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCIPolicyModelCustomProperties": {
      "type": "object",
      "description": "HyperV To AzStackHCI Policy model custom properties.",
      "properties": {
        "recoveryPointHistoryInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be stored."
        },
        "crashConsistentFrequencyInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency (in minutes)."
        },
        "appConsistentFrequencyInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency (in minutes)."
        }
      },
      "required": [
        "recoveryPointHistoryInMinutes",
        "crashConsistentFrequencyInMinutes",
        "appConsistentFrequencyInMinutes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PolicyModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCIProtectedDiskProperties": {
      "type": "object",
      "description": "HyperVToAzStackHCI protected disk properties.",
      "properties": {
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the storage container.",
          "readOnly": true
        },
        "storageContainerLocalPath": {
          "type": "string",
          "description": "Gets or sets the local path of the storage container.",
          "readOnly": true
        },
        "sourceDiskId": {
          "type": "string",
          "description": "Gets or sets the source disk Id.",
          "readOnly": true
        },
        "sourceDiskName": {
          "type": "string",
          "description": "Gets or sets the source disk Name.",
          "readOnly": true
        },
        "seedDiskName": {
          "type": "string",
          "description": "Gets or sets the seed disk name.",
          "readOnly": true
        },
        "testMigrateDiskName": {
          "type": "string",
          "description": "Gets or sets the test failover clone disk.",
          "readOnly": true
        },
        "migrateDiskName": {
          "type": "string",
          "description": "Gets or sets the failover clone disk.",
          "readOnly": true
        },
        "isOsDisk": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the disk is the OS disk.",
          "readOnly": true
        },
        "capacityInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk capacity in bytes.",
          "readOnly": true
        },
        "isDynamic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk.",
          "readOnly": true
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets the disk type.",
          "readOnly": true
        },
        "diskBlockSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk block size.",
          "readOnly": true
        },
        "diskLogicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk logical sector size.",
          "readOnly": true
        },
        "diskPhysicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk physical sector size.",
          "readOnly": true
        }
      }
    },
    "HyperVToAzStackHCIProtectedItemModelCustomProperties": {
      "type": "object",
      "description": "HyperV to AzStackHCI Protected item model custom properties.",
      "properties": {
        "activeLocation": {
          "$ref": "#/definitions/ProtectedItemActiveLocation",
          "description": "Gets or sets the location of the protected item.",
          "readOnly": true
        },
        "targetHciClusterId": {
          "type": "string",
          "description": "Gets or sets the Target HCI Cluster ARM Id.",
          "minLength": 1
        },
        "targetArcClusterCustomLocationId": {
          "type": "string",
          "description": "Gets or sets the Target Arc Cluster Custom Location ARM Id.",
          "minLength": 1
        },
        "targetAzStackHciClusterName": {
          "type": "string",
          "description": "Gets or sets the Target AzStackHCI cluster name.",
          "readOnly": true
        },
        "fabricDiscoveryMachineId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the discovered machine.",
          "minLength": 1
        },
        "disksToInclude": {
          "type": "array",
          "description": "Gets or sets the list of disks to replicate.",
          "items": {
            "$ref": "#/definitions/HyperVToAzStackHCIDiskInput"
          },
          "x-ms-identifiers": []
        },
        "nicsToInclude": {
          "type": "array",
          "description": "Gets or sets the list of VM NIC to replicate.",
          "items": {
            "$ref": "#/definitions/HyperVToAzStackHCINicInput"
          },
          "x-ms-identifiers": []
        },
        "sourceVmName": {
          "type": "string",
          "description": "Gets or sets the source VM display name.",
          "readOnly": true
        },
        "sourceCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the source VM CPU cores.",
          "readOnly": true
        },
        "sourceMemoryInMegaBytes": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the source VM ram memory size in megabytes.",
          "readOnly": true
        },
        "targetVmName": {
          "type": "string",
          "description": "Gets or sets the target VM display name."
        },
        "targetResourceGroupId": {
          "type": "string",
          "description": "Gets or sets the target resource group ARM Id.",
          "minLength": 1
        },
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the target storage container ARM Id.",
          "minLength": 1
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "Gets or sets the hypervisor generation of the virtual machine.",
          "minLength": 1
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster."
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster."
        },
        "targetCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target CPU cores."
        },
        "isDynamicRam": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory is dynamical."
        },
        "dynamicMemoryConfig": {
          "$ref": "#/definitions/ProtectedItemDynamicMemoryConfig",
          "description": "Protected item dynamic memory config."
        },
        "targetMemoryInMegaBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target memory in mega-bytes."
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the Run As account Id.",
          "minLength": 1
        },
        "sourceFabricAgentName": {
          "type": "string",
          "description": "Gets or sets the source fabric agent name.",
          "minLength": 1
        },
        "targetFabricAgentName": {
          "type": "string",
          "description": "Gets or sets the target fabric agent name.",
          "minLength": 1
        },
        "sourceApplianceName": {
          "type": "string",
          "description": "Gets or sets the source appliance name.",
          "readOnly": true
        },
        "targetApplianceName": {
          "type": "string",
          "description": "Gets or sets the target appliance name.",
          "readOnly": true
        },
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the OS.",
          "readOnly": true
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the name of the OS.",
          "readOnly": true
        },
        "firmwareType": {
          "type": "string",
          "description": "Gets or sets the firmware type.",
          "readOnly": true
        },
        "targetLocation": {
          "type": "string",
          "description": "Gets or sets the target location.",
          "readOnly": true
        },
        "customLocationRegion": {
          "type": "string",
          "description": "Gets or sets the location of Azure Arc HCI custom location resource.",
          "minLength": 1
        },
        "failoverRecoveryPointId": {
          "type": "string",
          "description": "Gets or sets the recovery point Id to which the VM was failed over.",
          "readOnly": true
        },
        "lastRecoveryPointReceived": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last recovery point received time.",
          "readOnly": true
        },
        "lastRecoveryPointId": {
          "type": "string",
          "description": "Gets or sets the last recovery point Id.",
          "readOnly": true
        },
        "initialReplicationProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.",
          "readOnly": true
        },
        "resyncProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.",
          "readOnly": true
        },
        "protectedDisks": {
          "type": "array",
          "description": "Gets or sets the list of protected disks.",
          "items": {
            "$ref": "#/definitions/HyperVToAzStackHCIProtectedDiskProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "protectedNics": {
          "type": "array",
          "description": "Gets or sets the VM NIC details.",
          "items": {
            "$ref": "#/definitions/HyperVToAzStackHCIProtectedNicProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "targetVmBiosId": {
          "type": "string",
          "description": "Gets or sets the BIOS Id of the target AzStackHCI VM.",
          "readOnly": true
        },
        "lastReplicationUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the latest timestamp that replication status is updated.",
          "readOnly": true
        }
      },
      "required": [
        "targetHciClusterId",
        "targetArcClusterCustomLocationId",
        "fabricDiscoveryMachineId",
        "disksToInclude",
        "nicsToInclude",
        "targetResourceGroupId",
        "storageContainerId",
        "hyperVGeneration",
        "runAsAccountId",
        "sourceFabricAgentName",
        "targetFabricAgentName",
        "customLocationRegion"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItemModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate": {
      "type": "object",
      "description": "HyperV to AzStackHCI Protected item model custom properties.",
      "properties": {
        "nicsToInclude": {
          "type": "array",
          "description": "Gets or sets the list of VM NIC to replicate.",
          "items": {
            "$ref": "#/definitions/HyperVToAzStackHCINicInput"
          },
          "x-ms-identifiers": []
        },
        "targetCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target CPU cores."
        },
        "isDynamicRam": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory is dynamical."
        },
        "dynamicMemoryConfig": {
          "$ref": "#/definitions/ProtectedItemDynamicMemoryConfig",
          "description": "Protected item dynamic memory config."
        },
        "targetMemoryInMegaBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target memory in mega-bytes."
        },
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the OS."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItemModelCustomPropertiesUpdate"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCIProtectedNicProperties": {
      "type": "object",
      "description": "HyperVToAzStackHCI NIC properties.",
      "properties": {
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets the NIC mac address.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the network name.",
          "readOnly": true
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster.",
          "readOnly": true
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster.",
          "readOnly": true
        },
        "selectionTypeForFailover": {
          "$ref": "#/definitions/VMNicSelection",
          "description": "Gets or sets the selection type of the NIC.",
          "readOnly": true
        }
      }
    },
    "HyperVToAzStackHCIRecoveryPointModelCustomProperties": {
      "type": "object",
      "description": "HyperV to AzStackHCI recovery point model custom properties.",
      "properties": {
        "diskIds": {
          "type": "array",
          "description": "Gets or sets the list of the disk Ids.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPointModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "HyperVToAzStackHCIReplicationExtensionModelCustomProperties": {
      "type": "object",
      "description": "HyperV to AzStackHCI Replication extension model custom properties.",
      "properties": {
        "hyperVFabricArmId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the source HyperV fabric.",
          "minLength": 1
        },
        "hyperVSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the HyperV site.",
          "readOnly": true
        },
        "azStackHciFabricArmId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the target AzStackHCI fabric.",
          "minLength": 1
        },
        "azStackHciSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the AzStackHCI site.",
          "readOnly": true
        },
        "storageAccountId": {
          "type": "string",
          "description": "Gets or sets the storage account Id."
        },
        "storageAccountSasSecretName": {
          "type": "string",
          "description": "Gets or sets the Sas Secret of storage account."
        },
        "asrServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of ASR.",
          "readOnly": true
        },
        "rcmServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of Rcm.",
          "readOnly": true
        },
        "gatewayServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of Gateway.",
          "readOnly": true
        },
        "sourceGatewayServiceId": {
          "type": "string",
          "description": "Gets or sets the gateway service Id of source.",
          "readOnly": true
        },
        "targetGatewayServiceId": {
          "type": "string",
          "description": "Gets or sets the gateway service Id of target.",
          "readOnly": true
        },
        "sourceStorageContainerName": {
          "type": "string",
          "description": "Gets or sets the source storage container name.",
          "readOnly": true
        },
        "targetStorageContainerName": {
          "type": "string",
          "description": "Gets or sets the target storage container name.",
          "readOnly": true
        },
        "resourceLocation": {
          "type": "string",
          "description": "Gets or sets the resource location.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets or sets the subscription.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Gets or sets the resource group.",
          "readOnly": true
        }
      },
      "required": [
        "hyperVFabricArmId",
        "azStackHciFabricArmId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationExtensionModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "HyperVToAzStackHCI"
    },
    "IdentityModel": {
      "type": "object",
      "description": "Identity model.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Gets or sets the tenant Id of the SPN with which fabric agent communicates to service.",
          "minLength": 1
        },
        "applicationId": {
          "type": "string",
          "description": "Gets or sets the client/application Id of the SPN with which fabric agent communicates to service.",
          "minLength": 1
        },
        "objectId": {
          "type": "string",
          "description": "Gets or sets the object Id of the SPN with which fabric agent communicates to service.",
          "minLength": 1
        },
        "audience": {
          "type": "string",
          "description": "Gets or sets the audience of the SPN with which fabric agent communicates to service.",
          "minLength": 1
        },
        "aadAuthority": {
          "type": "string",
          "description": "Gets or sets the authority of the SPN with which fabric agent communicates to service.",
          "minLength": 1
        }
      },
      "required": [
        "tenantId",
        "applicationId",
        "objectId",
        "audience",
        "aadAuthority"
      ]
    },
    "InnerHealthErrorModel": {
      "type": "object",
      "description": "Inner health error model.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code.",
          "readOnly": true
        },
        "healthCategory": {
          "type": "string",
          "description": "Gets or sets the health category.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Gets or sets the error category.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets or sets the error severity.",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "Gets or sets the error source.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the error creation time.",
          "readOnly": true
        },
        "isCustomerResolvable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the error is customer resolvable.",
          "readOnly": true
        },
        "summary": {
          "type": "string",
          "description": "Gets or sets the error summary.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message.",
          "readOnly": true
        },
        "causes": {
          "type": "string",
          "description": "Gets or sets possible causes of the error.",
          "readOnly": true
        },
        "recommendation": {
          "type": "string",
          "description": "Gets or sets recommended action to resolve the error.",
          "readOnly": true
        }
      }
    },
    "JobModel": {
      "type": "object",
      "description": "Job model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobModelCustomProperties": {
      "type": "object",
      "description": "Job model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for JobModelCustomProperties."
        },
        "affectedObjectDetails": {
          "type": "object",
          "description": "Gets or sets any custom properties of the affected object.",
          "properties": {
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "object"
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "readOnly": true
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "JobModelListResult": {
      "type": "object",
      "description": "The response of a JobModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobModel items on this page",
          "items": {
            "$ref": "#/definitions/JobModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobModelProperties": {
      "type": "object",
      "description": "Job model properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Gets or sets the friendly display name.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/JobState",
          "description": "Gets or sets the job state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the end time.",
          "readOnly": true
        },
        "objectId": {
          "type": "string",
          "description": "Gets or sets the affected object Id.",
          "readOnly": true
        },
        "objectName": {
          "type": "string",
          "description": "Gets or sets the affected object name.",
          "readOnly": true
        },
        "objectInternalId": {
          "type": "string",
          "description": "Gets or sets the affected object internal Id.",
          "readOnly": true
        },
        "objectInternalName": {
          "type": "string",
          "description": "Gets or sets the affected object internal name.",
          "readOnly": true
        },
        "objectType": {
          "$ref": "#/definitions/JobObjectType",
          "description": "Gets or sets the object type.",
          "readOnly": true
        },
        "replicationProviderId": {
          "type": "string",
          "description": "Gets or sets the replication provider.",
          "readOnly": true
        },
        "sourceFabricProviderId": {
          "type": "string",
          "description": "Gets or sets the source fabric provider.",
          "readOnly": true
        },
        "targetFabricProviderId": {
          "type": "string",
          "description": "Gets or sets the target fabric provider.",
          "readOnly": true
        },
        "allowedActions": {
          "type": "array",
          "description": "Gets or sets the list of allowed actions on the job.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "activityId": {
          "type": "string",
          "description": "Gets or sets the job activity id.",
          "readOnly": true
        },
        "tasks": {
          "type": "array",
          "description": "Gets or sets the list of tasks.",
          "items": {
            "$ref": "#/definitions/TaskModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "Gets or sets the list of errors.",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "customProperties": {
          "$ref": "#/definitions/JobModelCustomProperties",
          "description": "Job model custom properties."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the job.",
          "readOnly": true
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "JobObjectType": {
      "type": "string",
      "description": "Gets or sets the object type.",
      "enum": [
        "AvsDiskPool",
        "FabricAgent",
        "Fabric",
        "Policy",
        "ProtectedItem",
        "RecoveryPlan",
        "ReplicationExtension",
        "Vault"
      ],
      "x-ms-enum": {
        "name": "JobObjectType",
        "modelAsString": true,
        "values": [
          {
            "name": "AvsDiskPool",
            "value": "AvsDiskPool",
            "description": "AVS disk pool."
          },
          {
            "name": "FabricAgent",
            "value": "FabricAgent",
            "description": "Fabric agent level workflow."
          },
          {
            "name": "Fabric",
            "value": "Fabric",
            "description": "Fabric level job."
          },
          {
            "name": "Policy",
            "value": "Policy",
            "description": "Policy level job."
          },
          {
            "name": "ProtectedItem",
            "value": "ProtectedItem",
            "description": "Protected item level job."
          },
          {
            "name": "RecoveryPlan",
            "value": "RecoveryPlan",
            "description": "Recovery plan level job."
          },
          {
            "name": "ReplicationExtension",
            "value": "ReplicationExtension",
            "description": "Replication extension level job."
          },
          {
            "name": "Vault",
            "value": "Vault",
            "description": "Vault level job."
          }
        ]
      }
    },
    "JobState": {
      "type": "string",
      "description": "Gets or sets the job state.",
      "enum": [
        "Pending",
        "Started",
        "Cancelling",
        "Succeeded",
        "Failed",
        "Cancelled",
        "CompletedWithInformation",
        "CompletedWithWarnings",
        "CompletedWithErrors"
      ],
      "x-ms-enum": {
        "name": "JobState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Job has not been started."
          },
          {
            "name": "Started",
            "value": "Started",
            "description": "Job is in progress."
          },
          {
            "name": "Cancelling",
            "value": "Cancelling",
            "description": "Job cancellation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Job has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Job failed."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Job has been cancelled."
          },
          {
            "name": "CompletedWithInformation",
            "value": "CompletedWithInformation",
            "description": "Job has completed with information."
          },
          {
            "name": "CompletedWithWarnings",
            "value": "CompletedWithWarnings",
            "description": "Job has completed with warnings."
          },
          {
            "name": "CompletedWithErrors",
            "value": "CompletedWithErrors",
            "description": "Job has completed with errors."
          }
        ]
      },
      "readOnly": true
    },
    "OperationStatus": {
      "type": "object",
      "description": "Defines the operation status.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the Id."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the operation name."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still running."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the end time."
        }
      }
    },
    "PlannedFailoverModel": {
      "type": "object",
      "description": "Planned failover model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlannedFailoverModelProperties",
          "description": "Planned failover model properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "PlannedFailoverModelCustomProperties": {
      "type": "object",
      "description": "Planned failover model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for PlannedFailoverModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "PlannedFailoverModelProperties": {
      "type": "object",
      "description": "Planned failover model properties.",
      "properties": {
        "customProperties": {
          "$ref": "#/definitions/PlannedFailoverModelCustomProperties",
          "description": "Planned failover model custom properties."
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "PolicyModel": {
      "type": "object",
      "description": "Policy model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyModelCustomProperties": {
      "type": "object",
      "description": "Policy model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for PolicyModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "PolicyModelListResult": {
      "type": "object",
      "description": "The response of a PolicyModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PolicyModel items on this page",
          "items": {
            "$ref": "#/definitions/PolicyModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PolicyModelProperties": {
      "type": "object",
      "description": "Policy model properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the policy.",
          "readOnly": true
        },
        "customProperties": {
          "$ref": "#/definitions/PolicyModelCustomProperties",
          "description": "Policy model custom properties."
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Represent private Endpoint network resource that is linked to the Private Endpoint connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the id."
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Represents private endpoint connection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionResponseProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProxy": {
      "type": "object",
      "description": "Represents private endpoint connection proxy request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProxyProperties",
          "description": "The resource-specific properties for this resource."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets ETag."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionProxyListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionProxy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionProxy items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionProxy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProxyProperties": {
      "type": "object",
      "description": "Represents private endpoint connection proxy request.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the private endpoint connection proxy.",
          "readOnly": true
        },
        "remotePrivateEndpoint": {
          "$ref": "#/definitions/RemotePrivateEndpoint",
          "description": "Represent remote private endpoint information for the private endpoint connection proxy."
        }
      }
    },
    "PrivateEndpointConnectionResponseProperties": {
      "type": "object",
      "description": "Represents Private endpoint connection response properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets provisioning state of the private endpoint connection.",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "Represent private Endpoint network resource that is linked to the Private Endpoint connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Represents Private link service connection state."
        }
      }
    },
    "PrivateEndpointConnectionStatus": {
      "type": "string",
      "description": "Gets or sets the status.",
      "enum": [
        "Approved",
        "Disconnected",
        "Pending",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Approved",
            "value": "Approved",
            "description": "Approved Status."
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "Disconnected Status."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Pending Status."
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "Rejected Status."
          }
        ]
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Represents private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Represents private link resource properties.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Gets or sets the group id."
        },
        "requiredMembers": {
          "type": "array",
          "description": "Gets or sets the required member. This translates to how many Private IPs should be created for each privately linkable resource.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Gets or sets the private DNS zone names.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the private link resource.",
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnection": {
      "type": "object",
      "description": "Represents of an NRP private link service connection.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets private link service connection name."
        },
        "groupIds": {
          "type": "array",
          "description": "Gets or sets group ids.",
          "items": {
            "type": "string"
          }
        },
        "requestMessage": {
          "type": "string",
          "description": "Gets or sets the request message for the private link service connection."
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "Represents Private link service connection state.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointConnectionStatus",
          "description": "Gets or sets the status."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets description."
        },
        "actionsRequired": {
          "type": "string",
          "description": "Gets or sets actions required."
        }
      }
    },
    "PrivateLinkServiceProxy": {
      "type": "object",
      "description": "Represents NRP private link service proxy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets private link service proxy id."
        },
        "remotePrivateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Represents Private link service connection state."
        },
        "remotePrivateEndpointConnection": {
          "$ref": "#/definitions/RemotePrivateEndpointConnection",
          "description": "Represent remote private endpoint connection."
        },
        "groupConnectivityInformation": {
          "type": "array",
          "description": "Gets or sets group connectivity information.",
          "items": {
            "$ref": "#/definitions/GroupConnectivityInformation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProtectedItemActiveLocation": {
      "type": "string",
      "description": "Gets or sets the location of the protected item.",
      "enum": [
        "Primary",
        "Recovery"
      ],
      "x-ms-enum": {
        "name": "ProtectedItemActiveLocation",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary",
            "description": "Protected item is active on Primary."
          },
          {
            "name": "Recovery",
            "value": "Recovery",
            "description": "Protected item is active on Recovery."
          }
        ]
      }
    },
    "ProtectedItemDynamicMemoryConfig": {
      "type": "object",
      "description": "Protected item dynamic memory config.",
      "properties": {
        "maximumMemoryInMegaBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets maximum memory in MB."
        },
        "minimumMemoryInMegaBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets minimum memory in MB."
        },
        "targetMemoryBufferPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets target memory buffer in %."
        }
      },
      "required": [
        "maximumMemoryInMegaBytes",
        "minimumMemoryInMegaBytes",
        "targetMemoryBufferPercentage"
      ]
    },
    "ProtectedItemJobProperties": {
      "type": "object",
      "description": "Protected item job properties.",
      "properties": {
        "scenarioName": {
          "type": "string",
          "description": "Gets or sets protection scenario name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Gets or sets job Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets or sets job name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the job friendly display name.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Gets or sets job state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets start time of the job.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets end time of the job.",
          "readOnly": true
        }
      }
    },
    "ProtectedItemModel": {
      "type": "object",
      "description": "Protected item model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectedItemModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProtectedItemModelCustomProperties": {
      "type": "object",
      "description": "Protected item model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for ProtectedItemModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "ProtectedItemModelCustomPropertiesUpdate": {
      "type": "object",
      "description": "Protected item model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for ProtectedItemModelCustomPropertiesUpdate."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "ProtectedItemModelListResult": {
      "type": "object",
      "description": "The response of a ProtectedItemModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProtectedItemModel items on this page",
          "items": {
            "$ref": "#/definitions/ProtectedItemModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProtectedItemModelProperties": {
      "type": "object",
      "description": "Protected item model properties.",
      "properties": {
        "policyName": {
          "type": "string",
          "description": "Gets or sets the policy name.",
          "minLength": 1
        },
        "replicationExtensionName": {
          "type": "string",
          "description": "Gets or sets the replication extension name.",
          "minLength": 1
        },
        "correlationId": {
          "type": "string",
          "description": "Gets or sets the protected item correlation Id.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the fabric agent.",
          "readOnly": true
        },
        "protectionState": {
          "$ref": "#/definitions/ProtectionState",
          "description": "Gets or sets the protection state.",
          "readOnly": true
        },
        "protectionStateDescription": {
          "type": "string",
          "description": "Gets or sets the protection state description.",
          "readOnly": true
        },
        "testFailoverState": {
          "$ref": "#/definitions/TestFailoverState",
          "description": "Gets or sets the test failover state.",
          "readOnly": true
        },
        "testFailoverStateDescription": {
          "type": "string",
          "description": "Gets or sets the Test failover state description.",
          "readOnly": true
        },
        "resynchronizationState": {
          "$ref": "#/definitions/ResynchronizationState",
          "description": "Gets or sets the resynchronization state.",
          "readOnly": true
        },
        "fabricObjectId": {
          "type": "string",
          "description": "Gets or sets the fabric object Id.",
          "readOnly": true
        },
        "fabricObjectName": {
          "type": "string",
          "description": "Gets or sets the fabric object name.",
          "readOnly": true
        },
        "sourceFabricProviderId": {
          "type": "string",
          "description": "Gets or sets the source fabric provider Id.",
          "readOnly": true
        },
        "targetFabricProviderId": {
          "type": "string",
          "description": "Gets or sets the target fabric provider Id.",
          "readOnly": true
        },
        "fabricId": {
          "type": "string",
          "description": "Gets or sets the fabric Id.",
          "readOnly": true
        },
        "targetFabricId": {
          "type": "string",
          "description": "Gets or sets the target fabric Id.",
          "readOnly": true
        },
        "fabricAgentId": {
          "type": "string",
          "description": "Gets or sets the fabric agent Id.",
          "readOnly": true
        },
        "targetFabricAgentId": {
          "type": "string",
          "description": "Gets or sets the target fabric agent Id.",
          "readOnly": true
        },
        "resyncRequired": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether resynchronization is required or not.",
          "readOnly": true
        },
        "lastSuccessfulPlannedFailoverTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the Last successful planned failover time.",
          "readOnly": true
        },
        "lastSuccessfulUnplannedFailoverTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the Last successful unplanned failover time.",
          "readOnly": true
        },
        "lastSuccessfulTestFailoverTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the Last successful test failover time.",
          "readOnly": true
        },
        "currentJob": {
          "$ref": "#/definitions/ProtectedItemJobProperties",
          "description": "Gets or sets the current scenario.",
          "readOnly": true
        },
        "allowedJobs": {
          "type": "array",
          "description": "Gets or sets the allowed scenarios on the protected item.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "lastFailedEnableProtectionJob": {
          "$ref": "#/definitions/ProtectedItemJobProperties",
          "description": "Gets or sets the last failed enabled protection job.",
          "readOnly": true
        },
        "lastFailedPlannedFailoverJob": {
          "$ref": "#/definitions/ProtectedItemJobProperties",
          "description": "Gets or sets the last failed planned failover job.",
          "readOnly": true
        },
        "lastTestFailoverJob": {
          "$ref": "#/definitions/ProtectedItemJobProperties",
          "description": "Gets or sets the last test failover job.",
          "readOnly": true
        },
        "replicationHealth": {
          "$ref": "#/definitions/HealthStatus",
          "description": "Gets or sets protected item replication health.",
          "readOnly": true
        },
        "healthErrors": {
          "type": "array",
          "description": "Gets or sets the list of health errors.",
          "items": {
            "$ref": "#/definitions/HealthErrorModel"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "customProperties": {
          "$ref": "#/definitions/ProtectedItemModelCustomProperties",
          "description": "Protected item model custom properties."
        }
      },
      "required": [
        "policyName",
        "replicationExtensionName",
        "customProperties"
      ]
    },
    "ProtectedItemModelPropertiesUpdate": {
      "type": "object",
      "description": "Protected item model properties update.",
      "properties": {
        "customProperties": {
          "$ref": "#/definitions/ProtectedItemModelCustomPropertiesUpdate",
          "description": "Protected item model custom properties update."
        }
      }
    },
    "ProtectedItemModelUpdate": {
      "type": "object",
      "description": "Protected item model update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectedItemModelPropertiesUpdate",
          "description": "Protected item model properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the Id of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the resource.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "ProtectionState": {
      "type": "string",
      "description": "Gets or sets the protection state.",
      "enum": [
        "UnprotectedStatesBegin",
        "EnablingProtection",
        "EnablingFailed",
        "DisablingProtection",
        "MarkedForDeletion",
        "DisablingFailed",
        "UnprotectedStatesEnd",
        "InitialReplicationStatesBegin",
        "InitialReplicationInProgress",
        "InitialReplicationCompletedOnPrimary",
        "InitialReplicationCompletedOnRecovery",
        "InitialReplicationFailed",
        "InitialReplicationStatesEnd",
        "ProtectedStatesBegin",
        "Protected",
        "ProtectedStatesEnd",
        "PlannedFailoverTransitionStatesBegin",
        "PlannedFailoverInitiated",
        "PlannedFailoverCompleting",
        "PlannedFailoverCompleted",
        "PlannedFailoverFailed",
        "PlannedFailoverCompletionFailed",
        "PlannedFailoverTransitionStatesEnd",
        "UnplannedFailoverTransitionStatesBegin",
        "UnplannedFailoverInitiated",
        "UnplannedFailoverCompleting",
        "UnplannedFailoverCompleted",
        "UnplannedFailoverFailed",
        "UnplannedFailoverCompletionFailed",
        "UnplannedFailoverTransitionStatesEnd",
        "CommitFailoverStatesBegin",
        "CommitFailoverInProgressOnPrimary",
        "CommitFailoverInProgressOnRecovery",
        "CommitFailoverCompleted",
        "CommitFailoverFailedOnPrimary",
        "CommitFailoverFailedOnRecovery",
        "CommitFailoverStatesEnd",
        "CancelFailoverStatesBegin",
        "CancelFailoverInProgressOnPrimary",
        "CancelFailoverInProgressOnRecovery",
        "CancelFailoverFailedOnPrimary",
        "CancelFailoverFailedOnRecovery",
        "CancelFailoverStatesEnd",
        "ChangeRecoveryPointStatesBegin",
        "ChangeRecoveryPointInitiated",
        "ChangeRecoveryPointCompleted",
        "ChangeRecoveryPointFailed",
        "ChangeRecoveryPointStatesEnd",
        "ReprotectStatesBegin",
        "ReprotectInitiated",
        "ReprotectFailed",
        "ReprotectStatesEnd"
      ],
      "x-ms-enum": {
        "name": "ProtectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "UnprotectedStatesBegin",
            "value": "UnprotectedStatesBegin",
            "description": "Begin marker for unprotected states."
          },
          {
            "name": "EnablingProtection",
            "value": "EnablingProtection",
            "description": "Enable protection is in progress."
          },
          {
            "name": "EnablingFailed",
            "value": "EnablingFailed",
            "description": "Enable protection failed."
          },
          {
            "name": "DisablingProtection",
            "value": "DisablingProtection",
            "description": "Disabling protection is in progress."
          },
          {
            "name": "MarkedForDeletion",
            "value": "MarkedForDeletion",
            "description": "Disabling protection succeeded. This is a transient state before the protected item is deleted."
          },
          {
            "name": "DisablingFailed",
            "value": "DisablingFailed",
            "description": "Disable protection failed."
          },
          {
            "name": "UnprotectedStatesEnd",
            "value": "UnprotectedStatesEnd",
            "description": "End marker for unprotected states."
          },
          {
            "name": "InitialReplicationStatesBegin",
            "value": "InitialReplicationStatesBegin",
            "description": "Begin marker for initial replication states."
          },
          {
            "name": "InitialReplicationInProgress",
            "value": "InitialReplicationInProgress",
            "description": "Initial replication is in progress."
          },
          {
            "name": "InitialReplicationCompletedOnPrimary",
            "value": "InitialReplicationCompletedOnPrimary",
            "description": "Initial replication has completed on the primary side."
          },
          {
            "name": "InitialReplicationCompletedOnRecovery",
            "value": "InitialReplicationCompletedOnRecovery",
            "description": "Initial replication has completed on the recovery side."
          },
          {
            "name": "InitialReplicationFailed",
            "value": "InitialReplicationFailed",
            "description": "Initial replication failed and would need to be started again."
          },
          {
            "name": "InitialReplicationStatesEnd",
            "value": "InitialReplicationStatesEnd",
            "description": "End marker for initial replication states."
          },
          {
            "name": "ProtectedStatesBegin",
            "value": "ProtectedStatesBegin",
            "description": "Begin marker for protected steady-state states."
          },
          {
            "name": "Protected",
            "value": "Protected",
            "description": "Protected item is protected and replication is on-going. Any issues with replication will be surfaced separately via the health property and will not affect the state."
          },
          {
            "name": "ProtectedStatesEnd",
            "value": "ProtectedStatesEnd",
            "description": "End marker for protected steady-state states."
          },
          {
            "name": "PlannedFailoverTransitionStatesBegin",
            "value": "PlannedFailoverTransitionStatesBegin",
            "description": "Begin marker for planned failover transition states."
          },
          {
            "name": "PlannedFailoverInitiated",
            "value": "PlannedFailoverInitiated",
            "description": "Planned failover has been initiated."
          },
          {
            "name": "PlannedFailoverCompleting",
            "value": "PlannedFailoverCompleting",
            "description": "Planned failover preparing protected entities is in progress."
          },
          {
            "name": "PlannedFailoverCompleted",
            "value": "PlannedFailoverCompleted",
            "description": "Planned failover has been completed successfully."
          },
          {
            "name": "PlannedFailoverFailed",
            "value": "PlannedFailoverFailed",
            "description": "Planned failover initiation failed."
          },
          {
            "name": "PlannedFailoverCompletionFailed",
            "value": "PlannedFailoverCompletionFailed",
            "description": "Planned failover preparing protected entities failed."
          },
          {
            "name": "PlannedFailoverTransitionStatesEnd",
            "value": "PlannedFailoverTransitionStatesEnd",
            "description": "End marker for planned failover transition states."
          },
          {
            "name": "UnplannedFailoverTransitionStatesBegin",
            "value": "UnplannedFailoverTransitionStatesBegin",
            "description": "Begin marker for unplanned failover transition states."
          },
          {
            "name": "UnplannedFailoverInitiated",
            "value": "UnplannedFailoverInitiated",
            "description": "Unplanned failover has been initiated."
          },
          {
            "name": "UnplannedFailoverCompleting",
            "value": "UnplannedFailoverCompleting",
            "description": "Unplanned failover preparing protected entities is in progress."
          },
          {
            "name": "UnplannedFailoverCompleted",
            "value": "UnplannedFailoverCompleted",
            "description": "Unplanned failover preparing protected entities is in progress."
          },
          {
            "name": "UnplannedFailoverFailed",
            "value": "UnplannedFailoverFailed",
            "description": "Unplanned failover initiation failed."
          },
          {
            "name": "UnplannedFailoverCompletionFailed",
            "value": "UnplannedFailoverCompletionFailed",
            "description": "Unplanned failover preparing protected entities failed."
          },
          {
            "name": "UnplannedFailoverTransitionStatesEnd",
            "value": "UnplannedFailoverTransitionStatesEnd",
            "description": "End marker for unplanned failover transition states."
          },
          {
            "name": "CommitFailoverStatesBegin",
            "value": "CommitFailoverStatesBegin",
            "description": "Begin marker for commit failover states."
          },
          {
            "name": "CommitFailoverInProgressOnPrimary",
            "value": "CommitFailoverInProgressOnPrimary",
            "description": "Commit failover is in progress on the primary side."
          },
          {
            "name": "CommitFailoverInProgressOnRecovery",
            "value": "CommitFailoverInProgressOnRecovery",
            "description": "Commit failover is in progress on the recovery side."
          },
          {
            "name": "CommitFailoverCompleted",
            "value": "CommitFailoverCompleted",
            "description": "Commit failover has been completed successfully."
          },
          {
            "name": "CommitFailoverFailedOnPrimary",
            "value": "CommitFailoverFailedOnPrimary",
            "description": "Commit failover failed on the primary side."
          },
          {
            "name": "CommitFailoverFailedOnRecovery",
            "value": "CommitFailoverFailedOnRecovery",
            "description": "Commit failover failed on the recovery side."
          },
          {
            "name": "CommitFailoverStatesEnd",
            "value": "CommitFailoverStatesEnd",
            "description": "End marker for commit failover states."
          },
          {
            "name": "CancelFailoverStatesBegin",
            "value": "CancelFailoverStatesBegin",
            "description": "Begin marker for cancel failover states."
          },
          {
            "name": "CancelFailoverInProgressOnPrimary",
            "value": "CancelFailoverInProgressOnPrimary",
            "description": "Cancel failover is in progress on the primary side."
          },
          {
            "name": "CancelFailoverInProgressOnRecovery",
            "value": "CancelFailoverInProgressOnRecovery",
            "description": "Cancel failover is in progress on the recovery side."
          },
          {
            "name": "CancelFailoverFailedOnPrimary",
            "value": "CancelFailoverFailedOnPrimary",
            "description": "Cancel failover failed on the primary side."
          },
          {
            "name": "CancelFailoverFailedOnRecovery",
            "value": "CancelFailoverFailedOnRecovery",
            "description": "Cancel failover failed on the recovery side."
          },
          {
            "name": "CancelFailoverStatesEnd",
            "value": "CancelFailoverStatesEnd",
            "description": "End marker for cancel failover states."
          },
          {
            "name": "ChangeRecoveryPointStatesBegin",
            "value": "ChangeRecoveryPointStatesBegin",
            "description": "Begin marker for change recovery point states."
          },
          {
            "name": "ChangeRecoveryPointInitiated",
            "value": "ChangeRecoveryPointInitiated",
            "description": "Change recovery point has been initiated.."
          },
          {
            "name": "ChangeRecoveryPointCompleted",
            "value": "ChangeRecoveryPointCompleted",
            "description": "Change recovery point has been completed successfully."
          },
          {
            "name": "ChangeRecoveryPointFailed",
            "value": "ChangeRecoveryPointFailed",
            "description": "Change recovery point has failed."
          },
          {
            "name": "ChangeRecoveryPointStatesEnd",
            "value": "ChangeRecoveryPointStatesEnd",
            "description": "End marker for change recovery point states."
          },
          {
            "name": "ReprotectStatesBegin",
            "value": "ReprotectStatesBegin",
            "description": "Begin marker for reprotect states."
          },
          {
            "name": "ReprotectInitiated",
            "value": "ReprotectInitiated",
            "description": "Reprotect has been initiated."
          },
          {
            "name": "ReprotectFailed",
            "value": "ReprotectFailed",
            "description": "Reprotect has failed."
          },
          {
            "name": "ReprotectStatesEnd",
            "value": "ReprotectStatesEnd",
            "description": "End marker for reprotect states."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Gets or sets the provisioning state of the email configuration.",
      "enum": [
        "Canceled",
        "Creating",
        "Deleting",
        "Deleted",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation has been canceled"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Resource is being created."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being deleted."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Resource has been deleted."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource creation/update succeeded."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Resource is being updated."
          }
        ]
      },
      "readOnly": true
    },
    "RecoveryPointModel": {
      "type": "object",
      "description": "Recovery point model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPointModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RecoveryPointModelCustomProperties": {
      "type": "object",
      "description": "Recovery point model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for RecoveryPointModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "RecoveryPointModelListResult": {
      "type": "object",
      "description": "The response of a RecoveryPointModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RecoveryPointModel items on this page",
          "items": {
            "$ref": "#/definitions/RecoveryPointModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RecoveryPointModelProperties": {
      "type": "object",
      "description": "Recovery point model properties.",
      "properties": {
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the recovery point time."
        },
        "recoveryPointType": {
          "$ref": "#/definitions/RecoveryPointType",
          "description": "Gets or sets the recovery point type."
        },
        "customProperties": {
          "$ref": "#/definitions/RecoveryPointModelCustomProperties",
          "description": "Recovery point model custom properties."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the recovery point item.",
          "readOnly": true
        }
      },
      "required": [
        "recoveryPointTime",
        "recoveryPointType",
        "customProperties"
      ]
    },
    "RecoveryPointType": {
      "type": "string",
      "description": "Gets or sets the recovery point type.",
      "enum": [
        "ApplicationConsistent",
        "CrashConsistent"
      ],
      "x-ms-enum": {
        "name": "RecoveryPointType",
        "modelAsString": true,
        "values": [
          {
            "name": "ApplicationConsistent",
            "value": "ApplicationConsistent",
            "description": "Application consistent recovery point."
          },
          {
            "name": "CrashConsistent",
            "value": "CrashConsistent",
            "description": "Crash consistent recovery point."
          }
        ]
      }
    },
    "RemotePrivateEndpoint": {
      "type": "object",
      "description": "Represent remote private endpoint information for the private endpoint connection proxy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets private link service proxy id.",
          "minLength": 1
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "description": "Gets or sets the list of Private Link Service Connections and gets populated for Auto approval flow.",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "x-ms-identifiers": []
        },
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "description": "Gets or sets the list of Manual Private Link Service Connections and gets populated for Manual approval flow.",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "x-ms-identifiers": []
        },
        "privateLinkServiceProxies": {
          "type": "array",
          "description": "Gets or sets the list of private link service proxies.",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceProxy"
          },
          "x-ms-identifiers": []
        },
        "connectionDetails": {
          "type": "array",
          "description": "Gets or sets the list of Connection Details. This is the connection details for private endpoint.",
          "items": {
            "$ref": "#/definitions/ConnectionDetails"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id"
      ]
    },
    "RemotePrivateEndpointConnection": {
      "type": "object",
      "description": "Represent remote private endpoint connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the remote private endpoint connection id."
        }
      }
    },
    "ReplicationExtensionModel": {
      "type": "object",
      "description": "Replication extension model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationExtensionModelProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ReplicationExtensionModelCustomProperties": {
      "type": "object",
      "description": "Replication extension model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Discriminator property for ReplicationExtensionModelCustomProperties."
        }
      },
      "discriminator": "instanceType",
      "required": [
        "instanceType"
      ]
    },
    "ReplicationExtensionModelListResult": {
      "type": "object",
      "description": "The response of a ReplicationExtensionModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ReplicationExtensionModel items on this page",
          "items": {
            "$ref": "#/definitions/ReplicationExtensionModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicationExtensionModelProperties": {
      "type": "object",
      "description": "Replication extension model properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the replication extension.",
          "readOnly": true
        },
        "customProperties": {
          "$ref": "#/definitions/ReplicationExtensionModelCustomProperties",
          "description": "Replication extension model custom properties."
        }
      },
      "required": [
        "customProperties"
      ]
    },
    "ReplicationVaultType": {
      "type": "string",
      "description": "Gets or sets the type of vault.",
      "enum": [
        "DisasterRecovery",
        "Migrate"
      ],
      "x-ms-enum": {
        "name": "ReplicationVaultType",
        "modelAsString": true,
        "values": [
          {
            "name": "DisasterRecovery",
            "value": "DisasterRecovery",
            "description": "Disaster recovery vault."
          },
          {
            "name": "Migrate",
            "value": "Migrate",
            "description": "Migrate vault."
          }
        ]
      }
    },
    "ResynchronizationState": {
      "type": "string",
      "description": "Gets or sets the resynchronization state.",
      "enum": [
        "None",
        "ResynchronizationInitiated",
        "ResynchronizationCompleted",
        "ResynchronizationFailed"
      ],
      "x-ms-enum": {
        "name": "ResynchronizationState",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Resynchronization is not active."
          },
          {
            "name": "ResynchronizationInitiated",
            "value": "ResynchronizationInitiated",
            "description": "Resynchronization has been initiated."
          },
          {
            "name": "ResynchronizationCompleted",
            "value": "ResynchronizationCompleted",
            "description": "Resynchronization has been completed successfully."
          },
          {
            "name": "ResynchronizationFailed",
            "value": "ResynchronizationFailed",
            "description": "Resynchronization has failed and would need to be started again."
          }
        ]
      }
    },
    "StorageContainerProperties": {
      "type": "object",
      "description": "Storage container properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the Name.",
          "minLength": 1
        },
        "clusterSharedVolumePath": {
          "type": "string",
          "description": "Gets or sets the ClusterSharedVolumePath.",
          "minLength": 1
        }
      },
      "required": [
        "name",
        "clusterSharedVolumePath"
      ]
    },
    "TaskModel": {
      "type": "object",
      "description": "Task model.",
      "properties": {
        "taskName": {
          "type": "string",
          "description": "Gets or sets the task name.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/TaskState",
          "description": "Gets or sets the task state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the end time.",
          "readOnly": true
        },
        "customProperties": {
          "$ref": "#/definitions/TaskModelCustomProperties",
          "description": "Task model custom properties."
        },
        "childrenJobs": {
          "type": "array",
          "description": "Gets or sets the list of children job models.",
          "items": {
            "$ref": "#/definitions/JobModel"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TaskModelCustomProperties": {
      "type": "object",
      "description": "Task model custom properties.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Gets or sets the instance type.",
          "minLength": 1
        }
      },
      "required": [
        "instanceType"
      ]
    },
    "TaskState": {
      "type": "string",
      "description": "Gets or sets the task state.",
      "enum": [
        "Pending",
        "Started",
        "Succeeded",
        "Failed",
        "Cancelled",
        "Skipped"
      ],
      "x-ms-enum": {
        "name": "TaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Task has not been started."
          },
          {
            "name": "Started",
            "value": "Started",
            "description": "Task is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Task has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Task failed."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Task has been cancelled."
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "Task has been skipped."
          }
        ]
      },
      "readOnly": true
    },
    "TestFailoverCleanupJobModelCustomProperties": {
      "type": "object",
      "description": "Test failover cleanup job model custom properties.",
      "properties": {
        "comments": {
          "type": "string",
          "description": "Gets or sets the test failover cleanup comments.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "TestFailoverCleanupJobDetails"
    },
    "TestFailoverJobModelCustomProperties": {
      "type": "object",
      "description": "Test failover job model custom properties.",
      "properties": {
        "protectedItemDetails": {
          "type": "array",
          "description": "Gets or sets the test VM details.",
          "items": {
            "$ref": "#/definitions/FailoverProtectedItemProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "TestFailoverJobDetails"
    },
    "TestFailoverState": {
      "type": "string",
      "description": "Gets or sets the test failover state.",
      "enum": [
        "None",
        "TestFailoverInitiated",
        "TestFailoverCompleting",
        "TestFailoverCompleted",
        "TestFailoverFailed",
        "TestFailoverCompletionFailed",
        "TestFailoverCleanupInitiated",
        "TestFailoverCleanupCompleting",
        "MarkedForDeletion"
      ],
      "x-ms-enum": {
        "name": "TestFailoverState",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Test failover is not active."
          },
          {
            "name": "TestFailoverInitiated",
            "value": "TestFailoverInitiated",
            "description": "Test failover has been initiated."
          },
          {
            "name": "TestFailoverCompleting",
            "value": "TestFailoverCompleting",
            "description": "Preparing test protected entities is in progress."
          },
          {
            "name": "TestFailoverCompleted",
            "value": "TestFailoverCompleted",
            "description": "Test failover has been completed successfully."
          },
          {
            "name": "TestFailoverFailed",
            "value": "TestFailoverFailed",
            "description": "Test failover initiation failed.."
          },
          {
            "name": "TestFailoverCompletionFailed",
            "value": "TestFailoverCompletionFailed",
            "description": "Preparing test protected entities failed."
          },
          {
            "name": "TestFailoverCleanupInitiated",
            "value": "TestFailoverCleanupInitiated",
            "description": "Test failover cleanup has been initiated."
          },
          {
            "name": "TestFailoverCleanupCompleting",
            "value": "TestFailoverCleanupCompleting",
            "description": "Cleaning up test protected entities is in progress."
          },
          {
            "name": "MarkedForDeletion",
            "value": "MarkedForDeletion",
            "description": "Test failover cleanup has completed/failed. This is a transient state before the state is moved back to None."
          }
        ]
      }
    },
    "VMNicSelection": {
      "type": "string",
      "description": "Gets or sets the selection type of the NIC.",
      "enum": [
        "NotSelected",
        "SelectedByUser",
        "SelectedByDefault",
        "SelectedByUserOverride"
      ],
      "x-ms-enum": {
        "name": "VMNicSelection",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSelected",
            "value": "NotSelected",
            "description": "Not Selected."
          },
          {
            "name": "SelectedByUser",
            "value": "SelectedByUser",
            "description": "Selected by user."
          },
          {
            "name": "SelectedByDefault",
            "value": "SelectedByDefault",
            "description": "Default selection by ASR."
          },
          {
            "name": "SelectedByUserOverride",
            "value": "SelectedByUserOverride",
            "description": "NIC configuration overridden by user. Differs from SelectedByUser in the sense that the legacy SelectedByUser is used both for explicit modification by user and implicit approval of user if the settings are used for TFO/FO. SelectedByUserOverride implies user overriding at least one of the configurations."
          }
        ]
      }
    },
    "VMwareFabricAgentModelCustomProperties": {
      "type": "object",
      "description": "VMware fabric agent model custom properties.",
      "properties": {
        "biosId": {
          "type": "string",
          "description": "Gets or sets the BIOS Id of the fabric agent machine.",
          "minLength": 1
        },
        "marsAuthenticationIdentity": {
          "$ref": "#/definitions/IdentityModel",
          "description": "Identity model."
        }
      },
      "required": [
        "biosId",
        "marsAuthenticationIdentity"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FabricAgentModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMware"
    },
    "VMwareMigrateFabricModelCustomProperties": {
      "type": "object",
      "description": "VMware migrate fabric model custom properties.",
      "properties": {
        "vmwareSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the VMware site.",
          "minLength": 1
        },
        "migrationSolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the migration solution.",
          "minLength": 1
        }
      },
      "required": [
        "vmwareSiteId",
        "migrationSolutionId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FabricModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareMigrate"
    },
    "VMwareToAzStackHCIDiskInput": {
      "type": "object",
      "description": "VMwareToAzStack disk input.",
      "properties": {
        "diskId": {
          "type": "string",
          "description": "Gets or sets the disk Id.",
          "minLength": 1
        },
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the target storage account ARM Id."
        },
        "isDynamic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk size in GB."
        },
        "diskFileFormat": {
          "type": "string",
          "description": "Gets or sets the type of the virtual hard disk, vhd or vhdx.",
          "minLength": 1
        },
        "isOsDisk": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether disk is os disk."
        },
        "diskBlockSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk block size."
        },
        "diskLogicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk logical sector size."
        },
        "diskPhysicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk physical sector size."
        },
        "diskIdentifier": {
          "type": "string",
          "description": "Gets or sets a value of disk identifier."
        },
        "diskController": {
          "$ref": "#/definitions/DiskControllerInputs",
          "description": "Disk controller."
        }
      },
      "required": [
        "diskId",
        "diskSizeGB",
        "diskFileFormat",
        "isOsDisk"
      ]
    },
    "VMwareToAzStackHCIEventModelCustomProperties": {
      "type": "object",
      "description": "VMware to  AzStackHCI event model custom properties. This class provides provider specific details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and DataContract.HealthEvents.HealthEventType.AgentHealth.",
      "properties": {
        "eventSourceFriendlyName": {
          "type": "string",
          "description": "Gets or sets the friendly name of the source which has raised this health event.",
          "readOnly": true
        },
        "protectedItemFriendlyName": {
          "type": "string",
          "description": "Gets or sets the protected item friendly name.",
          "readOnly": true
        },
        "sourceApplianceName": {
          "type": "string",
          "description": "Gets or sets the source appliance name.",
          "readOnly": true
        },
        "targetApplianceName": {
          "type": "string",
          "description": "Gets or sets the source target name.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets or sets the server type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzStackHCINicInput": {
      "type": "object",
      "description": "VMwareToAzStackHCI NIC properties.",
      "properties": {
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id.",
          "minLength": 1
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the NIC label.",
          "minLength": 1
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the network name.",
          "readOnly": true
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster."
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster."
        },
        "selectionTypeForFailover": {
          "$ref": "#/definitions/VMNicSelection",
          "description": "Gets or sets the selection type of the NIC."
        },
        "isStaticIpMigrationEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether static ip migration is enabled."
        },
        "isMacMigrationEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether mac address migration is enabled."
        }
      },
      "required": [
        "nicId",
        "label",
        "selectionTypeForFailover"
      ]
    },
    "VMwareToAzStackHCIPlannedFailoverModelCustomProperties": {
      "type": "object",
      "description": "VMware to AzStackHCI planned failover model custom properties.",
      "properties": {
        "shutdownSourceVM": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether VM needs to be shut down."
        }
      },
      "required": [
        "shutdownSourceVM"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlannedFailoverModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzStackHCIPolicyModelCustomProperties": {
      "type": "object",
      "description": "VMware To AzStackHCI Policy model custom properties.",
      "properties": {
        "recoveryPointHistoryInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be stored."
        },
        "crashConsistentFrequencyInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency (in minutes)."
        },
        "appConsistentFrequencyInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency (in minutes)."
        }
      },
      "required": [
        "recoveryPointHistoryInMinutes",
        "crashConsistentFrequencyInMinutes",
        "appConsistentFrequencyInMinutes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PolicyModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzStackHCIProtectedDiskProperties": {
      "type": "object",
      "description": "VMwareToAzStackHCI protected disk properties.",
      "properties": {
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the storage container.",
          "readOnly": true
        },
        "storageContainerLocalPath": {
          "type": "string",
          "description": "Gets or sets the local path of the storage container.",
          "readOnly": true
        },
        "sourceDiskId": {
          "type": "string",
          "description": "Gets or sets the source disk Id.",
          "readOnly": true
        },
        "sourceDiskName": {
          "type": "string",
          "description": "Gets or sets the source disk Name.",
          "readOnly": true
        },
        "seedDiskName": {
          "type": "string",
          "description": "Gets or sets the seed disk name.",
          "readOnly": true
        },
        "testMigrateDiskName": {
          "type": "string",
          "description": "Gets or sets the test failover clone disk.",
          "readOnly": true
        },
        "migrateDiskName": {
          "type": "string",
          "description": "Gets or sets the failover clone disk.",
          "readOnly": true
        },
        "isOsDisk": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the disk is the OS disk.",
          "readOnly": true
        },
        "capacityInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk capacity in bytes.",
          "readOnly": true
        },
        "isDynamic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk.",
          "readOnly": true
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets the disk type.",
          "readOnly": true
        },
        "diskBlockSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk block size.",
          "readOnly": true
        },
        "diskLogicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk logical sector size.",
          "readOnly": true
        },
        "diskPhysicalSectorSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets a value of disk physical sector size.",
          "readOnly": true
        }
      }
    },
    "VMwareToAzStackHCIProtectedItemModelCustomProperties": {
      "type": "object",
      "description": "VMware to AzStackHCI Protected item model custom properties.",
      "properties": {
        "activeLocation": {
          "$ref": "#/definitions/ProtectedItemActiveLocation",
          "description": "Gets or sets the location of the protected item.",
          "readOnly": true
        },
        "targetHciClusterId": {
          "type": "string",
          "description": "Gets or sets the Target HCI Cluster ARM Id.",
          "minLength": 1
        },
        "targetArcClusterCustomLocationId": {
          "type": "string",
          "description": "Gets or sets the Target Arc Cluster Custom Location ARM Id.",
          "minLength": 1
        },
        "targetAzStackHciClusterName": {
          "type": "string",
          "description": "Gets or sets the Target AzStackHCI cluster name.",
          "readOnly": true
        },
        "storageContainerId": {
          "type": "string",
          "description": "Gets or sets the target storage container ARM Id.",
          "minLength": 1
        },
        "targetResourceGroupId": {
          "type": "string",
          "description": "Gets or sets the target resource group ARM Id.",
          "minLength": 1
        },
        "targetLocation": {
          "type": "string",
          "description": "Gets or sets the target location.",
          "readOnly": true
        },
        "customLocationRegion": {
          "type": "string",
          "description": "Gets or sets the location of Azure Arc HCI custom location resource.",
          "minLength": 1
        },
        "disksToInclude": {
          "type": "array",
          "description": "Gets or sets the list of disks to replicate.",
          "items": {
            "$ref": "#/definitions/VMwareToAzStackHCIDiskInput"
          },
          "x-ms-identifiers": []
        },
        "nicsToInclude": {
          "type": "array",
          "description": "Gets or sets the list of VM NIC to replicate.",
          "items": {
            "$ref": "#/definitions/VMwareToAzStackHCINicInput"
          },
          "x-ms-identifiers": []
        },
        "protectedDisks": {
          "type": "array",
          "description": "Gets or sets the list of protected disks.",
          "items": {
            "$ref": "#/definitions/VMwareToAzStackHCIProtectedDiskProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "protectedNics": {
          "type": "array",
          "description": "Gets or sets the VM NIC details.",
          "items": {
            "$ref": "#/definitions/VMwareToAzStackHCIProtectedNicProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "targetVmBiosId": {
          "type": "string",
          "description": "Gets or sets the BIOS Id of the target AzStackHCI VM.",
          "readOnly": true
        },
        "targetVmName": {
          "type": "string",
          "description": "Gets or sets the target VM display name."
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "Gets or sets the hypervisor generation of the virtual machine possible values are 1,2.",
          "minLength": 1
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster."
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster."
        },
        "targetCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target CPU cores."
        },
        "isDynamicRam": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory is dynamical."
        },
        "dynamicMemoryConfig": {
          "$ref": "#/definitions/ProtectedItemDynamicMemoryConfig",
          "description": "Protected item dynamic memory config."
        },
        "targetMemoryInMegaBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target memory in mega-bytes."
        },
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the OS.",
          "readOnly": true
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the name of the OS.",
          "readOnly": true
        },
        "firmwareType": {
          "type": "string",
          "description": "Gets or sets the firmware type.",
          "readOnly": true
        },
        "fabricDiscoveryMachineId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the discovered machine.",
          "minLength": 1
        },
        "sourceVmName": {
          "type": "string",
          "description": "Gets or sets the source VM display name.",
          "readOnly": true
        },
        "sourceCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the source VM CPU cores.",
          "readOnly": true
        },
        "sourceMemoryInMegaBytes": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the source VM ram memory size in megabytes.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account Id.",
          "minLength": 1
        },
        "sourceFabricAgentName": {
          "type": "string",
          "description": "Gets or sets the source fabric agent name.",
          "minLength": 1
        },
        "targetFabricAgentName": {
          "type": "string",
          "description": "Gets or sets the target fabric agent name.",
          "minLength": 1
        },
        "sourceApplianceName": {
          "type": "string",
          "description": "Gets or sets the source appliance name.",
          "readOnly": true
        },
        "targetApplianceName": {
          "type": "string",
          "description": "Gets or sets the target appliance name.",
          "readOnly": true
        },
        "failoverRecoveryPointId": {
          "type": "string",
          "description": "Gets or sets the recovery point Id to which the VM was failed over.",
          "readOnly": true
        },
        "lastRecoveryPointReceived": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last recovery point received time.",
          "readOnly": true
        },
        "lastRecoveryPointId": {
          "type": "string",
          "description": "Gets or sets the last recovery point Id.",
          "readOnly": true
        },
        "initialReplicationProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.",
          "readOnly": true
        },
        "migrationProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the migration progress percentage.",
          "readOnly": true
        },
        "resumeProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the resume progress percentage.",
          "readOnly": true
        },
        "resyncProgressPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.",
          "readOnly": true
        },
        "resyncRetryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the resync retry count.",
          "readOnly": true
        },
        "resyncRequired": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether resync is required.",
          "readOnly": true
        },
        "resyncState": {
          "$ref": "#/definitions/VMwareToAzureMigrateResyncState",
          "description": "Gets or sets the resync state.",
          "readOnly": true
        },
        "performAutoResync": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether auto resync is to be done."
        },
        "resumeRetryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the resume retry count.",
          "readOnly": true
        },
        "lastReplicationUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the latest timestamp that replication status is updated.",
          "readOnly": true
        }
      },
      "required": [
        "targetHciClusterId",
        "targetArcClusterCustomLocationId",
        "storageContainerId",
        "targetResourceGroupId",
        "customLocationRegion",
        "disksToInclude",
        "nicsToInclude",
        "hyperVGeneration",
        "fabricDiscoveryMachineId",
        "runAsAccountId",
        "sourceFabricAgentName",
        "targetFabricAgentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItemModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate": {
      "type": "object",
      "description": "VMware to AzStackHCI Protected item model custom properties.",
      "properties": {
        "nicsToInclude": {
          "type": "array",
          "description": "Gets or sets the list of VM NIC to replicate.",
          "items": {
            "$ref": "#/definitions/VMwareToAzStackHCINicInput"
          },
          "x-ms-identifiers": []
        },
        "targetCpuCores": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target CPU cores."
        },
        "isDynamicRam": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory is dynamical."
        },
        "dynamicMemoryConfig": {
          "$ref": "#/definitions/ProtectedItemDynamicMemoryConfig",
          "description": "Protected item dynamic memory config."
        },
        "targetMemoryInMegaBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target memory in mega-bytes."
        },
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the OS."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItemModelCustomPropertiesUpdate"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzStackHCIProtectedNicProperties": {
      "type": "object",
      "description": "VMwareToAzStackHCI NIC properties.",
      "properties": {
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets the NIC mac address.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the NIC label.",
          "readOnly": true
        },
        "isPrimaryNic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this is the primary NIC."
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the network name.",
          "readOnly": true
        },
        "targetNetworkId": {
          "type": "string",
          "description": "Gets or sets the target network Id within AzStackHCI Cluster.",
          "readOnly": true
        },
        "testNetworkId": {
          "type": "string",
          "description": "Gets or sets the target test network Id within AzStackHCI Cluster.",
          "readOnly": true
        },
        "selectionTypeForFailover": {
          "$ref": "#/definitions/VMNicSelection",
          "description": "Gets or sets the selection type of the NIC.",
          "readOnly": true
        }
      }
    },
    "VMwareToAzStackHCIRecoveryPointModelCustomProperties": {
      "type": "object",
      "description": "VMware to AzStackHCI recovery point model custom properties.",
      "properties": {
        "diskIds": {
          "type": "array",
          "description": "Gets or sets the list of the disk Ids.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPointModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCIRecoveryPointModelCustomProperties"
    },
    "VMwareToAzStackHCIReplicationExtensionModelCustomProperties": {
      "type": "object",
      "description": "VMware to AzStackHCI Replication extension model custom properties.",
      "properties": {
        "vmwareFabricArmId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the source VMware fabric.",
          "minLength": 1
        },
        "vmwareSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the VMware site.",
          "readOnly": true
        },
        "azStackHciFabricArmId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the target AzStackHCI fabric.",
          "minLength": 1
        },
        "azStackHciSiteId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the AzStackHCI site.",
          "readOnly": true
        },
        "storageAccountId": {
          "type": "string",
          "description": "Gets or sets the storage account Id."
        },
        "storageAccountSasSecretName": {
          "type": "string",
          "description": "Gets or sets the Sas Secret of storage account."
        },
        "asrServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of ASR.",
          "readOnly": true
        },
        "rcmServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of Rcm.",
          "readOnly": true
        },
        "gatewayServiceUri": {
          "type": "string",
          "description": "Gets or sets the Uri of Gateway.",
          "readOnly": true
        },
        "sourceGatewayServiceId": {
          "type": "string",
          "description": "Gets or sets the gateway service Id of source.",
          "readOnly": true
        },
        "targetGatewayServiceId": {
          "type": "string",
          "description": "Gets or sets the gateway service Id of target.",
          "readOnly": true
        },
        "sourceStorageContainerName": {
          "type": "string",
          "description": "Gets or sets the source storage container name.",
          "readOnly": true
        },
        "targetStorageContainerName": {
          "type": "string",
          "description": "Gets or sets the target storage container name.",
          "readOnly": true
        },
        "resourceLocation": {
          "type": "string",
          "description": "Gets or sets the resource location.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets or sets the subscription.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Gets or sets the resource group.",
          "readOnly": true
        }
      },
      "required": [
        "vmwareFabricArmId",
        "azStackHciFabricArmId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationExtensionModelCustomProperties"
        }
      ],
      "x-ms-discriminator-value": "VMwareToAzStackHCI"
    },
    "VMwareToAzureMigrateResyncState": {
      "type": "string",
      "description": "Gets or sets the resync state.",
      "enum": [
        "None",
        "PreparedForResynchronization",
        "StartedResynchronization"
      ],
      "x-ms-enum": {
        "name": "VMwareToAzureMigrateResyncState",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "None state."
          },
          {
            "name": "PreparedForResynchronization",
            "value": "PreparedForResynchronization",
            "description": "Prepared for resynchronization state."
          },
          {
            "name": "StartedResynchronization",
            "value": "StartedResynchronization",
            "description": "Started resynchronization state."
          }
        ]
      }
    },
    "VaultIdentityModel": {
      "type": "object",
      "description": "Vault model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/VaultIdentityType",
          "description": "Gets or sets the identityType which can be either SystemAssigned or None."
        },
        "principalId": {
          "type": "string",
          "description": "Gets or sets the object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Gets or sets a Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ]
    },
    "VaultIdentityType": {
      "type": "string",
      "description": "Gets or sets the identityType which can be either SystemAssigned or None.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "VaultIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No identity."
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "System assigned identity."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "User assigned identity."
          }
        ]
      }
    },
    "VaultModel": {
      "type": "object",
      "description": "Vault model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultModelProperties",
          "description": "The resource-specific properties for this resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VaultModelListResult": {
      "type": "object",
      "description": "The response of a VaultModel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VaultModel items on this page",
          "items": {
            "$ref": "#/definitions/VaultModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VaultModelProperties": {
      "type": "object",
      "description": "Vault properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state of the vault.",
          "readOnly": true
        },
        "serviceResourceId": {
          "type": "string",
          "description": "Gets or sets the service resource Id.",
          "readOnly": true
        },
        "vaultType": {
          "$ref": "#/definitions/ReplicationVaultType",
          "description": "Gets or sets the type of vault."
        }
      }
    },
    "VaultModelUpdate": {
      "type": "object",
      "description": "Vault model update.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/VaultModelProperties",
          "description": "Vault properties."
        },
        "identity": {
          "$ref": "#/definitions/VaultIdentityModel",
          "description": "Vault identity."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the Id of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the resource.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {}
}
