{
  "swagger": "2.0",
  "info": {
    "title": "SynapseManagementClient",
    "version": "2021-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.Synapse/kustooperations": {
      "get": {
        "tags": [
          "KustoOperations"
        ],
        "operationId": "KustoOperations_List",
        "x-ms-examples": {
          "KustoOperationsList": {
            "$ref": "./examples/KustoOperationsList.json"
          }
        },
        "description": "Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of available operations.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools": {
      "get": {
        "operationId": "KustoPools_ListByWorkspace",
        "summary": "List Kusto pools",
        "description": "List all Kusto pools",
        "tags": [
          "KustoPools"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/KustoPoolListResult"
            },
            "description": "List of Kusto pools under the Workspace."
          },
          "default": {
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "List Kusto pools in a workspace": {
            "$ref": "./examples/KustoPoolsListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}": {
      "get": {
        "tags": [
          "KustoPools"
        ],
        "operationId": "kustoPools_Get",
        "x-ms-examples": {
          "kustoPoolsGet": {
            "$ref": "./examples/KustoPoolsGet.json"
          }
        },
        "description": "Gets a Kusto pool.",
        "parameters": [
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto pool.",
            "schema": {
              "$ref": "#/definitions/KustoPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "KustoPools"
        ],
        "operationId": "kustoPools_CreateOrUpdate",
        "x-ms-examples": {
          "kustoPoolsCreateOrUpdate": {
            "$ref": "./examples/KustoPoolsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Create or update a Kusto pool.",
        "parameters": [
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KustoPool"
            },
            "description": "The Kusto pool parameters supplied to the CreateOrUpdate operation."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the Kusto Pool. Omit this value to always overwrite the current Kusto Pool. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch",
            "description": "Set to '*' to allow a new Kusto Pool to be created, but to prevent updating an existing Kusto Pool. Other values will result in a 412 Pre-condition Failed response."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KustoPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/KustoPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "KustoPools"
        ],
        "operationId": "kustoPools_Update",
        "x-ms-examples": {
          "kustoPoolsUpdate": {
            "$ref": "./examples/KustoPoolsUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Update a Kusto Kusto Pool.",
        "parameters": [
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KustoPoolUpdate"
            },
            "description": "The Kusto pool parameters supplied to the Update operation."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the Kusto Pool. Omit this value to always overwrite the current Kusto Pool. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KustoPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/KustoPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KustoPools"
        ],
        "operationId": "kustoPools_Delete",
        "x-ms-examples": {
          "kustoPoolsDelete": {
            "$ref": "./examples/KustoPoolsDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "description": "Deletes a Kusto pool.",
        "parameters": [
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Kusto Pool deleted successfully."
          },
          "202": {
            "description": "Accepted Kusto Pool deletion request."
          },
          "204": {
            "description": "NoContent -- Kusto Pool does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns the list of databases of the given Kusto pool.",
        "operationId": "Databases_ListByKustoPool",
        "x-ms-examples": {
          "KustoDatabasesListByKustoPool": {
            "$ref": "./examples/KustoDatabasesListByKustoPool.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of databases.",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "KustoPoolDatabasesGet": {
            "$ref": "./examples/KustoPoolDatabasesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a database.",
        "operationId": "Databases_CreateOrUpdate",
        "x-ms-examples": {
          "KustoPoolDatabasesCreateOrUpdate": {
            "$ref": "./examples/KustoPoolDatabasesCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "The database parameters supplied to the CreateOrUpdate operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Databases"
        ],
        "description": "Updates a database.",
        "operationId": "Databases_Update",
        "x-ms-examples": {
          "KustoPoolDatabasesUpdate": {
            "$ref": "./examples/KustoPoolDatabasesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "The database parameters supplied to the Update operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Successfully updated the database.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "description": "Deletes the database with the given name.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "KustoPoolDatabasesDelete": {
            "$ref": "./examples/KustoPoolDatabasesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted database delete request."
          },
          "204": {
            "description": "The specified database does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections": {
      "get": {
        "tags": [
          "DataConnections"
        ],
        "description": "Returns the list of data connections of the given Kusto pool database.",
        "operationId": "DataConnections_ListByDatabase",
        "x-ms-examples": {
          "KustoPoolDataConnectionsListByDatabase": {
            "$ref": "./examples/KustoPoolDataConnectionsListByDatabase.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of data connections.",
            "schema": {
              "$ref": "#/definitions/DataConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections/{dataConnectionName}": {
      "get": {
        "tags": [
          "DataConnections"
        ],
        "description": "Returns a data connection.",
        "operationId": "DataConnections_Get",
        "x-ms-examples": {
          "KustoPoolDataConnectionsGet": {
            "$ref": "./examples/KustoPoolDataConnectionsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified data connection.",
            "schema": {
              "$ref": "#/definitions/DataConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataConnections"
        ],
        "description": "Creates or updates a data connection.",
        "operationId": "DataConnections_CreateOrUpdate",
        "x-ms-examples": {
          "KustoPoolDataConnectionsCreateOrUpdate.json": {
            "$ref": "./examples/KustoPoolDataConnectionsCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataConnection"
            },
            "description": "The data connection parameters supplied to the CreateOrUpdate operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DataConnection"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/DataConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "DataConnections"
        ],
        "description": "Updates a data connection.",
        "operationId": "DataConnections_Update",
        "x-ms-examples": {
          "KustoPoolDataConnectionsUpdate": {
            "$ref": "./examples/KustoPoolDataConnectionsUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataConnection"
            },
            "description": "The data connection parameters supplied to the Update operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the data connection.",
            "schema": {
              "$ref": "#/definitions/DataConnection"
            }
          },
          "201": {
            "description": "Successfully updated the data connection.",
            "schema": {
              "$ref": "#/definitions/DataConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "DataConnections"
        ],
        "description": "Deletes the data connection with the given name.",
        "operationId": "DataConnections_Delete",
        "x-ms-examples": {
          "KustoPoolDataConnectionsDelete": {
            "$ref": "./examples/KustoPoolDataConnectionsDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./workspace.json#/parameters/workspaceNameParameter"
          },
          {
            "$ref": "#/parameters/kustoPoolNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the data connection."
          },
          "202": {
            "description": "Accepted data connection deletion request."
          },
          "204": {
            "description": "The specified data connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "title": "The list of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "title": "The URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "title": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "title": "The operation name.",
          "description": "This is of the format {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "title": "The object that describes the operation.",
          "properties": {
            "provider": {
              "title": "Friendly name of the resource provider.",
              "type": "string"
            },
            "operation": {
              "title": "The operation type.",
              "description": "For example: read, write, delete.",
              "type": "string"
            },
            "resource": {
              "title": "The resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "title": "The friendly name of the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "title": "The intended executor of the operation.",
          "type": "string"
        },
        "properties": {
          "title": "Properties of the operation.",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "KustoPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KustoPool"
          },
          "description": "The list of Kusto pools."
        }
      },
      "description": "The list Kusto pools operation response."
    },
    "AzureSku": {
      "type": "object",
      "required": [
        "name",
        "tier"
      ],
      "properties": {
        "name": {
          "description": "SKU name.",
          "type": "string",
          "enum": [
            "Standard_DS13_v2+1TB_PS",
            "Standard_DS13_v2+2TB_PS",
            "Standard_DS14_v2+3TB_PS",
            "Standard_DS14_v2+4TB_PS",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_L8s",
            "Standard_L16s",
            "Standard_L8s_v2",
            "Standard_L16s_v2",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_L4s",
            "Dev(No SLA)_Standard_D11_v2",
            "Standard_E64i_v3",
            "Standard_E80ids_v4",
            "Standard_E2a_v4",
            "Standard_E4a_v4",
            "Standard_E8a_v4",
            "Standard_E16a_v4",
            "Standard_E8as_v4+1TB_PS",
            "Standard_E8as_v4+2TB_PS",
            "Standard_E16as_v4+3TB_PS",
            "Standard_E16as_v4+4TB_PS",
            "Dev(No SLA)_Standard_E2a_v4"
          ],
          "x-ms-enum": {
            "name": "AzureSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "description": "The number of instances of the cluster.",
          "type": "integer",
          "format": "int32"
        },
        "tier": {
          "description": "SKU tier.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "AzureSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "Azure SKU definition."
    },
    "KustoPoolProperties": {
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the resource.",
          "enum": [
            "Creating",
            "Unavailable",
            "Running",
            "Deleting",
            "Deleted",
            "Stopping",
            "Stopped",
            "Starting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The provisioned state of the resource."
        },
        "uri": {
          "type": "string",
          "readOnly": true,
          "description": "The Kusto Pool URI."
        },
        "dataIngestionUri": {
          "type": "string",
          "readOnly": true,
          "description": "The Kusto Pool data ingestion URI."
        },
        "stateReason": {
          "type": "string",
          "readOnly": true,
          "description": "The reason for the Kusto Pool's current state."
        },
        "engineType": {
          "type": "string",
          "description": "The engine type",
          "enum": [
            "V2",
            "V3"
          ],
          "x-ms-enum": {
            "name": "EngineType",
            "modelAsString": true
          }
        },
        "workspaceUid": {
          "type": "string",
          "description": "The workspace unique identifier."
        }
      },
      "description": "Class representing the Kusto pool properties."
    },
    "KustoPool": {
      "required": [
        "sku"
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the kusto pool."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/KustoPoolProperties",
          "description": "The kusto pool properties."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Class representing a Kusto kusto pool."
    },
    "KustoPoolUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the kusto pool."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The kusto pool properties.",
          "$ref": "#/definitions/KustoPoolProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
        }
      ],
      "description": "Class representing an update to a Kusto kusto pool."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of Kusto databases."
        }
      },
      "description": "The list Kusto databases operation response."
    },
    "Database": {
      "required": [
        "kind"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "kind": {
          "description": "Kind of the database",
          "enum": [
            "ReadWrite",
            "ReadOnlyFollowing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          }
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing a Kusto database.",
      "discriminator": "kind"
    },
    "ReadWriteDatabase": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database properties.",
          "$ref": "#/definitions/ReadWriteDatabaseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Database"
        }
      ],
      "description": "Class representing a read write database.",
      "x-ms-discriminator-value": "ReadWrite"
    },
    "ReadWriteDatabaseProperties": {
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The provisioned state of the resource."
        },
        "softDeletePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
        },
        "hotCachePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept in cache for fast queries in TimeSpan."
        },
        "statistics": {
          "$ref": "#/definitions/DatabaseStatistics",
          "description": "The statistics of the database."
        },
        "isFollowed": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates whether the database is followed."
        }
      },
      "description": "Class representing the Kusto database properties."
    },
    "DatabaseStatistics": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "size": {
          "type": "number",
          "description": "The database size - the total size of compressed data and index in bytes."
        }
      },
      "description": "A class that contains database statistics information."
    },
    "DataConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnection"
          },
          "description": "The list of Kusto data connections."
        }
      },
      "description": "The list Kusto data connections operation response."
    },
    "DataConnection": {
      "required": [
        "kind"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "kind": {
          "description": "Kind of the endpoint for the data connection",
          "enum": [
            "EventHub",
            "EventGrid",
            "IotHub"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataConnectionKind",
            "modelAsString": true
          }
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing a data connection.",
      "discriminator": "kind"
    },
    "EventHubDataConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Event Hub data connection properties to validate.",
          "$ref": "#/definitions/EventHubConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnection"
        }
      ],
      "description": "Class representing an event hub data connection.",
      "x-ms-discriminator-value": "EventHub"
    },
    "IotHubDataConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Iot Hub data connection properties.",
          "$ref": "#/definitions/IotHubConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnection"
        }
      ],
      "description": "Class representing an iot hub data connection.",
      "x-ms-discriminator-value": "IotHub"
    },
    "EventGridDataConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the Event Grid data connection.",
          "$ref": "#/definitions/EventGridConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnection"
        }
      ],
      "description": "Class representing an Event Grid data connection.",
      "x-ms-discriminator-value": "EventGrid"
    },
    "EventHubConnectionProperties": {
      "properties": {
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID of the event hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "$ref": "#/definitions/EventHubDataFormat",
          "description": "The data format of the message. Optionally the data format can be added to each message."
        },
        "eventSystemProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "System properties of the event hub"
        },
        "compression": {
          "$ref": "#/definitions/Compression",
          "description": "The event hub messages compression type"
        },
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The provisioned state of the resource."
        }
      },
      "required": [
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event hub connection properties."
    },
    "IotHubConnectionProperties": {
      "properties": {
        "iotHubResourceId": {
          "type": "string",
          "description": "The resource ID of the Iot hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The iot hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "$ref": "#/definitions/IotHubDataFormat",
          "description": "The data format of the message. Optionally the data format can be added to each message."
        },
        "eventSystemProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "System properties of the iot hub"
        },
        "sharedAccessPolicyName": {
          "type": "string",
          "description": "The name of the share access policy"
        },
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The provisioned state of the resource."
        }
      },
      "required": [
        "iotHubResourceId",
        "consumerGroup",
        "sharedAccessPolicyName"
      ],
      "description": "Class representing the Kusto Iot hub connection properties."
    },
    "EventGridConnectionProperties": {
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "The resource ID of the storage account where the data resides."
        },
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID where the event grid is configured to send events."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "$ref": "#/definitions/EventGridDataFormat",
          "description": "The data format of the message. Optionally the data format can be added to each message."
        },
        "ignoreFirstRecord": {
          "type": "boolean",
          "description": "A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file"
        },
        "blobStorageEventType": {
          "$ref": "#/definitions/BlobStorageEventType",
          "description": "The name of blob storage event type to process."
        },
        "provisioningState": {
          "$ref": "#/definitions/ResourceProvisioningState",
          "description": "The provisioned state of the resource."
        }
      },
      "required": [
        "storageAccountResourceId",
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event grid connection properties."
    },
    "EventHubDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "eventHubDataFormat",
        "modelAsString": true
      }
    },
    "IotHubDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "iotHubDataFormat",
        "modelAsString": true
      }
    },
    "EventGridDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "eventGridDataFormat",
        "modelAsString": true
      }
    },
    "BlobStorageEventType": {
      "description": "The name of blob storage event type to process.",
      "type": "string",
      "enum": [
        "Microsoft.Storage.BlobCreated",
        "Microsoft.Storage.BlobRenamed"
      ],
      "x-ms-enum": {
        "name": "blobStorageEventType",
        "modelAsString": true
      }
    },
    "ResourceProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The provisioned state of the resource.",
      "enum": [
        "Running",
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Moving",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true
      }
    },
    "Compression": {
      "description": "The compression type",
      "type": "string",
      "enum": [
        "None",
        "GZip"
      ],
      "x-ms-enum": {
        "name": "compression",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "kustoPoolNameParameter": {
      "name": "kustoPoolName",
      "in": "path",
      "description": "The name of the Kusto pool.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The Guid of the operation ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database in the Kusto pool.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DataConnectionNameParameter": {
      "name": "dataConnectionName",
      "in": "path",
      "description": "The name of the data connection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
