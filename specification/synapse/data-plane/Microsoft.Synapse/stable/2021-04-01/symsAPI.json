{
  "swagger": "2.0",
  "info": {
    "title": "ArtifactsClient",
    "description": "SyMS API Service Client.",
    "version": "2021-04-01"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/databases/ExecuteChange": {
      "post": {
        "summary": "Batch execution of DDL Payload.",
        "operationId": "ExecuteChange",
        "description": "Batch execution of DDL Payload",
        "x-ms-examples": {
          "Batch execution of DDL Payload": {
            "$ref": "./examples/ExecuteChange.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createArtifactsPayload",
            "in": "body",
            "description": "DDLBatch payload containing artifact drafts to be created or deleted or modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DDLBatch"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully completed the management operation.",
            "schema": {
              "$ref": "#/definitions/SyMSAPIDDLResponses"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/ExecuteChangeWithValidation": {
      "post": {
        "summary": "Batch execution of DDL Payload.",
        "operationId": "ExecuteChangeWithValidation",
        "x-ms-long-running-operation": true,
        "description": "Batch execution of DDL Payload",
        "x-ms-examples": {
          "Batch execution of DDL Payload": {
            "$ref": "./examples/ExecuteChangeWithValidation.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createArtifactsPayload",
            "in": "body",
            "description": "DDLBatch containing artifacts to be Created or Deleted or Modified.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DDLBatch"
            }
          },
          {
            "in": "query",
            "name": "validationType",
            "description": "Validation Type - Currently only IDWValidation is supported",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Returns location header with operation Id"
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases": {
      "get": {
        "summary": "Get all databases in a workspace.",
        "operationId": "ListDatabases",
        "description": "Get all databases in a workspace",
        "x-ms-examples": {
          "Get all databases in a workspace": {
            "$ref": "./examples/ListDatabases.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned details of all the databases in a workspace.",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/{artifactType}s": {
      "get": {
        "summary": "List all Artifacts of a type in a database.",
        "operationId": "ListArtifacts",
        "description": "List all Artifacts of a type in a database",
        "x-ms-examples": {
          "List all Artifacts of a type in a database": {
            "$ref": "./examples/ListArtifacts.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned details of all artifact types in a database.",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/schemas/{schemaName}/{artifactType}s": {
      "get": {
        "summary": "List all artifacts in schema by type.",
        "operationId": "ListArtifactsInSchemaByType",
        "description": "List all Artifacts in schema by type",
        "x-ms-examples": {
          "List all artifacts in schema by type": {
            "$ref": "./examples/ListArtifactsInSchemaByType.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned details of all artifacts by type from schema.",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/tables/{tableName}/partitionInfos": {
      "get": {
        "summary": "List all partition information for a table.",
        "operationId": "ListPartitionInfosForTable",
        "description": "List all partition information for a table",
        "x-ms-examples": {
          "List all partition information for a table": {
            "$ref": "./examples/ListPartitionInfosForTable.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Table name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned partition infos in a table.",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/views/{viewName}/partitionInfos": {
      "get": {
        "summary": "List all partition information for a view.",
        "operationId": "ListPartitionInfosForView",
        "description": "List all partition information for a view",
        "x-ms-examples": {
          "List all partition information for a view": {
            "$ref": "./examples/ListPartitionInfosForView.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned partition infos for a view.",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitionInfos": {
      "get": {
        "summary": "List all partition information for table in schema.",
        "operationId": "ListPartitionInfosForSchemaAndTable",
        "description": "List all partition information for a table in schema",
        "x-ms-examples": {
          "List all partition information for a table in schema": {
            "$ref": "./examples/ListPartitionInfosForSchemaAndTable.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Table name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned partition infos for a table in schema",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/schemas/{schemaName}/views/{viewName}/partitionInfos": {
      "get": {
        "summary": "List all partition information for a view in schema.",
        "operationId": "ListPartitionInfosForSchemaAndView",
        "description": "List all partition information for a view in schema",
        "x-ms-examples": {
          "List all partition information for a view in schema": {
            "$ref": "./examples/ListPartitionInfosForSchemaAndView.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned details of partition infos for the view",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}": {
      "get": {
        "summary": "Get details about a database.",
        "operationId": "GetDatabase",
        "description": "Get details about a database",
        "x-ms-examples": {
          "Get details about a database": {
            "$ref": "./examples/GetDatabase.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned database information",
            "schema": {
              "$ref": "#/definitions/DatabaseEntity"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "summary": "Put a database.",
        "operationId": "PutDatabase",
        "description": "Put a database",
        "x-ms-examples": {
          "Put a database": {
            "$ref": "./examples/PutDatabase.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createArtifactsPayload",
            "in": "body",
            "description": "Database entity payload to create or update a Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseEntity"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully completed creating/updating database",
            "schema": {
              "$ref": "#/definitions/SyMSAPIDDLResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a database.",
        "operationId": "DeleteDatabase",
        "description": "Delete a database",
        "x-ms-examples": {
          "Delete a database": {
            "$ref": "./examples/DeleteDatabase.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/{artifactType}s/{artifactName}": {
      "get": {
        "summary": "Get an artifact from database.",
        "operationId": "GetArtifactFromDB",
        "description": "Get an artifact from database",
        "x-ms-examples": {
          "Get an artifact from database": {
            "$ref": "./examples/GetArtifactFromDB.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned artifact details",
            "schema": {
              "$ref": "#/definitions/MDEntity"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "summary": "Put an artifact in a Database.",
        "operationId": "PutArtifactInDB",
        "description": "Put an artifact in a Database",
        "x-ms-examples": {
          "Put a database": {
            "$ref": "./examples/PutArtifactInDB.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createArtifactsPayload",
            "in": "body",
            "description": "Payload containing artifact entity to be created/modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MDEntity"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation token to get next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "Max page size.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created/updated artifact in Database",
            "schema": {
              "$ref": "#/definitions/SyMSAPIDDLResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an artifact in a Database.",
        "operationId": "DeleteArtifactForDB",
        "description": "Delete an artifact in a Database",
        "x-ms-examples": {
          "Delete an artifact in a Database": {
            "$ref": "./examples/DeleteArtifactForDB.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted artifact from database"
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/{databaseName}/schemas/{schemaName}/{artifactType}s/{artifactName}": {
      "get": {
        "summary": "Get an artifact from schema.",
        "operationId": "GetArtifactFromSchema",
        "description": "Get an artifact from schema",
        "x-ms-examples": {
          "Get an artifact from schema": {
            "$ref": "./examples/GetArtifactFromSchema.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned schema artifact info",
            "schema": {
              "$ref": "#/definitions/MDEntity"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "summary": "Create or Update an artifact in a schema.",
        "operationId": "PutArtifactInSchema",
        "description": "Create or Update an artifact in a schema",
        "x-ms-examples": {
          "Put a database": {
            "$ref": "./examples/PutArtifactInSchema.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createArtifactsPayload",
            "in": "body",
            "description": "Payload containing artifact object to be create/updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MDEntity"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully completed creating/updating artifact in schema",
            "schema": {
              "$ref": "#/definitions/SyMSAPIDDLResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an artifact from Schema.",
        "operationId": "DeleteArtifactFromSchema",
        "description": "Delete an artifact from Schema",
        "x-ms-examples": {
          "Delete an artifact in a Database": {
            "$ref": "./examples/DeleteArtifactFromSchema.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "description": "Database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactType",
            "in": "path",
            "description": "Artifact type.",
            "required": true,
            "type": "string",
            "enum": [
              "DATABASE",
              "TABLE",
              "SCHEMA",
              "VIEW",
              "FUNCTION",
              "PARTITIONINFO",
              "RELATIONSHIP"
            ],
            "x-ms-enum": {
              "name": "SASEntityType",
              "modelAsString": false
            }
          },
          {
            "name": "artifactName",
            "in": "path",
            "description": "Artifact name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted artifact from Schema"
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/databases/operations/{operationId}": {
      "get": {
        "summary": "Get the status of validation by operation Id.",
        "operationId": "GetSyMSOperationStatus",
        "description": "Get the status of validation by operation Id",
        "x-ms-examples": {
          "Get the status of validation by operation Id,": {
            "$ref": "./examples/GetSyMSOperationStatus.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation Id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the status of given operation Id",
            "schema": {
              "$ref": "#/definitions/QueryArtifactsResponse"
            }
          },
          "default": {
            "description": "SyMS error response.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SyMSAPIDDLResponse": {
      "description": "Defines the response for create/publish operation on DDL payload.",
      "type": "object",
      "properties": {
        "ddlType": {
          "$ref": "#/definitions/DDLType"
        },
        "entityName": {
          "description": "Entity name.",
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/ArtifactType"
        },
        "publishStatus": {
          "$ref": "#/definitions/PublishStatus"
        },
        "originObjectId": {
          "description": "Object id maintained by Origin Catalog.",
          "type": "string"
        },
        "objectId": {
          "description": "Object id maintained by SyMS.",
          "type": "string"
        },
        "objectVersion": {
          "description": "Object version maintained by SyMS.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "ddlType",
        "entityName",
        "entityType",
        "publishStatus",
        "originObjectId",
        "objectId",
        "objectVersion"
      ]
    },
    "SyMSAPIDDLResponses": {
      "description": "Defines the publish response.",
      "type": "object",
      "properties": {
        "syMsApiDdlResponse": {
          "description": "List of DDL response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyMSAPIDDLResponse"
          }
        }
      },
      "required": [
        "syMsApiDdlResponse"
      ]
    },
    "DataSource": {
      "description": "Data source properties.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Data source provider information.",
          "type": "string"
        },
        "location": {
          "description": "Data source location.",
          "type": "string"
        },
        "properties": {
          "description": "Property bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "location"
      ]
    },
    "Namespace": {
      "description": "Namespace.",
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "Database name.",
          "type": "string"
        }
      },
      "required": [
        "databaseName"
      ]
    },
    "TableNamespace": {
      "description": "Table namespace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Namespace"
        }
      ],
      "properties": {
        "schemaName": {
          "description": "Schema name.",
          "type": "string"
        }
      }
    },
    "PartitionInfoNamespace": {
      "description": "Partition information namespace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TableNamespace"
        }
      ],
      "properties": {
        "tableName": {
          "description": "Table name.",
          "type": "string"
        }
      },
      "required": [
        "tableName"
      ]
    },
    "FormatInfo": {
      "description": "Format information.",
      "type": "object",
      "properties": {
        "inputFormat": {
          "description": "Input Format to be used",
          "type": "string"
        },
        "outputFormat": {
          "description": "Output Format to be used",
          "type": "string"
        },
        "formatType": {
          "description": "Format Type to be used to be used (csv, parquet, etc.)",
          "type": "string"
        },
        "properties": {
          "description": "Property bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "serDeName": {
          "description": "SerDe name.",
          "type": "string"
        },
        "serializeLib": {
          "description": "Serialization Library to be used by Spark (org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe)",
          "type": "string"
        }
      },
      "required": [
        "inputFormat",
        "outputFormat",
        "formatType",
        "serializeLib"
      ]
    },
    "Sorting": {
      "description": "Column sorting.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Name of column.",
          "type": "string"
        },
        "sortOrder": {
          "$ref": "#/definitions/SortOrder"
        }
      },
      "required": [
        "keyName",
        "sortOrder"
      ]
    },
    "DistributionInfo": {
      "description": "Distribution information.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Distribution type.",
          "type": "string"
        },
        "keys": {
          "description": "Distribution keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "count": {
          "description": "Distribution count.",
          "type": "integer",
          "format": "int32"
        },
        "sortKeys": {
          "description": "Distribution sort keys.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sorting"
          }
        }
      }
    },
    "TypeInfo": {
      "description": "Type information",
      "type": "object",
      "properties": {
        "typeFamily": {
          "description": "Type family.",
          "type": "string"
        },
        "typeName": {
          "description": "Type name.",
          "type": "string"
        },
        "isTableType": {
          "description": "Is Table type.",
          "type": "boolean"
        },
        "isComplexType": {
          "description": "Is Complex type.",
          "type": "boolean"
        },
        "isNullable": {
          "description": "Is Nullable.",
          "type": "boolean"
        },
        "length": {
          "description": "Length.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Precision.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Scale.",
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "description": "Property bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "typeName"
      ]
    },
    "ScalarTypeInfo": {
      "description": "Scalar type information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TypeInfo"
        }
      ]
    },
    "DataColumn": {
      "description": "Data column.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "originDataTypeName": {
          "$ref": "#/definitions/TypeInfo"
        }
      },
      "required": [
        "name",
        "originDataTypeName"
      ]
    },
    "StorageDescriptor": {
      "description": "Storage descriptor",
      "type": "object",
      "properties": {
        "distribution": {
          "description": "Storage descriptor information.",
          "$ref": "#/definitions/DistributionInfo"
        },
        "columns": {
          "description": "Column information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataColumn"
          }
        },
        "format": {
          "description": "Storage descriptor format information.",
          "$ref": "#/definitions/FormatInfo"
        },
        "source": {
          "description": "Storage descriptor data source information.",
          "$ref": "#/definitions/DataSource"
        },
        "properties": {
          "description": "Property bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "serDeInfo": {
          "description": "SerDe information.",
          "type": "object"
        }
      },
      "required": [
        "columns",
        "format",
        "source"
      ]
    },
    "MDEntity": {
      "description": "MD Entity",
      "type": "object",
      "properties": {
        "name": {
          "description": "Entity Name.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ArtifactType"
        },
        "id": {
          "description": "Entity Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "MDEntityProperties": {
      "description": "Defines the artifact entity.",
      "type": "object",
      "properties": {
        "originObjectId": {
          "description": "Entity object id maintained by the caller.",
          "type": "string"
        },
        "objectId": {
          "description": "Entity object id maintained by SyMS.",
          "type": "string",
          "readOnly": true
        },
        "objectVersion": {
          "description": "Entity object version maintained by SyMS.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "publishStatus": {
          "$ref": "#/definitions/PublishStatus"
        },
        "properties": {
          "description": "Property bag",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DatabaseProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/DataSource"
        },
        "description": {
          "description": "Description of the database.",
          "type": "string"
        }
      },
      "required": [
        "source"
      ]
    },
    "PartitionInfoProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/PartitionInfoNamespace"
        },
        "storageDescriptor": {
          "$ref": "#/definitions/StorageDescriptor"
        },
        "partitionKeyValues": {
          "description": "Partition key values.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "namespace",
        "storageDescriptor",
        "partitionKeyValues"
      ]
    },
    "SchemaProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/Namespace"
        }
      },
      "required": [
        "namespace"
      ]
    },
    "ViewEntityProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/TableNamespace"
        },
        "partitioning": {
          "$ref": "#/definitions/TablePartitioning"
        },
        "storageDescriptor": {
          "$ref": "#/definitions/StorageDescriptor"
        },
        "viewOriginalText": {
          "description": "View original text.",
          "type": "string"
        },
        "viewExpandedText": {
          "description": "View expanded text.",
          "type": "string"
        },
        "temporary": {
          "description": "Temporary.",
          "type": "boolean"
        },
        "isRewriteEnabled": {
          "description": "Is rewrite enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "namespace",
        "storageDescriptor"
      ]
    },
    "RelationshipProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/Namespace"
        },
        "fromTableId": {
          "description": "From Table Id",
          "type": "string",
          "readOnly": true
        },
        "fromTableName": {
          "description": "From Table Name",
          "type": "string"
        },
        "toTableId": {
          "description": "To Table Id",
          "type": "string",
          "readOnly": true
        },
        "toTableName": {
          "description": "To Table Name",
          "type": "string"
        },
        "relationshipType": {
          "$ref": "#/definitions/RelationshipType"
        },
        "columnRelationshipInformations": {
          "description": "List of Column Relationships.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnRelationshipInformation"
          }
        }
      },
      "required": [
        "namespace",
        "fromTableName",
        "toTableName",
        "columnRelationshipInformations"
      ]
    },
    "TableProperties": {
      "description": "Database properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntityProperties"
        }
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/TableNamespace"
        },
        "partitioning": {
          "$ref": "#/definitions/TablePartitioning"
        },
        "tableType": {
          "$ref": "#/definitions/TableType"
        },
        "storageDescriptor": {
          "$ref": "#/definitions/StorageDescriptor"
        },
        "temporary": {
          "description": "Temporary.",
          "type": "boolean"
        },
        "isRewriteEnabled": {
          "description": "Is rewrite enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "namespace",
        "tableType",
        "storageDescriptor"
      ]
    },
    "partitionInfo": {
      "description": "partition information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartitionInfoProperties"
        }
      }
    },
    "TablePartitioning": {
      "description": "Table partitioning information.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "Table partitioning keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partitionFunctionType": {
          "description": "Partition Function Type (ex. value)",
          "type": "string"
        }
      },
      "required": [
        "keys",
        "partitionFunctionType"
      ]
    },
    "DatabaseEntity": {
      "description": "Database entity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "SchemaEntity": {
      "description": "schema entity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "ViewEntity": {
      "description": "View entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ViewEntityProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "RelationshipEntity": {
      "description": "Relationship Entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationshipProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "TableEntity": {
      "description": "Table entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MDEntity"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "DDLPayload": {
      "description": "DDL payload",
      "type": "object",
      "properties": {
        "actionType": {
          "$ref": "#/definitions/DDLType"
        },
        "oldEntity": {
          "$ref": "#/definitions/MDEntity"
        },
        "newEntity": {
          "$ref": "#/definitions/MDEntity"
        }
      },
      "required": [
        "actionType"
      ]
    },
    "DDLBatch": {
      "description": "DDL batch.",
      "type": "object",
      "properties": {
        "ddls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DDLPayload"
          }
        }
      },
      "required": [
        "ddls"
      ]
    },
    "QueryArtifactsResponse": {
      "description": "Query artifacts response.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "description": "MDEntity (Database/Table/Schema/View/PartitionInfo/PermissionAssignment",
            "type": "object"
          }
        },
        "continuationToken": {
          "description": "Continuation token to get next page.",
          "type": "string"
        }
      }
    },
    "ColumnRelationshipInformation": {
      "description": "Column information for relationship",
      "type": "object",
      "properties": {
        "fromColumnName": {
          "description": "From Column Name",
          "type": "string"
        },
        "toColumnName": {
          "description": "To Column Name",
          "type": "string"
        }
      },
      "required": [
        "fromColumnName",
        "toColumnName"
      ]
    },
    "DDLType": {
      "description": "DDL type.",
      "type": "string",
      "enum": [
        "CREATE",
        "ALTER",
        "DROP"
      ],
      "x-ms-enum": {
        "name": "DDLType",
        "modelAsString": false
      }
    },
    "PublishStatus": {
      "description": "Publish status.",
      "type": "string",
      "enum": [
        "PUBLISHED"
      ],
      "x-ms-enum": {
        "name": "PublishStatus",
        "modelAsString": false
      }
    },
    "ArtifactType": {
      "description": "Artifact type.",
      "type": "string",
      "enum": [
        "DATABASE",
        "TABLE",
        "SCHEMA",
        "VIEW",
        "FUNCTION",
        "PARTITIONINFO",
        "RELATIONSHIP"
      ],
      "x-ms-enum": {
        "name": "SASEntityType",
        "modelAsString": false
      }
    },
    "TableType": {
      "description": "Entity type.",
      "type": "string",
      "enum": [
        "MANAGED",
        "EXTERNAL"
      ],
      "x-ms-enum": {
        "name": "TableType",
        "modelAsString": false
      }
    },
    "SortOrder": {
      "description": "Sorting order.",
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "x-ms-enum": {
        "name": "SortOrder",
        "modelAsString": false
      }
    },
    "RelationshipType": {
      "description": "Relation Type",
      "type": "string",
      "enum": [
        "ONETOONE",
        "ONETOMANY",
        "MANYTOONE",
        "MANYTOMANY"
      ],
      "x-ms-enum": {
        "name": "RelationshipType",
        "modelAsString": false
      }
    },
    "ValidationType": {
      "description": "Validation Type",
      "type": "string",
      "enum": [
        "IDWValidation"
      ],
      "x-ms-enum": {
        "name": "ValidationType",
        "modelAsString": false
      }
    },
    "ValidationStatus": {
      "description": "Validation Status",
      "type": "string",
      "enum": [
        "VALID",
        "INVALID"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": false
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "client",
      "description": "The Synapse client API Version."
    },
    "Endpoint": {
      "name": "endpoint",
      "type": "string",
      "format": "url",
      "in": "path",
      "required": true,
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client",
      "description": "The workspace development endpoint, for example `https://myworkspace.dev.azuresynapse.net`."
    }
  }
}
