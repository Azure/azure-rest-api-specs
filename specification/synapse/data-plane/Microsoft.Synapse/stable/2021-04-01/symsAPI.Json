{
	"swagger":"2.0",
	"info":{
	   "title":"SyMSAPIServiceClient",
	   "description":"SyMS API Service Client.",
	   "version":"2021-04-01"
	},
	"x-ms-parameterized-host":{
	   "hostTemplate":"{endpoint}",
	   "useSchemePrefix":false,
	   "parameters":[
		  {
			 "$ref":"#/parameters/Endpoint"
		  }
	   ]
	},
	"schemes":[
	   "https"
	],
	"consumes":[
	   "application/json"
	],
	"produces":[
	   "application/json"
	],
	"paths":{
	   "/databases/ExecuteChange":{
		  "post":{
			 "summary":"Batch execution of DDL Payload",
			 "operationId":"ExecuteChange",
			 "description":"Batch execution of DDL Payload",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"createArtifactsPayload",
				   "in":"body",
				   "description":"DDLBatch payload containing artifact drafts to be created or deleted or modified",
				   "required":true,
				   "schema":{
					  "$ref":"#/definitions/DDLBatch"
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully completed the management operation.",
				   "schema":{
					  "$ref":"#/definitions/SyMSAPIDDLResponses"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/ExecuteChangeWithValidation":{
		  "post":{
			 "summary":"Batch execution of DDL Payload",
			 "operationId":"ExecuteChangeWithValidation",
			 "description":"Batch execution of DDL Payload",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"createArtifactsPayload",
				   "in":"body",
				   "description":"DDLBatch containing artifacts to be Created or Deleted or Modified.",
				   "required":true,
				   "schema":{
					  "$ref":"#/definitions/DDLBatch"
				   }
				},
				{
				   "in":"query",
				   "name":"ValidationType",
				   "description":"Validation Type - Currently only IDWValidation is supported",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"202":{
				   "description":"Returns location header with operation Id"
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases":{
		  "get":{
			 "summary":"Get all databases in a workspace.",
			 "operationId":"ListDatabases",
			 "description":"Get all databases in a workspace.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned details of all the databases in a workspace.",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/{artifactType}s":{
		  "get":{
			 "summary":"List all Artifacts of a type in a database.",
			 "operationId":"ListArtifacts",
			 "description":"List all Artifacts of a type in a database.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned details of all artifact types in a database.",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/schemas/{schemaName}/{artifactType}s":{
		  "get":{
			 "summary":"List all artifacts in schema by type.",
			 "operationId":"ListArtifactsInSchemaByType",
			 "description":"List all Artifacts in schema by type.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned details of all artifacts by type from schema.",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/tables/{tableName}/partitionInfos":{
		  "get":{
			 "summary":"List all partition information for a table.",
			 "operationId":"ListPartitionInfosForTable",
			 "description":"List all partition information for a table.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"tableName",
				   "in":"path",
				   "description":"Table name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned partition infos in a table.",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/views/{viewName}/partitionInfos":{
		  "get":{
			 "summary":"List all partition information for a view.",
			 "operationId":"ListPartitionInfosForView",
			 "description":"Get all partition information for a view.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"viewName",
				   "in":"path",
				   "description":"View name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned partition infos for a view.",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitionInfos":{
		  "get":{
			 "summary":"List all partition information for table in schema",
			 "operationId":"ListPartitionInfosForSchemaAndTable",
			 "description":"List all partition information for a table in schema",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"tableName",
				   "in":"path",
				   "description":"Table name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned partition infos for a table in schema",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/schemas/{schemaName}/views/{viewName}/partitionInfos":{
		  "get":{
			 "summary":"List all partition information for a view in schema",
			 "operationId":"ListPartitionInfosForSchemaAndView",
			 "description":"List all partition information for a view in schema",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"viewName",
				   "in":"path",
				   "description":"View name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned details of partition infos for the view",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}":{
		  "get":{
			 "summary":"Get details about a database.",
			 "operationId":"GetDatabase",
			 "description":"Get details about a database.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned database information",
				   "schema":{
					  "$ref":"#/definitions/DatabaseEntity"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "put":{
			 "summary":"Put a database.",
			 "operationId":"PutDatabase",
			 "description":"Put a database.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"createArtifactsPayload",
				   "in":"body",
				   "description":"Database entity payload to create or update a Database",
				   "required":true,
				   "schema":{
					  "$ref":"#/definitions/DatabaseEntity"
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully completed creating/updating database",
				   "schema":{
					  "$ref":"#/definitions/SyMSAPIDDLResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "delete":{
			 "summary":"Delete a database.",
			 "operationId":"DeleteDatabase",
			 "description":"Delete a database.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully deleted the database."
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/{artifactType}s/{artifactName}":{
		  "get":{
			 "summary":"Get an artifact from database",
			 "operationId":"GetArtifactFromDB",
			 "description":"Get an artifact from database",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned artifact details",
				   "schema":{
					  "$ref":"#/definitions/MDEntity"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "put":{
			 "summary":"Put an artifact in a Database",
			 "operationId":"PutArtifactInDB",
			 "description":"Put an artifact in a Database",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"createArtifactsPayload",
				   "in":"body",
				   "description":"Payload containing artifact entity to be created/modified",
				   "required":true,
				   "schema":{
					  "$ref":"#/definitions/MDEntity"
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				},
				{
				   "name":"continuationToken",
				   "in":"query",
				   "description":"Continuation token to get next page.",
				   "required":false,
				   "type":"string"
				},
				{
				   "name":"maxPageSize",
				   "in":"query",
				   "description":"Max page size.",
				   "required":false,
				   "type":"integer",
				   "format":"int64"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully created/updated artifact in Database",
				   "schema":{
					  "$ref":"#/definitions/SyMSAPIDDLResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "delete":{
			 "summary":"Delete an artifact in a Database",
			 "operationId":"DeleteArtifactForDB",
			 "description":"Delete an artifact in a Database",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully deleted artifact from database"
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/{databaseName}/schemas/{schemaName}/{artifactType}s/{artifactName}":{
		  "get":{
			 "summary":"Get an artifact from schema",
			 "operationId":"GetArtifactFromSchema",
			 "description":"Get an artifact from schema",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned schema artifact info",
				   "schema":{
					  "$ref":"#/definitions/MDEntity"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "put":{
			 "summary":"Create or Update an artifact in a schema",
			 "operationId":"PutArtifactInSchema",
			 "description":"Create or Update an artifact in a schema",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"createArtifactsPayload",
				   "in":"body",
				   "description":"Payload containing artifact object to be create/updated",
				   "required":true,
				   "schema":{
					  "$ref":"#/definitions/MDEntity"
				   }
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully completed creating/updating artifact in schema",
				   "schema":{
					  "$ref":"#/definitions/SyMSAPIDDLResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  },
		  "delete":{
			 "summary":"Delete an artifact from Schema.",
			 "operationId":"DeleteArtifactFromSchema",
			 "description":"Delete an artifact from Schema.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"databaseName",
				   "in":"path",
				   "description":"Database name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"schemaName",
				   "in":"path",
				   "description":"Schema name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "name":"artifactType",
				   "in":"path",
				   "description":"Artifact type.",
				   "required":true,
				   "type":"string",
				   "enum":[
					  "DATABASE",
					  "TABLE",
					  "SCHEMA",
					  "VIEW",
					  "FUNCTION",
					  "PARTITIONINFO",
					  "RELATIONSHIP"
				   ],
				   "x-ms-enum":{
					  "name":"SASEntityType",
					  "modelAsString":false
				   }
				},
				{
				   "name":"artifactName",
				   "in":"path",
				   "description":"Artifact name.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully deleted artifact from Schema"
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   },
	   "/databases/operations/{operationId}":{
		  "get":{
			 "summary":"Get the status of validation by operation Id,",
			 "operationId":"GetSyMSOperationStatus",
			 "description":"Get the status of validation by operation Id.",
			 "produces":[
				"application/json"
			 ],
			 "parameters":[
				{
				   "name":"operationId",
				   "in":"path",
				   "description":"Operation Id.",
				   "required":true,
				   "type":"string"
				},
				{
				   "$ref":"#/parameters/ApiVersionParameter"
				},
				{
					"$ref": "#/parameters/UserAgentParameter"
				}
			 ],
			 "responses":{
				"200":{
				   "description":"Successfully returned the status of given operation Id",
				   "schema":{
					  "$ref":"#/definitions/QueryArtifactsResponse"
				   }
				},
				"default":{
				   "description":"SyMS error response.",
				   "schema":{
					  "$ref":"#/definitions/CloudError"
				   }
				}
			 }
		  }
	   }
	},
	"definitions":{
	   "SyMSAPIDDLResponse":{
		  "description":"Defines the response for create/publish operation on DDL payload.",
		  "type":"object",
		  "properties":{
			 "DDLType":{
				"$ref":"#/definitions/DDLType"
			 },
			 "EntityName":{
				"description":"Entity name.",
				"type":"string"
			 },
			 "EntityType":{
				"$ref":"#/definitions/ArtifactType"
			 },
			 "PublishStatus":{
				"$ref":"#/definitions/PublishStatus"
			 },
			 "OriginObjectId":{
				"description":"Object id maintained by Origin Catalog.",
				"type":"string"
			 },
			 "ObjectId":{
				"description":"Object id maintained by SyMS.",
				"type":"string"
			 },
			 "ObjectVersion":{
				"description":"Object version maintained by SyMS.",
				"type":"integer",
				"format":"int64"
			 }
		  },
		  "required":[
			 "DDLType",
			 "EntityName",
			 "EntityType",
			 "PublishStatus",
			 "OriginObjectId",
			 "ObjectId",
			 "ObjectVersion"
		  ]
	   },
	   "SyMSAPIDDLResponses":{
		  "description":"Defines the publish response.",
		  "type":"object",
		  "properties":{
			 "SyMSAPIDDLResponse":{
				"description":"List of DDL response.",
				"type":"array",
				"items":{
				   "$ref":"#/definitions/SyMSAPIDDLResponse"
				}
			 }
		  },
		  "required":[
			 "SyMSAPIDDLResponse"
		  ]
	   },
	   "DataSource":{
		  "description":"Data source properties.",
		  "type":"object",
		  "properties":{
			 "Provider":{
				"description":"Data source provider information.",
				"type":"string"
			 },
			 "Location":{
				"description":"Data source location.",
				"type":"string"
			 },
			 "Properties":{
				"description":"Property bag.",
				"type":"object",
				"additionalProperties":{
				   "type":"object"
				}
			 }
		  },
		  "required":[
			 "Location"
		  ]
	   },
	   "Namespace":{
		  "description":"Namespace.",
		  "type":"object",
		  "properties":{
			 "DatabaseName":{
				"description":"Database name.",
				"type":"string"
			 }
		  },
		  "required":[
			 "DatabaseName"
		  ]
	   },
	   "TableNamespace":{
		  "description":"Table namespace.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/Namespace"
			 }
		  ],
		  "properties":{
			 "SchemaName":{
				"description":"Schema name.",
				"type":"string"
			 }
		  }
	   },
	   "PartitionInfoNamespace":{
		  "description":"Partition information namespace.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/TableNamespace"
			 }
		  ],
		  "properties":{
			 "TableName":{
				"description":"Table name.",
				"type":"string"
			 }
		  },
		  "required":[
			 "TableName"
		  ]
	   },
	   "FormatInfo":{
		  "description":"Format information.",
		  "type":"object",
		  "properties":{
			 "InputFormat":{
				"$ref":"#/definitions/InputFormat"
			 },
			 "OutputFormat":{
				"$ref":"#/definitions/OutputFormat"
			 },
			 "FormatType":{
				"$ref":"#/definitions/FormatType"
			 },
			 "Properties":{
				"description":"Property bag.",
				"type":"object",
				"additionalProperties":{
				   "type":"object"
				}
			 },
			 "SerDeName":{
				"description":"SerDe name.",
				"type":"string"
			 },
			 "SerializeLib":{
				"$ref":"#/definitions/SerializeLib"
			 }
		  },
		  "required":[
			 "InputFormat",
			 "OutputFormat",
			 "FormatType",
			 "SerializeLib"
		  ]
	   },
	   "Sorting":{
		  "description":"Column sorting.",
		  "type":"object",
		  "properties":{
			 "KeyName":{
				"description":"Name of column.",
				"type":"string"
			 },
			 "SortOrder":{
				"$ref":"#/definitions/SortOrder"
			 }
		  },
		  "required":[
			 "KeyName",
			 "SortOrder"
		  ]
	   },
	   "DistributionInfo":{
		  "description":"Distribution information.",
		  "type":"object",
		  "properties":{
			 "Type":{
				"description":"Distribution type.",
				"type":"string"
			 },
			 "Keys":{
				"description":"Distribution keys.",
				"type":"array",
				"items":{
				   "type":"string"
				}
			 },
			 "Count":{
				"description":"Distribution count.",
				"type":"integer"
			 },
			 "SortKeys":{
				"description":"Distribution sort keys.",
				"type":"array",
				"items":{
				   "$ref":"#/definitions/Sorting"
				}
			 }
		  }
	   },
	   "TypeInfo":{
		  "description":"Type information",
		  "type":"object",
		  "properties":{
			 "TypeFamily":{
				"description":"Type family.",
				"type":"string"
			 },
			 "TypeName":{
				"description":"Type name.",
				"type":"string"
			 },
			 "IsTableType":{
				"description":"Is Table type.",
				"type":"boolean"
			 },
			 "IsComplexType":{
				"description":"Is Complex type.",
				"type":"boolean"
			 },
			 "IsNullable":{
				"description":"Is Nullable.",
				"type":"boolean"
			 },
			 "Length":{
				"description":"Length.",
				"type":"integer"
			 },
			 "Precision":{
				"description":"Precision.",
				"type":"integer"
			 },
			 "Scale":{
				"description":"Scale.",
				"type":"integer"
			 },
			 "Properties":{
				"description":"Property bag.",
				"type":"object",
				"additionalProperties":{
				   "type":"object"
				}
			 }
		  },
		  "required":[
			 "TypeName"
		  ]
	   },
	   "ScalarTypeInfo":{
		  "description":"Scalar type information",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/TypeInfo"
			 }
		  ]
	   },
	   "DataColumn":{
		  "description":"Data column.",
		  "type":"object",
		  "properties":{
			 "Name":{
				"description":"Column name.",
				"type":"string"
			 },
			 "OriginDataTypeName":{
				"$ref":"#/definitions/TypeInfo"
			 }
		  },
		  "required":[
			 "Name",
			 "OriginDataTypeName"
		  ]
	   },
	   "StorageDescriptor":{
		  "description":"Storage descriptor",
		  "type":"object",
		  "properties":{
			 "Distribution":{
				"description":"Storage descriptor information.",
				"$ref":"#/definitions/DistributionInfo"
			 },
			 "Columns":{
				"description":"Column information.",
				"type":"array",
				"items":{
				   "$ref":"#/definitions/DataColumn"
				}
			 },
			 "Format":{
				"description":"Storage descriptor format information.",
				"$ref":"#/definitions/FormatInfo"
			 },
			 "Source":{
				"description":"Storage descriptor data source information.",
				"$ref":"#/definitions/DataSource"
			 },
			 "Properties":{
				"description":"Property bag.",
				"type":"object",
				"additionalProperties":{
				   "type":"object"
				}
			 },
			 "SerDeInfo":{
				"description":"SerDe information.",
				"type":"object"
			 }
		  },
		  "required":[
			 "Columns",
			 "Format",
			 "Source"
		  ]
	   },
	   "MDEntity":{
		  "description":"MD Entity",
		  "type":"object",
		  "properties":{
			 "name":{
				"description":"Entity Name.",
				"type":"string"
			 },
			 "type":{
				"$ref":"#/definitions/ArtifactType"
			 },
			 "id":{
				"description":"Entity Resource Id.",
				"type":"string",
				"readOnly":true
			 },
			 "properties":{
				"type":"object"
			 }
		  },
		  "required":[
			 "name",
			 "type"
		  ]
	   },
	   "MDEntityProperties":{
		  "description":"Defines the artifact entity.",
		  "type":"object",
		  "properties":{
			 "OriginObjectId":{
				"description":"Entity object id maintained by the caller.",
				"type":"string"
			 },
			 "ObjectId":{
				"description":"Entity object id maintained by SyMS.",
				"type":"string",
				"readOnly":true
			 },
			 "ObjectVersion":{
				"description":"Entity object version maintained by SyMS.",
				"type":"integer",
				"format":"int64",
				"readOnly":true
			 },
			 "PublishStatus":{
				"$ref":"#/definitions/PublishStatus"
			 },
			 "Properties":{
				"description":"Property bag",
				"type":"object",
				"additionalProperties":{
				   "type":"object"
				}
			 }
		  }
	   },
	   "DatabaseProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Source":{
				"$ref":"#/definitions/DataSource"
			 },
			 "Description":{
				"description":"Description of the database.",
				"type":"string"
			 }
		  },
		  "required":[
			 "Source"
		  ]
	   },
	   "PartitionInfoProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Namespace":{
				"$ref":"#/definitions/PartitionInfoNamespace"
			 },
			 "StorageDescriptor":{
				"$ref":"#/definitions/StorageDescriptor"
			 },
			 "PartitionKeyValues":{
				"description":"Partition key values.",
				"type":"array",
				"items":{
				   "type":"object"
				}
			 }
		  },
		  "required":[
			 "Namespace",
			 "StorageDescriptor",
			 "PartitionKeyValues"
		  ]
	   },
	   "SchemaProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Namespace":{
				"$ref":"#/definitions/Namespace"
			 }
		  },
		  "required":[
			 "Namespace"
		  ]
	   },
	   "ViewEntityProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Namespace":{
				"$ref":"#/definitions/TableNamespace"
			 },
			 "Partitioning":{
				"$ref":"#/definitions/TablePartitioning"
			 },
			 "StorageDescriptor":{
				"$ref":"#/definitions/StorageDescriptor"
			 },
			 "ViewOriginalText":{
				"description":"View original text.",
				"type":"string"
			 },
			 "ViewExpandedText":{
				"description":"View expanded text.",
				"type":"string"
			 },
			 "Temporary":{
				"description":"Temporary.",
				"type":"boolean"
			 },
			 "IsRewriteEnabled":{
				"description":"Is rewrite enabled.",
				"type":"boolean"
			 }
		  },
		  "required":[
			 "Namespace",
			 "StorageDescriptor"
		  ]
	   },
	   "RelationshipProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Namespace":{
				"$ref":"#/definitions/Namespace"
			 },
			 "FromTableId":{
				"description":"From Table Id",
				"type":"string",
				"readOnly":true
			 },
			 "FromTableName":{
				"description":"From Table Name",
				"type":"string"
			 },
			 "ToTableId":{
				"description":"To Table Id",
				"type":"string",
				"readOnly":true
			 },
			 "ToTableName":{
				"description":"To Table Name",
				"type":"string"
			 },
			 "RelationshipType":{
				"$ref":"#/definitions/RelationshipType"
			 },
			 "ColumnRelationshipInformations":{
				"description":"List of Column Relationships.",
				"type":"array",
				"items":{
				   "$ref":"#/definitions/ColumnRelationshipInformation"
				}
			 }
		  },
		  "required":[
			 "Namespace",
			 "FromTableName",
			 "ToTableName",
			 "ColumnRelationshipInformations"
		  ]
	   },
	   "TableProperties":{
		  "description":"Database properties.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntityProperties"
			 }
		  ],
		  "properties":{
			 "Namespace":{
				"$ref":"#/definitions/TableNamespace"
			 },
			 "Partitioning":{
				"$ref":"#/definitions/TablePartitioning"
			 },
			 "TableType":{
				"$ref":"#/definitions/TableType"
			 },
			 "StorageDescriptor":{
				"$ref":"#/definitions/StorageDescriptor"
			 },
			 "Temporary":{
				"description":"Temporary.",
				"type":"boolean"
			 },
			 "IsRewriteEnabled":{
				"description":"Is rewrite enabled.",
				"type":"boolean"
			 }
		  },
		  "required":[
			 "Namespace",
			 "TableType",
			 "StorageDescriptor"
		  ]
	   },
	   "PartitionInfo":{
		  "description":"Partition information.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/PartitionInfoProperties"
			 }
		  },
		  "required":[
			 "Namespace",
			 "StorageDescriptor",
			 "PartitionKeyValues"
		  ]
	   },
	   "TablePartitioning":{
		  "description":"Table partitioning information.",
		  "type":"object",
		  "properties":{
			 "Keys":{
				"description":"Table partitioning keys.",
				"type":"array",
				"items":{
				   "type":"string"
				}
			 },
			 "PartitionFunctionType":{
				"$ref":"#/definitions/PartitionFunctionType"
			 }
		  },
		  "required":[
			 "Keys",
			 "PartitionFunctionType"
		  ]
	   },
	   "DatabaseEntity":{
		  "description":"Database entity.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/DatabaseProperties"
			 }
		  },
		  "required":[
			 "properties"
		  ]
	   },
	   "SchemaEntity":{
		  "description":"Schema entity.",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/SchemaProperties"
			 }
		  },
		  "required":[
			 "properties"
		  ]
	   },
	   "ViewEntity":{
		  "description":"View entity",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/ViewEntityProperties"
			 }
		  },
		  "required":[
			 "properties"
		  ]
	   },
	   "RelationshipEntity":{
		  "description":"Relationship Entity",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/RelationshipProperties"
			 }
		  },
		  "required":[
			 "properties"
		  ]
	   },
	   "TableEntity":{
		  "description":"Table entity",
		  "type":"object",
		  "allOf":[
			 {
				"$ref":"#/definitions/MDEntity"
			 }
		  ],
		  "properties":{
			 "properties":{
				"$ref":"#/definitions/TableProperties"
			 }
		  },
		  "required":[
			 "properties"
		  ]
	   },
	   "DDLPayload":{
		  "description":"DDL payload",
		  "type":"object",
		  "properties":{
			 "ActionType":{
				"$ref":"#/definitions/DDLType"
			 },
			 "OldEntity":{
				"$ref":"#/definitions/MDEntity"
			 },
			 "NewEntity":{
				"$ref":"#/definitions/MDEntity"
			 }
		  },
		  "required":[
			 "ActionType"
		  ]
	   },
	   "DDLBatch":{
		  "description":"DDL batch.",
		  "type":"object",
		  "properties":{
			 "DDLs":{
				"type":"array",
				"items":{
				   "$ref":"#/definitions/DDLPayload"
				}
			 }
		  },
		  "required":[
			 "DDLs"
		  ]
	   },
	   "QueryArtifactsResponse":{
		  "description":"Query artifacts response.",
		  "type":"object",
		  "properties":{
			 "Items":{
				"type":"array",
				"items":{
				   "description":"MDEntity (Database/Table/Schema/View/PartitionInfo/PermissionAssignment",
				   "type":"object"
				}
			 },
			 "ContinuationToken":{
				"description":"Continuation token to get next page.",
				"type":"string"
			 }
		  }
	   },
	   "ColumnRelationshipInformation":{
		  "description":"Column information for relationship",
		  "type":"object",
		  "properties":{
			 "FromColumnName":{
				"description":"From Column Name",
				"type":"string"
			 },
			 "ToColumnName":{
				"description":"To Column Name",
				"type":"string"
			 }
		  },
		  "required":[
			 "FromColumnName",
			 "ToColumnName"
		  ]
	   },
	   "DDLType":{
		  "description":"DDL type.",
		  "type":"string",
		  "enum":[
			 "CREATE",
			 "ALTER",
			 "DROP"
		  ],
		  "x-ms-enum":{
			 "name":"DDLType",
			 "modelAsString":false
		  }
	   },
	   "PublishStatus":{
		  "description":"Publish status.",
		  "type":"string",
		  "enum":[
			 "PUBLISHED"
		  ],
		  "x-ms-enum":{
			 "name":"PublishStatus",
			 "modelAsString":false
		  }
	   },
	   "ArtifactType":{
		  "description":"Artifact type.",
		  "type":"string",
		  "enum":[
			 "DATABASE",
			 "TABLE",
			 "SCHEMA",
			 "VIEW",
			 "FUNCTION",
			 "PARTITIONINFO",
			 "RELATIONSHIP"
		  ],
		  "x-ms-enum":{
			 "name":"SASEntityType",
			 "modelAsString":false
		  }
	   },
	   "TableType":{
		  "description":"Entity type.",
		  "type":"string",
		  "enum":[
			 "MANAGED",
			 "EXTERNAL"
		  ],
		  "x-ms-enum":{
			 "name":"TableType",
			 "modelAsString":false
		  }
	   },
	   "SortOrder":{
		  "description":"Sorting order.",
		  "type":"string",
		  "enum":[
			 "DESC",
			 "ASC"
		  ],
		  "x-ms-enum":{
			 "name":"SortOrder",
			 "modelAsString":false
		  }
	   },
	   "InputFormat":{
		  "description":"Input Format to be used",
		  "type":"string",
		  "enum":[
			 "org.apache.hadoop.mapred.SequenceFileInputFormat",
			 "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat"
		  ],
		  "x-ms-enum":{
			 "name":"InputFormat",
			 "modelAsString":false
		  }
	   },
	   "OutputFormat":{
		  "description":"Output Format to be used",
		  "type":"string",
		  "enum":[
			 "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
			 "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat"
		  ],
		  "x-ms-enum":{
			 "name":"OutputFormat",
			 "modelAsString":false
		  }
	   },
	   "FormatType":{
		  "description":"Format Type to be used",
		  "type":"string",
		  "enum":[
			 "csv",
			 "parquet"
		  ],
		  "x-ms-enum":{
			 "name":"FormatType",
			 "modelAsString":false
		  }
	   },
	   "SerializeLib":{
		  "description":"Serialization Library to be used by Spark",
		  "type":"string",
		  "enum":[
			 "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
			 "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
		  ],
		  "x-ms-enum":{
			 "name":"SerializeLib",
			 "modelAsString":false
		  }
	   },
	   "PartitionFunctionType":{
		  "description":"Partition Function Type",
		  "type":"string",
		  "enum":[
			 "value"
		  ],
		  "x-ms-enum":{
			 "name":"PartitionFunctionType",
			 "modelAsString":false
		  }
	   },
	   "RelationshipType":{
		  "description":"Relation Type",
		  "type":"string",
		  "enum":[
			 "ONETOONE",
			 "ONETOMANY",
			 "MANYTOONE",
			 "MANYTOMANY"
		  ],
		  "x-ms-enum":{
			 "name":"RelationshipType",
			 "modelAsString":false
		  }
	   },
	   "ValidationType":{
		  "description":"Validation Type",
		  "type":"string",
		  "enum":[
			 "IDWValidation"
		  ],
		  "x-ms-enum":{
			 "name":"ValidationType",
			 "modelAsString":false
		  }
	   },
	   "ValidationStatus":{
		  "description":"Validation Status",
		  "type":"string",
		  "enum":[
			 "VALID",
			 "INVALID"
		  ],
		  "x-ms-enum":{
			 "name":"ValidationStatus",
			 "modelAsString":false
		  }
	   },
	   "CloudError":{
		  "x-ms-external":true,
		  "description":"SyMS error response",
		  "type":"object",
		  "properties":{
			 "error":{
				"x-ms-client-flatten":true,
				"description":"Error data.",
				"$ref":"#/definitions/CloudErrorBody"
			 }
		  },
		  "required":[
			 "error"
		  ]
	   },
	   "CloudErrorBody":{
		  "x-ms-external":true,
		  "description":"SAS Error object body",
		  "type":"object",
		  "properties":{
			 "code":{
				"description":"Error code",
				"type":"string"
			 },
			 "message":{
				"description":"Error message",
				"type":"string"
			 },
			 "target":{
				"description":"Property name/path in request associated with error",
				"type":"string"
			 },
			 "details":{
				"description":"Array with additional error details",
				"type":"array",
				"items":{
				   "$ref":"#/definitions/CloudError"
				}
			 }
		  },
		  "required":[
			 "code",
			 "message"
		  ]
	   }
	},
	"parameters":{
	   "ApiVersionParameter":{
		  "name":"api-version",
		  "type":"string",
		  "in":"query",
		  "required":true,
		  "description":"The Synapse client API Version."
	   },
	   "UserAgentParameter": {
		   "name":"User-Agent",
		   "type":"string",
		   "in":"header",
		   "required":true, 
		   "description": "User-Agent request header for servers to identify application"
	   },
	   "Endpoint":{
		  "name":"endpoint",
		  "type":"string",
		  "in":"path",
		  "required":true,
		  "x-ms-skip-url-encoding":true,
		  "x-ms-parameter-location":"client", 
		  "description":"The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net."
	   }
	}
 }