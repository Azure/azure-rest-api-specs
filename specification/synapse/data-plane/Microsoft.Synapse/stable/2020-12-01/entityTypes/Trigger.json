{
  "swagger": "2.0",
  "info": {
    "title": "ArtifactsClient",
    "version": "2020-12-01"
  },
  "paths": {},
  "definitions": {
    "Trigger": {
      "description": "Azure Synapse nested object which contains information about creating pipeline run",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Trigger type."
        },
        "description": {
          "description": "Trigger description.",
          "type": "string"
        },
        "runtimeState": {
          "$ref": "#/definitions/TriggerRuntimeState",
          "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
          "readOnly": true
        },
        "annotations": {
          "description": "List of tags that can be used for describing the trigger.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "TriggerRuntimeState": {
      "type": "string",
      "description": "Enumerates possible state of Triggers.",
      "enum": [
        "Started",
        "Stopped",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "TriggerRuntimeState",
        "modelAsString": true
      }
    },
    "MultiplePipelineTrigger": {
      "x-ms-discriminator-value": "MultiplePipelineTrigger",
      "description": "Base class for all triggers that support one to many model for trigger to pipeline.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "../artifacts.json#/definitions/TriggerPipelineReference"
          },
          "description": "Pipelines that need to be started."
        }
      }
    },
    "ScheduleTrigger": {
      "description": "Trigger that creates pipeline runs periodically, on schedule.",
      "allOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Schedule Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "recurrence": {
              "$ref": "#/definitions/ScheduleTriggerRecurrence",
              "description": "Recurrence schedule configuration."
            }
          },
          "required": [
            "recurrence"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ScheduleTriggerRecurrence": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/RecurrenceFrequency",
          "description": "The frequency."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "The recurrence schedule."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "description": "The workflow trigger recurrence."
    },
    "RecurrenceFrequency": {
      "description": "Enumerates possible frequency option for the schedule trigger.",
      "type": "string",
      "enum": [
        "NotSpecified",
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": true
      }
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The minutes."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The hours."
        },
        "weekDays": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          },
          "description": "The days of the week."
        },
        "monthDays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The month days."
        },
        "monthlyOccurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          },
          "description": "The monthly occurrences."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "description": "The recurrence schedule."
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "properties": {
        "day": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "The day of the week."
        },
        "occurrence": {
          "type": "integer",
          "format": "int32",
          "description": "The occurrence."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "description": "The recurrence schedule occurrence."
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": false
      },
      "description": "The days of the week."
    },
    "BlobTrigger": {
      "description": "Trigger that runs every time the selected Blob container changes.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Blob Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "folderPath": {
              "description": "The path of the container/folder that will trigger the pipeline.",
              "type": "string"
            },
            "maxConcurrency": {
              "description": "The max number of parallel files to handle when it is triggered.",
              "type": "integer"
            },
            "linkedService": {
              "description": "The Azure Storage linked service reference.",
              "$ref": "../artifacts.json#/definitions/LinkedServiceReference"
            }
          },
          "required": [
            "folderPath",
            "maxConcurrency",
            "linkedService"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "BlobEventsTrigger": {
      "description": "Trigger that runs every time a Blob event occurs.",
      "allOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Blob Events Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "blobPathBeginsWith": {
              "description": "The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.",
              "type": "string"
            },
            "blobPathEndsWith": {
              "description": "The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.",
              "type": "string"
            },
            "ignoreEmptyBlobs": {
              "description": "If set to true, blobs with zero bytes will be ignored.",
              "type": "boolean"
            },
            "events": {
              "description": "The type of events that cause this trigger to fire.",
              "$ref": "#/definitions/BlobEventTypes"
            },
            "scope": {
              "description": "The ARM resource ID of the Storage Account.",
              "type": "string"
            }
          },
          "required": [
            "events",
            "scope"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "BlobEventTypes": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Microsoft.Storage.BlobCreated",
          "Microsoft.Storage.BlobDeleted"
        ],
        "x-ms-enum": {
          "name": "BlobEventType",
          "modelAsString": true
        }
      },
      "description": "Blob event types."
    },
    "CustomEventsTrigger": {
      "description": "Trigger that runs every time a custom event is received.",
      "allOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Custom Events Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "subjectBeginsWith": {
              "description": "The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.",
              "type": "string"
            },
            "subjectEndsWith": {
              "description": "The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.",
              "type": "string"
            },
            "events": {
              "description": "The list of event types that cause this trigger to fire.",
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "scope": {
              "description": "The ARM resource ID of the Azure Event Grid Topic.",
              "type": "string"
            }
          },
          "required": [
            "events",
            "scope"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "TumblingWindowTrigger": {
      "description": "Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "pipeline": {
          "$ref": "../artifacts.json#/definitions/TriggerPipelineReference",
          "description": "Pipeline for which runs are created when an event is fired for trigger window that is ready."
        },
        "typeProperties": {
          "description": "Tumbling Window Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "frequency": {
              "$ref": "#/definitions/TumblingWindowFrequency",
              "description": "The frequency of the time windows."
            },
            "interval": {
              "type": "integer",
              "format": "int32",
              "description": "The interval of the time windows. The minimum interval allowed is 15 Minutes."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
            },
            "delay": {
              "type": "object",
              "description": "Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
            },
            "maxConcurrency": {
              "description": "The max number of parallel time windows (ready for execution) for which a new run is triggered.",
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "retryPolicy": {
              "$ref": "#/definitions/RetryPolicy",
              "description": "Retry policy that will be applied for failed pipeline runs."
            },
            "dependsOn": {
              "type": "array",
              "description": "Triggers that this trigger depends on. Only tumbling window triggers are supported.",
              "items": {
                "$ref": "#/definitions/DependencyReference"
              }
            }
          },
          "required": [
            "frequency",
            "interval",
            "startTime",
            "maxConcurrency"
          ]
        }
      },
      "required": [
        "pipeline",
        "typeProperties"
      ]
    },
    "TumblingWindowFrequency": {
      "description": "Enumerates possible frequency option for the tumbling window trigger.",
      "type": "string",
      "enum": [
        "Minute",
        "Hour",
        "Month"
      ],
      "x-ms-enum": {
        "name": "TumblingWindowFrequency",
        "modelAsString": true
      }
    },
    "RetryPolicy": {
      "description": "Execution policy for an activity.",
      "type": "object",
      "properties": {
        "count": {
          "type": "object",
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "intervalInSeconds": {
          "description": "Interval between retries in seconds. Default is 30.",
          "type": "integer",
          "minimum": 30,
          "maximum": 86400
        }
      }
    },
    "TriggerReference": {
      "description": "Trigger reference type.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Trigger reference type.",
          "type": "string",
          "enum": [
            "TriggerReference"
          ],
          "x-ms-enum": {
            "name": "TriggerReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "description": "Reference trigger name.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "DependencyReference": {
      "description": "Referenced dependency.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "The type of dependency reference.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "TriggerDependencyReference": {
      "description": "Trigger referenced dependency.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DependencyReference"
        }
      ],
      "properties": {
        "referenceTrigger": {
          "description": "Referenced trigger.",
          "$ref": "#/definitions/TriggerReference"
        }
      },
      "required": [
        "referenceTrigger"
      ]
    },
    "TumblingWindowTriggerDependencyReference": {
      "description": "Referenced tumbling window trigger dependency.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TriggerDependencyReference"
        }
      ],
      "properties": {
        "offset": {
          "description": "Timespan applied to the start time of a tumbling window when evaluating dependency.",
          "type": "string",
          "pattern": "-?((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
          "minLength": 8,
          "maxLength": 15
        },
        "size": {
          "description": "The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.",
          "type": "string",
          "pattern": "((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
          "minLength": 8,
          "maxLength": 15
        }
      }
    },
    "SelfDependencyTumblingWindowTriggerReference": {
      "description": "Self referenced tumbling window trigger dependency.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DependencyReference"
        }
      ],
      "properties": {
        "offset": {
          "description": "Timespan applied to the start time of a tumbling window when evaluating dependency.",
          "type": "string",
          "pattern": "-((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
          "minLength": 8,
          "maxLength": 15
        },
        "size": {
          "description": "The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.",
          "type": "string",
          "pattern": "((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))",
          "minLength": 8,
          "maxLength": 15
        }
      },
      "required": [
        "offset"
      ]
    },
    "RerunTumblingWindowTrigger": {
      "description": "Trigger that schedules pipeline reruns for all fixed time interval windows from a requested start time to requested end time.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Rerun Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "parentTrigger": {
              "type": "object",
              "description": "The parent trigger reference."
            },
            "requestedStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time for the time period for which restatement is initiated. Only UTC time is currently supported."
            },
            "requestedEndTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time for the time period for which restatement is initiated. Only UTC time is currently supported."
            },
            "rerunConcurrency": {
              "description": "The max number of parallel time windows (ready for execution) for which a rerun is triggered.",
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          "required": [
            "parentTrigger",
            "requestedStartTime",
            "requestedEndTime",
            "rerunConcurrency"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ChainingTrigger": {
      "description": "Trigger that allows the referenced pipeline to depend on other pipeline runs based on runDimension Name/Value pairs. Upstream pipelines should declare the same runDimension Name and their runs should have the values for those runDimensions. The referenced pipeline run would be triggered if the values for the runDimension match for all upstream pipeline runs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "pipeline": {
          "$ref": "../artifacts.json#/definitions/TriggerPipelineReference",
          "description": "Pipeline for which runs are created when all upstream pipelines complete successfully."
        },
        "typeProperties": {
          "description": "Chaining Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "dependsOn": {
              "type": "array",
              "items": {
                "$ref": "../artifacts.json#/definitions/PipelineReference"
              },
              "description": "Upstream Pipelines."
            },
            "runDimension": {
              "description": "Run Dimension property that needs to be emitted by upstream pipelines.",
              "type": "string"
            }
          },
          "required": [
            "runDimension",
            "dependsOn"
          ]
        }
      },
      "required": [
        "pipeline",
        "typeProperties"
      ]
    }
  }
}
