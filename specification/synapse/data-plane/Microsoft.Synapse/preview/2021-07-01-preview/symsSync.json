{
  "swagger": "2.0",
  "info": {
    "version": "2021-07-01-preview",
    "title": "ArtifactsClient"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/synapsemetastore/register": {
      "put": {
        "tags": [
          "synapsemetastore"
        ],
        "operationId": "SynapseMetastore_Register",
        "description": "Register files in Syms",
        "x-ms-examples": {
          "Register files in Syms": {
            "$ref": "./examples/SynapseMetastore_Register.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "registerBody",
            "required": true,
            "description": "The register body",
            "schema": {
              "$ref": "#/definitions/registerObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Metadata Request Accepted Response.",
            "schema": {
              "$ref": "#/definitions/metadataRequestAcceptedResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorContract"
            }
          }
        }
      }
    },
    "/synapsemetastore/update": {
      "put": {
        "tags": [
          "synapsemetastore"
        ],
        "operationId": "SynapseMetastore_Update",
        "description": "Update files in Syms",
        "x-ms-examples": {
          "Register files in Syms": {
            "$ref": "./examples/SynapseMetastore_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "updateBody",
            "required": true,
            "description": "The update body",
            "schema": {
              "$ref": "#/definitions/updateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Metadata Request Accepted Response.",
            "schema": {
              "$ref": "#/definitions/metadataRequestAcceptedResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorContract"
            }
          }
        }
      }
    },
    "/synapsemetastore/delete": {
      "put": {
        "tags": [
          "synapsemetastore"
        ],
        "operationId": "SynapseMetastore_Delete",
        "description": "Remove files in Syms",
        "x-ms-examples": {
          "Register files in Syms": {
            "$ref": "./examples/SynapseMetastore_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "deleteBody",
            "required": true,
            "description": "The delete body",
            "schema": {
              "$ref": "#/definitions/metadataDeleteObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Metadata Request Accepted Response.",
            "schema": {
              "$ref": "#/definitions/metadataRequestAcceptedResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorContract"
            }
          }
        }
      }
    },
    "/synapsemetastore/getrequeststatus": {
      "get": {
        "tags": [
          "synapsemetastore"
        ],
        "operationId": "SynapseMetastore_GetRequestStatus",
        "description": "Gets status of a request",
        "x-ms-examples": {
          "Register files in Syms": {
            "$ref": "./examples/SynapseMetastore_GetRequestStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request Success Response.",
            "schema": {
              "$ref": "#/definitions/successResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorContract"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorContract": {
      "title": "Error details.",
      "description": "Contains details when the response code indicates an error.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error details.",
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      }
    },
    "ErrorDetail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "metadataRequestAcceptedResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "successResponse": {
      "type": "object",
      "properties": {
        "requestStatus": {
          "type": "string"
        }
      }
    },
    "registerObject": {
      "type": "object",
      "required": [
        "inputFolder",
        "databaseName"
      ],
      "properties": {
        "inputFolder": {
          "type": "string",
          "example": "https://testsymsstorage.blob.core.windows.net/testsymsstoragefilesystem/CDM/",
          "description": "The input folder containing CDM files."
        },
        "databaseName": {
          "type": "string",
          "example": "testdatabase",
          "description": "The database name to be created."
        }
      }
    },
    "updateObject": {
      "type": "object",
      "required": [
        "inputFolder",
        "databaseName"
      ],
      "properties": {
        "inputFolder": {
          "type": "string",
          "example": "https://testsymsstorage.blob.core.windows.net/testsymsstoragefilesystem/CDM/",
          "description": "The input folder containing CDM files."
        },
        "databaseName": {
          "type": "string",
          "example": "testdatabase",
          "description": "The database name to be created."
        }
      }
    },
    "metadataDeleteObject": {
      "type": "object",
      "required": [
        "databaseName"
      ],
      "properties": {
        "databaseName": {
          "type": "string",
          "example": "testdatabase",
          "description": "The database name to be created."
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Synapse client API Version."
    },
    "Endpoint": {
      "name": "endpoint",
      "description": "The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net.",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    }
  }
}
