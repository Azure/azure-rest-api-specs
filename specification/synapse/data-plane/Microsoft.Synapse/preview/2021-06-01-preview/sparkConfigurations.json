{
  "swagger": "2.0",
  "info": {
    "version": "2021-06-01-preview",
    "title": "ArtifactsClient",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/sparkconfigurations": {
      "get": {
        "tags": [
          "sparkconfigurations"
        ],
        "operationId": "SparkConfiguration_GetSparkConfigurationsByWorkspace",
        "x-ms-examples": {
          "SparkConfigurations_ListByWorkspace": {
            "$ref": "./examples/SparkConfigurations_ListByWorkspace.json"
          }
        },
        "description": "Lists sparkconfigurations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SparkConfigurationListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/sparkconfigurations/{sparkConfigurationName}": {
      "put": {
        "tags": [
          "sparkconfigurations"
        ],
        "operationId": "SparkConfiguration_CreateOrUpdateSparkConfiguration",
        "x-ms-examples": {
          "SparkConfigurations_Create": {
            "$ref": "./examples/SparkConfigurations_Create.json"
          },
          "SparkConfigurations_Update": {
            "$ref": "./examples/SparkConfigurations_Update.json"
          }
        },
        "description": "Creates or updates a sparkconfiguration.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/sparkConfigurationName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "ETag of the sparkConfiguration entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "sparkConfiguration",
            "description": "SparkConfiguration resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SparkConfigurationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SparkConfigurationResource"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "sparkconfigurations"
        ],
        "operationId": "SparkConfiguration_GetSparkConfiguration",
        "x-ms-examples": {
          "SparkConfigurations_Get": {
            "$ref": "./examples/SparkConfigurations_Get.json"
          }
        },
        "description": "Gets a sparkConfiguration.",
        "parameters": [
          {
            "$ref": "#/parameters/sparkConfigurationName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch",
            "description": "ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SparkConfigurationResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sparkconfigurations"
        ],
        "operationId": "SparkConfiguration_DeleteSparkConfiguration",
        "x-ms-examples": {
          "SparkConfigurations_Delete": {
            "$ref": "./examples/SparkConfigurations_Delete.json"
          }
        },
        "description": "Deletes a sparkConfiguration.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/sparkConfigurationName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/sparkconfigurations/{sparkConfigurationName}/rename": {
      "post": {
        "tags": [
          "sparkconfigurations"
        ],
        "operationId": "SparkConfiguration_RenameSparkConfiguration",
        "x-ms-examples": {
          "SparkConfigurations_Rename": {
            "$ref": "./examples/SparkConfigurations_Rename.json"
          }
        },
        "description": "Renames a sparkConfiguration.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/sparkConfigurationName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "request",
            "description": "proposed new name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "artifacts.json#/definitions/ArtifactRenameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SparkConfigurationListResponse": {
      "description": "A list of sparkconfiguration resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of sparkconfigurations.",
          "items": {
            "$ref": "#/definitions/SparkConfigurationResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "SparkConfigurationResource": {
      "description": "Spark Configuration resource type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "artifacts.json#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/SparkConfiguration.json#/definitions/SparkConfiguration",
          "description": "Properties of Spark Configuration."
        }
      },
      "required": [
        "properties"
      ]
    }
  },
  "parameters": {
    "workspaceName": {
      "name": "workspaceName",
      "description": "The workspace name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Synapse client API Version."
    },
    "Endpoint": {
      "name": "endpoint",
      "description": "The workspace development endpoint, for example `https://myworkspace.dev.azuresynapse.net`.",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client",
      "format": "uri"
    },
    "sparkConfigurationName": {
      "name": "sparkConfigurationName",
      "description": "The spark Configuration name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
