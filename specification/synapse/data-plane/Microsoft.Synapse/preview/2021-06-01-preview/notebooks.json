{
  "swagger": "2.0",
  "info": {
    "version": "2021-06-01-preview",
    "title": "ArtifactsClient",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/notebooks": {
      "get": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_GetNotebooksByWorkspace",
        "x-ms-examples": {
          "Notebooks_ListByWorkspace": {
            "$ref": "./examples/Notebooks_ListByWorkspace.json"
          }
        },
        "description": "Lists Notebooks.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NotebookListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/notebooksSummary": {
      "get": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_GetNotebookSummaryByWorkSpace",
        "x-ms-examples": {
          "Notebooks_ListSummaryByWorkSpace": {
            "$ref": "./examples/Notebooks_ListSummaryByWorkSpace.json"
          }
        },
        "description": "Lists a summary of Notebooks.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NotebookListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/notebooks/{notebookName}": {
      "put": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_CreateOrUpdateNotebook",
        "x-ms-examples": {
          "Notebooks_Create": {
            "$ref": "./examples/Notebooks_Create.json"
          },
          "Notebooks_Update": {
            "$ref": "./examples/Notebooks_Update.json"
          }
        },
        "description": "Creates or updates a Note Book.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/NotebookName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the Note book entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "Notebook",
            "description": "Note book resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotebookResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NotebookResource"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_GetNotebook",
        "x-ms-examples": {
          "Notebooks_Get": {
            "$ref": "./examples/Notebooks_Get.json"
          }
        },
        "description": "Gets a Note Book.",
        "parameters": [
          {
            "$ref": "#/parameters/NotebookName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the Notebook entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/NotebookResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_DeleteNotebook",
        "x-ms-examples": {
          "Notebooks_Delete": {
            "$ref": "./examples/Notebooks_Delete.json"
          }
        },
        "description": "Deletes a Note book.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/NotebookName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/notebooks/{notebookName}/rename": {
      "post": {
        "tags": [
          "notebooks"
        ],
        "operationId": "Notebook_RenameNotebook",
        "x-ms-examples": {
          "Notebooks_Rename": {
            "$ref": "./examples/Notebooks_Rename.json"
          }
        },
        "description": "Renames a notebook.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/NotebookName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "request",
            "description": "proposed new name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "artifacts.json#/definitions/ArtifactRenameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "artifacts.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/notebookOperationResults/{operationId}": {
      "get": {
        "tags": [
          "OperationResult"
        ],
        "operationId": "NotebookOperationResult_Get",
        "description": "Get notebook operation result",
        "x-ms-examples": {
          "List Sql Pools": {
            "$ref": "./examples/NotebookOperationResult_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation ID."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "201": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "default": {
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/ErrorContract"
            },
            "description": ""
          }
        }
      }
    },
    "/notebooks/runs/{runId}": {
      "put": {
        "tags": [
          "RunNotebook"
        ],
        "operationId": "RunNotebook_CreateRun",
        "x-ms-examples": {
          "Run Notebook": {
            "$ref": "./examples/RunNotebook_Create.json"
          }
        },
        "description": "Run notebook",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NotebookRunId"
          },
          {
            "name": "RunNotebookRequest",
            "in": "body",
            "description": "Run notebook request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunNotebookRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/RunNotebookResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "./artifacts.json#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "RunNotebook"
        ],
        "operationId": "RunNotebook_GetStatus",
        "x-ms-examples": {
          "Get Run Notebook Status": {
            "$ref": "./examples/RunNotebook_GetStatus.json"
          }
        },
        "description": "Get RunNotebook Status for run id.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NotebookRunId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/RunNotebookResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "./artifacts.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/notebooks/runs/{runId}/cancel": {
      "post": {
        "tags": [
          "RunNotebook"
        ],
        "operationId": "RunNotebook_CancelRun",
        "x-ms-examples": {
          "Cancel Run Notebook": {
            "$ref": "./examples/RunNotebook_Cancel.json"
          }
        },
        "description": "Cancel notebook run.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NotebookRunId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/RunNotebookResponse"
            }
          },
          "409": {
            "description": "Conflict.",
            "x-ms-error-response": true,
            "schema": {
              "$ref": "#/definitions/RunNotebookResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "./artifacts.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/notebooks/runs/{runId}/snapshot": {
      "get": {
        "tags": [
          "RunNotebook"
        ],
        "operationId": "RunNotebook_GetSnapshot",
        "x-ms-examples": {
          "Get Run Notebook Snapshot": {
            "$ref": "./examples/RunNotebook_GetSnapshot.json"
          }
        },
        "description": "Get RunNotebook Snapshot for run id.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NotebookRunId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/RunNotebookSnapshotResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Synapse service.",
            "schema": {
              "$ref": "./artifacts.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NotebookListResponse": {
      "description": "A list of Notebook resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Notebooks.",
          "items": {
            "$ref": "#/definitions/NotebookResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "NotebookResource": {
      "description": "Notebook resource type.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "properties": {
          "$ref": "./entityTypes/Notebook.json#/definitions/Notebook",
          "description": "Properties of Notebook."
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "RunNotebookError": {
      "description": "Run notebook error.",
      "type": "object",
      "properties": {
        "ename": {
          "readOnly": true,
          "type": "string",
          "description": "Error name."
        },
        "evalue": {
          "readOnly": true,
          "type": "string",
          "description": "Error message."
        },
        "traceback": {
          "description": "Error trace.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RunNotebookResult": {
      "description": "Result of run notebook.",
      "type": "object",
      "properties": {
        "runId": {
          "type": "string",
          "description": "Run id."
        },
        "runStatus": {
          "description": "Status of the run notebook.",
          "type": "string"
        },
        "lastCheckedOn": {
          "description": "Timestamp of last update.",
          "type": "string"
        },
        "sessionId": {
          "description": "Livy session id.",
          "type": "integer",
          "format": "int64"
        },
        "sparkPool": {
          "description": "SparkPool name.",
          "type": "string"
        },
        "sessionDetail": {
          "description": "Run notebook session details.",
          "type": "object"
        },
        "exitValue": {
          "description": "Output of exit command.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/RunNotebookError"
        }
      }
    },
    "RunNotebookRequest": {
      "description": "Run notebook request.",
      "type": "object",
      "properties": {
        "notebook": {
          "type": "string",
          "description": "Notebook name."
        },
        "sparkPool": {
          "type": "string",
          "description": "SparkPool name."
        },
        "sessionOptions": {
          "description": "Session properties.",
          "$ref": "#/definitions/RunNotebookSparkSessionOptions"
        },
        "honorSessionTimeToLive": {
          "description": "Whether session should run till time to live after run completes.",
          "type": "boolean"
        },
        "parameters": {
          "type": "object",
          "description": "Run notebook parameters",
          "additionalProperties": {
            "$ref": "#/definitions/RunNotebookParameter"
          }
        }
      }
    },
    "RunNotebookParameter": {
      "description": "Run notebook parameter.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Parameter type."
        },
        "value": {
          "type": "object",
          "description": "Parameter value."
        }
      }
    },
    "RunNotebookSnapshot": {
      "description": "Run notebook snapshot.",
      "type": "object",
      "properties": {
        "exitValue": {
          "description": "Output of exit command.",
          "type": "string"
        },
        "id": {
          "description": "Run notebook runId.",
          "type": "string"
        },
        "notebook": {
          "description": "Notebook name.",
          "type": "string"
        },
        "sessionOptions": {
          "description": "Session properties.",
          "$ref": "#/definitions/RunNotebookSparkSessionOptions"
        },
        "honorSessionTimeToLive": {
          "description": "Whether session should run till time to live after run completes.",
          "type": "boolean"
        },
        "sessionId": {
          "description": "Livy session id.",
          "type": "integer",
          "format": "int64"
        },
        "sparkPool": {
          "description": "SparkPool name.",
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "description": "Run notebook parameters",
          "additionalProperties": {
            "$ref": "#/definitions/RunNotebookParameter"
          }
        },
        "notebookContent": {
          "$ref": "#/definitions/NotebookResource"
        }
      },
      "required": [
        "id",
        "notebook"
      ]
    },
    "RunNotebookSnapshotResult": {
      "description": "Run notebook snapshot result.",
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "#/definitions/RunNotebookSnapshot"
        },
        "error": {
          "$ref": "#/definitions/RunNotebookError"
        },
        "runId": {
          "type": "string",
          "description": "Run id."
        },
        "runStatus": {
          "description": "Status of the run notebook.",
          "type": "string"
        },
        "lastCheckedOn": {
          "description": "Timestamp of last update.",
          "type": "string"
        },
        "sessionId": {
          "description": "Livy session id.",
          "type": "integer",
          "format": "int64"
        },
        "sparkPool": {
          "description": "SparkPool name.",
          "type": "string"
        }
      },
      "required": [
        "runId",
        "runStatus",
        "snapshot"
      ]
    },
    "RunNotebookSnapshotResponse": {
      "description": "Run notebook snapshot response.",
      "type": "object",
      "properties": {
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "Response message."
        },
        "result": {
          "$ref": "#/definitions/RunNotebookSnapshotResult"
        }
      }
    },
    "RunNotebookSparkSessionOptions": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "kind": {
          "x-nullable": true,
          "type": "string",
          "description": "The session kind"
        },
        "proxyUser": {
          "x-nullable": true,
          "type": "string",
          "description": "User to impersonate when starting the session"
        },
        "name": {
          "x-nullable": true,
          "type": "string",
          "description": "The name of this session"
        },
        "jars": {
          "uniqueItems": false,
          "x-nullable": true,
          "type": "array",
          "description": "jars to be used in this session",
          "items": {
            "type": "string"
          }
        },
        "pyFiles": {
          "x-ms-client-name": "pythonFiles",
          "uniqueItems": false,
          "x-nullable": true,
          "description": "Python files to be used in this session",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "uniqueItems": false,
          "type": "array",
          "x-nullable": true,
          "description": "files to be used in this session",
          "items": {
            "type": "string"
          }
        },
        "archives": {
          "uniqueItems": false,
          "x-nullable": true,
          "description": "Archives to be used in this session",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queue": {
          "type": "object",
          "x-nullable": true,
          "description": "The name of the YARN queue to which submitted"
        },
        "conf": {
          "x-ms-client-name": "configuration",
          "type": "object",
          "description": "Spark configuration properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "driverMemory": {
          "type": "string",
          "description": "Amount of memory to use for the driver process"
        },
        "driverCores": {
          "format": "int32",
          "type": "integer",
          "description": "Number of cores to use for the driver process"
        },
        "executorMemory": {
          "type": "string",
          "description": "Amount of memory to use per executor process"
        },
        "executorCores": {
          "format": "int32",
          "type": "integer",
          "description": "Number of cores to use for each executor"
        },
        "numExecutors": {
          "x-ms-client-name": "executorCount",
          "format": "int32",
          "type": "integer",
          "description": "Number of executors to launch for this session"
        },
        "isQueueable": {
          "type": "boolean",
          "x-nullable": true,
          "description": "Whether to queue session creation if Spark pool doesn't have enough capacity. Default value is true in notebook runs API"
        },
        "heartbeatTimeoutInSecond": {
          "type": "integer",
          "format": "int32",
          "description": "Timeout in second to which session be orphaned",
          "x-nullable": true
        }
      }
    },
    "RunNotebookResponse": {
      "description": "Run notebook response.",
      "type": "object",
      "properties": {
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "Response message."
        },
        "result": {
          "$ref": "#/definitions/RunNotebookResult"
        }
      }
    }
  },
  "parameters": {
    "workspaceName": {
      "name": "workspaceName",
      "description": "The workspace name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Synapse client API Version."
    },
    "Endpoint": {
      "name": "endpoint",
      "description": "The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net.",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    },
    "NotebookName": {
      "name": "notebookName",
      "description": "The notebook name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NotebookRunId": {
      "name": "runId",
      "in": "path",
      "maxLength": 100,
      "required": true,
      "type": "string",
      "description": "Notebook run id.",
      "x-ms-parameter-location": "method"
    }
  }
}
