{
  "swagger": "2.0",
  "info": {
    "version": "2019-11-01-preview",
    "title": "SynapseClient",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{workspaceName}.{SynapseDnsSuffix}",
    "parameters": [
      {
        "name": "workspaceName",
        "description": "The name of the workspace to execute operations on.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      },
      {
        "$ref": "#/parameters/SynapseDnsSuffixInPath"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/batches": {
      "get": {
        "tags": [
          "SparkBatch"
        ],
        "description": "List all spark batch jobs which are running under a particular spark pool.",
        "operationId": "SparkBatch_List",
        "x-ms-examples": {
          "List all spark batch jobs": {
            "$ref": "./examples/SparkFrontend_SparkBatch_List.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Optional param specifying which index the list should begin from.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Optional param specifying the size of the returned list.\r\n            By default it is 20 and that is the maximum.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivyListBatchResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SparkBatch"
        ],
        "description": "Create new spark batch job.",
        "operationId": "SparkBatch_Create",
        "x-ms-examples": {
          "Create new spark batch job.": {
            "$ref": "./examples/SparkFrontend_SparkBatch_Create.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "livyRequest",
            "in": "body",
            "description": "Livy compatible batch job request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtendedLivyBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivyBatchResponse"
            }
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/batches/{batchId}": {
      "get": {
        "tags": [
          "SparkBatch"
        ],
        "description": "Gets a single spark batch job.",
        "operationId": "SparkBatch_Get",
        "x-ms-examples": {
          "Gets a single spark batch job.": {
            "$ref": "./examples/SparkFrontend_SparkBatch_Get.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "path",
            "description": "Identifier for the batch job.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivyBatchResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SparkBatch"
        ],
        "description": "Cancels a running spark batch job.",
        "operationId": "SparkBatch_Delete",
        "x-ms-examples": {
          "Cancels a running spark batch job.": {
            "$ref": "./examples/SparkFrontend_SparkBatch_Delete.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "path",
            "description": "Identifier for the batch job.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions": {
      "get": {
        "tags": [
          "SparkSession"
        ],
        "description": "List all spark sessions which are running under a particular spark pool.",
        "operationId": "SparkSession_List",
        "x-ms-examples": {
          "List all spark session jobs": {
            "$ref": "./examples/SparkFrontend_SparkSession_List.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Optional param specifying which index the list should begin from.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Optional param specifying the size of the returned list.\r\n            By default it is 20 and that is the maximum.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivyListSessionResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SparkSession"
        ],
        "description": "Create new spark session.",
        "operationId": "SparkSession_Create",
        "x-ms-examples": {
          "Create new spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_Create.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "livyRequest",
            "in": "body",
            "description": "Livy compatible batch job request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtendedLivySessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivySessionResponse"
            }
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions/{sessionId}": {
      "get": {
        "tags": [
          "SparkSession"
        ],
        "description": "Gets a single spark session.",
        "operationId": "SparkSession_Get",
        "x-ms-examples": {
          "Gets a single spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_Get.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Optional query param specifying whether detailed response is returned beyond plain livy.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedLivySessionResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SparkSession"
        ],
        "description": "Cancels a running spark session.",
        "operationId": "SparkSession_Delete",
        "x-ms-examples": {
          "Cancels a running spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_Delete.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\"\r\n            targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions/{sessionId}/reset-timeout": {
      "put": {
        "tags": [
          "SparkSession"
        ],
        "description": "Sends a keep alive call to the current session to reset the session timeout.",
        "operationId": "SparkSession_ResetTimeout",
        "x-ms-examples": {
          "Reset the session timeout.": {
            "$ref": "./examples/SparkFrontend_SparkSession_ResetTimeout.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\"\r\n            targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions/{sessionId}/statements": {
      "get": {
        "tags": [
          "SparkSession"
        ],
        "description": "Gets a list of statements within a spark session.",
        "operationId": "SparkSession_ListStatements",
        "x-ms-examples": {
          "Gets a list of statements within a spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_ListStatements.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivyStatementsResponseBody"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SparkSession"
        ],
        "description": "Create statement within a spark session.",
        "operationId": "SparkSession_CreateStatement",
        "x-ms-examples": {
          "Create statement within a spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_CreateStatement.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "livyRequest",
            "in": "body",
            "description": "Livy compatible batch job request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivyStatementRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivyStatementResponseBody"
            }
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions/{sessionId}/statements/{statementId}": {
      "get": {
        "tags": [
          "SparkSession"
        ],
        "description": "Gets a single statement within a spark session.",
        "operationId": "SparkSession_GetStatement",
        "x-ms-examples": {
          "Gets a single statement within a spark session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_GetStatement.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statementId",
            "in": "path",
            "description": "Identifier for the statement.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivyStatementResponseBody"
            }
          }
        }
      }
    },
    "/livyApi/versions/{livyApiVersion}/sparkPools/{sparkPoolName}/sessions/{sessionId}/statements/{statementId}/cancel": {
      "post": {
        "tags": [
          "SparkSession"
        ],
        "description": "Kill a statement within a session.",
        "operationId": "SparkSession_DeleteStatement",
        "x-ms-examples": {
          "Kill a statement within a session.": {
            "$ref": "./examples/SparkFrontend_SparkSession_DeleteStatement.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LivyApiVersionInPath"
          },
          {
            "name": "sparkPoolName",
            "in": "path",
            "description": "Name of the spark pool. \"ondemand\" targets the ondemand pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Identifier for the session.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "statementId",
            "in": "path",
            "description": "Identifier for the statement.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivyStatementCancellationResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ExtendedLivyListBatchResponse": {
      "type": "object",
      "properties": {
        "from": {
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "sessions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedLivyBatchResponse"
          }
        }
      }
    },
    "ExtendedLivyBatchResponse": {
      "type": "object",
      "properties": {
        "livyInfo": {
          "$ref": "#/definitions/LivyBatchStateInformation"
        },
        "name": {
          "type": "string"
        },
        "workspaceName": {
          "type": "string"
        },
        "sparkPoolName": {
          "type": "string"
        },
        "submitterName": {
          "type": "string"
        },
        "submitterId": {
          "type": "string"
        },
        "artifactId": {
          "type": "string"
        },
        "jobType": {
          "enum": [
            "SparkBatch",
            "SparkSession"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          },
          "type": "string"
        },
        "result": {
          "enum": [
            "Uncertain",
            "Succeeded",
            "Failed",
            "Cancelled"
          ],
          "x-ms-enum": {
            "name": "JobResult",
            "modelAsString": true
          },
          "type": "string"
        },
        "schedulerInfo": {
          "$ref": "#/definitions/SchedulerInformation"
        },
        "pluginInfo": {
          "$ref": "#/definitions/SparkServicePluginInformation"
        },
        "errorInfo": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorInformation"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "appId": {
          "type": "string"
        },
        "appInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "log": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LivyBatchStateInformation": {
      "type": "object",
      "properties": {
        "notStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "startingAt": {
          "format": "date-time",
          "type": "string"
        },
        "runningAt": {
          "format": "date-time",
          "type": "string"
        },
        "deadAt": {
          "format": "date-time",
          "type": "string"
        },
        "successAt": {
          "format": "date-time",
          "type": "string"
        },
        "killedAt": {
          "format": "date-time",
          "type": "string"
        },
        "recoveringAt": {
          "format": "date-time",
          "type": "string"
        },
        "currentState": {
          "type": "string"
        },
        "jobCreationRequest": {
          "$ref": "#/definitions/LivyRequestBase"
        }
      }
    },
    "SchedulerInformation": {
      "type": "object",
      "properties": {
        "submittedAt": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledAt": {
          "format": "date-time",
          "type": "string"
        },
        "endedAt": {
          "format": "date-time",
          "type": "string"
        },
        "cancellationRequestedAt": {
          "format": "date-time",
          "type": "string"
        },
        "currentState": {
          "enum": [
            "Queued",
            "Scheduled",
            "Ended"
          ],
          "x-ms-enum": {
            "name": "SchedulerCurrentState",
            "modelAsString": true
          },
          "type": "string"
        }
      }
    },
    "SparkServicePluginInformation": {
      "type": "object",
      "properties": {
        "preparationStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "resourceAcquisitionStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "submissionStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "monitoringStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "cleanupStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "currentState": {
          "enum": [
            "Preparation",
            "ResourceAcquisition",
            "Queued",
            "Submission",
            "Monitoring",
            "Cleanup",
            "Ended"
          ],
          "x-ms-enum": {
            "name": "PluginCurrentState",
            "modelAsString": true
          },
          "type": "string"
        }
      }
    },
    "ErrorInformation": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "source": {
          "enum": [
            "System",
            "User",
            "Unknown",
            "Dependency"
          ],
          "x-ms-enum": {
            "name": "ErrorSource",
            "modelAsString": true
          },
          "type": "string"
        }
      }
    },
    "LivyRequestBase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "args": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jars": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archives": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conf": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "driverMemory": {
          "type": "string"
        },
        "driverCores": {
          "format": "int32",
          "type": "integer"
        },
        "executorMemory": {
          "type": "string"
        },
        "executorCores": {
          "format": "int32",
          "type": "integer"
        },
        "numExecutors": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ExtendedLivyBatchRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifactId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "args": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jars": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archives": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conf": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "driverMemory": {
          "type": "string"
        },
        "driverCores": {
          "format": "int32",
          "type": "integer"
        },
        "executorMemory": {
          "type": "string"
        },
        "executorCores": {
          "format": "int32",
          "type": "integer"
        },
        "numExecutors": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ExtendedLivyListSessionResponse": {
      "type": "object",
      "properties": {
        "from": {
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "sessions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedLivySessionResponse"
          }
        }
      }
    },
    "ExtendedLivySessionResponse": {
      "type": "object",
      "properties": {
        "livyInfo": {
          "$ref": "#/definitions/LivySessionStateInformation"
        },
        "name": {
          "type": "string"
        },
        "workspaceName": {
          "type": "string"
        },
        "sparkPoolName": {
          "type": "string"
        },
        "submitterName": {
          "type": "string"
        },
        "submitterId": {
          "type": "string"
        },
        "artifactId": {
          "type": "string"
        },
        "jobType": {
          "enum": [
            "SparkBatch",
            "SparkSession"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          },
          "type": "string"
        },
        "result": {
          "enum": [
            "Uncertain",
            "Succeeded",
            "Failed",
            "Cancelled"
          ],
          "x-ms-enum": {
            "name": "JobResult",
            "modelAsString": true
          },
          "type": "string"
        },
        "schedulerInfo": {
          "$ref": "#/definitions/SchedulerInformation"
        },
        "pluginInfo": {
          "$ref": "#/definitions/SparkServicePluginInformation"
        },
        "errorInfo": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorInformation"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "appId": {
          "type": "string"
        },
        "appInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "log": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LivySessionStateInformation": {
      "type": "object",
      "properties": {
        "notStartedAt": {
          "format": "date-time",
          "type": "string"
        },
        "startingAt": {
          "format": "date-time",
          "type": "string"
        },
        "idleAt": {
          "format": "date-time",
          "type": "string"
        },
        "deadAt": {
          "format": "date-time",
          "type": "string"
        },
        "shuttingDownAt": {
          "format": "date-time",
          "type": "string"
        },
        "killedAt": {
          "format": "date-time",
          "type": "string"
        },
        "recoveringAt": {
          "format": "date-time",
          "type": "string"
        },
        "busyAt": {
          "format": "date-time",
          "type": "string"
        },
        "errorAt": {
          "format": "date-time",
          "type": "string"
        },
        "currentState": {
          "type": "string"
        },
        "jobCreationRequest": {
          "$ref": "#/definitions/LivyRequestBase"
        }
      }
    },
    "ExtendedLivySessionRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifactId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "args": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jars": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "files": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archives": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conf": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "driverMemory": {
          "type": "string"
        },
        "driverCores": {
          "format": "int32",
          "type": "integer"
        },
        "executorMemory": {
          "type": "string"
        },
        "executorCores": {
          "format": "int32",
          "type": "integer"
        },
        "numExecutors": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "LivyStatementsResponseBody": {
      "type": "object",
      "properties": {
        "total_statements": {
          "format": "int32",
          "type": "integer"
        },
        "statements": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LivyStatementResponseBody"
          }
        }
      }
    },
    "LivyStatementResponseBody": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "output": {
          "$ref": "#/definitions/LivyStatementOutput"
        }
      }
    },
    "LivyStatementOutput": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "execution_count": {
          "format": "int32",
          "type": "integer"
        },
        "data": {
          "type": "object"
        },
        "ename": {
          "type": "string"
        },
        "evalue": {
          "type": "string"
        },
        "traceback": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LivyStatementRequestBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "LivyStatementCancellationResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "LivyApiVersionInPath": {
      "name": "livyApiVersion",
      "in": "path",
      "description": "Valid api-version for the request.",
      "required": true,
      "type": "string",
      "default": "2019-11-01-preview",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    },
    "SynapseDnsSuffixInPath": {
      "name": "SynapseDnsSuffix",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "dev.azuresynapse.net",
      "x-ms-skip-url-encoding": true,
      "description": "Gets the DNS suffix used as the base for all Synapse service requests.",
      "x-ms-parameter-location": "client"
    }
  }
}
