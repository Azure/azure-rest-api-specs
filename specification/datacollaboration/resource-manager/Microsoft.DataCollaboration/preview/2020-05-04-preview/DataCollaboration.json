{
  "swagger": "2.0",
  "info": {
    "version": "2020-05-04-preview",
    "title": "DataCollaborationManagementClient",
    "description": "Creates a Microsoft.DataCollaboration management client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.DataCollaboration/listInvitations": {
      "get": {
        "tags": [
          "ConsumerInvitation"
        ],
        "summary": "List the invitations",
        "description": "Lists invitations",
        "operationId": "ConsumerInvitations_ListInvitations",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitationList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ConsumerInvitations_ListInvitations": {
            "$ref": "./examples/ConsumerInvitations_ListInvitations.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataCollaboration/locations/{location}/consumerInvitations/{invitationId}": {
      "get": {
        "tags": [
          "ConsumerInvitation"
        ],
        "summary": "Gets the invitation identified by invitationId",
        "description": "Get an invitation",
        "operationId": "ConsumerInvitations_Get",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location of the invitation",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "An invitation id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitation"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerInvitations_Get": {
            "$ref": "./examples/ConsumerInvitations_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataCollaboration/locations/{location}/consumerInvitations/{invitationId}/reject": {
      "post": {
        "tags": [
          "ConsumerInvitation"
        ],
        "summary": "Rejects the invitation identified by invitationId",
        "description": "Reject an invitation",
        "operationId": "ConsumerInvitations_RejectInvitation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "Location of the invitation",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "An invitation id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitation"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerInvitations_RejectInvitation": {
            "$ref": "./examples/ConsumerInvitations_RejectInvitation.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataCollaboration/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "summary": "Lists the available operations",
        "description": "List of available operations",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataCollaboration/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "List Workspaces in a subscription",
        "description": "List Workspaces in Subscription",
        "operationId": "Workspaces_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Workspaces_ListBySubscription": {
            "$ref": "./examples/Workspaces_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "List Workspaces in a resource group",
        "description": "List Workspaces in ResourceGroup",
        "operationId": "Workspaces_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Workspaces_ListByResourceGroup": {
            "$ref": "./examples/Workspaces_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Get a workspace under a resource group",
        "description": "Get a workspace",
        "operationId": "Workspaces_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Get": {
            "$ref": "./examples/Workspaces_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "summary": "Create an workspace in the given resource group",
        "description": "Create or update an workspace",
        "operationId": "Workspaces_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "The workspace payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Workspaces_CreateOrUpdate": {
            "$ref": "./examples/Workspaces_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "summary": "Delete a workspace",
        "description": "DeleteWorkspace",
        "operationId": "Workspaces_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Workspaces_Delete": {
            "$ref": "./examples/Workspaces_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Workspace"
        ],
        "summary": "Patch a given workspace",
        "description": "Patch an workspace",
        "operationId": "Workspaces_Update",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "workspaceUpdateParameters",
            "in": "body",
            "description": "The workspace update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Update": {
            "$ref": "./examples/Workspaces_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/constrainedResources": {
      "get": {
        "tags": [
          "ConstrainedResource"
        ],
        "summary": "List constrained resources in a Workspace.",
        "description": "List constrained resources in a Workspace",
        "operationId": "ConstrainedResources_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConstrainedResourceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ConstrainedResources_ListByWorkspace": {
            "$ref": "./examples/ConstrainedResources_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/constrainedResources/{constrainedResourceName}": {
      "get": {
        "tags": [
          "ConstrainedResource"
        ],
        "summary": "Get a constrained resource in a workspace.",
        "description": "Get a ConstrainedResource in a Workspace",
        "operationId": "ConstrainedResources_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "constrainedResourceName",
            "in": "path",
            "description": "The name of the constrained resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConstrainedResource"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ConstrainedResources_Get": {
            "$ref": "./examples/ConstrainedResources_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConstrainedResource"
        ],
        "summary": "Adds a new constrained resource or update an existing constrained resource to an existing workspace.",
        "description": "Create or update a constrained resource in a Workspace ",
        "operationId": "ConstrainedResources_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "constrainedResourceName",
            "in": "path",
            "description": "The name of the constrained resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "constrainedResource",
            "in": "body",
            "description": "The new constrained resource information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConstrainedResource"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to force resource update",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConstrainedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/ConstrainedResource"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ConstrainedResources_CreateOrUpdate": {
            "$ref": "./examples/ConstrainedResources_CreateOrUpdate.json"
          },
          "ConstrainedResources_SynapseSparkPool_CreateOrUpdate": {
            "$ref": "./examples/ConstrainedResources_SynapseSparkPool_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConstrainedResource"
        ],
        "summary": "Delete a constrained resource in a workspace.",
        "description": "Delete a ConstrainedResource in a Workspace",
        "operationId": "ConstrainedResources_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "constrainedResourceName",
            "in": "path",
            "description": "The name of the constrained resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ConstrainedResources_Delete": {
            "$ref": "./examples/ConstrainedResources_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/dataAssets": {
      "get": {
        "tags": [
          "DataAsset"
        ],
        "summary": "List of available DataAssets under a workspace.",
        "description": "List data assets in a workspace",
        "operationId": "DataAssets_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation Token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAssetList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataAssets_ListByWorkspace": {
            "$ref": "./examples/DataAssets_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/dataAssets/{dataAssetName}": {
      "get": {
        "tags": [
          "DataAsset"
        ],
        "summary": "Get a DataAsset in a workspace.",
        "description": "Get a DataAsset in a Workspace",
        "operationId": "DataAssets_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the dataAssetName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAsset"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataAssets_Get": {
            "$ref": "./examples/DataAssets_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataAsset"
        ],
        "summary": "Adds a new DataAsset to an existing Workspace",
        "description": "Create or update a DataAsset",
        "operationId": "DataAssets_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataAsset",
            "in": "body",
            "description": "The new DataAsset information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataAsset"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAsset"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAsset"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataAssets_CreateOrUpdate": {
            "$ref": "./examples/DataAssets_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataAsset"
        ],
        "summary": "Delete a DataAsset in a workspace.",
        "description": "Delete a DataAsset in a Workspace",
        "operationId": "DataAssets_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DataAssets_Delete": {
            "$ref": "./examples/DataAssets_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/dataAssets/{dataAssetName}/dataSets": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "List DataSets in a DataAsset.",
        "description": "List DataSets in a DataAsset",
        "operationId": "DataSets_ListByDataAsset",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataSetList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataSets_ListByDataAsset": {
            "$ref": "./examples/DataSets_ListByDataAsset.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/dataAssets/{dataAssetName}/dataSets/{dataSetCategory}": {
      "get": {
        "tags": [
          "DataSet"
        ],
        "summary": "Get a DataSet in a DataAsset.",
        "description": "Get a DataSet in a DataAsset",
        "operationId": "DataSets_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetCategory",
            "in": "path",
            "description": "The usage category name of the DataSet",
            "required": true,
            "type": "string",
            "enum": [
              "Production",
              "Sample"
            ],
            "x-ms-enum": {
              "name": "dataSetCategoryType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_Get": {
            "$ref": "./examples/DataSets_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataSet"
        ],
        "summary": "Adds a new DataSet to an existing DataAsset",
        "description": "Create or update a DataSet",
        "operationId": "DataSets_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetCategory",
            "in": "path",
            "description": "The usage category name of the DataSet",
            "required": true,
            "type": "string",
            "enum": [
              "Production",
              "Sample"
            ],
            "x-ms-enum": {
              "name": "dataSetCategoryType",
              "modelAsString": true
            }
          },
          {
            "name": "dataSet",
            "in": "body",
            "description": "The new DataSet information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_CreateOrUpdate": {
            "$ref": "./examples/DataSets_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataSet"
        ],
        "summary": "Delete a DataSet in a DataAsset.",
        "description": "Delete a DataSet in a DataAsset",
        "operationId": "DataSets_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "dataAssetName",
            "in": "path",
            "description": "The name of the DataAsset",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetCategory",
            "in": "path",
            "description": "The usage category name of the DataSet",
            "required": true,
            "type": "string",
            "enum": [
              "Production",
              "Sample"
            ],
            "x-ms-enum": {
              "name": "dataSetCategoryType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DataSets_Delete": {
            "$ref": "./examples/DataSets_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/managedPrivateEndpoints": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoint"
        ],
        "summary": "List managed private endpoints in a Workspace.",
        "description": "List managed private endpoints in a Workspace",
        "operationId": "ManagedPrivateEndpoints_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpointList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_ListByWorkspace": {
            "$ref": "./examples/ManagedPrivateEndpoints_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/managedPrivateEndpoints/{managedPrivateEndpointName}": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoint"
        ],
        "summary": "Get a managed private endpoint in a workspace.",
        "description": "Get a ManagedPrivateEndpoint in a Workspace",
        "operationId": "ManagedPrivateEndpoints_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Get": {
            "$ref": "./examples/ManagedPrivateEndpoints_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedPrivateEndpoint"
        ],
        "summary": "Adds a new managed private endpoint to an existing workspace.",
        "description": "Create a managed private endpoint in a Workspace ",
        "operationId": "ManagedPrivateEndpoints_Create",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedPrivateEndpoint",
            "in": "body",
            "description": "The new managed private endpoint information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Create": {
            "$ref": "./examples/ManagedPrivateEndpoints_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedPrivateEndpoint"
        ],
        "summary": "Delete a managed private endpoint from a workspace.",
        "description": "Delete a ManagedPrivateEndpoint in a Workspace",
        "operationId": "ManagedPrivateEndpoints_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Delete": {
            "$ref": "./examples/ManagedPrivateEndpoints_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelineRuns": {
      "get": {
        "tags": [
          "PipelineRun"
        ],
        "summary": "List pipeline runs in a workspace.",
        "description": "List pipelines runs in a workspace",
        "operationId": "PipelineRuns_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineRunList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PipelineRuns_ListByWorkspace": {
            "$ref": "./examples/PipelineRuns_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelineRuns/{pipelineRunName}": {
      "get": {
        "tags": [
          "PipelineRun"
        ],
        "summary": "Get pipeline run.",
        "description": "Get a pipeline run from a workspace",
        "operationId": "PipelineRuns_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "description": "The name of the pipeline run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "PipelineRuns_Get": {
            "$ref": "./examples/PipelineRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelineRuns/{pipelineRunName}/cancel": {
      "post": {
        "tags": [
          "PipelineRun"
        ],
        "summary": "Request cancellation of a pipeline run",
        "description": "Request to cancel a pipeline run.",
        "operationId": "PipelineRuns_Cancel",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "description": "The name of the pipeline run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PipelineRuns_Cancel": {
            "$ref": "./examples/PipelineRuns_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelineRuns/{pipelineRunName}/pipelineStepRuns": {
      "get": {
        "tags": [
          "PipelineStepRun"
        ],
        "summary": "List all step runs in a pipeline run.",
        "description": "List all step runs in a pipeline run",
        "operationId": "PipelineStepRuns_ListByPipelineRun",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "description": "The name of the pipeline run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStepRunList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PipelineStepRuns_ListByPipelineRun": {
            "$ref": "./examples/PipelineStepRuns_ListByPipelineRun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelineRuns/{pipelineRunName}/pipelineStepRuns/{pipelineStepRunName}": {
      "get": {
        "tags": [
          "PipelineStepRun"
        ],
        "summary": "Get pipeline step run.",
        "description": "Get a pipeline step run from a pipeline run",
        "operationId": "PipelineStepRuns_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "description": "The name of the pipeline run.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineStepRunName",
            "in": "path",
            "description": "The name of the pipeline step run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStepRun"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "PipelineStepRuns_Get": {
            "$ref": "./examples/PipelineStepRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelines": {
      "get": {
        "tags": [
          "Pipeline"
        ],
        "summary": "List Pipelines in a Workspace.",
        "description": "List Pipelines in a Workspace",
        "operationId": "Pipelines_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Pipelines_ListByWorkspace": {
            "$ref": "./examples/Pipelines_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelines/{pipelineName}": {
      "get": {
        "tags": [
          "Pipeline"
        ],
        "summary": "Get Pipeline in a workspace.",
        "description": "Get a Pipeline in a workspace",
        "operationId": "Pipelines_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_Get": {
            "$ref": "./examples/Pipelines_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Pipeline"
        ],
        "summary": "Adds a new pipeline to an existing workspace.",
        "description": "Create or update a Pipeline",
        "operationId": "Pipelines_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipeline",
            "in": "body",
            "description": "The new pipeline information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Pipelines_CreateOrUpdate": {
            "$ref": "./examples/Pipelines_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Pipeline"
        ],
        "summary": "Delete a Pipeline in a workspace.",
        "description": "Delete a Pipeline in a Workspace",
        "operationId": "Pipelines_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Pipelines_Delete": {
            "$ref": "./examples/Pipelines_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelines/{pipelineName}/pipelineSteps": {
      "get": {
        "tags": [
          "PipelineStep"
        ],
        "summary": "List PipelineSteps of a Pipeline.",
        "description": "List PipelineSteps of a Pipeline",
        "operationId": "PipelineSteps_ListByPipeline",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStepList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PipelineSteps_ListByPipeline": {
            "$ref": "./examples/PipelineSteps_ListByPipeline.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelines/{pipelineName}/pipelineSteps/{pipelineStepName}": {
      "get": {
        "tags": [
          "PipelineStep"
        ],
        "summary": "Get a PipelineStep in a Pipeline.",
        "description": "Get a PipelineStep in a Pipeline",
        "operationId": "PipelineSteps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineStepName",
            "in": "path",
            "description": "The name of the pipeline step.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStep"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "PipelineSteps_Get": {
            "$ref": "./examples/PipelineSteps_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PipelineStep"
        ],
        "summary": "Adds a new PipelineStep to an existing Pipeline.",
        "description": "Create or update a PipelineStep",
        "operationId": "PipelineSteps_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineStepName",
            "in": "path",
            "description": "The name of the pipeline step.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineStep",
            "in": "body",
            "description": "The new pipeline information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineStep"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStep"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineStep"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "PipelineSteps_CreateOrUpdate": {
            "$ref": "./examples/PipelineSteps_CreateOrUpdate.json"
          },
          "PipelineSteps_SynapseSpark_CreateOrUpdate": {
            "$ref": "./examples/PipelineSteps_SynapseSpark_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PipelineStep"
        ],
        "summary": "Delete a PipelineStep in a Pipeline.",
        "description": "Delete a PipelineStep in a Pipeline",
        "operationId": "PipelineSteps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineStepName",
            "in": "path",
            "description": "The name of the pipeline step.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "PipelineSteps_Delete": {
            "$ref": "./examples/PipelineSteps_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/pipelines/{pipelineName}/run": {
      "post": {
        "tags": [
          "Pipeline"
        ],
        "summary": "Creates a run of a pipeline.",
        "description": "Creates a run of a pipeline",
        "operationId": "Pipelines_Run",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pipelineRunParameters",
            "in": "body",
            "description": "The parameters for running the pipeline",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineRunParameters"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Pipelines_Run": {
            "$ref": "./examples/Pipelines_Run.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "List Proposals in a Workspace.",
        "description": "List Proposals in a Workspace",
        "operationId": "Proposals_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProposalList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Proposals_ListByWorkspace": {
            "$ref": "./examples/Proposals_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "Get a Proposal in a Workspace.",
        "description": "Get a Proposal in a Workspace",
        "operationId": "Proposals_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Proposals_Get": {
            "$ref": "./examples/Proposals_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Proposal"
        ],
        "summary": "Adds a new Proposal to an existing Workspace.",
        "description": "Create or update a Proposal in a Workspace ",
        "operationId": "Proposals_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposal",
            "in": "body",
            "description": "The new proposal information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Proposals_CreateOrUpdate": {
            "$ref": "./examples/Proposals_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Proposal"
        ],
        "summary": "Delete a Proposal in a Workspace.",
        "description": "Delete a Proposal in a Workspace",
        "operationId": "Proposals_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Proposals_Delete": {
            "$ref": "./examples/Proposals_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/dataAssetReferences": {
      "get": {
        "tags": [
          "DataAssetReference"
        ],
        "summary": "List DataAssetReference in a Proposal.",
        "description": "List Proposals in a Workspace",
        "operationId": "DataAssetReferences_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAssetReferenceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataAssetReferences_ListByProposal": {
            "$ref": "./examples/DataAssetReferences_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/dataAssetReferences/{referenceName}": {
      "get": {
        "tags": [
          "DataAssetReference"
        ],
        "summary": "Get a DataAssetReference in a Proposal.",
        "description": "Get a DataAssetReference in a Proposal",
        "operationId": "DataAssetReferences_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAssetReference"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataAssetReferences_Get": {
            "$ref": "./examples/DataAssetReferences_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataAssetReference"
        ],
        "summary": "Adds a new DataAssetReference to a Proposal.",
        "description": "Create or update a DataAssetReference in a Workspace ",
        "operationId": "DataAssetReferences_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataAssetReference",
            "in": "body",
            "description": "The new dataset reference information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataAssetReference"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAssetReference"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAssetReference"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataAssetReferences_CreateOrUpdate": {
            "$ref": "./examples/DataAssetReferences_CreateOrUpdate.json"
          },
          "DataAssetReferences_WriteOnly_CreateOrUpdate": {
            "$ref": "./examples/DataAssetReferences_WriteOnly_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataAssetReference"
        ],
        "summary": "Delete a DataAssetReference in a Proposal.",
        "description": "Delete a DataAssetReference in a Workspace",
        "operationId": "DataAssetReferences_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DataAssetReferences_Delete": {
            "$ref": "./examples/DataAssetReferences_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/dataAssetReferences/{referenceName}/resolve": {
      "post": {
        "tags": [
          "DataAssetReference"
        ],
        "summary": "Resolve and return the DataAsset that the DataAssetReference points to.",
        "description": "Resolve and return the DataAsset that the DataAssetReference points to",
        "operationId": "DataAssetReferences_Resolve",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataAsset"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "DataAssetReferences_Resolve": {
            "$ref": "./examples/DataAssetReferences_Resolve.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "summary": "List entitlements in a proposal.",
        "description": "List entitlements in a proposal",
        "operationId": "Entitlements_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntitlementList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Entitlements_ListByProposal": {
            "$ref": "./examples/Entitlements_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements/{entitlementName}": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Get an entitlement from a proposal.",
        "description": "Get an entitlement in a proposal",
        "operationId": "Entitlements_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Entitlement"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Entitlements_Get": {
            "$ref": "./examples/Entitlements_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Adds a new entitlement to a proposal.",
        "description": "Create or update an entitlement in a proposal",
        "operationId": "Entitlements_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlement",
            "in": "body",
            "description": "The new entitlement information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entitlement"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Entitlement"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Entitlement"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Entitlements_CreateOrUpdate": {
            "$ref": "./examples/Entitlements_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Delete an entitlement in a proposal.",
        "description": "Delete an entitlement from a proposal",
        "operationId": "Entitlements_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Entitlements_Delete": {
            "$ref": "./examples/Entitlements_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements/{entitlementName}/constraints": {
      "get": {
        "tags": [
          "Constraint"
        ],
        "summary": "List constraints in an entitlement.",
        "description": "List constraints in an entitlement",
        "operationId": "Constraints_ListByEntitlement",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConstraintList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Constraints_ListByEntitlement": {
            "$ref": "./examples/Constraints_ListByEntitlement.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements/{entitlementName}/constraints/{constraintName}": {
      "get": {
        "tags": [
          "Constraint"
        ],
        "summary": "Get a constraint in an entitlement.",
        "description": "Get a constraint from an entitlement",
        "operationId": "Constraints_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "constraintName",
            "in": "path",
            "description": "The name of the constraint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Constraint"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Constraints_Get": {
            "$ref": "./examples/Constraints_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Constraint"
        ],
        "summary": "Adds a new constraint to an entitlement.",
        "description": "Create or update a constraint in an entitlement ",
        "operationId": "Constraints_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "constraintName",
            "in": "path",
            "description": "The name of the constraint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "constraint",
            "in": "body",
            "description": "The new constraint information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Constraint"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Constraint"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Constraint"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Constraints_CreateOrUpdate": {
            "$ref": "./examples/Constraints_CreateOrUpdate.json"
          },
          "Constraints_ScriptParameter_CreateOrUpdate": {
            "$ref": "./examples/Constraints_ScriptParameter_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Constraint"
        ],
        "summary": "Delete a constraint from an entitlement.",
        "description": "Delete a constraint from an entitlement",
        "operationId": "Constraints_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "constraintName",
            "in": "path",
            "description": "The name of the constraint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Constraints_Delete": {
            "$ref": "./examples/Constraints_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements/{entitlementName}/policies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "List policies in an entitlement.",
        "description": "List policies in an entitlement",
        "operationId": "Policies_ListByEntitlement",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Policies_ListByEntitlement": {
            "$ref": "./examples/Policies_ListByEntitlement.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/entitlements/{entitlementName}/policies/{policyName}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get a policy in an entitlement.",
        "description": "Get a policy from an entitlement",
        "operationId": "Policies_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Policies_Get": {
            "$ref": "./examples/Policies_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Policy"
        ],
        "summary": "Adds a new policy to an entitlement.",
        "description": "Create or update a policy in an entitlement ",
        "operationId": "Policies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "body",
            "description": "The new policy information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Policies_CreateOrUpdate": {
            "$ref": "./examples/Policies_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Policy"
        ],
        "summary": "Delete a policy from an entitlement.",
        "description": "Delete a policy from an entitlement",
        "operationId": "Policies_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entitlementName",
            "in": "path",
            "description": "The name of the entitlement.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Policies_Delete": {
            "$ref": "./examples/Policies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/invitations": {
      "get": {
        "tags": [
          "Invitation"
        ],
        "summary": "List all Invitations in a proposal.",
        "description": "List invitations in a proposal",
        "operationId": "Invitations_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Invitations_ListByProposal": {
            "$ref": "./examples/Invitations_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/invitations/{invitationName}": {
      "get": {
        "tags": [
          "Invitation"
        ],
        "summary": "Get Invitation in a proposal.",
        "description": "Get an invitation in a proposal",
        "operationId": "Invitations_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Get": {
            "$ref": "./examples/Invitations_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Invitation"
        ],
        "summary": "Creates a new invitation to a recipient to access a proposal.",
        "description": "Create an invitation ",
        "operationId": "Invitations_Create",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal to send the invitation for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitation",
            "in": "body",
            "description": "Invitation details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Create": {
            "$ref": "./examples/Invitations_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Invitation"
        ],
        "summary": "Delete Invitation in a proposal.",
        "description": "Delete an invitation in a proposal",
        "operationId": "Invitations_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Delete": {
            "$ref": "./examples/Invitations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/participants": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "List Participant in a Proposal.",
        "description": "List Participants in a Proposal",
        "operationId": "Participants_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ParticipantList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Participants_ListByProposal": {
            "$ref": "./examples/Participants_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/participants/{participantName}": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Get a Participant in a Proposal.",
        "description": "Get a Participant in a Proposal",
        "operationId": "Participants_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "participantName",
            "in": "path",
            "description": "The name of the participant.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Participants_Get": {
            "$ref": "./examples/Participants_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Participant"
        ],
        "summary": "Adds a new Participant to a Proposal.",
        "description": "Create or update a Participant in a Proposal ",
        "operationId": "Participants_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "participantName",
            "in": "path",
            "description": "The name of the participant.",
            "required": true,
            "type": "string"
          },
          {
            "name": "participant",
            "in": "body",
            "description": "The new participant information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Participant"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Participants_CreateOrUpdate": {
            "$ref": "./examples/Participants_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Participant"
        ],
        "summary": "Delete a Participant in a Proposal.",
        "description": "Delete a Participant in a Proposal",
        "operationId": "Participants_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "participantName",
            "in": "path",
            "description": "The name of the participant.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Participants_Delete": {
            "$ref": "./examples/Participants_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/revoke": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "Revoke an Active Proposal in a Workspace",
        "description": "Revoke an Active Proposal in a Workspace.",
        "operationId": "Proposals_Revoke",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Proposals_Revoke": {
            "$ref": "./examples/Proposals_Revoke.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/scriptReferences": {
      "get": {
        "tags": [
          "ScriptReference"
        ],
        "summary": "List ScriptReference in a Proposal.",
        "description": "List ScriptReference in a Proposal",
        "operationId": "ScriptReferences_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptReferenceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ScriptReferences_ListByProposal": {
            "$ref": "./examples/ScriptReferences_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/scriptReferences/{referenceName}": {
      "get": {
        "tags": [
          "ScriptReference"
        ],
        "summary": "Get a ScriptReference in a Proposal.",
        "description": "Get a ScriptReference in a Proposal",
        "operationId": "ScriptReferences_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptReference"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptReferences_Get": {
            "$ref": "./examples/ScriptReferences_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ScriptReference"
        ],
        "summary": "Adds a new ScriptReference to a Proposal.",
        "description": "Create or update a ScriptReference in a Proposal ",
        "operationId": "ScriptReferences_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scriptReference",
            "in": "body",
            "description": "The new script reference information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScriptReference"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptReference"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptReference"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptReferences_CreateOrUpdate": {
            "$ref": "./examples/ScriptReferences_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ScriptReference"
        ],
        "summary": "Delete a ScriptReference in a Proposal.",
        "description": "Delete a ScriptReference in a Proposal",
        "operationId": "ScriptReferences_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ScriptReferences_Delete": {
            "$ref": "./examples/ScriptReferences_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/scriptReferences/{referenceName}/resolve": {
      "post": {
        "tags": [
          "ScriptReference"
        ],
        "summary": "Resolve and return the Script that the ScriptReference points to.",
        "description": "Resolve and return the Script that the ScriptReference points to",
        "operationId": "ScriptReferences_Resolve",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptReferences_Resolve": {
            "$ref": "./examples/ScriptReferences_Resolve.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/sign": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "Sign a Proposal to an existing Workspace.",
        "description": "Sign a Proposal in a Workspace ",
        "operationId": "Proposals_Sign",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalSignature",
            "in": "body",
            "description": "The proposal signature information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalSignature"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Proposals_Sign": {
            "$ref": "./examples/Proposals_Sign.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/virtualOutputReferences": {
      "get": {
        "tags": [
          "VirtualOutputReference"
        ],
        "summary": "List VirtualOutputReference in a Proposal.",
        "description": "List VirtualOutputReference in a Proposal",
        "operationId": "VirtualOutputReferences_ListByProposal",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VirtualOutputReferenceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "VirtualOutputReferences_ListByProposal": {
            "$ref": "./examples/VirtualOutputReferences_ListByProposal.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/proposals/{proposalName}/virtualOutputReferences/{referenceName}": {
      "get": {
        "tags": [
          "VirtualOutputReference"
        ],
        "summary": "Get a VirtualOutputReference in a Proposal.",
        "description": "Get a VirtualOutputReference in a Proposal",
        "operationId": "VirtualOutputReferences_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "proposalName",
            "in": "path",
            "description": "The name of the proposal.",
            "required": true,
            "type": "string"
          },
          {
            "name": "referenceName",
            "in": "path",
            "description": "The name of the reference.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VirtualOutputReference"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "VirtualOutputReferences_Get": {
            "$ref": "./examples/VirtualOutputReferences_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/resourceReferences": {
      "get": {
        "tags": [
          "ResourceReference"
        ],
        "summary": "List resource references in a Workspace.",
        "description": "List resource references in a Workspace",
        "operationId": "ResourceReferences_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceReferenceList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ResourceReferences_ListByWorkspace": {
            "$ref": "./examples/ResourceReferences_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/scripts": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "List Scripts in a Workspace.",
        "description": "List Scripts in a Workspace",
        "operationId": "Scripts_ListByWorkspace",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Scripts_ListByWorkspace": {
            "$ref": "./examples/Scripts_ListByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/scripts/{scriptName}": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "Get Script in a workspace.",
        "description": "Get a Script in a Workspace",
        "operationId": "Scripts_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the script.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Scripts_Get": {
            "$ref": "./examples/Scripts_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Script"
        ],
        "summary": "Adds a new script or update an existing script to an existing workspace.\r\nAlso, adds a new a revision for an existing script or create the first revision for a new script.",
        "description": "Create or update a Script in a Workspace ",
        "operationId": "Scripts_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the script.",
            "required": true,
            "type": "string"
          },
          {
            "name": "script",
            "in": "body",
            "description": "The new script information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "Scripts_CreateOrUpdate": {
            "$ref": "./examples/Scripts_CreateOrUpdate.json"
          },
          "Scripts_SynapseSpark_CreateOrUpdate": {
            "$ref": "./examples/Scripts_SynapseSpark_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Script"
        ],
        "summary": "Delete a Script and all it's revisions in a workspace.",
        "description": "Delete a Script in a Workspace",
        "operationId": "Scripts_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the script.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Scripts_Delete": {
            "$ref": "./examples/Scripts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/scripts/{scriptName}/scriptRevisions": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "List revisions of a Script.",
        "description": "List revisions of a Script",
        "operationId": "ScriptRevisions_ListByScript",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the script.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScriptList"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ScriptRevisions_ListByScript": {
            "$ref": "./examples/ScriptRevisions_ListByScript.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataCollaboration/workspaces/{workspaceName}/scripts/{scriptName}/scriptRevisions/{revision}": {
      "get": {
        "tags": [
          "Script"
        ],
        "summary": "Get a Script's revision in a Workspace.",
        "description": "Get a Script's revision in a Workspace",
        "operationId": "ScriptRevisions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/workspaceName"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the script.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "path",
            "description": "The revision of the script.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Script"
            }
          },
          "default": {
            "description": "An error response received from the Microsoft.DataCollaboration resource provider.",
            "schema": {
              "$ref": "#/definitions/DataCollaborationError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptRevisions_Get": {
            "$ref": "./examples/ScriptRevisions_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AdapterBindingConstraint": {
      "description": "Properties for adapter binding constraint",
      "required": [
        "scriptReferenceId"
      ],
      "type": "object",
      "properties": {
        "bindingKey": {
          "description": "The key of script's source or sink.",
          "type": "string"
        },
        "scriptReferenceId": {
          "description": "The unique identifier of the adapter script reference.",
          "type": "string"
        }
      }
    },
    "ADLSGen2FileDataSet": {
      "description": "An ADLS Gen 2 file data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ADLSGen2FileProperties",
          "description": "AdlsGen2File data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2File"
    },
    "ADLSGen2FileProperties": {
      "description": "Properties of the ADLS Gen2 file data set.",
      "required": [
        "fileSystem",
        "filePath",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "filePath": {
          "description": "File path within the file system.",
          "type": "string"
        },
        "fileSystem": {
          "description": "File system to which the file belongs.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "ADLSGen2FileSystemDataSet": {
      "description": "An ADLS Gen 2 file system data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ADLSGen2FileSystemProperties",
          "description": "AdlsGen2FileSystem data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2FileSystem"
    },
    "ADLSGen2FileSystemProperties": {
      "description": "Properties of the ADLS Gen2 file system data set.",
      "required": [
        "fileSystem",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "fileSystem": {
          "description": "The file system name.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "ADLSGen2FolderDataSet": {
      "description": "An ADLS Gen 2 folder data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ADLSGen2FolderProperties",
          "description": "AdlsGen2FileSystem data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Folder"
    },
    "ADLSGen2FolderProperties": {
      "description": "Properties of the ADLS Gen2 folder data set.",
      "required": [
        "fileSystem",
        "folderPath",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "fileSystem": {
          "description": "File system to which the folder belongs.",
          "type": "string"
        },
        "folderPath": {
          "description": "Folder path within the file system.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "BlobContainerDataSet": {
      "description": "An Azure storage blob container data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobContainerProperties",
          "description": "Blob container data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Container"
    },
    "BlobContainerProperties": {
      "description": "Properties of the BLOB container data set.",
      "required": [
        "containerName",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "BLOB Container name.",
          "type": "string"
        },
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "BlobDataSet": {
      "description": "An Azure storage blob data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobProperties",
          "description": "Blob data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Blob"
    },
    "BlobFolderDataSet": {
      "description": "An Azure storage blob folder data set.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobFolderProperties",
          "description": "Blob folder data source properties.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "BlobFolder"
    },
    "BlobFolderProperties": {
      "description": "Properties of the blob folder data set.",
      "required": [
        "containerName",
        "prefix",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Container that has the file path.",
          "type": "string"
        },
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "prefix": {
          "description": "Prefix for blob folder",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "BlobProperties": {
      "description": "Properties of the internal blob data set.",
      "required": [
        "containerName",
        "filePath",
        "storageAccountId"
      ],
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Container that has the file path.",
          "type": "string"
        },
        "dataSetId": {
          "description": "Unique id for identifying a data set resource",
          "type": "string",
          "readOnly": true
        },
        "filePath": {
          "description": "File path within the source data source",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "BooleanPipelineRunParameterAssignment": {
      "description": "Pipeline run boolean parameter assignment",
      "required": [
        "value",
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineRunParameterAssignment"
        }
      ],
      "properties": {
        "value": {
          "description": "Parameter value",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "Boolean"
    },
    "BooleanScriptParameter": {
      "description": "Script parameter of type boolean",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameter"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "Default parameter value",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "Boolean"
    },
    "BoundAdapter": {
      "description": "Bound adapter.",
      "required": [
        "adapterType",
        "scriptId",
        "scriptRevision"
      ],
      "type": "object",
      "properties": {
        "adapterType": {
          "description": "The adapter type",
          "enum": [
            "Standard",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "adapterType",
            "modelAsString": true
          }
        },
        "scriptId": {
          "description": "The adapter script id",
          "type": "string"
        },
        "scriptRevision": {
          "format": "int32",
          "description": "The adapter script revision",
          "type": "integer"
        }
      }
    },
    "BoundDataDescriptor": {
      "description": "Base class for bound data descriptor",
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of bound data descriptor.",
          "enum": [
            "DataAsset",
            "ScriptOutput"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "boundDataDescriptorKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ConstrainedResource": {
      "description": "A constrained resource data transfer object",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of constrained resource.",
          "enum": [
            "SynapseSparkPool"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "constrainedResourceKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ConstrainedResourceList": {
      "description": "List response for list ConstrainedResources",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstrainedResource"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Constraint": {
      "description": "Constraint for entitlement, restricts the access granted by it.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of constraint.",
          "enum": [
            "Script",
            "Location",
            "ScriptParameter"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "constraintKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ConstraintList": {
      "description": "List response for get Constraints",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Constraint"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConsumerInvitation": {
      "description": "A consumer Invitation data transfer object.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "location": {
          "description": "Invitation location",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ConsumerInvitationProperties",
          "description": "Properties on the account",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConsumerInvitationList": {
      "description": "List response for get InvitationList",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerInvitation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConsumerInvitationProperties": {
      "description": "Properties of consumer invitation",
      "required": [
        "invitationId"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description shared when the invitation was created",
          "type": "string",
          "readOnly": true
        },
        "invitationId": {
          "description": "Unique id of the invitation.",
          "type": "string"
        },
        "invitationStatus": {
          "description": "The status of the invitation.",
          "enum": [
            "Pending",
            "Rejected",
            "Accepted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "invitationStatus",
            "modelAsString": true
          }
        },
        "proposalName": {
          "description": "Gets the source proposal Name.",
          "type": "string",
          "readOnly": true
        },
        "providerEmail": {
          "description": "Email of the provider who created the resource",
          "type": "string",
          "readOnly": true
        },
        "providerName": {
          "description": "Name of the provider who created the resource",
          "type": "string",
          "readOnly": true
        },
        "providerTenantName": {
          "description": "Tenant name of the provider who created the resource",
          "type": "string",
          "readOnly": true
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "termsOfUse": {
          "description": "Terms of use proposal when the invitation was created",
          "type": "string",
          "readOnly": true
        },
        "userEmail": {
          "description": "Email of the user who created the resource",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "Name of the user who created the resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataAsset": {
      "description": "Data asset that can be referenced from a proposal.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataAssetProperties",
          "description": "The property bag of the DataAsset",
          "x-ms-client-flatten": true
        }
      }
    },
    "DataAssetBoundDataDescriptor": {
      "description": "Data asset bound data descriptor",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoundDataDescriptor"
        }
      ],
      "properties": {
        "dataAssetId": {
          "description": "The bounded data asset Id",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DataAsset"
    },
    "DataAssetList": {
      "description": "List response for get data assets",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataAsset"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DataAssetProperties": {
      "description": "Properties of the DataAsset",
      "type": "object",
      "properties": {
        "dataAssetId": {
          "description": "Unique id for identifying a data asset resource",
          "type": "string",
          "readOnly": true
        },
        "dataProcessingStrategy": {
          "description": "Data processing strategy to use for the the child DataSets",
          "enum": [
            "CopyBased",
            "InPlace"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "dataProcessingStrategy",
            "modelAsString": true
          }
        },
        "description": {
          "description": "General Description of the DataSet content",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the DataAsset",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "DataAssetReference": {
      "description": "Reference to a data asset.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataAssetReferenceProperties",
          "description": "Properties on the dataset reference",
          "x-ms-client-flatten": true
        }
      }
    },
    "DataAssetReferenceList": {
      "description": "List response for get dataSet references",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataAssetReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DataAssetReferencePlaceholderInfo": {
      "description": "Placeholder information for a data asset reference",
      "required": [
        "assignerId",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "assignerId": {
          "description": "Participant id who is allowed to assign the placeholder.",
          "type": "string"
        },
        "description": {
          "description": "Description of the placeholder.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the placeholder.",
          "type": "string"
        }
      }
    },
    "DataAssetReferenceProperties": {
      "description": "Properties of data set reference data transfer object.",
      "type": "object",
      "properties": {
        "dataAccessType": {
          "description": "The data asset reference type. Represents the data access allowed using this data in pipeline",
          "enum": [
            "ReadOnly",
            "WriteOnly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "dataAccessType",
            "modelAsString": true
          }
        },
        "dataAssetId": {
          "description": "The unique identifier of the referenced data asset",
          "type": "string"
        },
        "dataAssetReferenceId": {
          "description": "Unique id for identifying a dataset reference resource",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "General Description of the data asset reference",
          "type": "string"
        },
        "displayName": {
          "description": "Reference display name",
          "type": "string"
        },
        "ownerId": {
          "description": "The participant id of the data asset owner",
          "type": "string",
          "readOnly": true
        },
        "placeholderInfo": {
          "$ref": "#/definitions/DataAssetReferencePlaceholderInfo",
          "description": "The placeholder information"
        },
        "placeholderState": {
          "description": "The placeholder state",
          "enum": [
            "None",
            "Unassigned",
            "Assigned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "placeholderState",
            "modelAsString": true
          }
        }
      }
    },
    "DataAssetReferenceResourceReference": {
      "description": "ResourceReference used to only allow access if the resource is used within the specified Azure dataAssetReference.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataAssetReferenceResourceReferenceProperties",
          "description": "Properties for dataAssetReference resource reference",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "DataAssetReference"
    },
    "DataAssetReferenceResourceReferenceProperties": {
      "description": "Properties for dataAssetReference resource reference used to only allow access if the resource is used within the specified Azure dataAssetReference.",
      "type": "object",
      "properties": {
        "dataAccessType": {
          "description": "The data asset reference type. Represents the data access allowed using this data in pipeline",
          "enum": [
            "ReadOnly",
            "WriteOnly"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "dataAccessType",
            "modelAsString": true
          }
        },
        "dataAssetId": {
          "description": "The unique identifier of the referenced data asset",
          "type": "string",
          "readOnly": true
        },
        "dataAssetReferenceId": {
          "description": "The unique identifier of the data asset reference",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "General Description of the data asset reference",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Reference display name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataAssetResourceReference": {
      "description": "ResourceReference used to only allow access if the resource is used within the specified Azure dataAsset.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataAssetResourceReferenceProperties",
          "description": "Properties for dataAsset resource reference",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "DataAsset"
    },
    "DataAssetResourceReferenceProperties": {
      "description": "Properties for dataAsset resource reference used to only allow access if the resource is used within the specified Azure dataAsset.",
      "type": "object",
      "properties": {
        "dataAssetId": {
          "description": "The unique identifier of the referenced data asset",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "General Description of the data asset reference",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataCollaborationError": {
      "description": "The data collaboration error model.",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/DataCollaborationErrorInfo",
          "description": "The data share error body"
        }
      }
    },
    "DataCollaborationErrorInfo": {
      "description": "The data collaboration error body model.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the error",
          "type": "string"
        },
        "details": {
          "description": "Nested details of the error model",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataCollaborationErrorInfo"
          },
          "x-ms-identifiers": []
        },
        "message": {
          "description": "Message of the error",
          "type": "string"
        },
        "target": {
          "description": "Target of the error",
          "type": "string"
        }
      }
    },
    "DataMovementPipelineSubstep": {
      "description": "A substep representing copy data activity",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineSubstep"
        }
      ],
      "properties": {
        "dataMovementExecutionStage": {
          "description": "The stage of data movement",
          "enum": [
            "Input",
            "Output"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "dataMovementExecutionStage",
            "modelAsString": true
          }
        },
        "dataSetCategory": {
          "description": "The category of the source dataset",
          "type": "string",
          "readOnly": true
        },
        "dataSetName": {
          "description": "The name of the source dataset",
          "type": "string",
          "readOnly": true
        },
        "dataSetType": {
          "description": "The type of the source dataset",
          "type": "string",
          "readOnly": true
        },
        "numberOfFiles": {
          "format": "int64",
          "description": "Number of files written to sink",
          "type": "integer",
          "readOnly": true
        },
        "resourceId": {
          "description": "The resource id of the dataset",
          "type": "string",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/SubstepReference",
          "description": "The sub-step that is the source of data"
        },
        "totalBytes": {
          "format": "int64",
          "description": "Total size (in bytes) read from the source",
          "type": "integer",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataMovement"
    },
    "DataMovementSubstepReference": {
      "description": "A reference to a data movement sub-step",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubstepReference"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "DataMovement"
    },
    "DataSet": {
      "description": "A set of data from external storage",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of Data Set.",
          "enum": [
            "Blob",
            "Container",
            "BlobFolder",
            "AdlsGen2FileSystem",
            "AdlsGen2Folder",
            "AdlsGen2File"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "DataSetList": {
      "description": "List response for get data assets",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSet"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DateTimeOptionsSetScriptParameterRule": {
      "description": "Script Parameter DateTime Options Set validation rule definition",
      "required": [
        "options",
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "options": {
          "description": "Defines a set of value options for the parameter",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "DateTimeOptionsSet"
    },
    "DateTimePipelineRunParameterAssignment": {
      "description": "Pipeline run DateTime parameter assignment",
      "required": [
        "value",
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineRunParameterAssignment"
        }
      ],
      "properties": {
        "value": {
          "format": "date-time",
          "description": "Parameter value",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DateTime"
    },
    "DateTimeRangeScriptParameterRule": {
      "description": "Script Parameter DateTime range validation rule definition",
      "required": [
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "maximumValue": {
          "format": "date-time",
          "description": "Defines maximum value for the parameter",
          "type": "string"
        },
        "minimumValue": {
          "format": "date-time",
          "description": "Defines minimum value for the parameter",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DateTimeRange"
    },
    "DateTimeScriptParameter": {
      "description": "Script parameter of type datetime",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameter"
        }
      ],
      "properties": {
        "defaultValue": {
          "format": "date-time",
          "description": "Default parameter value",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DateTime"
    },
    "DefaultDto": {
      "description": "Base data transfer object implementation for default resources.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of the azure resource.",
          "type": "string"
        },
        "tags": {
          "description": "Tags on the azure resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiagnosticPolicy": {
      "description": "A diagnostic policy.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Policy"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticPolicyProperties",
          "description": "Properties for diagnostic policy",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "DiagnosticLevel"
    },
    "DiagnosticPolicyProperties": {
      "description": "A diagnostic policy transfer object.",
      "required": [
        "logLevel"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the policy",
          "type": "string"
        },
        "logLevel": {
          "description": "The policy log level.",
          "enum": [
            "Verbose",
            "Information",
            "Warning",
            "Error",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "logLevel",
            "modelAsString": true
          }
        }
      }
    },
    "DiagnosticsConsoleLog": {
      "description": "Diagnostics console log.",
      "required": [
        "kind",
        "dataAssetId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DiagnosticsLog"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "ConsoleLog"
    },
    "DiagnosticsEventLog": {
      "description": "Diagnostics event log.",
      "required": [
        "kind",
        "dataAssetId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DiagnosticsLog"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "EventLog"
    },
    "DiagnosticsLog": {
      "description": "Base class for diagnostics log",
      "required": [
        "kind",
        "dataAssetId"
      ],
      "type": "object",
      "properties": {
        "dataAssetId": {
          "description": "The data asset Id",
          "type": "string"
        },
        "kind": {
          "description": "Kind of diagnostics log.",
          "enum": [
            "ConsoleLog",
            "EventLog"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "diagnosticsLogKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "DiagnosticsLogPipelineSubstep": {
      "description": "A substep representing copy data activity",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineSubstep"
        }
      ],
      "properties": {
        "dataSetCategory": {
          "description": "The category of the dataset",
          "type": "string",
          "readOnly": true
        },
        "dataSetName": {
          "description": "The name of the dataset",
          "type": "string",
          "readOnly": true
        },
        "dataSetType": {
          "description": "The type of the dataset",
          "type": "string",
          "readOnly": true
        },
        "diagnosticsLogType": {
          "description": "The type of the diagnostics log",
          "type": "string",
          "readOnly": true
        },
        "numberOfFiles": {
          "format": "int64",
          "description": "Number of files written to dataset",
          "type": "integer",
          "readOnly": true
        },
        "resourceId": {
          "description": "The resource id of the dataset",
          "type": "string",
          "readOnly": true
        },
        "totalBytes": {
          "format": "int64",
          "description": "Total size (in bytes) read from the logs",
          "type": "integer",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DiagnosticsLog"
    },
    "DimensionProperties": {
      "description": "properties for dimension",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "localized display name of the dimension to customer",
          "type": "string"
        },
        "name": {
          "description": "dimension name",
          "type": "string"
        }
      }
    },
    "Entitlement": {
      "description": "Grants access to another shared resource in the same proposal, with optional constraints and policies",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EntitlementProperties",
          "description": "Properties on the entitlement",
          "x-ms-client-flatten": true
        }
      }
    },
    "EntitlementList": {
      "description": "List response for get Entitlements",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entitlement"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "EntitlementProperties": {
      "description": "Grants access to another shared resource in the same proposal, with optional some constraints and policies",
      "required": [
        "subjectId",
        "resourceId",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Textual description of the entitlement",
          "type": "string"
        },
        "resourceId": {
          "description": "The unique identifier of the resource of the entitlement.\r\nMust be a reference resource from the same proposal.",
          "type": "string"
        },
        "resourceType": {
          "description": "The type of resourced used by the entitlement.",
          "enum": [
            "DataAssetReference",
            "ScriptReference",
            "VirtualOutputReference"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "resourceType",
            "modelAsString": true
          }
        },
        "subjectId": {
          "description": "The unique identifier of the subject of the entitlement.\r\nThe subject must be a participant in the same proposal.",
          "type": "string"
        }
      }
    },
    "FloatOptionsSetScriptParameterRule": {
      "description": "Script Parameter Float Options Set validation rule definition",
      "required": [
        "options",
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "options": {
          "description": "Defines a set of value options for the parameter",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "format": "float",
            "type": "number"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "FloatOptionsSet"
    },
    "FloatPipelineRunParameterAssignment": {
      "description": "Pipeline run float parameter assignment",
      "required": [
        "value",
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineRunParameterAssignment"
        }
      ],
      "properties": {
        "value": {
          "format": "float",
          "description": "Parameter value",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Float"
    },
    "FloatRangeScriptParameterRule": {
      "description": "Script Parameter float range validation rule definition",
      "required": [
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "maximumValue": {
          "format": "float",
          "description": "Defines maximum value for the parameter",
          "type": "number"
        },
        "minimumValue": {
          "format": "float",
          "description": "Defines minimum value for the parameter",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "FloatRange"
    },
    "FloatScriptParameter": {
      "description": "Script parameter of type float",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameter"
        }
      ],
      "properties": {
        "defaultValue": {
          "format": "float",
          "description": "Default parameter value",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Float"
    },
    "Identity": {
      "description": "Identity of resource",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "service principal Id",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Tenant Id",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Identity Type",
          "enum": [
            "SystemAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        }
      }
    },
    "IntegerOptionsSetScriptParameterRule": {
      "description": "Script Parameter Integer Options Set validation rule definition",
      "required": [
        "options",
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "options": {
          "description": "Defines a set of value options for the parameter",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "IntegerOptionsSet"
    },
    "IntegerPipelineRunParameterAssignment": {
      "description": "Pipeline run integer parameter assignment",
      "required": [
        "value",
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineRunParameterAssignment"
        }
      ],
      "properties": {
        "value": {
          "format": "int32",
          "description": "Parameter value",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Integer"
    },
    "IntegerRangeScriptParameterRule": {
      "description": "Script Parameter integer range validation rule definition",
      "required": [
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "maximumValue": {
          "format": "int32",
          "description": "Defines maximum value for the parameter",
          "type": "integer"
        },
        "minimumValue": {
          "format": "int32",
          "description": "Defines minimum value for the parameter",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "IntegerRange"
    },
    "IntegerScriptParameter": {
      "description": "Script parameter of type integer",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameter"
        }
      ],
      "properties": {
        "defaultValue": {
          "format": "int32",
          "description": "Default parameter value",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Integer"
    },
    "Invitation": {
      "description": "Invitation to participate in a shared proposal",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InvitationProperties",
          "description": "Properties on the Invitation",
          "x-ms-client-flatten": true
        }
      }
    },
    "InvitationList": {
      "description": "List response for get InvitationList",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invitation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "InvitationProperties": {
      "description": "Invitation property bag.",
      "type": "object",
      "properties": {
        "invitationId": {
          "description": "unique invitation id",
          "type": "string",
          "readOnly": true
        },
        "invitationStatus": {
          "description": "The status of the invitation.",
          "enum": [
            "Pending",
            "Rejected",
            "Accepted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "invitationStatus",
            "modelAsString": true
          }
        },
        "participantPlaceholderId": {
          "description": "The participant placeholder Id which this invitation is meant to assign",
          "type": "string"
        },
        "respondedAt": {
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "type": "string",
          "readOnly": true
        },
        "sentAt": {
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "type": "string",
          "readOnly": true
        },
        "targetActiveDirectoryId": {
          "description": "The target Azure AD Id. Can't be combined with email.",
          "type": "string"
        },
        "targetEmail": {
          "description": "The email the invitation is directed to.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant.",
          "type": "string"
        },
        "userEmail": {
          "description": "Email of the user who created the resource",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "Name of the user who created the resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LocationConstraint": {
      "description": "Constraint used to only allow access if the resource is used within the specified Azure location.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Constraint"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LocationConstraintProperties",
          "description": "Properties for location constraint",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Location"
    },
    "LocationConstraintProperties": {
      "description": "Properties for location constraint used to only allow access if the resource is used within the specified Azure location.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the constraint.",
          "type": "string"
        },
        "location": {
          "description": "Location of the Azure resource (e.g. West US 2)",
          "type": "string"
        }
      }
    },
    "ManagedPrivateEndpoint": {
      "description": "Private endpoint on the service managed virtual network",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedPrivateEndpointProperties",
          "description": "Properties on the ManagedPrivateEndpoint",
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedPrivateEndpointList": {
      "description": "List response for get ManagedPrivateEndpointList",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedPrivateEndpoint"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedPrivateEndpointProperties": {
      "description": "Properties of Managed Private Endpoint data transfer object.",
      "required": [
        "privateLinkResourceId",
        "groupId"
      ],
      "type": "object",
      "properties": {
        "additionalProperties": {
          "description": "Additional endpoint properties",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        },
        "connectionState": {
          "description": "Connection state of the Managed Private Endpoint",
          "allOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionState"
            }
          ],
          "readOnly": true
        },
        "groupId": {
          "description": "The type of endpoint on the linked resource",
          "enum": [
            "blob",
            "blob_secondary",
            "dfs",
            "dfs_secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "groupId",
            "modelAsString": true
          }
        },
        "privateLinkResourceId": {
          "description": "The Azure id of the linked resource",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the Managed Private Endpoint",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "OperationList": {
      "description": "List response for get operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationModel"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationMetaLogSpecification": {
      "description": "log specifications for operation api",
      "type": "object",
      "properties": {
        "blobDuration": {
          "description": "blob duration of the log",
          "type": "string"
        },
        "displayName": {
          "description": "localized name of the log category",
          "type": "string"
        },
        "name": {
          "description": "name of the log category",
          "type": "string"
        }
      }
    },
    "OperationMetaMetricSpecification": {
      "description": "metric specifications for the operation",
      "type": "object",
      "properties": {
        "aggregationType": {
          "description": "aggregation type of metric",
          "type": "string"
        },
        "dimensions": {
          "description": "properties for dimension",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DimensionProperties"
          },
          "x-ms-identifiers": []
        },
        "displayDescription": {
          "description": "description of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "localized name of the metric",
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "description": "enable regional mdm account",
          "type": "string"
        },
        "fillGapWithZero": {
          "description": "fill gap with zero",
          "type": "string"
        },
        "internalMetricName": {
          "description": "internal metric name",
          "type": "string"
        },
        "name": {
          "description": "name of the metric",
          "type": "string"
        },
        "resourceIdDimensionNameOverride": {
          "description": "dimension name use to replace resource id if specified",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "supported aggregation types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "supportedTimeGrainTypes": {
          "description": "supported time grain types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "unit": {
          "description": "units for the metric",
          "type": "string"
        }
      }
    },
    "OperationMetaPropertyInfo": {
      "description": "properties on meta info",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/OperationMetaServiceSpecification",
          "description": "meta service specification"
        }
      }
    },
    "OperationMetaServiceSpecification": {
      "description": "The operation meta service specification",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "log specifications for the operation",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetaLogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "description": "metric specifications for the operation",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetaMetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationModel": {
      "description": "The response model for get operations",
      "type": "object",
      "properties": {
        "display": {
          "$ref": "#/definitions/OperationModelProperties",
          "description": "Properties on the operation"
        },
        "isDataAction": {
          "description": "Determines whether an operation is done on the data-layer or not",
          "type": "boolean"
        },
        "name": {
          "description": "Operation name for display purposes",
          "type": "string"
        },
        "origin": {
          "description": "origin of the operation",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationMetaPropertyInfo",
          "description": "properties for the operation meta info",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationModelProperties": {
      "description": "Properties on operations",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the operation for display purposes",
          "type": "string"
        },
        "operation": {
          "description": "Name of the operation for display purposes",
          "type": "string"
        },
        "provider": {
          "description": "Name of the provider for display purposes",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type for display purposes",
          "type": "string"
        }
      }
    },
    "OperationResponse": {
      "description": "Response for long running operation",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "endTime": {
          "format": "date-time",
          "description": "start time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/DataCollaborationErrorInfo",
          "description": "The error property when status is failed."
        },
        "startTime": {
          "format": "date-time",
          "description": "start time",
          "type": "string"
        },
        "status": {
          "description": "Operation state of the long running operation.",
          "enum": [
            "Accepted",
            "InProgress",
            "TransientFailure",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      }
    },
    "OutputPolicy": {
      "description": "A Output policy.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Policy"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OutputPolicyProperties",
          "description": "Properties for Output policy",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Output"
    },
    "OutputPolicyProperties": {
      "description": "An Output policy transfer object.",
      "required": [
        "outputName"
      ],
      "type": "object",
      "properties": {
        "appliesTo": {
          "description": "The name of the sink this policy applies to. If not present the policy applies to all sinks.",
          "type": "string"
        },
        "description": {
          "description": "Description of the policy",
          "type": "string"
        },
        "outputName": {
          "description": "The name of the virtual reference representing this policy.",
          "type": "string"
        }
      }
    },
    "Participant": {
      "description": "Participant information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ParticipantProperties",
          "description": "Properties on the participant",
          "x-ms-client-flatten": true
        }
      }
    },
    "ParticipantDetails": {
      "description": "A participant details",
      "type": "object",
      "properties": {
        "tenantName": {
          "description": "Tenant name of the participant",
          "type": "string",
          "readOnly": true
        },
        "workspaceDisplayName": {
          "description": "Display name of the workspace",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ParticipantList": {
      "description": "List response for get participants.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Participant"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ParticipantPlaceholderInfo": {
      "description": "Placeholder information for participant",
      "required": [
        "displayName"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the placeholder.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the placeholder.",
          "type": "string"
        }
      }
    },
    "ParticipantProperties": {
      "description": "Participant property bag.",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "description": "Time at which the account was created.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Participant display name",
          "type": "string",
          "readOnly": true
        },
        "participantId": {
          "description": "Unique id for identifying a participant",
          "type": "string",
          "readOnly": true
        },
        "placeholderInfo": {
          "$ref": "#/definitions/ParticipantPlaceholderInfo",
          "description": "The placeholder information"
        },
        "placeholderState": {
          "description": "The placeholder state",
          "enum": [
            "None",
            "Unassigned",
            "Assigned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "placeholderState",
            "modelAsString": true
          }
        },
        "proposalApprovalStatus": {
          "description": "Current approval status",
          "enum": [
            "Pending",
            "Approved",
            "Expired"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "proposalApprovalStatus",
            "modelAsString": true
          }
        },
        "tenantName": {
          "description": "Tenant name of the participant",
          "type": "string",
          "readOnly": true
        },
        "userEmail": {
          "description": "Email of the user who created the resource",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "Name of the user who created the resource",
          "type": "string",
          "readOnly": true
        },
        "workspaceDisplayName": {
          "description": "Display name of the workspace",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Pipeline": {
      "description": "A pipeline data transfer object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineProperties",
          "description": "Properties on the pipeline",
          "x-ms-client-flatten": true
        }
      }
    },
    "PipelineList": {
      "description": "List response for get Pipelines",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pipeline"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineProperties": {
      "description": "Pipeline property bag.",
      "type": "object",
      "properties": {
        "description": {
          "description": "General Description of the pipeline content",
          "type": "string"
        },
        "pipelineId": {
          "description": "Unique id for identifying a pipeline resource",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the pipeline",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "scriptParameters": {
          "description": "List of pipeline level script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineRun": {
      "description": "A pipeline run data transfer object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineRunProperties",
          "description": "Properties on the pipeline",
          "x-ms-client-flatten": true
        }
      }
    },
    "PipelineRunList": {
      "description": "List response for get pipeline run.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineRun"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineRunParameterAssignment": {
      "description": "Pipeline run parameter assignment",
      "required": [
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "properties": {
        "parameterType": {
          "description": "Parameter type.",
          "enum": [
            "Boolean",
            "Integer",
            "Float",
            "String",
            "DateTime"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        },
        "pipelineParameterId": {
          "description": "Pipeline parameter id",
          "type": "string"
        }
      },
      "discriminator": "parameterType"
    },
    "PipelineRunParameters": {
      "description": "The parameters for a pipeline run.",
      "type": "object",
      "properties": {
        "pipelineRunMode": {
          "description": "Mode of pipeline run used.",
          "enum": [
            "Production",
            "Test"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "pipelineRunMode",
            "modelAsString": true
          }
        },
        "pipelineRunParameterAssignments": {
          "description": "Pipeline run parameters assignments",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineRunParameterAssignment"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineRunProperties": {
      "description": "A pipeline run property bag.",
      "type": "object",
      "properties": {
        "durationMs": {
          "format": "int32",
          "description": "Pipeline run duration",
          "type": "integer",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of pipeline run",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error message if any",
          "type": "string",
          "readOnly": true
        },
        "pipelineId": {
          "description": "Object id of the pipeline used to create this run",
          "type": "string",
          "readOnly": true
        },
        "pipelineName": {
          "description": "Name of the pipeline used to create this run",
          "type": "string",
          "readOnly": true
        },
        "pipelineRunMode": {
          "description": "Indicate the pipeline execution mode. Production or Test.",
          "enum": [
            "Production",
            "Test"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "pipelineRunMode",
            "modelAsString": true
          }
        },
        "pipelineRunStatus": {
          "description": "Pipeline run status",
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Preparing",
            "Queued",
            "Unknown",
            "Cancelled",
            "Canceling",
            "Waiting",
            "Incomplete"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "pipelineRunStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of pipeline run",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PipelineStep": {
      "description": "A single step of a pipeline.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of pipeline step.",
          "enum": [
            "SynapseSpark"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "pipelineStepKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "PipelineStepList": {
      "description": "List response for get Pipeline steps",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStep"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineStepRun": {
      "description": "pipeline step run at data set level",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineStepRunProperties",
          "description": "Properties on the pipeline step run",
          "x-ms-client-flatten": true
        }
      }
    },
    "PipelineStepRunList": {
      "description": "Details of pipeline run",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStepRun"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PipelineStepRunProperties": {
      "description": "pipeline step run property bag.",
      "type": "object",
      "properties": {
        "durationMs": {
          "format": "int32",
          "description": "Duration of pipeline step run",
          "type": "integer",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of pipeline step run",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error message if any",
          "type": "string",
          "readOnly": true
        },
        "pipelineStepName": {
          "description": "The name of the step used for this step run",
          "type": "string",
          "readOnly": true
        },
        "pipelineStepRunStatus": {
          "description": "Pipeline step run status",
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Preparing",
            "Queued",
            "Unknown",
            "Cancelled",
            "Canceling",
            "Waiting",
            "Incomplete"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "pipelineStepRunStatus",
            "modelAsString": true
          }
        },
        "pipelineSubsteps": {
          "description": "List of substeps",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineSubstep"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of pipeline step run",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PipelineSubstep": {
      "description": "Substep of a pipeline step run",
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "durationMs": {
          "format": "int32",
          "description": "Substep run duration",
          "type": "integer",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of substep",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error message if any",
          "type": "string",
          "readOnly": true
        },
        "executionStatus": {
          "description": "Execution status e.g. Success, Failed, InProgress",
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Preparing",
            "Queued",
            "Unknown",
            "Cancelled",
            "Canceling",
            "Waiting",
            "Incomplete"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "executionStatus",
            "modelAsString": true
          }
        },
        "kind": {
          "description": "Kind of pipeline substep.",
          "enum": [
            "DataMovement",
            "ScriptExecution",
            "DiagnosticsLog"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "pipelineSubStepKind",
            "modelAsString": true
          }
        },
        "pipelineSubstepId": {
          "description": "Id of pipeline substep.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of substep",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "kind"
    },
    "Policy": {
      "description": "Policy for entitlement",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of policy.",
          "enum": [
            "DiagnosticLevel",
            "Output"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "policyKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "PolicyList": {
      "description": "List response for get Policies",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PrivateEndpointConnectionState": {
      "description": "The connection state of a managed private endpoint",
      "type": "object",
      "properties": {
        "actionsRequired": {
          "description": "The actions required on the managed private endpoint",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The managed private endpoint description",
          "type": "string",
          "readOnly": true
        },
        "privateEndpointStatus": {
          "description": "The approval status",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "privateEndpointStatus",
            "modelAsString": true
          }
        }
      }
    },
    "Proposal": {
      "description": "A proposal for data collaboration contract, can be shared and edited by multiple participants before signing.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProposalProperties",
          "description": "Properties on the proposal",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProposalList": {
      "description": "List response for get proposals",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Proposal"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProposalProperties": {
      "description": "Properties of proposal data transfer object.",
      "type": "object",
      "properties": {
        "contractStatus": {
          "description": "Indicate if the contract is an editable Draft or a readonly Active contract",
          "enum": [
            "Draft",
            "Active"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "contractStatus",
            "modelAsString": true
          }
        },
        "currentVersion": {
          "description": "The proposal version, any change to the proposal or any of its underlying resources will result in a different value.",
          "type": "string",
          "readOnly": true
        },
        "currentVersionTimestamp": {
          "format": "date-time",
          "description": "Timestamp of the last time the proposal or any of its underlying resources were updated.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Textual description of the proposal",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the proposal",
          "type": "string"
        },
        "invitationId": {
          "description": "The invitation id for joining a proposal",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "invitationLocation": {
          "description": "The invitation id for joining a proposal",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "participantId": {
          "description": "Id of the participant that authorized access to this proposal.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the proposal",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "terms": {
          "description": "Terms of the proposal",
          "type": "string"
        }
      }
    },
    "ProposalSignature": {
      "description": "Dto for Proposal Signing request",
      "required": [
        "proposalVersion"
      ],
      "type": "object",
      "properties": {
        "proposalVersion": {
          "description": "Proposal version to be signed",
          "type": "string"
        }
      }
    },
    "ProxyDto": {
      "description": "Base data transfer object implementation for proxy resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource id of the azure resource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the azure resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "System Data of the Azure resource.",
          "readOnly": true
        },
        "type": {
          "description": "Type of the azure resource",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "RegularExpressionScriptParameterRule": {
      "description": "Script Parameter float range validation rule definition",
      "required": [
        "regularExpression",
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "regularExpression": {
          "description": "Defines a regular expression parameter value must supply",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RegularExpression"
    },
    "ResourceReference": {
      "description": "A set of data from external storage",
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of resource reference.",
          "enum": [
            "DataAsset",
            "DataAssetReference",
            "Script",
            "ScriptReference"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "resourceReferenceKind",
            "modelAsString": true
          }
        },
        "participantDetails": {
          "description": "Participant Details of the resource",
          "allOf": [
            {
              "$ref": "#/definitions/ParticipantDetails"
            }
          ],
          "readOnly": true
        },
        "resourceId": {
          "description": "Id of the azure resource",
          "type": "string",
          "readOnly": true
        },
        "resourceName": {
          "description": "Name of the azure resource",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "Type of the azure resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "SystemData Info of resource",
          "allOf": [
            {
              "$ref": "#/definitions/SystemData"
            }
          ],
          "readOnly": true
        }
      },
      "discriminator": "kind"
    },
    "ResourceReferenceList": {
      "description": "List response for get resource references",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Script": {
      "description": "A script data transfer object",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "kind": {
          "description": "Kind of script.",
          "enum": [
            "SynapseSpark"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "scriptKind",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ScriptConstraint": {
      "description": "Constraint used to only allow access if the resource is used with a specific script.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Constraint"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptConstraintProperties",
          "description": "Properties for script constraint",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Script"
    },
    "ScriptConstraintProperties": {
      "description": "Properties for script constraint used to only allow access if the resource is used with a specific script.",
      "required": [
        "scriptReferenceId"
      ],
      "type": "object",
      "properties": {
        "adapterBindingConstraints": {
          "description": "The identifier of the adapter binding constraints.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdapterBindingConstraint"
          },
          "x-ms-identifiers": []
        },
        "description": {
          "description": "Description of the constraint.",
          "type": "string"
        },
        "scriptReferenceId": {
          "description": "The unique identifier of the script reference.",
          "type": "string"
        }
      }
    },
    "ScriptDataAssetBinding": {
      "description": "Binds a data asset reference to a script source or sink by key.",
      "type": "object",
      "properties": {
        "adapter": {
          "$ref": "#/definitions/BoundAdapter",
          "description": "Adapter used to access the data asset"
        },
        "boundDataDescriptor": {
          "$ref": "#/definitions/BoundDataDescriptor",
          "description": "The bounded data descriptor"
        },
        "key": {
          "description": "The key of script's source or sink",
          "type": "string"
        }
      }
    },
    "ScriptExecutionInformation": {
      "description": "The information about an executed script",
      "type": "object",
      "properties": {
        "executionParameters": {
          "description": "The parameter values used during execution",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "name": {
          "description": "The name of the script",
          "type": "string",
          "readOnly": true
        },
        "purpose": {
          "description": "The kind of the script",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "The resource id of the script",
          "type": "string",
          "readOnly": true
        },
        "revision": {
          "format": "int32",
          "description": "The revision of the script",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ScriptExecutionParameter": {
      "description": "Script parameter execution values",
      "type": "object",
      "properties": {
        "name": {
          "description": "Parameter name",
          "type": "string"
        },
        "parameterType": {
          "description": "Parameter type",
          "enum": [
            "Boolean",
            "Integer",
            "Float",
            "String",
            "DateTime"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        },
        "resolvedBy": {
          "description": "Parameter resolution by",
          "enum": [
            "Default",
            "Constant",
            "PipelineRun"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "resolvedBy",
            "modelAsString": true
          }
        },
        "value": {
          "description": "Parameter value",
          "type": "string"
        }
      }
    },
    "ScriptExecutionPipelineSubstep": {
      "description": "A substep representing scrip execution",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineSubstep"
        }
      ],
      "properties": {
        "executionTimeout": {
          "description": "The upper boundary of script execution time",
          "type": "string",
          "readOnly": true
        },
        "scriptExecutionInformation": {
          "$ref": "#/definitions/ScriptExecutionInformation",
          "description": "Script information"
        },
        "sinkBindings": {
          "description": "Sink Binding",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SinkBindingExecutionInformation"
          },
          "x-ms-identifiers": []
        },
        "sourceBindings": {
          "description": "Source Binding",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceBindingExecutionInformation"
          },
          "x-ms-identifiers": []
        },
        "synapseSparkInformation": {
          "$ref": "#/definitions/SynapseSparkInformation",
          "description": "Information about the Synapse Spark"
        }
      },
      "x-ms-discriminator-value": "ScriptExecution"
    },
    "ScriptExecutionSubstepReference": {
      "description": "A reference to a script execution sub-step",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubstepReference"
        }
      ],
      "properties": {
        "outputBindingKey": {
          "description": "The output binding key",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "ScriptExecution"
    },
    "ScriptList": {
      "description": "List response for get Scripts",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Script"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptOutputBoundDataDescriptor": {
      "description": "Script output bound data descriptor",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoundDataDescriptor"
        }
      ],
      "properties": {
        "outputName": {
          "description": "The key of the output binding in the source step",
          "type": "string"
        },
        "stepName": {
          "description": "The name of the source step",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ScriptOutput"
    },
    "ScriptParameter": {
      "description": "Script parameter definition",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Parameter usage description",
          "type": "string"
        },
        "name": {
          "description": "Parameter name as it appears in the script",
          "type": "string"
        },
        "parameterId": {
          "description": "Parameter identifier",
          "type": "string"
        },
        "parameterType": {
          "description": "Parameter type.",
          "enum": [
            "Boolean",
            "Integer",
            "Float",
            "String",
            "DateTime"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "parameterType"
    },
    "ScriptParameterBinding": {
      "description": "Pipeline script parameter binding",
      "required": [
        "scriptParameterId",
        "pipelineParameterId"
      ],
      "type": "object",
      "properties": {
        "pipelineParameterId": {
          "description": "Pipeline Parameter identifier",
          "type": "string"
        },
        "scriptParameterId": {
          "description": "Script parameter identifier",
          "type": "string"
        }
      }
    },
    "ScriptParameterConstraint": {
      "description": "Constraint used to only allow access if the resource is using a specific script parameter.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Constraint"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptParameterConstraintProperties",
          "description": "Properties for script parameter constraint",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "ScriptParameter"
    },
    "ScriptParameterConstraintProperties": {
      "description": "Properties for script parameter constraint used to only allow access if the resource is using a specific script parameter.",
      "required": [
        "parameterName"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the constraint.",
          "type": "string"
        },
        "isParameterRequired": {
          "description": "Parameter must exist",
          "type": "boolean"
        },
        "parameterName": {
          "description": "The parameter name which this constraint will apply to",
          "type": "string"
        },
        "parameterType": {
          "description": "Parameter should be of type",
          "enum": [
            "Boolean",
            "Integer",
            "Float",
            "String",
            "DateTime"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        },
        "validationRule": {
          "$ref": "#/definitions/ScriptParameterValidationRule",
          "description": "Rule in which parameter have to follow"
        }
      }
    },
    "ScriptParameterValidationRule": {
      "description": "Script Parameter validation rule definition",
      "required": [
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "properties": {
        "scriptParameterValidationRuleType": {
          "description": "Script parameter validation rule type.",
          "enum": [
            "IntegerRange",
            "FloatRange",
            "DateTimeRange",
            "StringLengthRange",
            "RegularExpression",
            "IntegerOptionsSet",
            "FloatOptionsSet",
            "StringOptionsSet",
            "DateTimeOptionsSet"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "scriptParameterValidationRuleType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "scriptParameterValidationRuleType"
    },
    "ScriptReference": {
      "description": "Script reference dto.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptReferenceProperties",
          "description": "Properties on the script reference",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScriptReferenceList": {
      "description": "List response for get script references",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptReferencePlaceholderInfo": {
      "description": "Placeholder information for a script reference",
      "required": [
        "purpose",
        "assignerId",
        "displayName"
      ],
      "type": "object",
      "properties": {
        "assignerId": {
          "description": "Participant id who is allowed to assign the placeholder.",
          "type": "string"
        },
        "description": {
          "description": "Description of the placeholder.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the placeholder.",
          "type": "string"
        },
        "purpose": {
          "description": "Script purpose",
          "enum": [
            "Body",
            "InputAdapter",
            "OutputAdapter"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "purpose",
            "modelAsString": true
          }
        }
      }
    },
    "ScriptReferenceProperties": {
      "description": "Properties of data set reference data transfer object.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Reference display name",
          "type": "string"
        },
        "ownerId": {
          "description": "The participant id of the script owner",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "The list of script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "placeholderInfo": {
          "$ref": "#/definitions/ScriptReferencePlaceholderInfo",
          "description": "The placeholder information"
        },
        "placeholderState": {
          "description": "The placeholder state",
          "enum": [
            "None",
            "Unassigned",
            "Assigned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "placeholderState",
            "modelAsString": true
          }
        },
        "purpose": {
          "description": "Script purpose",
          "enum": [
            "Body",
            "InputAdapter",
            "OutputAdapter"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "purpose",
            "modelAsString": true
          }
        },
        "revision": {
          "format": "int32",
          "description": "The revision number of the script being referenced.\r\nIf omitted, the script latest version will be referenced.",
          "type": "integer"
        },
        "scriptId": {
          "description": "The unique identifier of the referenced script",
          "type": "string"
        },
        "scriptKind": {
          "description": "Kind of the referenced script.",
          "enum": [
            "SynapseSpark"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "scriptKind",
            "modelAsString": true
          }
        },
        "scriptReferenceId": {
          "description": "Unique id for identifying a script reference resource",
          "type": "string",
          "readOnly": true
        },
        "scriptVisibility": {
          "description": "The referenced script visibility modifier.",
          "enum": [
            "ShowAll",
            "HiddenContent"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "scriptVisibility",
            "modelAsString": true
          }
        },
        "sinks": {
          "description": "The list of parameters the script can use as it's data sinks",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sources": {
          "description": "The list of parameters the script can use as it's data sources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptReferenceResourceReference": {
      "description": "ResourceReference used to only allow access if the resource is used within the specified Azure scriptReference.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptReferenceResourceReferenceProperties",
          "description": "Properties for scriptReference resource reference",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "ScriptReference"
    },
    "ScriptReferenceResourceReferenceProperties": {
      "description": "Properties for scriptReference resource reference used to only allow access if the resource is used within the specified Azure scriptReference.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Reference display name",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "The list of script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "purpose": {
          "description": "Script purpose",
          "enum": [
            "Body",
            "InputAdapter",
            "OutputAdapter"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "purpose",
            "modelAsString": true
          }
        },
        "revision": {
          "format": "int32",
          "description": "The revision number of the scriptReference being referenced.\r\nIf omitted, the scriptReference latest version will be referenced.",
          "type": "integer",
          "readOnly": true
        },
        "scriptId": {
          "description": "The unique identifier of the referenced script",
          "type": "string",
          "readOnly": true
        },
        "scriptKind": {
          "description": "Kind of the referenced script.",
          "enum": [
            "SynapseSpark"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "scriptKind",
            "modelAsString": true
          }
        },
        "scriptReferenceId": {
          "description": "The unique identifier of the scriptReference",
          "type": "string",
          "readOnly": true
        },
        "sinks": {
          "description": "The list of parameters the scriptReference can use as it's data sinks",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sources": {
          "description": "The list of parameters the scriptReference can use as it's data sources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptResourceReference": {
      "description": "ResourceReference used to only allow access if the resource is used within the specified Azure script.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptResourceReferenceProperties",
          "description": "Properties for script resource reference",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Script"
    },
    "ScriptResourceReferenceProperties": {
      "description": "Properties for script resource reference used to only allow access if the resource is used within the specified Azure script.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "The list of script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "purpose": {
          "description": "Script purpose",
          "enum": [
            "Body",
            "InputAdapter",
            "OutputAdapter"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "purpose",
            "modelAsString": true
          }
        },
        "revision": {
          "format": "int32",
          "description": "The revision number of the script being referenced.\r\nIf omitted, the script latest version will be referenced.",
          "type": "integer",
          "readOnly": true
        },
        "scriptId": {
          "description": "The unique identifier of the referenced script",
          "type": "string",
          "readOnly": true
        },
        "scriptKind": {
          "description": "Kind of the referenced script.",
          "enum": [
            "SynapseSpark"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "scriptKind",
            "modelAsString": true
          }
        },
        "sinks": {
          "description": "The list of parameters the script can use as it's data sinks",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sources": {
          "description": "The list of parameters the script can use as it's data sources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "SinkBindingExecutionInformation": {
      "description": "Information about the bounded sink",
      "type": "object",
      "properties": {
        "adapter": {
          "$ref": "#/definitions/ScriptExecutionInformation",
          "description": "The bounded adapter"
        },
        "bindingKey": {
          "description": "The binding key",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SourceBindingExecutionInformation": {
      "description": "Information about the bounded source",
      "type": "object",
      "properties": {
        "adapter": {
          "$ref": "#/definitions/ScriptExecutionInformation",
          "description": "The bounded adapter"
        },
        "bindingKey": {
          "description": "The binding key",
          "type": "string",
          "readOnly": true
        },
        "sourceSubstepReference": {
          "$ref": "#/definitions/SubstepReference",
          "description": "The bounded sub-step"
        }
      }
    },
    "SparkPoolExecutionInformation": {
      "description": "Information about the Spark pool execution",
      "type": "object",
      "properties": {
        "executorNodeSize": {
          "description": "The executers node size",
          "type": "string",
          "readOnly": true
        },
        "executorsCount": {
          "format": "int32",
          "description": "The executers count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SparkPoolInformation": {
      "description": "Information about the Spark pool",
      "type": "object",
      "properties": {
        "maxNodeCount": {
          "format": "int32",
          "description": "The Spark pool max node count (If auto-scale is enabled)",
          "type": "integer",
          "readOnly": true
        },
        "minNodeCount": {
          "format": "int32",
          "description": "The Spark pool min node count (If auto-scale is enabled)",
          "type": "integer",
          "readOnly": true
        },
        "nodeCount": {
          "format": "int32",
          "description": "The Spark pool node count",
          "type": "integer",
          "readOnly": true
        },
        "nodeSize": {
          "description": "The Spark pool node size",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "The resource Id of the Spark pool",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StringLengthRangeScriptParameterRule": {
      "description": "Script Parameter float range validation rule definition",
      "required": [
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "maximumLength": {
          "format": "int32",
          "description": "Defines maximum length for the string parameter",
          "type": "integer"
        },
        "minimumLength": {
          "format": "int32",
          "description": "Defines minimum length for the string parameter",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "StringLengthRange"
    },
    "StringOptionsSetScriptParameterRule": {
      "description": "Script Parameter String Options Set validation rule definition",
      "required": [
        "options",
        "scriptParameterValidationRuleType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameterValidationRule"
        }
      ],
      "properties": {
        "options": {
          "description": "Defines a set of value options for the parameter",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "StringOptionsSet"
    },
    "StringPipelineRunParameterAssignment": {
      "description": "Pipeline run string parameter assignment",
      "required": [
        "value",
        "pipelineParameterId",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineRunParameterAssignment"
        }
      ],
      "properties": {
        "value": {
          "description": "Parameter value",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "String"
    },
    "StringScriptParameter": {
      "description": "Script parameter of type string",
      "required": [
        "name",
        "parameterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptParameter"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "Default parameter value",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "String"
    },
    "SubstepReference": {
      "description": "A reference to a sub-step",
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of substep reference.",
          "enum": [
            "DataMovement",
            "ScriptExecution",
            "DiagnosticsLog"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "subStepReferenceKind",
            "modelAsString": true
          }
        },
        "pipelineStepName": {
          "description": "The name of the Pipeline Step Run which contains the referred sub-step",
          "type": "string",
          "readOnly": true
        },
        "pipelineSubstepId": {
          "description": "The Id of the Sub-step",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "kind"
    },
    "SynapseSparkInformation": {
      "description": "Information about the Synapse Spark",
      "type": "object",
      "properties": {
        "sparkPoolExecutionInformation": {
          "$ref": "#/definitions/SparkPoolExecutionInformation",
          "description": "The Spark pool execution information"
        },
        "sparkPoolInformation": {
          "$ref": "#/definitions/SparkPoolInformation",
          "description": "The Spark pool information"
        }
      }
    },
    "SynapseSparkPipelineStep": {
      "description": "A Synapse Spark based pipeline step.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineStep"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SynapseSparkPipelineStepProperties",
          "description": "Properties of Synapse Spark pipelineStep",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "SynapseSparkPipelineStepProperties": {
      "description": "A Synapse Spark PipelineStep data transfer object.",
      "required": [
        "scriptId",
        "scriptRevision",
        "scriptSourceBindings",
        "scriptSinkBindings"
      ],
      "type": "object",
      "properties": {
        "dependencies": {
          "description": "List of other steps names, in the same pipeline, which this step is depended on\r\nand should run only when they finish.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "diagnosticsLogBindings": {
          "description": "Bindings between the diagnostics logs and data assets",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticsLog"
          },
          "x-ms-identifiers": []
        },
        "executorNodeSize": {
          "description": "The node size to use per executor.",
          "enum": [
            "None",
            "Small",
            "Medium",
            "Large",
            "XLarge",
            "XXLarge",
            "XXXLarge"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "executorNodeSize",
            "modelAsString": true
          }
        },
        "executorsCount": {
          "format": "int32",
          "description": "Number of executors to execute this step.",
          "type": "integer"
        },
        "scriptExecutionTimeout": {
          "description": "The upper boundary of script execution time. Pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|([0-5][0-9])):(60|([0-5][0-9])).",
          "type": "string"
        },
        "scriptId": {
          "description": "The script Id that the pipeline step should execute",
          "type": "string"
        },
        "scriptParameterBindings": {
          "description": "Binding between the script parameter and pipeline parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameterBinding"
          },
          "x-ms-identifiers": []
        },
        "scriptParameters": {
          "description": "List of pipeline step level script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "x-ms-identifiers": []
        },
        "scriptRevision": {
          "format": "int32",
          "description": "The script's revision that the pipeline step should execute",
          "type": "integer"
        },
        "scriptSinkBindings": {
          "description": "Bindings between the script's sink keys and data assets",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptDataAssetBinding"
          },
          "x-ms-identifiers": []
        },
        "scriptSourceBindings": {
          "description": "Bindings between the script's source keys and data assets",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptDataAssetBinding"
          },
          "x-ms-identifiers": []
        },
        "synapseSparkPoolId": {
          "description": "The Synapse Spark pool that will execute this step",
          "type": "string"
        }
      }
    },
    "SynapseSparkPool": {
      "description": "Synapse Spark Pool constrained resource",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConstrainedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SynapseSparkPoolProperties",
          "description": "Properties of Synapse Spark pool",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "SynapseSparkPool"
    },
    "SynapseSparkPoolAutoPauseProperties": {
      "description": "Spark pool auto-pausing properties",
      "required": [
        "delayInMinutes",
        "enabled"
      ],
      "type": "object",
      "properties": {
        "delayInMinutes": {
          "format": "int32",
          "description": "Gets or sets number of minutes of idle time before the Big Data\r\npool is automatically paused.",
          "type": "integer"
        },
        "enabled": {
          "description": "Gets or sets whether auto-pausing is enabled for the Big Data pool.",
          "type": "boolean"
        }
      }
    },
    "SynapseSparkPoolAutoScaleProperties": {
      "description": "Spark pool auto-scaling properties",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Gets or sets whether automatic scaling is enabled for the Big Data\r\npool.",
          "type": "boolean"
        },
        "maxNodeCount": {
          "format": "int32",
          "description": "Gets or sets the maximum number of nodes the Big Data pool can\r\nsupport.",
          "type": "integer"
        },
        "minNodeCount": {
          "format": "int32",
          "description": "Gets or sets the minimum number of nodes the Big Data pool can\r\nsupport.",
          "type": "integer"
        }
      }
    },
    "SynapseSparkPoolLibraryRequirementsProperties": {
      "description": "Spark pool library requirements properties",
      "type": "object",
      "properties": {
        "content": {
          "description": "Gets or sets the library requirements.",
          "type": "string"
        }
      }
    },
    "SynapseSparkPoolProperties": {
      "description": "A Synapse Spark Pool data transfer object.",
      "type": "object",
      "properties": {
        "autoPause": {
          "$ref": "#/definitions/SynapseSparkPoolAutoPauseProperties",
          "description": "Gets or sets auto-pausing properties"
        },
        "autoScale": {
          "$ref": "#/definitions/SynapseSparkPoolAutoScaleProperties",
          "description": "Gets or sets auto-scaling properties"
        },
        "constrainedResourceId": {
          "description": "Unique id for identifying a constrained resource",
          "type": "string",
          "readOnly": true
        },
        "family": {
          "description": "Family of constrained resource.",
          "enum": [
            "Compute",
            "Storage"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "family",
            "modelAsString": true
          }
        },
        "libraryRequirements": {
          "$ref": "#/definitions/SynapseSparkPoolLibraryRequirementsProperties",
          "description": "Gets or sets library requirements properties"
        },
        "nodeCount": {
          "format": "int32",
          "description": "Gets or sets the number of nodes in the Big Data pool.",
          "type": "integer"
        },
        "nodeSize": {
          "description": "Gets or sets the level of compute power that each node in the Synapse Spark pool has.",
          "enum": [
            "None",
            "Small",
            "Medium",
            "Large",
            "XLarge",
            "XXLarge",
            "XXXLarge"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "nodeSize",
            "modelAsString": true
          }
        },
        "nodeSizeFamily": {
          "description": "Gets or sets the kind of nodes that the Big Data pool provides.",
          "enum": [
            "None",
            "MemoryOptimized"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "nodeSizeFamily",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the constrained resource.",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "sparkVersion": {
          "description": "Gets or sets the Apache Spark version.",
          "type": "string"
        }
      }
    },
    "SynapseSparkScript": {
      "description": "A type of script based on the compute engine",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Script"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SynapseSparkScriptProperties",
          "description": "Properties of Synapse Spark script",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "SynapseSparkScriptProperties": {
      "description": "A Synapse Spark Script data transfer object.",
      "required": [
        "language",
        "visibility",
        "purpose",
        "sources",
        "sinks",
        "content"
      ],
      "type": "object",
      "properties": {
        "content": {
          "description": "The script content",
          "type": "string"
        },
        "language": {
          "description": "The script language",
          "enum": [
            "Python"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "language",
            "modelAsString": true
          }
        },
        "parameters": {
          "description": "The list of overridable script parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of the script.",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "purpose": {
          "description": "Script purpose",
          "enum": [
            "Body",
            "InputAdapter",
            "OutputAdapter"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "purpose",
            "modelAsString": true
          }
        },
        "revision": {
          "format": "int32",
          "description": "Latest script revision",
          "type": "integer",
          "readOnly": true
        },
        "scriptId": {
          "description": "Unique id for identifying a script resource",
          "type": "string",
          "readOnly": true
        },
        "sinks": {
          "description": "The list of parameters the script can use as it's data sinks",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "sources": {
          "description": "The list of parameters the script can use as it's data sources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "visibility": {
          "description": "Script visibility mode",
          "enum": [
            "ShowAll",
            "HiddenContent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "visibility",
            "modelAsString": true
          }
        }
      }
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string",
          "readOnly": true
        },
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string",
          "readOnly": true
        },
        "createdByType": {
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The type of identity that last modified the resource.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "lastModifiedByType",
            "modelAsString": true
          }
        }
      }
    },
    "VirtualOutputReference": {
      "description": "Reference to a virtual output.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualOutputReferenceProperties",
          "description": "Properties on the output reference",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualOutputReferenceList": {
      "description": "List response for get output references",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualOutputReference"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VirtualOutputReferenceProperties": {
      "description": "Properties of virtual output reference data transfer object.",
      "type": "object",
      "properties": {
        "outputPolicyResourceId": {
          "description": "Azure resource id of the referenced output policy",
          "type": "string",
          "readOnly": true
        },
        "virtualOutputReferenceId": {
          "description": "Unique id for identifying a virtual output reference resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Workspace": {
      "description": "Workspace to hold data collaboration workloads.",
      "required": [
        "identity"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DefaultDto"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Identity Info on the Workspace"
        },
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "Properties on the workspace",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceList": {
      "description": "List response for get Workspaces.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The Url of next result page.",
          "type": "string"
        },
        "value": {
          "description": "Collection of items of type DataTransferObjects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WorkspaceProperties": {
      "description": "Workspace property bag.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the workspace",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the Workspace",
          "enum": [
            "Succeeded",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "userEmail": {
          "description": "Email of the user who created the resource",
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "description": "Name of the user who created the resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "description": "Update parameters for workspaces",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags on the azure resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The api version to use.",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The resource group name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier",
      "required": true,
      "type": "string"
    },
    "workspaceName": {
      "name": "workspaceName",
      "in": "path",
      "description": "The name of the workspace.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "tags": []
}
