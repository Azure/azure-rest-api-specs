{
  "swagger": "2.0",
  "info": {
    "title": "StorageMoverClient",
    "version": "2023-10-01",
    "description": "The Azure Storage Mover REST API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "StorageMovers"
    },
    {
      "name": "Agents"
    },
    {
      "name": "Endpoints"
    },
    {
      "name": "Projects"
    },
    {
      "name": "JobDefinitions"
    },
    {
      "name": "JobRuns"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.StorageMover/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.StorageMover/storageMovers": {
      "get": {
        "operationId": "StorageMovers_ListBySubscription",
        "tags": [
          "StorageMovers"
        ],
        "description": "Lists all Storage Movers in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageMoverListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers": {
      "get": {
        "operationId": "StorageMovers_ListByResourceGroup",
        "tags": [
          "StorageMovers"
        ],
        "description": "Lists all Storage Movers in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageMoverListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}": {
      "get": {
        "operationId": "StorageMovers_Get",
        "tags": [
          "StorageMovers"
        ],
        "description": "Gets a Storage Mover resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageMover"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "StorageMovers_CreateOrUpdate",
        "tags": [
          "StorageMovers"
        ],
        "description": "Creates or updates a top-level Storage Mover resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMover"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageMover' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageMover"
            }
          },
          "201": {
            "description": "Resource 'StorageMover' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageMover"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "StorageMovers_Update",
        "tags": [
          "StorageMovers"
        ],
        "description": "Updates properties for a Storage Mover resource. Properties not specified in the request body will be unchanged.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMoverUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageMover"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "StorageMovers_Delete",
        "tags": [
          "StorageMovers"
        ],
        "description": "Deletes a Storage Mover resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/agents": {
      "get": {
        "operationId": "Agents_ListByStorageMover",
        "tags": [
          "Agents"
        ],
        "description": "Lists all Agents in a Storage Mover.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AgentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/agents/{agentName}": {
      "get": {
        "operationId": "Agents_Get",
        "tags": [
          "Agents"
        ],
        "description": "Gets an Agent resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "path",
            "description": "The name of the Agent resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Agents_CreateOrUpdate",
        "tags": [
          "Agents"
        ],
        "description": "Creates or updates an Agent resource, which references a hybrid compute machine that can run jobs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "path",
            "description": "The name of the Agent resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Agent' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          },
          "201": {
            "description": "Resource 'Agent' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Agents_Update",
        "tags": [
          "Agents"
        ],
        "description": "Creates or updates an Agent resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "path",
            "description": "The name of the Agent resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Agents_Delete",
        "tags": [
          "Agents"
        ],
        "description": "Deletes an Agent resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "path",
            "description": "The name of the Agent resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/endpoints": {
      "get": {
        "operationId": "Endpoints_ListByStorageMover",
        "tags": [
          "Endpoints"
        ],
        "description": "Lists all Endpoints in a Storage Mover.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "Endpoints_Get",
        "tags": [
          "Endpoints"
        ],
        "description": "Gets an Endpoint resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the Endpoint resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Endpoints_CreateOrUpdate",
        "tags": [
          "Endpoints"
        ],
        "description": "Creates or updates an Endpoint resource, which represents a data transfer source or destination.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the Endpoint resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Endpoint' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "201": {
            "description": "Resource 'Endpoint' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Endpoints_Update",
        "tags": [
          "Endpoints"
        ],
        "description": "Updates properties for an Endpoint resource. Properties not specified in the request body will be unchanged.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the Endpoint resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointBaseUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Endpoints_Delete",
        "tags": [
          "Endpoints"
        ],
        "description": "Deletes an Endpoint resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The name of the Endpoint resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects": {
      "get": {
        "operationId": "Projects_ListByStorageMover",
        "tags": [
          "Projects"
        ],
        "description": "Lists all Projects in a Storage Mover.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}": {
      "get": {
        "operationId": "Projects_Get",
        "tags": [
          "Projects"
        ],
        "description": "Gets a Project resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Projects_CreateOrUpdate",
        "tags": [
          "Projects"
        ],
        "description": "Creates or updates a Project resource, which is a logical grouping of related jobs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Project' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "201": {
            "description": "Resource 'Project' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Projects_Update",
        "tags": [
          "Projects"
        ],
        "description": "Updates properties for a Project resource. Properties not specified in the request body will be unchanged.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Projects_Delete",
        "tags": [
          "Projects"
        ],
        "description": "Deletes a Project resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions": {
      "get": {
        "operationId": "JobDefinitions_ListByProject",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Lists all Job Definitions in a Project.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}": {
      "get": {
        "operationId": "JobDefinitions_Get",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Gets a Job Definition resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "JobDefinitions_CreateOrUpdate",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Creates or updates a Job Definition resource, which contains configuration for a single unit of managed data transfer.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'JobDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          "201": {
            "description": "Resource 'JobDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "JobDefinitions_Update",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Updates properties for a Job Definition resource. Properties not specified in the request body will be unchanged.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinitionUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "JobDefinitions_Delete",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Deletes a Job Definition resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns": {
      "get": {
        "operationId": "JobRuns_ListByJobDefinition",
        "tags": [
          "JobRuns"
        ],
        "description": "Lists all Job Runs in a Job Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobRunListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns/{jobRunName}": {
      "get": {
        "operationId": "JobRuns_Get",
        "tags": [
          "JobRuns"
        ],
        "description": "Gets a Job Run resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobRunName",
            "in": "path",
            "description": "The name of the Job Run resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/startJob": {
      "post": {
        "operationId": "JobDefinitions_StartJob",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Requests an Agent to start a new instance of this Job Definition, generating a new Job Run resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobRunResourceId"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/stopJob": {
      "post": {
        "operationId": "JobDefinitions_StopJob",
        "tags": [
          "JobDefinitions"
        ],
        "description": "Requests the Agent of any active instance of this Job Definition to stop.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageMoverName",
            "in": "path",
            "description": "The name of the Storage Mover resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The name of the Project resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobDefinitionName",
            "in": "path",
            "description": "The name of the Job Definition resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobRunResourceId"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "Agent": {
      "type": "object",
      "description": "The Agent resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Agent resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AgentListResult": {
      "type": "object",
      "description": "The response of a Agent list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Agent items on this page",
          "items": {
            "$ref": "#/definitions/Agent"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AgentProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Agent."
        },
        "agentVersion": {
          "type": "string",
          "description": "The Agent version.",
          "readOnly": true
        },
        "arcResourceId": {
          "type": "string",
          "description": "The fully qualified resource ID of the Hybrid Compute resource for the Agent.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "arcVmUuid": {
          "type": "string",
          "description": "The VM UUID of the Hybrid Compute resource for the Agent.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "agentStatus": {
          "$ref": "#/definitions/AgentStatus",
          "description": "The Agent status.",
          "readOnly": true
        },
        "lastStatusUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated time of the Agent status.",
          "readOnly": true
        },
        "localIPAddress": {
          "type": "string",
          "description": "Local IP address reported by the Agent.",
          "readOnly": true
        },
        "memoryInMB": {
          "type": "integer",
          "format": "int32",
          "description": "Available memory reported by the Agent, in MB.",
          "readOnly": true
        },
        "numberOfCores": {
          "type": "integer",
          "format": "int32",
          "description": "Available compute cores reported by the Agent.",
          "readOnly": true
        },
        "uptimeInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Uptime of the Agent in seconds.",
          "readOnly": true
        },
        "errorDetails": {
          "$ref": "#/definitions/AgentPropertiesErrorDetails",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      },
      "required": [
        "arcResourceId",
        "arcVmUuid"
      ]
    },
    "AgentPropertiesErrorDetails": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code reported by Agent"
        },
        "message": {
          "type": "string",
          "description": "Expanded description of reported error code"
        }
      }
    },
    "AgentStatus": {
      "type": "string",
      "enum": [
        "Registering",
        "Offline",
        "Online",
        "Executing",
        "RequiresAttention",
        "Unregistering"
      ],
      "x-ms-enum": {
        "name": "AgentStatus",
        "modelAsString": true
      }
    },
    "AgentUpdateParameters": {
      "type": "object",
      "description": "The Agent resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AgentUpdateProperties"
        }
      }
    },
    "AgentUpdateProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Agent."
        }
      }
    },
    "AzureKeyVaultSmbCredentials": {
      "type": "object",
      "description": "The Azure Key Vault secret URIs which store the credentials.",
      "properties": {
        "usernameUri": {
          "type": "string",
          "description": "The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value."
        },
        "passwordUri": {
          "type": "string",
          "description": "The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Credentials"
        }
      ],
      "x-ms-discriminator-value": "AzureKeyVaultSmb"
    },
    "AzureStorageBlobContainerEndpointProperties": {
      "type": "object",
      "description": "The properties of Azure Storage blob container endpoint.",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure Resource ID of the storage account that is the target destination.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "blobContainerName": {
          "type": "string",
          "description": "The name of the Storage blob container that is the target destination.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "storageAccountResourceId",
        "blobContainerName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureStorageBlobContainer"
    },
    "AzureStorageBlobContainerEndpointUpdateProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureStorageBlobContainer"
    },
    "AzureStorageSmbFileShareEndpointProperties": {
      "type": "object",
      "description": "The properties of Azure Storage SMB file share endpoint.",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure Resource ID of the storage account.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "fileShareName": {
          "type": "string",
          "description": "The name of the Azure Storage file share.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "storageAccountResourceId",
        "fileShareName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureStorageSmbFileShare"
    },
    "AzureStorageSmbFileShareEndpointUpdateProperties": {
      "type": "object",
      "description": "The properties of Azure Storage SMB file share endpoint to update.",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureStorageSmbFileShare"
    },
    "CopyMode": {
      "type": "string",
      "enum": [
        "Additive",
        "Mirror"
      ],
      "x-ms-enum": {
        "name": "CopyMode",
        "modelAsString": true
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "CredentialType": {
      "type": "string",
      "enum": [
        "AzureKeyVaultSmb"
      ],
      "x-ms-enum": {
        "name": "CredentialType",
        "modelAsString": true
      }
    },
    "Credentials": {
      "type": "object",
      "description": "The Credentials.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for Credentials."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "Endpoint": {
      "type": "object",
      "description": "The Endpoint resource, which contains information about file sources and targets.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointBaseProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Endpoint resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EndpointBaseProperties": {
      "type": "object",
      "description": "The resource specific properties for the Storage Mover resource.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Discriminator property for EndpointBaseProperties."
        },
        "description": {
          "type": "string",
          "description": "A description for the Endpoint."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      },
      "discriminator": "endpointType",
      "required": [
        "endpointType"
      ]
    },
    "EndpointBaseUpdateParameters": {
      "type": "object",
      "description": "The Endpoint resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointBaseUpdateProperties",
          "description": "The Endpoint resource, which contains information about file sources and targets."
        }
      }
    },
    "EndpointBaseUpdateProperties": {
      "type": "object",
      "description": "The Endpoint resource, which contains information about file sources and targets.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Discriminator property for EndpointBaseUpdateProperties."
        },
        "description": {
          "type": "string",
          "description": "A description for the Endpoint."
        }
      },
      "discriminator": "endpointType",
      "required": [
        "endpointType"
      ]
    },
    "EndpointListResult": {
      "type": "object",
      "description": "The response of a Endpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Endpoint items on this page",
          "items": {
            "$ref": "#/definitions/Endpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EndpointType": {
      "type": "string",
      "enum": [
        "AzureStorageBlobContainer",
        "NfsMount",
        "AzureStorageSmbFileShare",
        "SmbMount"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true
      }
    },
    "JobDefinition": {
      "type": "object",
      "description": "The Job Definition resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobDefinitionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Job Definition resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobDefinitionListResult": {
      "type": "object",
      "description": "The response of a JobDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobDefinition items on this page",
          "items": {
            "$ref": "#/definitions/JobDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobDefinitionProperties": {
      "type": "object",
      "description": "Job definition properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Job Definition."
        },
        "copyMode": {
          "$ref": "#/definitions/CopyMode",
          "description": "Strategy to use for copy."
        },
        "sourceName": {
          "type": "string",
          "description": "The name of the source Endpoint.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified resource ID of the source Endpoint.",
          "readOnly": true
        },
        "sourceSubpath": {
          "type": "string",
          "description": "The subpath to use when reading from the source Endpoint.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "targetName": {
          "type": "string",
          "description": "The name of the target Endpoint.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "targetResourceId": {
          "type": "string",
          "description": "Fully qualified resource ID of the target Endpoint.",
          "readOnly": true
        },
        "targetSubpath": {
          "type": "string",
          "description": "The subpath to use when writing to the target Endpoint.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "latestJobRunName": {
          "type": "string",
          "description": "The name of the Job Run in a non-terminal state, if exists.",
          "readOnly": true
        },
        "latestJobRunResourceId": {
          "type": "string",
          "description": "The fully qualified resource ID of the Job Run in a non-terminal state, if exists.",
          "readOnly": true
        },
        "latestJobRunStatus": {
          "$ref": "#/definitions/JobRunStatus",
          "description": "The current status of the Job Run in a non-terminal state, if exists.",
          "readOnly": true
        },
        "agentName": {
          "type": "string",
          "description": "Name of the Agent to assign for new Job Runs of this Job Definition."
        },
        "agentResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      },
      "required": [
        "copyMode",
        "sourceName",
        "targetName"
      ]
    },
    "JobDefinitionUpdateParameters": {
      "type": "object",
      "description": "The Job Definition resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobDefinitionUpdateProperties",
          "description": "Job definition properties."
        }
      }
    },
    "JobDefinitionUpdateProperties": {
      "type": "object",
      "description": "Job definition properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Job Definition."
        },
        "copyMode": {
          "$ref": "#/definitions/CopyMode",
          "description": "Strategy to use for copy."
        },
        "agentName": {
          "type": "string",
          "description": "Name of the Agent to assign for new Job Runs of this Job Definition."
        }
      }
    },
    "JobRun": {
      "type": "object",
      "description": "The Job Run resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobRunProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Job Run resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobRunError": {
      "type": "object",
      "description": "Error type",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code of the given entry."
        },
        "message": {
          "type": "string",
          "description": "Error message of the given entry."
        },
        "target": {
          "type": "string",
          "description": "Target of the given error entry."
        }
      }
    },
    "JobRunListResult": {
      "type": "object",
      "description": "The response of a JobRun list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobRun items on this page",
          "items": {
            "$ref": "#/definitions/JobRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobRunProperties": {
      "type": "object",
      "description": "Job run properties.",
      "properties": {
        "status": {
          "$ref": "#/definitions/JobRunStatus",
          "description": "The state of the job execution.",
          "readOnly": true
        },
        "scanStatus": {
          "$ref": "#/definitions/JobRunScanStatus",
          "description": "The status of Agent's scanning of source.",
          "readOnly": true
        },
        "agentName": {
          "type": "string",
          "description": "Name of the Agent assigned to this run.",
          "readOnly": true
        },
        "agentResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of the Agent assigned to this run.",
          "readOnly": true
        },
        "executionStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the run. Null if no Agent reported that the job has started.",
          "readOnly": true
        },
        "executionEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the run. Null if Agent has not reported that the job has ended.",
          "readOnly": true
        },
        "lastStatusUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated time of the Job Run.",
          "readOnly": true
        },
        "itemsScanned": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items scanned so far in source.",
          "readOnly": true
        },
        "itemsExcluded": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items that will not be transferred, as they are excluded by user configuration.",
          "readOnly": true
        },
        "itemsUnsupported": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items that will not be transferred, as they are unsupported on target.",
          "readOnly": true
        },
        "itemsNoTransferNeeded": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items that will not be transferred, as they are already found on target (e.g. mirror mode).",
          "readOnly": true
        },
        "itemsFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items that were attempted to transfer and failed.",
          "readOnly": true
        },
        "itemsTransferred": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items successfully transferred to target.",
          "readOnly": true
        },
        "bytesScanned": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data scanned so far in source.",
          "readOnly": true
        },
        "bytesExcluded": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data that will not be transferred, as they are excluded by user configuration.",
          "readOnly": true
        },
        "bytesUnsupported": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data that will not be transferred, as they are unsupported on target.",
          "readOnly": true
        },
        "bytesNoTransferNeeded": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data that will not be transferred, as they are already found on target (e.g. mirror mode).",
          "readOnly": true
        },
        "bytesFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data that were attempted to transfer and failed.",
          "readOnly": true
        },
        "bytesTransferred": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes of data successfully transferred to target.",
          "readOnly": true
        },
        "sourceName": {
          "type": "string",
          "description": "Name of source Endpoint resource. This resource may no longer exist.",
          "readOnly": true
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of source Endpoint. This id may no longer exist.",
          "readOnly": true
        },
        "sourceProperties": {
          "type": "object",
          "description": "Copy of source Endpoint resource's properties at time of Job Run creation.",
          "additionalProperties": {},
          "readOnly": true
        },
        "targetName": {
          "type": "string",
          "description": "Name of target Endpoint resource. This resource may no longer exist.",
          "readOnly": true
        },
        "targetResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of of Endpoint. This id may no longer exist.",
          "readOnly": true
        },
        "targetProperties": {
          "type": "object",
          "description": "Copy of Endpoint resource's properties at time of Job Run creation.",
          "additionalProperties": {},
          "readOnly": true
        },
        "jobDefinitionProperties": {
          "type": "object",
          "description": "Copy of parent Job Definition's properties at time of Job Run creation.",
          "additionalProperties": {},
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/JobRunError",
          "description": "Error details.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      }
    },
    "JobRunResourceId": {
      "type": "object",
      "description": "Response that identifies a Job Run.",
      "properties": {
        "jobRunResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of the Job Run.",
          "readOnly": true
        }
      }
    },
    "JobRunScanStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Scanning",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "JobRunScanStatus",
        "modelAsString": true
      }
    },
    "JobRunStatus": {
      "type": "string",
      "enum": [
        "Queued",
        "Started",
        "Running",
        "CancelRequested",
        "Canceling",
        "Canceled",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "JobRunStatus",
        "modelAsString": true
      }
    },
    "NfsMountEndpointProperties": {
      "type": "object",
      "description": "The properties of NFS share endpoint.",
      "properties": {
        "host": {
          "type": "string",
          "description": "The host name or IP address of the server exporting the file system.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "nfsVersion": {
          "$ref": "#/definitions/NfsVersion",
          "description": "The NFS protocol version.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "export": {
          "type": "string",
          "description": "The directory being exported from the server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "host",
        "export"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "NfsMount"
    },
    "NfsMountEndpointUpdateProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "NfsMount"
    },
    "NfsVersion": {
      "type": "string",
      "enum": [
        "NFSauto",
        "NFSv3",
        "NFSv4"
      ],
      "x-ms-enum": {
        "name": "NfsVersion",
        "modelAsString": true
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "Project": {
      "type": "object",
      "description": "The Project resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Project resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProjectListResult": {
      "type": "object",
      "description": "The response of a Project list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Project items on this page",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectProperties": {
      "type": "object",
      "description": "Project properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Project."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      }
    },
    "ProjectUpdateParameters": {
      "type": "object",
      "description": "The Project resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProjectUpdateProperties",
          "description": "Project properties."
        }
      }
    },
    "ProjectUpdateProperties": {
      "type": "object",
      "description": "Project properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Project."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      }
    },
    "SmbMountEndpointProperties": {
      "type": "object",
      "description": "The properties of SMB share endpoint.",
      "properties": {
        "host": {
          "type": "string",
          "description": "The host name or IP address of the server exporting the file system.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "shareName": {
          "type": "string",
          "description": "The name of the SMB share being exported from the server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "credentials": {
          "$ref": "#/definitions/AzureKeyVaultSmbCredentials",
          "description": "The Azure Key Vault secret URIs which store the required credentials to access the SMB share."
        }
      },
      "required": [
        "host",
        "shareName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "SmbMount"
    },
    "SmbMountEndpointUpdateProperties": {
      "type": "object",
      "description": "The properties of SMB share endpoint to update.",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/AzureKeyVaultSmbCredentials",
          "description": "The Azure Key Vault secret URIs which store the required credentials to access the SMB share."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBaseUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "SmbMount"
    },
    "StorageMover": {
      "type": "object",
      "description": "The Storage Mover resource, which is a container for a group of Agents, Projects, and Endpoints.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageMoverProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Storage Mover resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StorageMoverListResult": {
      "type": "object",
      "description": "The response of a StorageMover list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageMover items on this page",
          "items": {
            "$ref": "#/definitions/StorageMover"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageMoverProperties": {
      "type": "object",
      "description": "The resource specific properties for the Storage Mover resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Storage Mover."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this resource.",
          "readOnly": true
        }
      }
    },
    "StorageMoverUpdateParameters": {
      "type": "object",
      "description": "The Storage Mover resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageMoverUpdateProperties",
          "description": "The resource specific properties for the Storage Mover resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StorageMoverUpdateProperties": {
      "type": "object",
      "description": "The resource specific properties for the Storage Mover resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Storage Mover."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-10-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_10_01",
            "value": "2023-10-01"
          }
        ]
      }
    }
  },
  "parameters": {}
}
