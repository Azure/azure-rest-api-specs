{
  "swagger": "2.0",
  "info": {
    "title": "PostgreSQLServerManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.",
    "version": "2022-01-20-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Create",
        "x-ms-examples": {
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a database as a point in time restore": {
            "$ref": "./examples/ServerCreatePointInTimeRestore.json"
          }
        },
        "description": "Creates a new server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "x-ms-examples": {
          "ServerUpdate": {
            "$ref": "./examples/ServerUpdate.json"
          },
          "ServerUpdateWithCustomerMaintenanceWindow": {
            "$ref": "./examples/ServerUpdateWithCustomerMaintenanceWindow.json"
          }
        },
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForUpdate"
            },
            "description": "The required parameters for updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "ServerDelete": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "description": "Deletes a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "ServerGet": {
            "$ref": "./examples/ServerGet.json"
          },
          "ServerGetWithVnet": {
            "$ref": "./examples/ServerGetWithVnet.json"
          }
        },
        "description": "Gets information about a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "ServerListByResourceGroup": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "description": "List all the servers in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "x-ms-examples": {
          "ServerList": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "description": "List all the servers in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart": {
      "post": {
        "tags": [
          "ServerRestart"
        ],
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "ServerRestart": {
            "$ref": "./examples/ServerRestart.json"
          },
          "ServerRestartWithFailover": {
            "$ref": "./examples/ServerRestartWithFailover.json"
          }
        },
        "description": "Restarts a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RestartParameter"
            },
            "description": "The parameters for restarting a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start": {
      "post": {
        "tags": [
          "ServerStart"
        ],
        "operationId": "Servers_Start",
        "x-ms-examples": {
          "ServerStart": {
            "$ref": "./examples/ServerStart.json"
          }
        },
        "description": "Starts a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop": {
      "post": {
        "tags": [
          "ServerStop"
        ],
        "operationId": "Servers_Stop",
        "x-ms-examples": {
          "ServerStop": {
            "$ref": "./examples/ServerStop.json"
          }
        },
        "description": "Stops a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups/{backupName}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_Get",
        "x-ms-examples": {
          "Get a backup for a server": {
            "$ref": "./examples/BackupGet.json"
          }
        },
        "description": "List all the backups for a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/BackupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerBackup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_ListByServer",
        "x-ms-examples": {
          "List backups for a server": {
            "$ref": "./examples/BackupListByServer.json"
          }
        },
        "description": "List all the backups for a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerBackupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "x-ms-examples": {
          "FirewallRuleCreate": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "The required parameters for creating or updating a firewall rule."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "FirewallRuleDelete": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "description": "Deletes a PostgreSQL server firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "FirewallRuleList": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        },
        "description": "List all the firewall rules in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByServer",
        "x-ms-examples": {
          "FirewallRuleList": {
            "$ref": "./examples/FirewallRuleListByServer.json"
          }
        },
        "description": "List all the firewall rules in a given PostgreSQL server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "ConfigurationList": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "description": "List all the configurations in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Get",
        "x-ms-examples": {
          "ConfigurationGet": {
            "$ref": "./examples/ConfigurationGet.json"
          }
        },
        "description": "Gets information about a configuration of server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Update",
        "x-ms-examples": {
          "Update a user configuration": {
            "$ref": "./examples/ConfigurationUpdate.json"
          }
        },
        "description": "Updates a configuration of a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            },
            "description": "The required parameters for updating a server configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Put",
        "x-ms-examples": {
          "Update a user configuration": {
            "$ref": "./examples/ConfigurationUpdate.json"
          }
        },
        "description": "Updates a configuration of a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            },
            "description": "The required parameters for updating a server configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "operationId": "CheckNameAvailability_Execute",
        "x-ms-examples": {
          "NameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        },
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityRequest"
            },
            "description": "The required parameters for checking if resource name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities": {
      "get": {
        "tags": [
          "LocationBasedCapabilities"
        ],
        "operationId": "LocationBasedCapabilities_Execute",
        "x-ms-examples": {
          "CapabilitiesList": {
            "$ref": "./examples/CapabilitiesByLocation.json"
          }
        },
        "description": "Get capabilities at specified location in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilitiesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage": {
      "post": {
        "tags": [
          "VirtualNetworkSubnetUsage"
        ],
        "operationId": "VirtualNetworkSubnetUsage_Execute",
        "x-ms-examples": {
          "VirtualNetworkSubnetUsageList": {
            "$ref": "./examples/VirtualNetworkSubnetUsage.json"
          }
        },
        "description": "Get virtual network subnet usage for a given vNet resource id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageParameter"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBforPostgreSQL/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "description": "Lists all of the available REST API operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VirtualNetworkSubnetUsageParameter": {
      "type": "object",
      "properties": {
        "virtualNetworkArmResourceId": {
          "type": "string",
          "description": "Virtual network resource id."
        }
      },
      "description": "Virtual network subnet usage parameter"
    },
    "VirtualNetworkSubnetUsageResult": {
      "type": "object",
      "properties": {
        "delegatedSubnetsUsage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedSubnetUsage"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "location of the delegated subnet usage"
        },
        "subscriptionId": {
          "type": "string",
          "readOnly": true,
          "description": "subscriptionId of the delegated subnet usage"
        }
      },
      "description": "Virtual network subnet usage data."
    },
    "DelegatedSubnetUsage": {
      "type": "object",
      "properties": {
        "subnetName": {
          "type": "string",
          "readOnly": true,
          "description": "name of the subnet"
        },
        "usage": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Number of used delegated subnets"
        }
      },
      "description": "Delegated subnet usage data."
    },
    "StorageMBCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "storage MB name",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int64",
          "description": "supported IOPS",
          "readOnly": true
        },
        "storageSizeMB": {
          "type": "integer",
          "format": "int64",
          "description": "storage size in MB",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "storage size in MB capability"
    },
    "VcoreCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "vCore name",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int64",
          "description": "supported vCores",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int64",
          "description": "supported IOPS",
          "readOnly": true
        },
        "supportedMemoryPerVcoreMB": {
          "type": "integer",
          "format": "int64",
          "description": "supported memory per vCore in MB",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "Vcores capability"
    },
    "ServerVersionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "server version",
          "readOnly": true
        },
        "supportedVcores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VcoreCapability"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "Server version capabilities."
    },
    "StorageEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "storage edition name",
          "readOnly": true
        },
        "supportedStorageMB": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageMBCapability"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "storage edition capability"
    },
    "NodeTypeCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "note type name",
          "readOnly": true
        },
        "nodeType": {
          "type": "string",
          "description": "note type",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "node type capability"
    },
    "FlexibleServerEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Server edition name",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageEditionCapability"
          },
          "description": "The list of editions supported by this server edition.",
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedServerVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVersionCapability"
          },
          "x-ms-identifiers": [],
          "description": "The list of server versions supported by this server edition.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "Flexible server edition capabilities."
    },
    "HyperscaleNodeEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Server edition name",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageEditionCapability"
          },
          "x-ms-identifiers": [],
          "description": "The list of editions supported by this server edition.",
          "readOnly": true
        },
        "supportedServerVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVersionCapability"
          },
          "x-ms-identifiers": [],
          "description": "The list of server versions supported by this server edition.",
          "readOnly": true
        },
        "supportedNodeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeTypeCapability"
          },
          "x-ms-identifiers": [],
          "description": "The list of Node Types supported by this server edition.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "Hyperscale node edition capabilities."
    },
    "CapabilityProperties": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string",
          "description": "zone name",
          "readOnly": true
        },
        "supportedHAMode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported high availability mode",
          "readOnly": true
        },
        "geoBackupSupported": {
          "type": "boolean",
          "description": "A value indicating whether a new server in this region can have geo-backups to paired region.",
          "readOnly": true
        },
        "zoneRedundantHaSupported": {
          "type": "boolean",
          "description": "A value indicating whether a new server in this region can support multi zone HA.",
          "readOnly": true
        },
        "zoneRedundantHaAndGeoBackupSupported": {
          "type": "boolean",
          "description": "A value indicating whether a new server in this region can have geo-backups to paired region.",
          "readOnly": true
        },
        "supportedFlexibleServerEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlexibleServerEditionCapability"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "supportedHyperscaleNodeEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperscaleNodeEditionCapability"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status",
          "readOnly": true
        }
      },
      "description": "Location capabilities."
    },
    "CapabilitiesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of supported capabilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityProperties"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "location capability"
    },
    "ServerVersion": {
      "type": "string",
      "description": "The version of a server.",
      "enum": [
        "14",
        "13",
        "12",
        "11"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "The administrator login password (required for server creation).",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "PostgreSQL Server version."
        },
        "minorVersion": {
          "type": "string",
          "description": "The minor version of the server.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "A state of a server that is visible to user.",
          "readOnly": true,
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "default": null,
          "description": "Storage properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "default": null,
          "description": "Backup properties of a server."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "default": null,
          "description": "Network properties of a server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "default": null,
          "description": "High availability properties of a server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "default": null,
          "description": "Maintenance window properties of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "sourceServerResourceId": {
          "type": "string",
          "description": "The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "availabilityZone": {
          "type": "string",
          "default": "",
          "description": "availability zone information of the server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "The mode to create a new PostgreSQL server.",
          "enum": [
            "Default",
            "Create",
            "Update",
            "PointInTimeRestore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "description": "The properties of a server."
    },
    "Server": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "description": "The system metadata relating to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server."
    },
    "ServerPropertiesForUpdate": {
      "type": "object",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "The password of the administrator login.",
          "x-ms-mutability": [
            "update"
          ]
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "default": null,
          "description": "Storage properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "default": null,
          "description": "Backup properties of a server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "default": null,
          "description": "High availability properties of a server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "default": null,
          "description": "Maintenance window properties of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "The mode to update a new PostgreSQL server.",
          "enum": [
            "Default",
            "Update"
          ],
          "x-ms-enum": {
            "name": "CreateModeForUpdate",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "ServerForUpdate": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location the resource resides in."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForUpdate",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Represents a server to be updated."
    },
    "ServerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of flexible servers"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of servers."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the particular SKU, e.g. Burstable.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "tier"
      ],
      "description": "Sku information related properties of a server."
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage allowed for a server."
        }
      },
      "description": "Storage properties of a server"
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "default": 7,
          "description": "Backup retention days for the server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "default": "Disabled",
          "description": "A value indicating whether Geo-Redundant backup is enabled on the server.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeoRedundantBackupEnum",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest restore point time (ISO8601 format) for server.",
          "readOnly": true
        }
      },
      "description": "Backup properties of a server"
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "public network access is enabled or not",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerPublicNetworkAccessState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "default": "",
          "description": "delegated subnet arm resource id.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "privateDnsZoneArmResourceId": {
          "type": "string",
          "default": "",
          "description": "private dns zone arm resource id.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "description": "Network properties of a server"
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "Disabled",
          "description": "The HA mode for the server.",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "description": "A state of a HA server that is visible to user.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "ServerHAState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": "",
          "description": "availability zone information of the standby."
        }
      },
      "description": "High availability properties of a server"
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window properties of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "default": "Disabled",
          "description": "indicates whether custom window is enabled or disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "start hour for maintenance window"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "start minute for maintenance window"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "day of week for maintenance window"
        }
      }
    },
    "FirewallRuleProperties": {
      "type": "object",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The start IP address of the server firewall rule. Must be IPv4 format."
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The end IP address of the server firewall rule. Must be IPv4 format."
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "description": "The properties of a server firewall rule."
    },
    "ServerBackupProperties": {
      "type": "object",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "Backup type."
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Backup completed time (ISO8601 format)."
        },
        "source": {
          "type": "string",
          "description": "Backup source"
        }
      },
      "description": "The properties of a server backup."
    },
    "ServerBackup": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerBackupProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a server backup."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "description": "The system metadata relating to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Server backup properties"
    },
    "ServerBackupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerBackup"
          },
          "description": "The list of backups of a server."
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of server backups."
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a firewall rule."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "description": "The system metadata relating to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Represents a server firewall rule."
    },
    "FirewallRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules in a server."
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of firewall rules."
    },
    "ConfigurationProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the configuration."
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true,
          "description": "Default value of the configuration."
        },
        "dataType": {
          "type": "string",
          "readOnly": true,
          "description": "Data type of the configuration.",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true
          }
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true,
          "description": "Allowed values of the configuration."
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration."
        },
        "isDynamicConfig": {
          "type": "boolean",
          "readOnly": true,
          "description": "Configuration dynamic or static."
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true,
          "description": "Configuration read-only or not."
        },
        "isConfigPendingRestart": {
          "type": "boolean",
          "readOnly": true,
          "description": "Configuration is pending restart or not."
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Configuration unit."
        },
        "documentationLink": {
          "type": "string",
          "readOnly": true,
          "description": "Configuration documentation link."
        }
      },
      "description": "The properties of a configuration."
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a configuration."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "description": "The system metadata relating to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Configuration."
    },
    "ConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Configuration"
          },
          "description": "The list of server configurations."
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of server configurations."
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Operation resource provider name."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Localized friendly name for the operation."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Operation description."
        }
      },
      "description": "Display metadata associated with the operation."
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the operation being performed on this particular object."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "readOnly": true,
          "description": "The localized display information for this particular operation or action."
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false,
          "description": "Additional descriptions for the operation."
        }
      },
      "description": "REST API operation definition."
    },
    "OperationListResult": {
      "description": "A list of resource provider operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "NameAvailabilityRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "type": "string",
          "description": "Resource type used for verification."
        }
      },
      "description": "Request from client to check resource name availability."
    },
    "NameAvailability": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message.",
          "readOnly": true
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the resource name is available.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "name of the PostgreSQL server.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "type of the server",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The name availability reason.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "Reason",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "description": "Represents a resource name availability."
    },
    "RestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "type": "boolean",
          "description": "Indicates whether to restart the server with failover."
        },
        "failoverMode": {
          "type": "string",
          "description": "Failover mode.",
          "enum": [
            "PlannedFailover",
            "ForcedFailover",
            "PlannedSwitchover",
            "ForcedSwitchover"
          ],
          "x-ms-enum": {
            "name": "FailoverMode",
            "modelAsString": true
          }
        }
      },
      "description": "Represents server restart parameters."
    },
    "CloudError": {
      "x-ms-external": true,
      "type": "object",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response from the Batch service."
    }
  },
  "parameters": {
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the location.",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server firewall rule.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server configuration.",
      "x-ms-parameter-location": "method"
    },
    "MaintenanceWindowNameParameter": {
      "name": "maintenanceWindowName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the maintenance window.",
      "x-ms-parameter-location": "method"
    },
    "BackupNameParameter": {
      "name": "backupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the backup.",
      "x-ms-parameter-location": "method"
    }
  }
}
