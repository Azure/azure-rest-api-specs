{
  "swagger": "2.0",
  "info": {
    "title": "PostgreSQLManagementClient",
    "version": "2025-06-01-preview",
    "description": "The Azure Database for PostgreSQL management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, network configuration, security alert policies, log files and configurations with new business model."
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.DBforPostgreSQL/getPrivateDnsZoneSuffix": {
      "post": {
        "operationId": "PrivateDnsZoneSuffix_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneSuffix"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the private DNS suffix.": {
            "$ref": "./examples/PrivateDnsZoneSuffixGet.json"
          }
        }
      }
    },
    "/providers/microsoft.DBforPostgreSQL/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all available REST API operations.": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/checkNameAvailability": {
      "post": {
        "operationId": "NameAvailability_CheckGlobally",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityModel"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check the validity and availability of the given name, to assign it to a new server or to use it as the base name of a new pair of virtual endpoints.": {
            "$ref": "./examples/NameAvailabilityCheckGlobally.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "operationId": "Servers_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all servers in a subscription.": {
            "$ref": "./examples/ServersListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/locations/{locationName}/capabilities": {
      "get": {
        "operationId": "CapabilitiesByLocation_List",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapabilityList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the capabilities available in a given location for a specific subscription.": {
            "$ref": "./examples/CapabilitiesByLocationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability": {
      "post": {
        "operationId": "NameAvailability_CheckWithLocation",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityModel"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check the validity and availability of the given name, in the given location, to assign it to a new server or to use it as the base name of a new pair of virtual endpoints": {
            "$ref": "./examples/NameAvailabilityCheckWithLocation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage": {
      "post": {
        "operationId": "VirtualNetworkSubnetUsage_List",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageModel"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the virtual network subnet usage for a given virtual network.": {
            "$ref": "./examples/VirtualNetworkSubnetUsageList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.DBforPostgreSQL/locations/{locationName}/resourceType/flexibleServers/usages": {
      "get": {
        "operationId": "QuotaUsages_List",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/QuotaUsageList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List of quota usages for servers": {
            "$ref": "./examples/QuotaUsagesForFlexibleServers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "operationId": "Servers_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all servers in a resource group.": {
            "$ref": "./examples/ServersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}": {
      "get": {
        "operationId": "Servers_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about an existing server that is integrated into a virtual network provided by customer.": {
            "$ref": "./examples/ServersGetWithVnet.json"
          },
          "Get information about an existing server that isn't integrated into a virtual network provided by customer and has private endpoint connections.": {
            "$ref": "./examples/ServersGetWithPrivateEndpoints.json"
          },
          "Get information about an existing server.": {
            "$ref": "./examples/ServersGet.json"
          }
        }
      },
      "put": {
        "operationId": "Servers_CreateOrUpdate",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a new elastic cluster.": {
            "$ref": "./examples/ServersClusterCreate.json"
          },
          "Create a new server in Microsoft owned virtual network with zone redundant high availability.": {
            "$ref": "./examples/ServersCreateInMicrosoftOwnedVirtualNetworkWithZoneRedundantHighAvailability.json"
          },
          "Create a new server in your own virtual network with same zone high availability.": {
            "$ref": "./examples/ServersCreateInYourOwnVirtualNetworkWithSameZoneHighAvailability.json"
          },
          "Create a new server using a backup of a server that was deleted or dropped recently.": {
            "$ref": "./examples/ServersCreateReviveDropped.json"
          },
          "Create a new server using a point in time restore of a backup of an existing server.": {
            "$ref": "./examples/ServersCreatePointInTimeRestore.json"
          },
          "Create a new server using a restore of a geographically redundant backup of an existing server, with data encryption based on customer managed key with automatic key version update.": {
            "$ref": "./examples/ServersCreateGeoRestoreWithDataEncryptionEnabledAutoUpdate.json"
          },
          "Create a new server using a restore of a geographically redundant backup of an existing server, with data encryption based on customer managed key.": {
            "$ref": "./examples/ServersCreateGeoRestoreWithDataEncryptionEnabled.json"
          },
          "Create a new server with Microsoft Entra authentication enabled in your own virtual network and without high availability.": {
            "$ref": "./examples/ServersCreateWithMicrosoftEntraEnabledInYourOwnVirtualNetworkWithoutHighAvailability.json"
          },
          "Create a new server with data encryption based on customer managed key with automatic key version update.": {
            "$ref": "./examples/ServersCreateWithDataEncryptionEnabledAutoUpdate.json"
          },
          "Create a new server with data encryption based on customer managed key.": {
            "$ref": "./examples/ServersCreateWithDataEncryptionEnabled.json"
          },
          "Create a read replica of an existing server.": {
            "$ref": "./examples/ServersCreateReplica.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Servers_Update",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForPatch"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Promote a read replica to a standalone server with forced data synchronization. Meaning that it doesn't wait for data in the read replica to be synchronized with its source server before it initiates the promotion to a standalone server.": {
            "$ref": "./examples/ServersPromoteReplicaAsForcedStandaloneServer.json"
          },
          "Promote a read replica to a standalone server with planned data synchronization. Meaning that it waits for data in the read replica to be fully synchronized with its source server before it initiates the promotion to a standalone server.": {
            "$ref": "./examples/ServersPromoteReplicaAsPlannedStandaloneServer.json"
          },
          "Switch over a read replica to primary server with forced data synchronization. Meaning that it doesn't wait for data in the read replica to be synchronized with its source server before it initiates the switching of roles between the read replica and the primary server.": {
            "$ref": "./examples/ServersPromoteReplicaAsForcedSwitchover.json"
          },
          "Switch over a read replica to primary server with planned data synchronization. Meaning that it waits for data in the read replica to be fully synchronized with its source server before it initiates the switching of roles between the read replica and the primary server.": {
            "$ref": "./examples/ServersPromoteReplicaAsPlannedSwitchover.json"
          },
          "Update an existing server to upgrade the major version of PostgreSQL database engine.": {
            "$ref": "./examples/ServersUpdateWithMajorVersionUpgrade.json"
          },
          "Update an existing server with Microsoft Entra authentication enabled.": {
            "$ref": "./examples/ServersUpdateWithMicrosoftEntraEnabled.json"
          },
          "Update an existing server with custom maintenance window.": {
            "$ref": "./examples/ServersUpdateWithCustomMaintenanceWindow.json"
          },
          "Update an existing server with data encryption based on customer managed key with automatic key version update.": {
            "$ref": "./examples/ServersUpdateWithDataEncryptionEnabledAutoUpdate.json"
          },
          "Update an existing server with data encryption based on customer managed key.": {
            "$ref": "./examples/ServersUpdateWithDataEncryptionEnabled.json"
          },
          "Update an existing server.": {
            "$ref": "./examples/ServersUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Servers_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete or drop an existing server.": {
            "$ref": "./examples/ServersDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators": {
      "get": {
        "operationId": "AdministratorsMicrosoftEntra_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AdministratorMicrosoftEntraList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List information about all server administrators associated to Microsoft Entra principals.": {
            "$ref": "./examples/AdministratorsMicrosoftEntraListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators/{objectId}": {
      "get": {
        "operationId": "AdministratorsMicrosoftEntra_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AdministratorMicrosoftEntra"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorsMicrosoftEntraGet.json"
          }
        }
      },
      "put": {
        "operationId": "AdministratorsMicrosoftEntra_CreateOrUpdate",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdministratorMicrosoftEntraAdd"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorsMicrosoftEntraAdd.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AdministratorsMicrosoftEntra_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorsMicrosoftEntraDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings": {
      "get": {
        "operationId": "AdvancedThreatProtectionSettings_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionSettingsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List state of advanced threat protection settings for a server.": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{threatProtectionName}": {
      "get": {
        "operationId": "AdvancedThreatProtectionSettings_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "threatProtectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "ThreatProtectionName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionSettingsModel"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get state of advanced threat protection settings for a server.": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsGet.json"
          }
        }
      },
      "put": {
        "operationId": "ServerThreatProtectionSettings_CreateOrUpdate",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "threatProtectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "ThreatProtectionName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionSettingsModel"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update the advanced threat protection settings of a server.": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups": {
      "get": {
        "operationId": "BackupsAutomaticAndOnDemand_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BackupAutomaticAndOnDemandList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all available backups of a server.": {
            "$ref": "./examples/BackupsAutomaticAndOnDemandListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups/{backupName}": {
      "get": {
        "operationId": "BackupsAutomaticAndOnDemand_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BackupAutomaticAndOnDemand"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an on demand backup, given its name.": {
            "$ref": "./examples/BackupsAutomaticAndOnDemandGet.json"
          }
        }
      },
      "put": {
        "operationId": "BackupsAutomaticAndOnDemand_Create",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an on demand backup of a server.": {
            "$ref": "./examples/BackupsAutomaticAndOnDemandCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupsAutomaticAndOnDemand_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an on demand backup, given its name.": {
            "$ref": "./examples/BackupsAutomaticAndOnDemandDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/capabilities": {
      "get": {
        "operationId": "CapabilitiesByServer_List",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapabilityList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the capabilities available for a given server.": {
            "$ref": "./examples/CapabilitiesByServerList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/checkMigrationNameAvailability": {
      "post": {
        "operationId": "Migrations_CheckNameAvailability",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationNameAvailability"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MigrationNameAvailability"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check the validity and availability of the given name, to assign it to a new migration.": {
            "$ref": "./examples/MigrationsCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations": {
      "get": {
        "operationId": "Configurations_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConfigurationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all configurations (also known as server parameters) of a server.": {
            "$ref": "./examples/ConfigurationsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}": {
      "get": {
        "operationId": "Configurations_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a specific configuration (also known as server parameter) of a server.": {
            "$ref": "./examples/ConfigurationsGet.json"
          }
        }
      },
      "put": {
        "operationId": "Configurations_Put",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationForUpdate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update, using Put verb, the value assigned to a specific modifiable configuration (also known as server parameter) of a server.": {
            "$ref": "./examples/ConfigurationsUpdateUsingPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Configurations_Update",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationForUpdate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update the value assigned to a specific modifiable configuration (also known as server parameter) of a server.": {
            "$ref": "./examples/ConfigurationsUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases": {
      "get": {
        "operationId": "Databases_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatabaseList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all databases in a server.": {
            "$ref": "./examples/DatabasesListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}": {
      "get": {
        "operationId": "Databases_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about an existing database.": {
            "$ref": "./examples/DatabasesGet.json"
          }
        }
      },
      "put": {
        "operationId": "Databases_Create",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a database.": {
            "$ref": "./examples/DatabasesCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Databases_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an existing database": {
            "$ref": "./examples/DatabasesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FirewallRuleList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List information about all firewall rules in a server.": {
            "$ref": "./examples/FirewallRulesListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a firewall rule in a server.": {
            "$ref": "./examples/FirewallRulesGet.json"
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a new firewall rule or update an existing firewall rule.": {
            "$ref": "./examples/FirewallRulesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an existing firewall rule.": {
            "$ref": "./examples/FirewallRulesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/logFiles": {
      "get": {
        "operationId": "CapturedLogs_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapturedLogList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all captured logs for download in a server.": {
            "$ref": "./examples/CapturedLogsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations": {
      "get": {
        "operationId": "BackupsLongTermRetention_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/LtrServerBackupOperationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the results of the long term retention backup operations for a server.": {
            "$ref": "./examples/BackupsLongTermRetentionListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations/{backupName}": {
      "get": {
        "operationId": "BackupsLongTermRetention_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BackupsLongTermRetentionOperation"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the results of a long retention backup operation for a server.": {
            "$ref": "./examples/BackupsLongTermRetentionGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrPreBackup": {
      "post": {
        "operationId": "BackupsLongTermRetention_CheckPrerequisites",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LtrPreBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/LtrPreBackupResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Perform all checks required for a long term retention backup operation to succeed.": {
            "$ref": "./examples/BackupsLongTermRetentionCheckPrerequisites.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/migrations": {
      "get": {
        "operationId": "Migrations_ListByTargetServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "migrationListFilter",
            "in": "query",
            "type": "string",
            "enum": [
              "Active",
              "All"
            ],
            "x-ms-enum": {
              "name": "MigrationListFilter",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MigrationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all migrations of a target flexible server.": {
            "$ref": "./examples/MigrationsListByTargetServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/migrations/{migrationName}": {
      "get": {
        "operationId": "Migrations_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a migration with successful validation and successful migration.": {
            "$ref": "./examples/MigrationsGetMigrationWithSuccessfulValidationAndMigration.json"
          },
          "Get information about a migration with successful validation but failed migration.": {
            "$ref": "./examples/MigrationsGetMigrationWithSuccessfulValidationButMigrationFailure.json"
          },
          "Get information about a migration with successful validation only.": {
            "$ref": "./examples/MigrationsGetMigrationWithSuccessfulValidationOnly.json"
          },
          "Get information about a migration with validation failures.": {
            "$ref": "./examples/MigrationsGetMigrationWithValidationFailures.json"
          },
          "Get information about a migration.": {
            "$ref": "./examples/MigrationsGet.json"
          }
        }
      },
      "put": {
        "operationId": "Migrations_Create",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a migration for validating only.": {
            "$ref": "./examples/MigrationsCreateValidateOnly.json"
          },
          "Create a migration specifying user names.": {
            "$ref": "./examples/MigrationsCreateWithOtherUsers.json"
          },
          "Create a migration with fully qualified domain names for source and target servers.": {
            "$ref": "./examples/MigrationsCreateWithFullyQualifiedDomainName.json"
          },
          "Create a migration with other source type for validating and migrating.": {
            "$ref": "./examples/MigrationsCreateOtherSourceTypesValidateMigrate.json"
          },
          "Create a migration with private endpoint.": {
            "$ref": "./examples/MigrationsCreateWithPrivateEndpointServers.json"
          },
          "Create a migration with roles.": {
            "$ref": "./examples/MigrationsCreateWithRoles.json"
          },
          "Create a migration.": {
            "$ref": "./examples/MigrationsCreate.json"
          }
        }
      },
      "patch": {
        "operationId": "Migrations_Update",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationResourceForPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an existing migration.": {
            "$ref": "./examples/MigrationsUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Migrations_Cancel",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Migration"
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cancel an active migration.": {
            "$ref": "./examples/MigrationsCancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all private endpoint connections on a server.": {
            "$ref": "./examples/PrivateEndpointConnectionsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionsGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Update",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approve or reject a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionsUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionsDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets private link resources for PostgreSQL.": {
            "$ref": "./examples/PrivateLinkResourcesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a private link resource for PostgreSQL.": {
            "$ref": "./examples/PrivateLinkResourcesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "operationId": "Replicas_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all read replicas of a server.": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart": {
      "post": {
        "operationId": "Servers_Restart",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RestartParameter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart PostgreSQL database engine in a server with a forced failover to standby server.": {
            "$ref": "./examples/ServersRestartWithFailover.json"
          },
          "Restart PostgreSQL database engine in a server.": {
            "$ref": "./examples/ServersRestart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start": {
      "post": {
        "operationId": "Servers_Start",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a stopped server.": {
            "$ref": "./examples/ServersStart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/startLtrBackup": {
      "post": {
        "operationId": "BackupsLongTermRetention_Start",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupsLongTermRetentionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BackupsLongTermRetentionResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging."
              }
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-request-id": {
                "type": "string",
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Initiate a long term retention backup.": {
            "$ref": "./examples/BackupsLongTermRetentionStart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop": {
      "post": {
        "operationId": "Servers_Stop",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop a server.": {
            "$ref": "./examples/ServersStop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions": {
      "get": {
        "operationId": "TuningOptions_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TuningOptionsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the tuning options of a server.": {
            "$ref": "./examples/TuningOptionsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions/{tuningOption}": {
      "get": {
        "operationId": "TuningOptions_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "tuningOption",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "index",
              "table"
            ],
            "x-ms-enum": {
              "name": "TuningOption",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TuningOptions"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the tuning options of a server.": {
            "$ref": "./examples/TuningOptionsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions/{tuningOption}/recommendations": {
      "get": {
        "operationId": "TuningOptions_ListRecommendations",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "tuningOption",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "index",
              "table"
            ],
            "x-ms-enum": {
              "name": "TuningOption",
              "modelAsString": true
            }
          },
          {
            "name": "recommendationType",
            "in": "query",
            "type": "string",
            "enum": [
              "CreateIndex",
              "DropIndex",
              "ReIndex",
              "AnalyzeTable"
            ],
            "x-ms-enum": {
              "name": "RecommendationType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ObjectRecommendationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List available index recommendations, filtered to exclusively get those of CREATE INDEX type.": {
            "$ref": "./examples/TuningOptionsListIndexRecommendationsFilteredForCreateIndex.json"
          },
          "List available index recommendations.": {
            "$ref": "./examples/TuningOptionsListIndexRecommendations.json"
          },
          "List available table recommendations, filtered to exclusively get those of ANALYZE TABLE type.": {
            "$ref": "./examples/TuningOptionsListTableRecommendationsFilteredForAnalyzeTable.json"
          },
          "List available table recommendations.": {
            "$ref": "./examples/TuningOptionsListTableRecommendations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints": {
      "get": {
        "operationId": "VirtualEndpoints_ListByServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointsList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List pair of virtual endpoints associated to a server.": {
            "$ref": "./examples/VirtualEndpointsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints/{virtualEndpointName}": {
      "get": {
        "operationId": "VirtualEndpoints_Get",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VirtualEndpoint"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get information about a pair of virtual endpoints.": {
            "$ref": "./examples/VirtualEndpointsGet.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualEndpoints_Create",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualEndpoint"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a pair of virtual endpoints for a server.": {
            "$ref": "./examples/VirtualEndpointCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VirtualEndpoints_Update",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResourceForPatch"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a pair of virtual endpoints for a server.": {
            "$ref": "./examples/VirtualEndpointUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Azure.ResourceManager.ArmAcceptedLroResponse%3C%22Resource%20operation%20accepted.%22%2C%20%7B%20azureAsyncOperation%3A%20string%2C%20retryAfter%3A%20int32%20%7D%3E"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualEndpoints_Delete",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a pair of virtual endpoints.": {
            "$ref": "./examples/VirtualEndpointDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AdminCredentials": {
      "type": "object",
      "properties": {
        "sourceServerPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "targetServerPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "required": [
        "sourceServerPassword",
        "targetServerPassword"
      ]
    },
    "AdminCredentialsForPatch": {
      "type": "object",
      "properties": {
        "sourceServerPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "update"
          ],
          "x-ms-secret": true
        },
        "targetServerPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "AdministratorMicrosoftEntra": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdministratorMicrosoftEntraProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AdministratorMicrosoftEntraAdd": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdministratorMicrosoftEntraPropertiesForAdd",
          "x-ms-client-flatten": true
        }
      }
    },
    "AdministratorMicrosoftEntraList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AdministratorMicrosoftEntra"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "AdministratorMicrosoftEntraProperties": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "principalName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "objectId": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "tenantId": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "AdministratorMicrosoftEntraPropertiesForAdd": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "principalName": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "tenantId": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      }
    },
    "AdvancedThreatProtectionSettingsList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AdvancedThreatProtectionSettingsModel"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "AdvancedThreatProtectionSettingsModel": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdvancedThreatProtectionSettingsProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AdvancedThreatProtectionSettingsProperties": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ThreatProtectionState",
            "modelAsString": false
          }
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": [
        "state"
      ]
    },
    "AuthConfig": {
      "type": "object",
      "properties": {
        "activeDirectoryAuth": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MicrosoftEntraAuth",
            "modelAsString": true
          }
        },
        "passwordAuth": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PasswordBasedAuth",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "default": ""
        }
      }
    },
    "AuthConfigForPatch": {
      "type": "object",
      "properties": {
        "activeDirectoryAuth": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MicrosoftEntraAuth",
            "modelAsString": true
          }
        },
        "passwordAuth": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PasswordBasedAuth",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "Azure.ResourceManager.ArmAcceptedLroResponse<\"Resource operation accepted.\", { azureAsyncOperation: string, retryAfter: int32 }>": {
      "type": "object"
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "default": 7
        },
        "geoRedundantBackup": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackup",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "BackupAutomaticAndOnDemand": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupAutomaticAndOnDemandProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupAutomaticAndOnDemandList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BackupAutomaticAndOnDemand"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupAutomaticAndOnDemandProperties": {
      "type": "object",
      "properties": {
        "backupType": {
          "type": "string",
          "enum": [
            "Full",
            "Customer On-Demand"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true
          }
        },
        "completedTime": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "BackupForPatch": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32"
        },
        "geoRedundantBackup": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackup",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "BackupRequestBase": {
      "type": "object",
      "properties": {
        "backupSettings": {
          "$ref": "#/definitions/BackupSettings"
        }
      },
      "required": [
        "backupSettings"
      ]
    },
    "BackupSettings": {
      "type": "object",
      "properties": {
        "backupName": {
          "type": "string"
        }
      },
      "required": [
        "backupName"
      ]
    },
    "BackupStoreDetails": {
      "type": "object",
      "properties": {
        "sasUriList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sasUriList"
      ]
    },
    "BackupsLongTermRetentionOperation": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LtrBackupOperationResponseProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupsLongTermRetentionRequest": {
      "type": "object",
      "properties": {
        "targetDetails": {
          "$ref": "#/definitions/BackupStoreDetails"
        }
      },
      "required": [
        "targetDetails"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ]
    },
    "BackupsLongTermRetentionResponse": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LtrBackupOperationResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupsLongTermRetentionResponseProperties": {
      "type": "object",
      "properties": {
        "numberOfContainers": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "numberOfContainers"
      ]
    },
    "Capability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "supportedServerEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerEditionCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "supportedServerVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVersionCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "supportedFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedFeature"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "fastProvisioningSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FastProvisioningSupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "supportedFastProvisioningEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FastProvisioningEditionCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "supportedSku"
          ]
        },
        "geoBackupSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackupSupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "zoneRedundantHaSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundantHighAvailabilitySupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "zoneRedundantHaAndGeoBackupSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundantHighAvailabilityAndGeographicallyRedundantBackupSupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "storageAutoGrowthSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutoGrowthSupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "onlineResizeSupported": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OnlineStorageResizeSupport",
            "modelAsString": true
          },
          "readOnly": true
        },
        "restricted": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LocationRestricted",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "CapabilityBase": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          },
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CapabilityList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "CapturedLog": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CapturedLogProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CapturedLogList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CapturedLog"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "CapturedLogProperties": {
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time"
        },
        "sizeInKb": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "defaultDatabaseName": {
          "type": "string"
        }
      }
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigurationForUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConfigurationList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Configuration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigurationProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true
        },
        "dataType": {
          "type": "string",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration",
            "String",
            "Set"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true
        },
        "source": {
          "type": "string"
        },
        "isDynamicConfig": {
          "type": "boolean",
          "readOnly": true
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "isConfigPendingRestart": {
          "type": "boolean",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "readOnly": true
        },
        "documentationLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataEncryption": {
      "type": "object",
      "properties": {
        "primaryKeyURI": {
          "type": "string"
        },
        "primaryUserAssignedIdentityId": {
          "type": "string"
        },
        "geoBackupKeyURI": {
          "type": "string"
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SystemManaged",
            "AzureKeyVault"
          ],
          "x-ms-enum": {
            "name": "DataEncryptionType",
            "modelAsString": true
          }
        },
        "primaryEncryptionKeyStatus": {
          "type": "string",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeyStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "geoBackupEncryptionKeyStatus": {
          "type": "string",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeyStatus",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "Database": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatabaseList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Database"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatabaseMigrationState": {
      "type": "object",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "migrationState": {
          "type": "string",
          "enum": [
            "InProgress",
            "WaitingForCutoverTrigger",
            "Failed",
            "Canceled",
            "Succeeded",
            "Canceling"
          ],
          "x-ms-enum": {
            "name": "MigrationDatabaseState",
            "modelAsString": true
          }
        },
        "migrationOperation": {
          "type": "string"
        },
        "startedOn": {
          "type": "string",
          "format": "date-time"
        },
        "endedOn": {
          "type": "string",
          "format": "date-time"
        },
        "fullLoadQueuedTables": {
          "type": "integer",
          "format": "int32"
        },
        "fullLoadErroredTables": {
          "type": "integer",
          "format": "int32"
        },
        "fullLoadLoadingTables": {
          "type": "integer",
          "format": "int32"
        },
        "fullLoadCompletedTables": {
          "type": "integer",
          "format": "int32"
        },
        "cdcUpdateCounter": {
          "type": "integer",
          "format": "int32"
        },
        "cdcDeleteCounter": {
          "type": "integer",
          "format": "int32"
        },
        "cdcInsertCounter": {
          "type": "integer",
          "format": "int32"
        },
        "appliedChanges": {
          "type": "integer",
          "format": "int32"
        },
        "incomingChanges": {
          "type": "integer",
          "format": "int32"
        },
        "latency": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "DatabaseProperties": {
      "type": "object",
      "properties": {
        "charset": {
          "type": "string",
          "pattern": "^[a-zA-Z]+\\w*$"
        },
        "collation": {
          "type": "string",
          "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
        }
      }
    },
    "DbLevelValidationStatus": {
      "type": "object",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "startedOn": {
          "type": "string",
          "format": "date-time"
        },
        "endedOn": {
          "type": "string",
          "format": "date-time"
        },
        "summary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationSummaryItem"
          }
        }
      }
    },
    "DbServerMetadata": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "storageMb": {
          "type": "integer",
          "format": "int32"
        },
        "sku": {
          "$ref": "#/definitions/ServerSku"
        }
      }
    },
    "DelegatedSubnetUsage": {
      "type": "object",
      "properties": {
        "subnetName": {
          "type": "string",
          "readOnly": true
        },
        "usage": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "FastProvisioningEditionCapability": {
      "type": "object",
      "properties": {
        "supportedTier": {
          "type": "string",
          "readOnly": true
        },
        "supportedSku": {
          "type": "string",
          "readOnly": true
        },
        "supportedStorageGb": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "supportedServerVersions": {
          "type": "string",
          "readOnly": true
        },
        "serverCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FirewallRuleList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "endIpAddress",
        "startIpAddress"
      ]
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": ""
        }
      }
    },
    "HighAvailabilityForPatch": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": ""
        }
      }
    },
    "ImpactRecord": {
      "type": "object",
      "properties": {
        "dimensionName": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "queryId": {
          "type": "integer",
          "format": "int64"
        },
        "absoluteValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LtrBackupOperationResponseProperties": {
      "type": "object",
      "properties": {
        "datasourceSizeInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "dataTransferredInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "backupName": {
          "type": "string"
        },
        "backupMetadata": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Running",
            "Cancelled",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ExecutionStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100
        },
        "errorCode": {
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "startTime",
        "status"
      ]
    },
    "LtrPreBackupRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ]
    },
    "LtrPreBackupResponse": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupsLongTermRetentionResponseProperties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "LtrServerBackupOperationList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BackupsLongTermRetentionOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "MaintenanceWindow": {
      "type": "object",
      "properties": {
        "customWindow": {
          "type": "string",
          "default": "Disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "MaintenanceWindowForPatch": {
      "type": "object",
      "properties": {
        "customWindow": {
          "type": "string"
        },
        "startHour": {
          "type": "integer",
          "format": "int32"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Migration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MigrationList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Migration"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "MigrationNameAvailability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "nameAvailable": {
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "MigrationNameAvailabilityReason",
            "modelAsString": true
          },
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "MigrationProperties": {
      "type": "object",
      "properties": {
        "migrationId": {
          "type": "string",
          "readOnly": true
        },
        "currentStatus": {
          "$ref": "#/definitions/MigrationStatus",
          "readOnly": true
        },
        "migrationInstanceResourceId": {
          "type": "string",
          "format": "arm-id"
        },
        "migrationMode": {
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "x-ms-enum": {
            "name": "MigrationMode",
            "modelAsString": true
          }
        },
        "migrationOption": {
          "type": "string",
          "enum": [
            "Validate",
            "Migrate",
            "ValidateAndMigrate"
          ],
          "x-ms-enum": {
            "name": "MigrationOption",
            "modelAsString": true
          }
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "OnPremises",
            "AWS",
            "GCP",
            "AzureVM",
            "PostgreSQLSingleServer",
            "AWS_RDS",
            "AWS_AURORA",
            "AWS_EC2",
            "GCP_CloudSQL",
            "GCP_AlloyDB",
            "GCP_Compute",
            "EDB",
            "EDB_Oracle_Server",
            "EDB_PostgreSQL",
            "PostgreSQLFlexibleServer",
            "PostgreSQLCosmosDB",
            "Huawei_RDS",
            "Huawei_Compute",
            "Heroku_PostgreSQL",
            "Crunchy_PostgreSQL",
            "ApsaraDB_RDS",
            "Digital_Ocean_Droplets",
            "Digital_Ocean_PostgreSQL",
            "Supabase_PostgreSQL"
          ],
          "x-ms-enum": {
            "name": "SourceType",
            "modelAsString": true
          }
        },
        "sslMode": {
          "type": "string",
          "enum": [
            "Prefer",
            "Require",
            "VerifyCA",
            "VerifyFull"
          ],
          "x-ms-enum": {
            "name": "SslMode",
            "modelAsString": true
          }
        },
        "sourceDbServerMetadata": {
          "$ref": "#/definitions/DbServerMetadata",
          "readOnly": true
        },
        "targetDbServerMetadata": {
          "$ref": "#/definitions/DbServerMetadata",
          "readOnly": true
        },
        "sourceDbServerResourceId": {
          "type": "string"
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string"
        },
        "targetDbServerResourceId": {
          "type": "string",
          "readOnly": true
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string"
        },
        "secretParameters": {
          "$ref": "#/definitions/MigrationSecretParameters"
        },
        "dbsToMigrate": {
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "string"
          }
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceServer",
            "modelAsString": true
          }
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDatabasesOnTargetServer",
            "modelAsString": true
          }
        },
        "migrationWindowStartTimeInUtc": {
          "type": "string",
          "format": "date-time"
        },
        "migrationWindowEndTimeInUtc": {
          "type": "string",
          "format": "date-time"
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesAndPermissions",
            "modelAsString": true
          }
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigration",
            "modelAsString": true
          }
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutover",
            "modelAsString": true
          }
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "Cancel",
            "modelAsString": true
          }
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MigrationPropertiesForPatch": {
      "type": "object",
      "properties": {
        "sourceDbServerResourceId": {
          "type": "string"
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string"
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string"
        },
        "secretParameters": {
          "$ref": "#/definitions/MigrationSecretParametersForPatch"
        },
        "dbsToMigrate": {
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "string"
          }
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceServer",
            "modelAsString": true
          }
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDatabasesOnTargetServer",
            "modelAsString": true
          }
        },
        "migrationWindowStartTimeInUtc": {
          "type": "string",
          "format": "date-time"
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesAndPermissions",
            "modelAsString": true
          }
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigration",
            "modelAsString": true
          }
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutover",
            "modelAsString": true
          }
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "Cancel",
            "modelAsString": true
          }
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "migrationMode": {
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "x-ms-enum": {
            "name": "MigrationMode",
            "modelAsString": true
          }
        }
      }
    },
    "MigrationResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationPropertiesForPatch",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MigrationSecretParameters": {
      "type": "object",
      "properties": {
        "adminCredentials": {
          "$ref": "#/definitions/AdminCredentials"
        },
        "sourceServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "targetServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "required": [
        "adminCredentials"
      ]
    },
    "MigrationSecretParametersForPatch": {
      "type": "object",
      "properties": {
        "adminCredentials": {
          "$ref": "#/definitions/AdminCredentialsForPatch"
        },
        "sourceServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "update"
          ]
        },
        "targetServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "MigrationStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "InProgress",
            "WaitingForUserAction",
            "Canceled",
            "Failed",
            "Succeeded",
            "ValidationFailed",
            "CleaningUp"
          ],
          "x-ms-enum": {
            "name": "MigrationState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "error": {
          "type": "string",
          "readOnly": true
        },
        "currentSubStateDetails": {
          "$ref": "#/definitions/MigrationSubstateDetails",
          "readOnly": true
        }
      }
    },
    "MigrationSubstateDetails": {
      "type": "object",
      "properties": {
        "currentSubState": {
          "type": "string",
          "enum": [
            "PerformingPreRequisiteSteps",
            "WaitingForLogicalReplicationSetupRequestOnSourceDB",
            "WaitingForDBsToMigrateSpecification",
            "WaitingForTargetDBOverwriteConfirmation",
            "WaitingForDataMigrationScheduling",
            "WaitingForDataMigrationWindow",
            "MigratingData",
            "WaitingForCutoverTrigger",
            "CompletingMigration",
            "Completed",
            "CancelingRequestedDBMigrations",
            "ValidationInProgress"
          ],
          "x-ms-enum": {
            "name": "MigrationSubstate",
            "modelAsString": true
          },
          "readOnly": true
        },
        "dbDetails": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DatabaseMigrationState"
          }
        },
        "validationDetails": {
          "$ref": "#/definitions/ValidationDetails"
        }
      }
    },
    "NameAvailabilityModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/CheckNameAvailabilityResponse"
        }
      ]
    },
    "NameProperty": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      }
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerPublicNetworkAccessState",
            "modelAsString": true
          }
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "privateDnsZoneArmResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateDnsZones"
              }
            ]
          }
        }
      }
    },
    "ObjectRecommendation": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ObjectRecommendationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ObjectRecommendationDetails": {
      "type": "object",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "indexType": {
          "type": "string"
        },
        "indexName": {
          "type": "string"
        },
        "indexColumns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedColumns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ObjectRecommendationList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ObjectRecommendation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "ObjectRecommendationProperties": {
      "type": "object",
      "properties": {
        "initialRecommendedTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastRecommendedTime": {
          "type": "string",
          "format": "date-time"
        },
        "timesRecommended": {
          "type": "integer",
          "format": "int32"
        },
        "improvedQueryIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "recommendationReason": {
          "type": "string"
        },
        "currentState": {
          "type": "string"
        },
        "recommendationType": {
          "type": "string",
          "enum": [
            "CreateIndex",
            "DropIndex",
            "ReIndex",
            "AnalyzeTable"
          ],
          "x-ms-enum": {
            "name": "RecommendationType",
            "modelAsString": true
          }
        },
        "implementationDetails": {
          "$ref": "#/definitions/ObjectRecommendationPropertiesImplementationDetails"
        },
        "analyzedWorkload": {
          "$ref": "#/definitions/ObjectRecommendationPropertiesAnalyzedWorkload"
        },
        "estimatedImpact": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImpactRecord"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "dimensionName"
          ]
        },
        "details": {
          "$ref": "#/definitions/ObjectRecommendationDetails",
          "readOnly": true
        }
      }
    },
    "ObjectRecommendationPropertiesAnalyzedWorkload": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "queryCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ObjectRecommendationPropertiesImplementationDetails": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "script": {
          "type": "string"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean"
        },
        "origin": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "additionalProperties": {},
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateDnsZoneSuffix": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v6/privatelinks.json#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v6/privatelinks.json#/definitions/PrivateLinkResourceProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "QuotaUsage": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/NameProperty"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "type": "string",
          "default": "Count"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "QuotaUsageList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/QuotaUsage"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "Replica": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "replicationState": {
          "type": "string",
          "enum": [
            "Active",
            "Catchup",
            "Provisioning",
            "Updating",
            "Broken",
            "Reconfiguring"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "promoteMode": {
          "type": "string",
          "enum": [
            "Standalone",
            "Switchover"
          ],
          "x-ms-enum": {
            "name": "ReadReplicaPromoteMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "promoteOption": {
          "type": "string",
          "enum": [
            "Planned",
            "Forced"
          ],
          "x-ms-enum": {
            "name": "ReadReplicaPromoteOption",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "RestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "type": "boolean"
        },
        "failoverMode": {
          "type": "string",
          "enum": [
            "PlannedFailover",
            "ForcedFailover",
            "PlannedSwitchover",
            "ForcedSwitchover"
          ],
          "x-ms-enum": {
            "name": "FailoverMode",
            "modelAsString": true
          }
        }
      }
    },
    "Server": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentity"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServerEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "defaultSkuName": {
          "type": "string",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageEditionCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "supportedServerSkus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerSkuCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "ServerForPatch": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/SkuForPatch"
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentity"
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForPatch",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServerList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "version": {
          "type": "string",
          "enum": [
            "17",
            "16",
            "15",
            "14",
            "13",
            "12",
            "11"
          ],
          "x-ms-enum": {
            "name": "PostgresMajorVersion",
            "modelAsString": true
          }
        },
        "minorVersion": {
          "type": "string",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating",
            "Restarting",
            "Inaccessible",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/Storage"
        },
        "authConfig": {
          "$ref": "#/definitions/AuthConfig"
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption"
        },
        "backup": {
          "$ref": "#/definitions/Backup"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability"
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "sourceServerResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DBforPostgreSQL/flexibleServers"
              }
            ]
          }
        },
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "x-ms-mutability": [
            "create"
          ]
        },
        "availabilityZone": {
          "type": "string",
          "default": "",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "replicationRole": {
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true
          }
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "replica": {
          "$ref": "#/definitions/Replica",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "createMode": {
          "type": "string",
          "enum": [
            "Default",
            "Create",
            "Update",
            "PointInTimeRestore",
            "GeoRestore",
            "Replica",
            "ReviveDropped"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "cluster": {
          "$ref": "#/definitions/Cluster",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "ServerPropertiesForPatch": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "x-ms-mutability": [
            "update"
          ],
          "x-ms-secret": true
        },
        "version": {
          "type": "string",
          "enum": [
            "17",
            "16",
            "15",
            "14",
            "13",
            "12",
            "11"
          ],
          "x-ms-enum": {
            "name": "PostgresMajorVersion",
            "modelAsString": true
          }
        },
        "storage": {
          "$ref": "#/definitions/Storage"
        },
        "backup": {
          "$ref": "#/definitions/BackupForPatch"
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailabilityForPatch"
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindowForPatch",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "authConfig": {
          "$ref": "#/definitions/AuthConfigForPatch"
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption"
        },
        "createMode": {
          "type": "string",
          "enum": [
            "Default",
            "Update"
          ],
          "x-ms-enum": {
            "name": "CreateModeForPatch",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "replicationRole": {
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true
          }
        },
        "replica": {
          "$ref": "#/definitions/Replica",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "cluster": {
          "$ref": "#/definitions/Cluster",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      }
    },
    "ServerSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      }
    },
    "ServerSkuCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "supportedMemoryPerVcoreMb": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "supportedZones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedHaMode": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Disabled",
              "ZoneRedundant",
              "SameZone"
            ],
            "x-ms-enum": {
              "name": "HighAvailabilityMode",
              "modelAsString": true
            }
          },
          "readOnly": true
        },
        "supportedFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedFeature"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "securityProfile": {
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "ServerVersionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "supportedVersionsToUpgrade": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedFeature"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "tier"
      ]
    },
    "SkuForPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      }
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32"
        },
        "autoGrow": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutoGrow",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "enum": [
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P10",
            "P15",
            "P20",
            "P30",
            "P40",
            "P50",
            "P60",
            "P70",
            "P80"
          ],
          "x-ms-enum": {
            "name": "AzureManagedDiskPerformanceTier",
            "modelAsString": true
          }
        },
        "iops": {
          "type": "integer",
          "format": "int32"
        },
        "throughput": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "Premium_LRS",
            "PremiumV2_LRS",
            "UltraSSD_LRS"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        }
      }
    },
    "StorageEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "defaultStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "supportedStorageMb": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageMbCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "storageSizeMb"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "StorageMbCapability": {
      "type": "object",
      "properties": {
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "supportedMaximumIops": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "storageSizeMb": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "maximumStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "supportedThroughput": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "supportedMaximumThroughput": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "defaultIopsTier": {
          "type": "string",
          "readOnly": true
        },
        "supportedIopsTiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageTierCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "StorageTierCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CapabilityBase"
        }
      ]
    },
    "SupportedFeature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "TuningOptions": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TuningOptionsList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/TuningOptions"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentity"
          }
        },
        "principalId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "None",
            "UserAssigned",
            "SystemAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ]
    },
    "UserIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "ValidationDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true
          }
        },
        "validationStartTimeInUtc": {
          "type": "string",
          "format": "date-time"
        },
        "validationEndTimeInUtc": {
          "type": "string",
          "format": "date-time"
        },
        "serverLevelValidationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationSummaryItem"
          }
        },
        "dbLevelValidationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbLevelValidationStatus"
          },
          "x-ms-identifiers": [
            "databaseName"
          ]
        }
      }
    },
    "ValidationMessage": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ValidationSummaryItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationMessage"
          }
        }
      }
    },
    "VirtualEndpoint": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEndpointResourceForPatch",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualEndpointResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEndpointResourceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualEndpointResourceProperties": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "VirtualEndpointType",
            "modelAsString": true
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "virtualEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "VirtualEndpointsList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/VirtualEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkSubnetUsageModel": {
      "type": "object",
      "properties": {
        "delegatedSubnetsUsage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedSubnetUsage"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "subnetName"
          ]
        },
        "location": {
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkSubnetUsageParameter": {
      "type": "object",
      "properties": {
        "virtualNetworkArmResourceId": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {}
}