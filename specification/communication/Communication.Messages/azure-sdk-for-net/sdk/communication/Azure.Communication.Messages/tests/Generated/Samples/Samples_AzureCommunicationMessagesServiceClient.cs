// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Communication.Messages;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Communication.Messages.Samples
{
    public partial class Samples_AzureCommunicationMessagesServiceClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NotificationMessagesOperations_Send_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                content = "<content>",
                kind = "text",
                channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                to = new object[]
            {
"<to>"
            },
            });
            Response response = client.Send(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NotificationMessagesOperations_Send_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                content = "<content>",
                kind = "text",
                channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                to = new object[]
            {
"<to>"
            },
            });
            Response response = await client.SendAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NotificationMessagesOperations_Send_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            SendNotificationRequest sendNotificationRequest = new SendTextNotificationRequest(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
            Response<SendMessageResult> response = client.Send(sendNotificationRequest);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NotificationMessagesOperations_Send_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            SendNotificationRequest sendNotificationRequest = new SendTextNotificationRequest(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
            Response<SendMessageResult> response = await client.SendAsync(sendNotificationRequest);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NotificationMessagesOperations_Send_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                content = "<content>",
                kind = "text",
                channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                to = new object[]
            {
"<to>"
            },
            });
            Response response = client.Send(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NotificationMessagesOperations_Send_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            using RequestContent content = RequestContent.Create(new
            {
                content = "<content>",
                kind = "text",
                channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                to = new object[]
            {
"<to>"
            },
            });
            Response response = await client.SendAsync(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
            Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NotificationMessagesOperations_Send_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            SendNotificationRequest sendNotificationRequest = new SendTextNotificationRequest(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
            Response<SendMessageResult> response = client.Send(sendNotificationRequest);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NotificationMessagesOperations_Send_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            SendNotificationRequest sendNotificationRequest = new SendTextNotificationRequest(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
            Response<SendMessageResult> response = await client.SendAsync(sendNotificationRequest);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stream_GetStream_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response response = client.GetStream("<id>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stream_GetStream_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response response = await client.GetStreamAsync("<id>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stream_GetStream_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response<BinaryData> response = client.GetStream("<id>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stream_GetStream_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response<BinaryData> response = await client.GetStreamAsync("<id>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stream_GetStream_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response response = client.GetStream("<id>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stream_GetStream_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response response = await client.GetStreamAsync("<id>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stream_GetStream_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response<BinaryData> response = client.GetStream("<id>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stream_GetStream_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            Response<BinaryData> response = await client.GetStreamAsync("<id>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MessageTemplateResponse_GetMessageTemplateResponses_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            foreach (BinaryData item in client.GetMessageTemplateResponses("<channelId>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("language").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MessageTemplateResponse_GetMessageTemplateResponses_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            await foreach (BinaryData item in client.GetMessageTemplateResponsesAsync("<channelId>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("language").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MessageTemplateResponse_GetMessageTemplateResponses_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            foreach (MessageTemplateResponse item in client.GetMessageTemplateResponses("<channelId>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MessageTemplateResponse_GetMessageTemplateResponses_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            await foreach (MessageTemplateResponse item in client.GetMessageTemplateResponsesAsync("<channelId>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MessageTemplateResponse_GetMessageTemplateResponses_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            foreach (BinaryData item in client.GetMessageTemplateResponses("<channelId>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("language").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MessageTemplateResponse_GetMessageTemplateResponses_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            await foreach (BinaryData item in client.GetMessageTemplateResponsesAsync("<channelId>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("kind").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("language").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_MessageTemplateResponse_GetMessageTemplateResponses_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            foreach (MessageTemplateResponse item in client.GetMessageTemplateResponses("<channelId>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_MessageTemplateResponse_GetMessageTemplateResponses_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureCommunicationMessagesServiceClient client = new AzureCommunicationMessagesServiceClient(endpoint);

            await foreach (MessageTemplateResponse item in client.GetMessageTemplateResponsesAsync("<channelId>"))
            {
            }
        }
    }
}
