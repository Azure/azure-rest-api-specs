{
  "swagger": "2.0",
  "info": {
    "title": "ShortCodesClient",
    "description": "The short codes client uses Azure Communication Services to purchase and manage short codes.",
    "version": "2021-10-25-preview1"
  },
  "paths": {
    "/shortcodes": {
      "get": {
        "tags": [
          "ShortCodes"
        ],
        "summary": "Gets the list of short codes for the current resource.",
        "operationId": "ShortCode_GetShortCodes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "An optional parameter for how many entries to skip, for pagination purposes.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "take",
            "description": "An optional parameter for how many entries to return, for pagination purposes.",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShortCodeEntities"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "shortCodes"
        },
        "x-ms-examples": {
          "List short codes": {
            "$ref": "./examples/GetShortCodesAsync.json"
          }
        }
      }
    },
    "/programbriefs": {
      "post": {
        "tags": [
          "ShortCodes - ProgramBrief"
        ],
        "summary": "Creates a new program brief.",
        "operationId": "ShortCode_CreateProgramBrief",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Object containing the program brief information",
            "schema": {
              "$ref": "#/definitions/ProgramBriefEntity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProgramBriefOperationResponse"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a program brief": {
            "$ref": "./examples/CreateProgramBriefAsync.json"
          }
        }
      },
      "get": {
        "tags": [
          "ShortCodes - ProgramBrief"
        ],
        "summary": "Gets the list of program briefs for the current resource.",
        "operationId": "ShortCode_GetProgramBriefs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "An optional parameter for how many entries to skip, for pagination purposes.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "take",
            "description": "An optional parameter for how many entries to return, for pagination purposes.",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProgramBriefEntities"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "programBriefs"
        },
        "x-ms-examples": {
          "List program briefs": {
            "$ref": "./examples/GetProgramBriefsAsync.json"
          }
        }
      }
    },
    "/programbriefs/{programBriefId}": {
      "patch": {
        "tags": [
          "ShortCodes - ProgramBrief"
        ],
        "summary": "Updates a program brief.",
        "operationId": "ShortCode_UpdateProgramBrief",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programBriefId",
            "description": "Program brief Id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Fields to update on the program brief",
            "schema": {
              "$ref": "#/definitions/ProgramBriefEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProgramBriefOperationResponse"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a program brief": {
            "$ref": "./examples/UpdateProgramBriefAsync.json"
          }
        }
      },
      "get": {
        "tags": [
          "ShortCodes - ProgramBrief"
        ],
        "summary": "Get a specific program brief.",
        "operationId": "ShortCode_GetProgramBrief",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programBriefId",
            "description": "Program brief Id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProgramBriefEntity"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Query a program brief": {
            "$ref": "./examples/GetProgramBriefAsync.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ShortCodeEntity": {
      "description": "Represents a number, ShortCode or AlphaId, acquired in a given country.",
      "type": "object",
      "properties": {
        "number": {
          "description": "The value of the ShortCode or the alpha numeric (e.g. '555555', 'CONTOSO', etc).",
          "type": "string"
        },
        "numberType": {
          "description": "The type of number (e.g. 'ShortCode', 'AlphaId').",
          "enum": [
            "shortCode",
            "alphaId"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NumberType",
            "modelAsString": true
          }
        },
        "countryCode": {
          "description": "ISO 3166 2-char code representing the country (e.g. 'US', 'CA', etc.).",
          "type": "string"
        },
        "programBriefId": {
          "description": "Program Brief Name.",
          "type": "string"
        },
        "purchaseDate": {
          "format": "date-time",
          "description": "Date in which number was purchased.",
          "type": "string"
        },
        "renewalDate": {
          "format": "date-time",
          "description": "Date in which number was renewed.",
          "type": "string"
        },
        "autoRenew": {
          "description": "Whether auto-renewal is enabled for the number or not.",
          "type": "boolean"
        },
        "state": {
          "description": "Number state (e.g. 'Acquired')",
          "type": "string"
        }
      }
    },
    "ShortCodeEntities": {
      "description": "A wrapper for a list of short code entities.",
      "type": "object",
      "properties": {
        "shortCodes": {
          "description": "List of short codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShortCodeEntity"
          }
        },
        "nextLink": {
          "description": "Represents the URL link to the next page",
          "type": "string"
        }
      }
    },
    "ErrorBody": {
      "description": "Represents a service error response body.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code in the error response.",
          "type": "string"
        },
        "message": {
          "description": "The error message in the error response.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Represents a service error response.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorBody"
        }
      }
    },
    "ProgramDetails": {
      "type": "object",
      "properties": {
        "isVanity": {
          "description": "Indicates if customer is requesting vanity (When set to 'true') or random number.",
          "type": "boolean"
        },
        "preferredVanityNumbers": {
          "description": "Priority ordered list of preferred vanity numbers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberType": {
          "description": "Type for desired numbers (e.g. 'shortCode' or 'alphaId').",
          "enum": [
            "shortCode",
            "alphaId"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NumberType",
            "modelAsString": true
          }
        },
        "isPoliticalCampaign": {
          "description": "Indicates whether the number will be used for political campaigns or not.",
          "type": "boolean"
        },
        "programCode": {
          "description": "Identifies a promotion to use for lease term application.",
          "type": "string"
        },
        "number": {
          "description": "Number for which the program brief is submitted. Needs to be specified if the customer has already\r\nobtained the number. Is optional when the program brief is for a new number.",
          "type": "string"
        },
        "programName": {
          "description": "Indicates the purpose of filling the program brief and how the number will be used for messaging.",
          "type": "string"
        },
        "programDescription": {
          "description": "Describes how and why the number will be used for messaging as part of the program.",
          "type": "string"
        },
        "programUrl": {
          "description": "URL for the program or company.",
          "type": "string"
        },
        "programSingUpType": {
          "description": "Indicates how the program will be discoverable by the consumer ('website', 'pos' and/or 'sms').",
          "type": "array",
          "items": {
            "enum": [
              "website",
              "pos",
              "sms"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ProgramDiscovery",
              "modelAsString": true
            }
          }
        },
        "programSignUp": {
          "description": "Call to action description for the program.\r\n(e.g. 'This program will allow for consumers to receive a one-time passcode to validate their\r\nauthenticity when making a purchase online.  Through a verification process, they will have an\r\noption to validate using a passcode sent via SMS, amongst the options. If they choose to have\r\nthe passcode sent over SMS they will receive this one-time message.  If they chose to opt out,\r\nthey may select \\\"STOP\\\" rather than continuing.').",
          "type": "string"
        },
        "programType": {
          "description": "Program Type ('newProgram', 'modifiedProgram' or 'migration').",
          "enum": [
            "newProgram",
            "modifiedProgram",
            "migration"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProgramType",
            "modelAsString": true
          }
        },
        "programRating": {
          "description": "Program Rating ('standard' or 'freeToEndUser', where the latter stands for Free to End User).",
          "enum": [
            "standard",
            "freeToEndUser"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProgramRating",
            "modelAsString": true
          }
        },
        "termsOfServiceUrl": {
          "description": "URL for program terms of service.",
          "type": "string"
        },
        "privacyPolicyUrl": {
          "description": "URL for privacy policy.",
          "type": "string"
        },
        "expectedDateOfService": {
          "format": "date-time",
          "description": "Start date for sending SMS.",
          "type": "string"
        }
      }
    },
    "CompanyInformation": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Legal entity name for customer submitting program brief.",
          "type": "string"
        },
        "companyUrl": {
          "description": "Company URL for customer submitting program brief.",
          "type": "string"
        },
        "contactName": {
          "description": "Name of authorized user for purposes of submitting the program brief.",
          "type": "string"
        },
        "contactPhone": {
          "description": "Contact phone number for the authorized user for the customer.",
          "type": "string"
        },
        "contactEmail": {
          "description": "Contact email address number for the authorized user for the customer.",
          "type": "string"
        },
        "companyAddress": {
          "description": "Company's address for the customer submitting the program brief.",
          "type": "string"
        },
        "customerCareTollFreeNumber": {
          "description": "Customer support phone number for the customer submitting the program brief.",
          "type": "string"
        },
        "customerCareEmail": {
          "description": "Customer support email address for the customer submitting the program brief.",
          "type": "string"
        }
      }
    },
    "MessageDetails": {
      "type": "object",
      "properties": {
        "messageType": {
          "description": "Applicable message types used in the program ('sms' or 'mms').",
          "enum": [
            "sms",
            "mms"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MessageType",
            "modelAsString": true
          }
        },
        "recurrence": {
          "description": "Indicates the nature of the messaging associated with the program ('subscription' or 'transaction').",
          "enum": [
            "subscription",
            "transaction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Recurrence",
            "modelAsString": true
          }
        },
        "contentType": {
          "description": "Indicates the messaging content type used in the program ('ringTones', 'smsChat', 'video', 'loyaltyProgramPointsPrizes', 'gifting', 'inApplicationBilling', 'textToScreen', 'games', etc).",
          "type": "array",
          "items": {
            "enum": [
              "ringTones",
              "smsChat",
              "video",
              "loyaltyProgramPointsPrizes",
              "gifting",
              "inApplicationBilling",
              "textToScreen",
              "games",
              "audioChat",
              "mmsPictures",
              "sweepstakesContestAuction",
              "financialBanking",
              "premiumWap",
              "queryService",
              "wallpaperScreensaver",
              "voting",
              "application",
              "mobileGivingDonations",
              "coupons",
              "loyaltyProgram",
              "noPointPrizes",
              "informationAlerts",
              "microBilling",
              "trivia",
              "entertainmentAlerts",
              "other"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ContentType",
              "modelAsString": true
            }
          }
        },
        "helpMessage": {
          "description": "Message text for mobile terminated message associated with HELP keyword\r\n(e.g 'This is the HELP message test.').",
          "type": "string"
        },
        "optOutMessage": {
          "description": "\"Message text for mobile terminated message associated with STOP keyword\r\n(e.g. 'This is the STOP message test.').",
          "type": "string"
        },
        "optInMessage": {
          "type": "string"
        },
        "optInReply": {
          "description": "Keyword used to confirm double Opt-In method (e.g. 'JOIN').",
          "type": "string"
        },
        "confirmationMessage": {
          "type": "string"
        },
        "useCase": {
          "description": "Messaging use case description.",
          "type": "string"
        }
      }
    },
    "TrafficDetails": {
      "type": "object",
      "properties": {
        "estimatedVolume": {
          "format": "int32",
          "description": "Estimated messaging volume for the program in terms of message/second.",
          "type": "integer"
        },
        "monthlyAverageMessagesFromUser": {
          "format": "int32",
          "description": "Estimated number of Mobile-Originated messages likely to be received from a user per month.",
          "type": "integer"
        },
        "monthlyAverageMessagesToUser": {
          "format": "int32",
          "description": "Estimated number of Mobile-Terminated messages likely to be sent per user per month.",
          "type": "integer"
        },
        "isTrafficSpiky": {
          "description": "Indicates if the nature of the messaging traffic will be bursty in nature.",
          "type": "boolean"
        },
        "trafficSpikeDetails": {
          "description": "If isTrafficSpiky=true, then explain additional details about the traffic pattern\r\n(e.g. 'Higher traffic expected during holiday season and Black Friday.').",
          "type": "string"
        }
      }
    },
    "ProgramBriefEntity": {
      "description": "A program brief provides vital information to the carriers about a messaging program or campaign that would be associated with a short code or alpha sender number in a given country.\r\nA program brief also provides specifics about the use case, the purpose and the consumer experience receiving the message.",
      "type": "object",
      "properties": {
        "programDetails": {
          "$ref": "#/definitions/ProgramDetails"
        },
        "companyInformation": {
          "$ref": "#/definitions/CompanyInformation"
        },
        "messageDetails": {
          "$ref": "#/definitions/MessageDetails"
        },
        "trafficDetails": {
          "$ref": "#/definitions/TrafficDetails"
        }
      }
    },
    "ProgramBriefOperationResponse": {
      "description": "Response object for operations on a Program Brief like creation or update.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Program Brief ID.",
          "type": "string"
        }
      }
    },
    "ProgramBriefEntities": {
      "description": "A wrapper for a list of ProgramBrief entities.",
      "type": "object",
      "properties": {
        "programBriefs": {
          "description": "List of program briefs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramBriefEntity"
          }
        },
        "nextLink": {
          "description": "Represents the URL link to the next page",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "Version of API to invoke",
      "required": true,
      "type": "string"
    },
    "Endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The communication resource, for example https://resourcename.communication.azure.com",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}
