{
  "swagger": "2.0",
  "info": {
    "version": "2023-03-06",
    "title": "Azure Communication Service Call Automation APIs",
    "description": "Azure Communication Service Call Automation APIs"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/calling/callConnections": {
      "post": {
        "tags": [
          "PreConnections"
        ],
        "summary": "Create an outbound call.",
        "description": "Create an outbound call.",
        "operationId": "CreateCall",
        "parameters": [
          {
            "name": "createCallRequest",
            "in": "body",
            "description": "The create call request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCallRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns details of the call properties once the CreateCall request is received by service. You will receive CallConnected event at your specified callback URI, once the call is connected.",
            "schema": {
              "$ref": "#/definitions/CallConnectionProperties"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateCall": {
            "$ref": "./examples/CreateCall.json"
          }
        }
      }
    },
    "/calling/callConnections:answer": {
      "post": {
        "tags": [
          "PreConnections"
        ],
        "summary": "Answer a Call.",
        "description": "Answer a call using the IncomingCallContext from Event Grid.",
        "operationId": "AnswerCall",
        "parameters": [
          {
            "name": "answerCallRequest",
            "in": "body",
            "description": "The answer call request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerCallRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns details of the call properties once the AnswerCall request is received by service. You will receive CallConnected event at your specified callback URI, once the call is connected.",
            "schema": {
              "$ref": "#/definitions/CallConnectionProperties"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AnswerCall": {
            "$ref": "./examples/AnswerCall.json"
          }
        }
      }
    },
    "/calling/callConnections:redirect": {
      "post": {
        "tags": [
          "PreConnections"
        ],
        "summary": "Redirect a call.",
        "description": "Redirect a call.",
        "operationId": "RedirectCall",
        "parameters": [
          {
            "name": "redirectCallRequest",
            "in": "body",
            "description": "The redirect call request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedirectCallRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "204": {
            "description": "The service has redirected the call to specified endpoint."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RedirectCall": {
            "$ref": "./examples/RedirectCall.json"
          }
        }
      }
    },
    "/calling/callConnections:reject": {
      "post": {
        "tags": [
          "PreConnections"
        ],
        "summary": "Reject the call.",
        "description": "Reject the call.",
        "operationId": "RejectCall",
        "parameters": [
          {
            "name": "rejectCallRequest",
            "in": "body",
            "description": "The reject call request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectCallRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "204": {
            "description": "The service has rejected the call."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RejectCall": {
            "$ref": "./examples/RejectCall.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}": {
      "get": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Get the detail properties of an ongoing call.",
        "operationId": "CallConnection_GetCall",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns details of the call properties.",
            "schema": {
              "$ref": "#/definitions/CallConnectionProperties"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_GetCall": {
            "$ref": "./examples/CallConnection_GetCall.json"
          }
        }
      },
      "delete": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Hang up call automation service from the call. This will make call automation service leave the call, but does not terminate if there are more than 1 caller in the call.",
        "description": "Hang up call automation service from the call. This will make call automation service leave the call, but does not terminate if there are more than 1 caller in the call.",
        "operationId": "CallConnection_HangupCall",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Call automation service has left the call."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_HangupCall": {
            "$ref": "./examples/CallConnection_HangupCall.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}:terminate": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Terminate a call using CallConnectionId.",
        "description": "Terminate a call using CallConnectionId.",
        "operationId": "CallConnection_TerminateCall",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The terminate call request.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "204": {
            "description": "The call is terminated."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_TerminateCall": {
            "$ref": "./examples/CallConnection_TerminateCall.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}:transferToParticipant": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Transfer the call to a participant.",
        "description": "Transfer the call to a participant.",
        "operationId": "CallConnection_TransferToParticipant",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transferToParticipantRequest",
            "in": "body",
            "description": "The transfer to participant request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferToParticipantRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the transfer request and will begin processing it. You will receive either CallTransferAccepted or CallTransferFailed event at your specified callback URI to update you on the status of the request.",
            "schema": {
              "$ref": "#/definitions/TransferCallResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_TransferToParticipant": {
            "$ref": "./examples/CallConnection_TransferToParticipant.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}:play": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Plays audio to participants in the call.",
        "description": "Plays audio to participants in the call.",
        "operationId": "CallMedia_Play",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "playRequest",
            "in": "body",
            "description": "play request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the play request and will begin processing it. You will receive either PlayCompleted or PlayFailed event at your specified callback URI to update you on the status of the request."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallMedia_Play": {
            "$ref": "./examples/CallMedia_Play.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}:cancelAllMediaOperations": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Cancel all media operations in a call.",
        "description": "Cancel all media operations in a call.",
        "operationId": "CallMedia_CancelAllMediaOperations",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the cancel request and will begin processing it. RecognizeCanceled and/or PlayCanceled at your specified callback URI to update you on the status of the request, based on which media operation has been canceled by it."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallMedia_CancelAllMediaOperations": {
            "$ref": "./examples/CallMedia_CancelAllMediaOperations.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}:recognize": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Recognize media from call.",
        "description": "Recognize media from call.",
        "operationId": "CallMedia_Recognize",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id",
            "required": true,
            "type": "string"
          },
          {
            "name": "recognizeRequest",
            "in": "body",
            "description": "The media recognize request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecognizeRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the recognize request and will begin processing it. You will receive either RecognizeCompleted or RecognizeFailed event at your specified callback URI to update you on the status of the request."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallMedia_Recognize": {
            "$ref": "./examples/CallMedia_Recognize.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}/participants": {
      "get": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Get participants from a call.",
        "description": "Get participants from a call.",
        "operationId": "CallConnection_GetParticipants",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection Id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the get participants response.",
            "schema": {
              "$ref": "#/definitions/GetParticipantsResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_GetParticipants": {
            "$ref": "./examples/CallConnection_GetParticipants.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/calling/callConnections/{callConnectionId}/participants:add": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Add a participant to the call.",
        "description": "Add a participant to the call.",
        "operationId": "CallConnection_AddParticipant",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "addParticipantRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddParticipantRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the add participant request and will begin processing it. You will receive either AddParticipantSucceeded or AddParticipantFailed event at your specified callback URI to update you on the status of the request.",
            "schema": {
              "$ref": "#/definitions/AddParticipantResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_AddParticipant": {
            "$ref": "./examples/CallConnection_AddParticipant.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}/participants:remove": {
      "post": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Remove a participant from the call using identifier.",
        "description": "Remove a participant from the call using identifier.",
        "operationId": "CallConnection_RemoveParticipant",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "removeParticipantRequest",
            "in": "body",
            "description": "The participant to be removed from the call.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveParticipantRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the remove participant request and will begin processing it. You will receive either RemoveParticipantSucceeded or RemoveParticipantFailed event at your specified callback URI to update you on the status of the request.",
            "schema": {
              "$ref": "#/definitions/RemoveParticipantResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_RemoveParticipant": {
            "$ref": "./examples/CallConnection_RemoveParticipant.json"
          }
        }
      }
    },
    "/calling/callConnections/{callConnectionId}/participants/{participantRawId}": {
      "get": {
        "tags": [
          "MidConnections"
        ],
        "summary": "Get participant from a call.",
        "description": "Get participant from a call.",
        "operationId": "CallConnection_GetParticipant",
        "parameters": [
          {
            "name": "callConnectionId",
            "in": "path",
            "description": "The call connection Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "participantRawId",
            "in": "path",
            "description": "Raw id of the participant to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the detail of the requested participant.",
            "schema": {
              "$ref": "#/definitions/CallParticipant"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallConnection_GetParticipant": {
            "$ref": "./examples/CallConnection_GetParticipant.json"
          }
        }
      }
    },
    "/calling/recordings": {
      "post": {
        "tags": [
          "Recording"
        ],
        "summary": "Start recording the call.",
        "operationId": "CallRecording_StartRecording",
        "parameters": [
          {
            "name": "startCallRecording",
            "in": "body",
            "description": "The request body of start call recording request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartCallRecordingRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the start call recording response.",
            "schema": {
              "$ref": "#/definitions/RecordingStateResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallRecording_StartRecording": {
            "$ref": "./examples/CallRecording_StartRecording.json"
          }
        }
      }
    },
    "/calling/recordings/{recordingId}": {
      "get": {
        "tags": [
          "Recording"
        ],
        "summary": "Get call recording properties.",
        "operationId": "CallRecording_GetRecordingProperties",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the recording properties.",
            "schema": {
              "$ref": "#/definitions/RecordingStateResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallRecording_GetRecordingProperties": {
            "$ref": "./examples/CallRecording_GetRecordingProperties.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Recording"
        ],
        "summary": "Stop recording the call.",
        "operationId": "CallRecording_StopRecording",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns the stop call recording response."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallRecording_StopRecording": {
            "$ref": "./examples/CallRecording_StopRecording.json"
          }
        }
      }
    },
    "/calling/recordings/{recordingId}:pause": {
      "post": {
        "tags": [
          "Recording"
        ],
        "summary": "Pause recording the call.",
        "operationId": "CallRecording_PauseRecording",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the pause request and will begin processing it."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallRecording_PauseRecording": {
            "$ref": "./examples/CallRecording_PauseRecording.json"
          }
        }
      }
    },
    "/calling/recordings/{recordingId}:resume": {
      "post": {
        "tags": [
          "Recording"
        ],
        "summary": "Resume recording the call.",
        "operationId": "CallRecording_ResumeRecording",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The service has accepted the resume request and will begin processing it."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CallRecording_ResumeRecording": {
            "$ref": "./examples/CallRecording_ResumeRecording.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateCallRequest": {
      "description": "The request payload for creating the call.",
      "required": [
        "targets",
        "callbackUri"
      ],
      "type": "object",
      "properties": {
        "targets": {
          "description": "The targets of the call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentifierModel"
          }
        },
        "sourceCallerIdNumber": {
          "$ref": "#/definitions/PhoneNumberIdentifierModel",
          "description": "The source caller Id, a phone number, that's shown to the PSTN participant being invited.\r\nRequired only when calling a PSTN callee."
        },
        "sourceDisplayName": {
          "description": "Display name of the call if dialing out to a pstn number",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/CommunicationUserIdentifierModel",
          "description": "The identifier of the source of the call"
        },
        "operationContext": {
          "description": "A customer set value used to track the answering of a call.",
          "type": "string"
        },
        "callbackUri": {
          "description": "The callback URI.",
          "type": "string"
        }
      }
    },
    "CommunicationIdentifierModel": {
      "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationIdentifierModel"
    },
    "PhoneNumberIdentifierModel": {
      "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/PhoneNumberIdentifierModel"
    },
    "CommunicationUserIdentifierModel": {
      "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationUserIdentifierModel"
    },
    "CommunicationErrorResponse": {
      "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
    },
    "CallConnectionStateModel": {
      "description": "The state of the call connection.",
      "enum": [
        "unknown",
        "connecting",
        "connected",
        "transferring",
        "transferAccepted",
        "disconnecting",
        "disconnected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CallConnectionStateModel",
        "modelAsString": true
      }
    },
    "CallConnectionProperties": {
      "description": "Properties of a call connection",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "The call connection id.",
          "type": "string"
        },
        "serverCallId": {
          "description": "The server call id.",
          "type": "string"
        },
        "targets": {
          "description": "The targets of the call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentifierModel"
          }
        },
        "callConnectionState": {
          "$ref": "#/definitions/CallConnectionStateModel"
        },
        "callbackUri": {
          "description": "The callback URI.",
          "type": "string"
        },
        "sourceCallerIdNumber": {
          "$ref": "#/definitions/PhoneNumberIdentifierModel",
          "description": "The source caller Id, a phone number, that's shown to the PSTN participant being invited.\r\nRequired only when calling a PSTN callee."
        },
        "sourceDisplayName": {
          "description": "Display name of the call if dialing out to a pstn number.",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Source identity."
        },
        "correlationId": {
          "description": "The correlation ID.",
          "type": "string"
        },
        "answeredBy": {
          "$ref": "#/definitions/CommunicationUserIdentifierModel",
          "description": "Identity of the answering entity. Only populated when identity is provided in the request."
        }
      }
    },
    "AnswerCallRequest": {
      "description": "The request payload for answering the call.",
      "required": [
        "incomingCallContext",
        "callbackUri"
      ],
      "type": "object",
      "properties": {
        "incomingCallContext": {
          "description": "The context associated with the call.",
          "type": "string"
        },
        "callbackUri": {
          "description": "The callback uri.",
          "type": "string"
        },
        "operationContext": {
          "description": "A customer set value used to track the answering of a call.",
          "type": "string"
        },
        "answeredBy": {
          "$ref": "#/definitions/CommunicationUserIdentifierModel",
          "description": "The identifier of the call automation entity which answers the call"
        }
      }
    },
    "RedirectCallRequest": {
      "description": "The request payload for redirecting the call.",
      "required": [
        "incomingCallContext",
        "target"
      ],
      "type": "object",
      "properties": {
        "incomingCallContext": {
          "description": "The context associated with the call.",
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The target identity to redirect the call to."
        }
      }
    },
    "CallRejectReason": {
      "description": "The rejection reason.",
      "enum": [
        "none",
        "busy",
        "forbidden"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CallRejectReason",
        "modelAsString": true
      }
    },
    "RejectCallRequest": {
      "description": "The request payload for rejecting the call.",
      "required": [
        "incomingCallContext"
      ],
      "type": "object",
      "properties": {
        "incomingCallContext": {
          "description": "The context associated with the call.",
          "type": "string"
        },
        "callRejectReason": {
          "$ref": "#/definitions/CallRejectReason"
        }
      }
    },
    "TransferToParticipantRequest": {
      "description": "The request payload for transferring call to a participant.",
      "required": [
        "targetParticipant"
      ],
      "type": "object",
      "properties": {
        "targetParticipant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The identity of the target where call should be transferred to."
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        }
      }
    },
    "TransferCallResponse": {
      "description": "The response payload for transferring the call.",
      "type": "object",
      "properties": {
        "operationContext": {
          "description": "The operation context provided by client.",
          "type": "string"
        }
      }
    },
    "PlayRequest": {
      "required": [
        "playSources"
      ],
      "type": "object",
      "properties": {
        "playSources": {
          "description": "The source of the audio to be played.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaySource"
          }
        },
        "playTo": {
          "description": "The list of call participants play provided audio to.\r\nPlays to everyone in the call when not provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentifierModel"
          }
        },
        "playOptions": {
          "$ref": "#/definitions/PlayOptions",
          "description": "Defines options for playing the audio."
        },
        "operationContext": {
          "description": "The value to identify context of the operation.",
          "type": "string"
        }
      }
    },
    "PlaySourceType": {
      "description": "Defines the type of the play source",
      "enum": [
        "file"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PlaySourceType",
        "modelAsString": true
      }
    },
    "PlaySource": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PlaySourceType"
        },
        "playSourceCacheId": {
          "description": "Defines the identifier to be used for caching related media",
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileSource",
          "description": "Defines the file source info to be used for play"
        }
      }
    },
    "PlayOptions": {
      "required": [
        "loop"
      ],
      "type": "object",
      "properties": {
        "loop": {
          "description": "The option to play the provided audio source in loop when set to true",
          "type": "boolean"
        }
      }
    },
    "FileSource": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "description": "Uri for the audio file to be played",
          "type": "string"
        }
      }
    },
    "RecognizeInputType": {
      "description": "Determines the type of the recognition.",
      "enum": [
        "dtmf"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecognizeInputType",
        "modelAsString": true
      }
    },
    "RecognizeRequest": {
      "required": [
        "recognizeInputType",
        "recognizeOptions"
      ],
      "type": "object",
      "properties": {
        "recognizeInputType": {
          "$ref": "#/definitions/RecognizeInputType"
        },
        "playPrompt": {
          "$ref": "#/definitions/PlaySource",
          "description": "The source of the audio to be played for recognition."
        },
        "interruptCallMediaOperation": {
          "description": "If set recognize can barge into other existing queued-up/currently-processing requests.",
          "type": "boolean"
        },
        "recognizeOptions": {
          "$ref": "#/definitions/RecognizeOptions",
          "description": "Defines options for recognition."
        },
        "operationContext": {
          "description": "The value to identify context of the operation.",
          "type": "string"
        }
      }
    },
    "RecognizeOptions": {
      "required": [
        "targetParticipant"
      ],
      "type": "object",
      "properties": {
        "interruptPrompt": {
          "description": "Determines if we interrupt the prompt and start recognizing.",
          "type": "boolean"
        },
        "initialSilenceTimeoutInSeconds": {
          "format": "int32",
          "description": "Time to wait for first input after prompt (if any).",
          "maximum": 300,
          "minimum": 0,
          "type": "integer"
        },
        "targetParticipant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Target participant of DTMF tone recognition."
        },
        "dtmfOptions": {
          "$ref": "#/definitions/DtmfOptions",
          "description": "Defines configurations for DTMF."
        }
      }
    },
    "Tone": {
      "enum": [
        "zero",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "a",
        "b",
        "c",
        "d",
        "pound",
        "asterisk"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "Tone",
        "modelAsString": true
      }
    },
    "DtmfOptions": {
      "description": "Options for DTMF recognition",
      "type": "object",
      "properties": {
        "interToneTimeoutInSeconds": {
          "format": "int32",
          "description": "Time to wait between DTMF inputs to stop recognizing.",
          "maximum": 60,
          "minimum": 1,
          "type": "integer"
        },
        "maxTonesToCollect": {
          "format": "int32",
          "description": "Maximum number of DTMF tones to be collected.",
          "type": "integer"
        },
        "stopTones": {
          "description": "List of tones that will stop recognizing.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tone"
          }
        }
      }
    },
    "GetParticipantsResponse": {
      "description": "The response payload for getting participants of the call.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of the current participants in the call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallParticipant"
          }
        },
        "nextLink": {
          "description": "Continue of the list of participants",
          "type": "string"
        }
      }
    },
    "CallParticipant": {
      "description": "A call participant.",
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Communication identifier of the participant"
        },
        "isMuted": {
          "description": "Is participant muted",
          "type": "boolean"
        }
      }
    },
    "AddParticipantRequest": {
      "description": "The request payload for adding participant to the call.",
      "required": [
        "participantToAdd"
      ],
      "type": "object",
      "properties": {
        "sourceCallerIdNumber": {
          "$ref": "#/definitions/PhoneNumberIdentifierModel",
          "description": "The source caller Id, a phone number, that's shown to the PSTN participant being invited.\r\nRequired only when inviting a PSTN participant."
        },
        "sourceDisplayName": {
          "description": "(Optional) The display name of the source that is associated with this invite operation when\r\nadding a PSTN participant or teams user.  Note: Will not update the display name in the roster.",
          "type": "string"
        },
        "participantToAdd": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The participant to invite."
        },
        "invitationTimeoutInSeconds": {
          "format": "int32",
          "description": "Gets or sets the timeout to wait for the invited participant to pickup.\r\nThe maximum value of this is 180 seconds",
          "maximum": 180,
          "minimum": 0,
          "type": "integer"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        }
      }
    },
    "AddParticipantResponse": {
      "description": "The response payload for adding participants to the call.",
      "type": "object",
      "properties": {
        "participant": {
          "$ref": "#/definitions/CallParticipant",
          "description": "List of current participants in the call."
        },
        "operationContext": {
          "description": "The operation context provided by client.",
          "type": "string"
        }
      }
    },
    "RemoveParticipantRequest": {
      "description": "The remove participant by identifier request.",
      "required": [
        "participantToRemove"
      ],
      "type": "object",
      "properties": {
        "participantToRemove": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The participants to be removed from the call."
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        }
      }
    },
    "RemoveParticipantResponse": {
      "description": "The response payload for removing participants of the call.",
      "type": "object",
      "properties": {
        "operationContext": {
          "description": "The operation context provided by client.",
          "type": "string"
        }
      }
    },
    "RecordingContentType": {
      "description": "The content type of call recording.",
      "enum": [
        "audio",
        "audioVideo"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecordingContentType",
        "modelAsString": true
      }
    },
    "RecordingChannelType": {
      "description": "The channel type of call recording.",
      "enum": [
        "mixed",
        "unmixed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecordingChannelType",
        "modelAsString": true
      }
    },
    "RecordingFormatType": {
      "description": "The format type of call recording.",
      "enum": [
        "wav",
        "mp3",
        "mp4"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecordingFormatType",
        "modelAsString": true
      }
    },
    "StartCallRecordingRequest": {
      "description": "The request payload start for call recording operation with call locator.",
      "required": [
        "callLocator"
      ],
      "type": "object",
      "properties": {
        "callLocator": {
          "$ref": "#/definitions/CallLocator",
          "description": "The call locator."
        },
        "recordingStateCallbackUri": {
          "description": "The uri to send notifications to.",
          "type": "string"
        },
        "recordingContentType": {
          "$ref": "#/definitions/RecordingContentType"
        },
        "recordingChannelType": {
          "$ref": "#/definitions/RecordingChannelType"
        },
        "recordingFormatType": {
          "$ref": "#/definitions/RecordingFormatType"
        },
        "audioChannelParticipantOrdering": {
          "description": "The sequential order in which audio channels are assigned to participants in the unmixed recording.\r\nWhen 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering is not specified,\r\nthe audio channel to participant mapping will be automatically assigned based on the order in which participant\r\nfirst audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentifierModel"
          }
        },
        "channelAffinity": {
          "description": "The channel affinity of call recording\r\nWhen 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.\r\nChannel-Participant mapping details can be found in the metadata of the recording.\r\n///",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelAffinity"
          }
        }
      }
    },
    "CallLocatorKind": {
      "description": "The call locator kind.",
      "enum": [
        "groupCallLocator",
        "serverCallLocator"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CallLocatorKind",
        "modelAsString": true
      }
    },
    "CallLocator": {
      "description": "The locator used for joining or taking action on a call.",
      "type": "object",
      "properties": {
        "groupCallId": {
          "description": "The group call id",
          "type": "string"
        },
        "serverCallId": {
          "description": "The server call id.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/CallLocatorKind"
        }
      }
    },
    "ChannelAffinity": {
      "description": "Channel affinity for a participant",
      "required": [
        "participant"
      ],
      "type": "object",
      "properties": {
        "channel": {
          "format": "int32",
          "description": "Channel number to which bitstream from a particular participant will be written.",
          "maximum": 4,
          "minimum": 0,
          "type": "integer"
        },
        "participant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The identifier for the participant whose bitstream will be written to the channel \r\nrepresented by the channel number."
        }
      }
    },
    "RecordingState": {
      "enum": [
        "active",
        "inactive"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecordingState",
        "modelAsString": true
      }
    },
    "RecordingStateResponse": {
      "type": "object",
      "properties": {
        "recordingId": {
          "type": "string"
        },
        "recordingState": {
          "$ref": "#/definitions/RecordingState"
        }
      }
    },
    "AddParticipantFailed": {
      "description": "The failed to add participants event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        },
        "participant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Participant"
        }
      }
    },
    "ResultInformation": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected.",
          "type": "integer"
        },
        "subCode": {
          "format": "int32",
          "description": "Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected.",
          "type": "integer"
        },
        "message": {
          "description": "Detail message that describes the current result.",
          "type": "string"
        }
      }
    },
    "AddParticipantSucceeded": {
      "description": "The participants successfully added event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        },
        "participant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Participant"
        }
      }
    },
    "CallConnected": {
      "description": "The call connected event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers to set the context for creating a new call. This property will be null for answering a call.",
          "type": "string"
        }
      }
    },
    "CallDisconnected": {
      "description": "The call disconnected event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers to set the context for creating a new call. This property will be null for answering a call.",
          "type": "string"
        }
      }
    },
    "CallTransferAccepted": {
      "description": "The call transfer accepted event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        }
      }
    },
    "CallTransferFailed": {
      "description": "The call transfer failed event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        }
      }
    },
    "ParticipantsUpdated": {
      "description": "The participants updated in a call event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "sequenceNumber": {
          "format": "int32",
          "description": "The Sequence Number of the event",
          "type": "integer"
        },
        "participants": {
          "description": "The list of participants in the call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallParticipant"
          }
        }
      }
    },
    "RemoveParticipantSucceeded": {
      "description": "The participant removed event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        },
        "participant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Participant"
        }
      }
    },
    "RemoveParticipantFailed": {
      "description": "The failed to remove participant event.",
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation. Also called ChainId for skype chain ID.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        },
        "participant": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "Participant"
        }
      }
    },
    "RecordingStateChanged": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "recordingId": {
          "description": "The call recording id",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/RecordingState"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "The time of the recording started",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PlayCompleted": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        }
      }
    },
    "PlayFailed": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        }
      }
    },
    "PlayCanceled": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        }
      }
    },
    "RecognitionType": {
      "description": "Determines the sub-type of the recognize operation.\r\nIn case of cancel operation the this field is not set and is returned empty",
      "enum": [
        "dtmf"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecognitionType",
        "modelAsString": true
      }
    },
    "RecognizeCompleted": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        },
        "recognitionType": {
          "$ref": "#/definitions/RecognitionType"
        },
        "dtmfResult": {
          "$ref": "#/definitions/DtmfResult",
          "description": "Defines the result for RecognitionType = Dtmf"
        }
      }
    },
    "DtmfResult": {
      "type": "object",
      "properties": {
        "tones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tone"
          },
          "readOnly": true
        }
      }
    },
    "RecognizeFailed": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        },
        "resultInformation": {
          "$ref": "#/definitions/ResultInformation",
          "description": "Contains the resulting SIP code, sub-code and message."
        }
      }
    },
    "RecognizeCanceled": {
      "type": "object",
      "properties": {
        "callConnectionId": {
          "description": "Call connection ID.",
          "type": "string"
        },
        "serverCallId": {
          "description": "Server call ID.",
          "type": "string"
        },
        "correlationId": {
          "description": "Correlation ID for event to call correlation.",
          "type": "string"
        },
        "operationContext": {
          "description": "Used by customers when calling mid-call actions to correlate the request to the response event.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Version of API to invoke.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "name": "endpoint",
      "in": "path",
      "description": "The endpoint of the Azure Communication resource.",
      "required": true,
      "type": "string",
      "format": "url",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "description": "An authentication string containing a signature generated using HMAC-SHA256 scheme.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}
