{
  "swagger": "2.0",
  "info": {
    "title": "CommunicationIdentityClient",
    "description": "Azure Communication Identity Service",
    "version": "2023-10-01"
  },
  "paths": {
    "/identities": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Create a new identity, and optionally, an access token.",
        "operationId": "CommunicationIdentity_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "If specified, creates also a Communication Identity access token associated with the identity and containing the requested scopes.",
            "schema": {
              "$ref": "#/definitions/CommunicationIdentityCreateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
            }
          },
          "201": {
            "description": "Created - Returns the created identity.",
            "schema": {
              "$ref": "#/definitions/CommunicationIdentityAccessTokenResult"
            }
          }
        },
        "x-ms-examples": {
          "Create an Identity and optionally an access token with custom expiration time within the [60-1440] minutes range. If expiration time is not specified, the default value of 1440 minutes (24 hours) will be used.": {
            "$ref": "./examples/CreateIdentity.json"
          }
        }
      }
    },
    "/identities/{id}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "summary": "Delete the identity, revoke all tokens for the identity and delete all associated data.",
        "operationId": "CommunicationIdentity_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the identity to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete an identity": {
            "$ref": "./examples/DeleteIdentity.json"
          }
        }
      }
    },
    "/identities/{id}/:revokeAccessTokens": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Revoke all access tokens for the specific identity.",
        "operationId": "CommunicationIdentity_RevokeAccessTokens",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the identity.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Revoke access tokens": {
            "$ref": "./examples/RevokeAccessTokens.json"
          }
        }
      }
    },
    "/teamsUser/:exchangeAccessToken": {
      "post": {
        "tags": [
          "TeamsUser"
        ],
        "summary": "Exchange an Azure Active Directory (Azure AD) access token of a Teams user for a new Communication Identity access token with a matching expiration time.",
        "operationId": "CommunicationIdentity_ExchangeTeamsUserAccessToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload for the token exchange.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamsUserExchangeTokenRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommunicationIdentityAccessToken"
            }
          }
        },
        "x-ms-examples": {
          "Exchange a Teams user access token": {
            "$ref": "./examples/ExchangeTeamsUserAccessToken.json"
          }
        }
      }
    },
    "/identities/{id}/:issueAccessToken": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Issue a new token for an identity.",
        "operationId": "CommunicationIdentity_IssueAccessToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the identity to issue token for.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Requested scopes for the new token.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationIdentityAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../Common/stable/2022-07-13/common.json#/definitions/CommunicationErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommunicationIdentityAccessToken"
            }
          }
        },
        "x-ms-examples": {
          "Issue an access token. Optionally specify a custom expiration time within the [60-1440] minutes range. In case an expiration time is not specified, the default value of 1440 minutes (24 hours) will be used.": {
            "$ref": "./examples/IssueAccessToken.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CommunicationIdentity": {
      "description": "A communication identity.",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of the identity.",
          "type": "string"
        }
      }
    },
    "CommunicationIdentityAccessToken": {
      "description": "An access token.",
      "required": [
        "expiresOn",
        "token"
      ],
      "type": "object",
      "properties": {
        "token": {
          "description": "The access token issued for the identity.",
          "type": "string"
        },
        "expiresOn": {
          "format": "date-time",
          "description": "The expiry time of the token.",
          "type": "string"
        }
      }
    },
    "CommunicationIdentityAccessTokenRequest": {
      "required": [
        "scopes"
      ],
      "type": "object",
      "properties": {
        "scopes": {
          "description": "List of scopes attached to the token.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentityTokenScope"
          }
        },
        "expiresInMinutes": {
          "format": "int32",
          "description": "Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440 minutes (24 hours) will be used.",
          "type": "integer",
          "minimum": 60,
          "maximum": 1440,
          "default": 1440
        }
      }
    },
    "CommunicationIdentityAccessTokenResult": {
      "description": "A communication identity with access token.",
      "required": [
        "identity"
      ],
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/CommunicationIdentity"
        },
        "accessToken": {
          "$ref": "#/definitions/CommunicationIdentityAccessToken"
        }
      }
    },
    "CommunicationIdentityCreateRequest": {
      "type": "object",
      "properties": {
        "createTokenWithScopes": {
          "description": "Also create access token for the created identity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationIdentityTokenScope"
          }
        },
        "expiresInMinutes": {
          "format": "int32",
          "description": "Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440 minutes (24 hours) will be used.",
          "type": "integer",
          "minimum": 60,
          "maximum": 1440,
          "default": 1440
        }
      }
    },
    "CommunicationIdentityTokenScope": {
      "description": "List of scopes for an access token.",
      "enum": [
        "chat",
        "voip",
        "chat.join",
        "chat.join.limited",
        "voip.join"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CommunicationIdentityTokenScope",
        "modelAsString": true,
        "values": [
          {
            "value": "chat",
            "description": "Use this for full access to Chat APIs."
          },
          {
            "value": "voip",
            "description": "Use this for full access to Calling APIs."
          },
          {
            "value": "chat.join",
            "description": "Access to Chat APIs but without the authorization to create, delete or update chat threads."
          },
          {
            "value": "chat.join.limited",
            "description": "A more limited version of chat.join that doesn't allow to add or remove participants. Use this scope when the token bearer is not fully trusted, for example in guest scenarios."
          },
          {
            "value": "voip.join",
            "description": "Access to Calling APIs but without the authorization to start new calls."
          }
        ]
      }
    },
    "TeamsUserExchangeTokenRequest": {
      "required": [
        "appId",
        "token",
        "userId"
      ],
      "type": "object",
      "properties": {
        "token": {
          "description": "Azure AD access token of a Teams User to acquire a new Communication Identity access token.",
          "type": "string"
        },
        "appId": {
          "description": "Client ID of an Azure AD application to be verified against the appid claim in the Azure AD access token.",
          "type": "string"
        },
        "userId": {
          "description": "Object ID of an Azure AD user (Teams User) to be verified against the oid claim in the Azure AD access token.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "Version of API to invoke.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "description": "The communication resource, for example https://my-resource.communication.azure.com",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
      }
    ]
  }
}
