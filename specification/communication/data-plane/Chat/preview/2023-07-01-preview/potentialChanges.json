{
  "swagger": "2.0",
  "info": {
    "title": "Azure Communication Chat Service",
    "description": "Azure Communication Chat Service",
    "version": "2023-07-01-preview"
  },
  "paths": {
    "/chat/threads/{chatThreadId}/readReceipts": {
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Gets chat message read receipts for a thread.",
        "operationId": "ChatThread_ListChatReadReceipts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Thread id to get the chat message read receipts for.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "The maximum number of chat message read receipts to be returned per page.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Skips chat message read receipts up to a specified position in response.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns the requested `ChatMessageReadReceipt` resources.",
            "schema": {
              "$ref": "#/definitions/ChatMessageReadReceiptsCollection"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get thread read receipts with pagination (max page size)": {
            "$ref": "./examples/Conversations_ListChatReadReceiptsWithPageSize.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      },
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Sends a read receipt event to a thread, on behalf of a user.",
        "operationId": "ChatThread_SendChatReadReceipt",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Thread id to send the read receipt event to.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "sendReadReceiptRequest",
            "description": "Read receipt details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendReadReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Send read receipt": {
            "$ref": "./examples/Conversations_SendChatReadReceipt.json"
          }
        }
      }
    },
    "/chat/threads/{chatThreadId}/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a message to a thread.",
        "operationId": "ChatThread_SendChatMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The thread id to send the message to.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "sendChatMessageRequest",
            "description": "Details of the message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendChatMessageRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message sent, the `Location` header contains the URL for the newly sent message.",
            "schema": {
              "$ref": "#/definitions/SendChatMessageResult"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Send Message": {
            "$ref": "./examples/Messages_SendChatMessage.json"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a list of messages from a thread.",
        "operationId": "ChatThread_ListChatMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The thread id of the message.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "The maximum number of messages to be returned per page.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startTime",
            "description": "The earliest point in time to get messages up to. The timestamp should be in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChatMessagesCollection"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get messages with pagination (max page size)": {
            "$ref": "./examples/Messages_ListChatMessagesWithPageSize.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/chat/threads/{chatThreadId}/messages/{chatMessageId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a message by id.",
        "operationId": "ChatThread_GetChatMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "chatMessageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a `Message` resource.",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get Message": {
            "$ref": "./examples/Messages_GetChatMessage.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Messages"
        ],
        "summary": "Updates a message.",
        "operationId": "ChatThread_UpdateChatMessage",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "chatMessageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "updateChatMessageRequest",
            "description": "Details of the request to update the message.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateChatMessageRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Message is successfully updated."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Update message content": {
            "$ref": "./examples/Messages_UpdateChatMessage.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Deletes a message.",
        "operationId": "ChatThread_DeleteChatMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "chatMessageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Delete message": {
            "$ref": "./examples/Messages_DeleteChatMessage.json"
          }
        }
      }
    },
    "/chat/threads/{chatThreadId}/participants": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Gets the participants of a thread.",
        "operationId": "ChatThread_ListChatParticipants",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Thread id to get participants for.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "The maximum number of participants to be returned per page.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Skips participants up to a specified position in response.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns the participants of a thread.",
            "schema": {
              "$ref": "#/definitions/ChatParticipantsCollection"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get participants with pagination (max page size)": {
            "$ref": "./examples/Participants_ListChatParticipantsWithPageSize.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/chat/threads/{chatThreadId}/participants/:remove": {
      "post": {
        "tags": [
          "Participants"
        ],
        "summary": "Remove a participant from a thread.",
        "operationId": "ChatThread_RemoveChatParticipant",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Thread id to remove the participant from.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "participantCommunicationIdentifier",
            "description": "Id of the thread participant to remove from the thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationIdentifierModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Remove participant": {
            "$ref": "./examples/Participants_RemoveChatParticipant.json"
          }
        }
      }
    },
    "/chat/threads/{chatThreadId}/participants/:add": {
      "post": {
        "tags": [
          "Participants"
        ],
        "summary": "Adds thread participants to a thread. If participants already exist, no change occurs.",
        "operationId": "ChatThread_AddChatParticipants",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Id of the thread to add participants to.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "addChatParticipantsRequest",
            "description": "Thread participants to be added to the thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddChatParticipantsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The participants were successfully added.",
            "schema": {
              "$ref": "#/definitions/AddChatParticipantsResult"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Add participants": {
            "$ref": "./examples/Participants_AddChatParticipants.json"
          }
        }
      }
    },
    "/chat/threads": {
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Creates a chat thread.",
        "operationId": "Chat_CreateChatThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "repeatability-request-id",
            "description": "If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "createChatThreadRequest",
            "description": "Request payload for creating a chat thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChatThreadRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Thread created, the `Location` header would contain the URL for the newly created thread.",
            "schema": {
              "$ref": "#/definitions/CreateChatThreadResult"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Create chat thread": {
            "$ref": "./examples/Threads_CreateChatThread.json"
          },
          "Create chat thread with repeatability request id header": {
            "$ref": "./examples/Threads_CreateChatThreadWithIdempotencyToken.json"
          }
        }
      },
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Gets the list of chat threads of a user.",
        "operationId": "Chat_ListChatThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "The maximum number of chat threads returned per page.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startTime",
            "description": "The earliest point in time to get chat threads up to. The timestamp should be in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a `GetThreadsResponse` resource.",
            "schema": {
              "$ref": "#/definitions/ChatThreadsItemCollection"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get threads with pagination (Max Page Size)": {
            "$ref": "./examples/Threads_ListChatThreadsWithPageSize.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "value"
        }
      }
    },
    "/chat/threads/{chatThreadId}": {
      "patch": {
        "tags": [
          "Threads"
        ],
        "summary": "Updates a thread's properties.",
        "operationId": "ChatThread_UpdateChatThreadProperties",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "The id of the thread to update.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "updateChatThreadRequest",
            "description": "Request payload for updating a chat thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateChatThreadRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Thread was successfully updated."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Update chat thread topic": {
            "$ref": "./examples/Threads_UpdateChatThreadTopic.json"
          }
        }
      },
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Gets a chat thread's properties.",
        "operationId": "ChatThread_GetChatThreadProperties",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Id of the thread.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a chat thread.",
            "schema": {
              "$ref": "#/definitions/ChatThreadProperties"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get chat thread": {
            "$ref": "./examples/Threads_GetChatThread.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Threads"
        ],
        "summary": "Deletes a thread.",
        "operationId": "Chat_DeleteChatThread",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Id of the thread to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Delete chat thread": {
            "$ref": "./examples/Threads_DeleteChatThread.json"
          }
        }
      }
    },
    "/chat/threads/{chatThreadId}/typing": {
      "post": {
        "tags": [
          "TypingNotifications"
        ],
        "summary": "Posts a typing event to a thread, on behalf of a user.",
        "operationId": "ChatThread_SendTypingNotification",
        "consumes": [
          "application/json",
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatThreadId",
            "description": "Id of the thread.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "sendTypingNotificationRequest",
            "description": "Details of the typing notification request.",
            "schema": {
              "$ref": "#/definitions/SendTypingNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful."
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "429": {
            "description": "Too many requests.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          },
          "503": {
            "description": "Service unavailable.",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Post typing event to a thread": {
            "$ref": "./examples/Messages_SendTypingNotification.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CommunicationUserIdentifierModel": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationUserIdentifierModel"
    },
    "CommunicationCloudEnvironment": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationCloudEnvironmentModel"
    },
    "MicrosoftTeamsUserIdentifierModel": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/MicrosoftTeamsUserIdentifierModel"
    },
    "CommunicationIdentifierModel": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationIdentifierModel"
    },
    "ChatMessageReadReceipt": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessageReadReceipt"
    },
    "ChatMessageReadReceiptsCollection": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessageReadReceiptsCollection"
    },
    "CommunicationError": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationError"
    },
    "CommunicationErrorResponse": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationErrorResponse"
    },
    "SendReadReceiptRequest": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/SendReadReceiptRequest"
    },
    "ChatMessageType": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessageType"
    },
    "SendChatMessageRequest": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/SendChatMessageRequest"
    },
    "SendChatMessageResult": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/SendChatMessageResult"
    },
    "ChatParticipant": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatParticipant"
    },
    "ChatMessageContent": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessageContent"
    },
    "ChatMessage": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessage"
    },
    "ChatMessagesCollection": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatMessagesCollection"
    },
    "UpdateChatMessageRequest": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/UpdateChatMessageRequest"
    },
    "ChatParticipantsCollection": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/ChatParticipantsCollection"
    },
    "AddChatParticipantsRequest": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/AddChatParticipantsRequest"
    },
    "AddChatParticipantsResult": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/AddChatParticipantsResult"
    },
    "CreateChatThreadRequest": {
      "description": "Request payload for creating a chat thread.",
      "required": [
        "topic"
      ],
      "type": "object",
      "properties": {
        "topic": {
          "description": "The chat thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        },
        "participants": {
          "description": "Participants to be added to the chat thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatParticipant"
          }
        },
        "deletionStrategy": {
          "$ref": "#/definitions/DeletionStrategy"
        }
      }
    },
    "ChatThreadProperties": {
      "description": "Chat thread.",
      "required": [
        "createdByCommunicationIdentifier",
        "createdOn",
        "id",
        "topic"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Chat thread id.",
          "type": "string",
          "example": "19:uni01_uy5ucb66ugp3lrhe7pxso6xx4hsmm3dl6eyjfefv2n6x3rrurpea@thread.v2"
        },
        "topic": {
          "description": "Chat thread topic.",
          "type": "string",
          "example": "Lunch Chat thread"
        },
        "createdOn": {
          "format": "date-time",
          "description": "The timestamp when the chat thread was created. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "example": "2020-10-30T10:50:50Z"
        },
        "createdByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel"
        },
        "deletedOn": {
          "format": "date-time",
          "description": "The timestamp when the chat thread was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "example": "2020-10-30T10:50:50Z"
        },
        "deletionStrategy": {
          "$ref": "#/definitions/DeletionStrategy"
        }
      }
    },
    "CreateChatThreadResult": {
      "description": "Result of the create chat thread operation.",
      "type": "object",
      "properties": {
        "chatThread": {
          "$ref": "#/definitions/ChatThreadProperties"
        },
        "invalidParticipants": {
          "description": "The participants that failed to be added to the chat thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationError"
          },
          "readOnly": true
        }
      }
    },
    "ChatThreadItem": {
      "description": "Summary information of a chat thread.",
      "required": [
        "id",
        "topic"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Chat thread id.",
          "type": "string",
          "example": "19:uni01_uy5ucb66ugp3lrhe7pxso6xx4hsmm3dl6eyjfefv2n6x3rrurpea@thread.v2"
        },
        "topic": {
          "description": "Chat thread topic.",
          "type": "string",
          "example": "Lunch Chat thread"
        },
        "deletedOn": {
          "format": "date-time",
          "description": "The timestamp when the chat thread was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "example": "2020-10-30T10:50:50Z"
        },
        "lastMessageReceivedOn": {
          "format": "date-time",
          "description": "The timestamp when the last message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "readOnly": true,
          "example": "2020-10-30T10:50:50Z"
        },
        "deletionStrategy": {
          "$ref": "#/definitions/DeletionStrategy"
        }
      }
    },
    "ChatThreadsItemCollection": {
      "description": "Collection of chat threads.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of chat threads.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatThreadItem"
          }
        },
        "nextLink": {
          "description": "If there are more chat threads that can be retrieved, the next link will be populated.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateChatThreadRequest": {
      "description": "Request payload for updating a chat thread.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Chat thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        },
        "deletionStrategy": {
          "$ref": "#/definitions/DeletionStrategy"
        }
      }
    },
    "SendTypingNotificationRequest": {
      "$ref": "../../../Common/stable/2021-09-07/common.json#/definitions/SendTypingNotificationRequest"
    },
    "DeletionStrategy": {
      "type": "object",
      "discriminator": "strategy",
       "properties": {
        "strategy": {
          "type": "string"
        }
      },
      "required": [
        "strategy"
      ]
    },
    
    "DeleteBasedOnCreationStrategy": {
      "allOf": [
        {
          "$ref": "#/definitions/DeletionStrategy"
        },
        {
          "type": "object",
          "properties": {
            "daysAfterCreation":{
              "type": "integer",
              "format": "int32",
            }
          },
          "required": [
            "daysAfterCreation"
          ]
        }
      ]
    },
    
    "DeleteBasedOnLastActivityStrategy": {
      "allOf": [
        {
          "$ref": "#/definitions/DeletionStrategy"
        },
        {
          "type": "object",
          "properties": {
            "daysAfterLastActivity":{
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "daysAfterLastActivity"
          ]
        }
      ]
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "Version of API to invoke.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The endpoint of the Azure Communication resource.",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "An ACS (Azure Communication Services) user access token."
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}
