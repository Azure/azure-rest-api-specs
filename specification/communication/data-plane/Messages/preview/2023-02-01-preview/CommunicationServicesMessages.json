{
  "swagger": "2.0",
  "info": {
    "title": "CommunicationMessagesClient",
    "description": "Azure Communication Messages Service",
    "version": "2023-02-01-preview"
  },
  "paths": {
    "/messages/notifications/:send": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "NotificationMessages_SendMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendNotificationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/SendMessageResult"
            }
          },
          "default": {
            "description": "Communication Error Response",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/messages/streams/{id}": {
      "get": {
        "tags": [
          "Stream"
        ],
        "summary": "Download the Media payload from a User to Business message.",
        "operationId": "Stream_DownloadMedia",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Media Identifier contained in the User to Business message event.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "default": {
            "description": "Communication Error Response",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/messages/channels/{channelId}/templates": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "List all templates for given ACS channel",
        "operationId": "TemplateV2_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "channelId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the list of waTemplatesInternal.",
            "schema": {
              "$ref": "#/definitions/ListTemplatesResponse"
            }
          },
          "default": {
            "description": "Communication Error Response",
            "schema": {
              "$ref": "#/definitions/CommunicationErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      }
    }
  },
  "definitions": {
    "ChannelType": {
      "enum": [
        "whatsApp"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ChannelType",
        "modelAsString": true
      }
    },
    "CommunicationError": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationError"
    },
    "CommunicationErrorResponse": {
      "$ref": "../../../Common/stable/2021-03-07/common.json#/definitions/CommunicationErrorResponse"
    },
    "CommunicationMessageType": {
      "description": "The type of message. Supports text, image, template.",
      "enum": [
        "text",
        "image",
        "template"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CommunicationMessageType",
        "modelAsString": true
      }
    },
    "ListTemplatesResponse": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateResponse"
          }
        },
        "nextLink": {
          "type": "string",
	  "example": "/messages/channels/#CHANNEL_ID#/templates?maxPageSize=4&api-version=2023-02-01-preview&after=#AFTER#"
        }
      }
    },
    "MessageReceipt": {
      "description": "Receipt of the sending one message.",
      "required": [
        "messageId",
        "to"
      ],
      "type": "object",
      "properties": {
        "messageId": {
          "description": "The message id.",
          "type": "string"
        },
        "to": {
          "description": "The native external platform user identifier of the recipient.",
          "type": "string"
        }
      }
    },
    "MessageTemplate": {
      "description": "The template object used to create templates.",
      "required": [
        "language",
        "name",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the template.",
          "type": "string",
          "example": "appointment_update"
        },
        "language": {
          "description": "The codes for the supported languages for templates.",
          "type": "string",
          "example": "en_US"
        },
        "parameters": {
          "description": "Array of parameters for the content of the template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageTemplateParameter"
          }
        }
      }
    },
    "MessageTemplateParameter": {
      "description": "The class describes a parameter of a template.",
      "required": [
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "component": {
          "description": "The component name of the parameter.",
          "type": "string",
          "example": "Header;Footer;Body"
        },
        "value": {
          "description": "The text value of the parameter.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/MessageTemplateParameterType"
        },
        "subType": {
          "description": "The [Optional] sub type of the parameter.",
          "type": "string",
          "example": "QuickReply;Url"
        },
        "location": {
          "$ref": "#/definitions/MessageTemplateParameterLocation"
        }
      }
    },
    "MessageTemplateParameterLocation": {
      "description": "The location's additional information.\r\nMessageTemplateParameter.Value is the name of the location.",
      "type": "object",
      "properties": {
        "address": {
          "description": "The address of the location.",
          "type": "string",
          "example": "1 Microsoft Way, Redmond, WA 98052, USA"
        },
        "latitude": {
          "format": "float",
          "description": "The latitude of the location.",
          "type": "number",
          "example": 47.639423
        },
        "longitude": {
          "format": "float",
          "description": "The longitude of the location.",
          "type": "number",
          "example": -122.12831
        }
      }
    },
    "MessageTemplateParameterType": {
      "enum": [
        "text",
        "image",
        "document",
        "video",
        "location",
        "button"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MessageTemplateParameterType",
        "modelAsString": true
      }
    },
    "SendMessageResult": {
      "description": "Result of the send message operation.",
      "required": [
        "receipts"
      ],
      "type": "object",
      "properties": {
        "receipts": {
          "description": "Receipts of the send message operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageReceipt"
          }
        }
      }
    },
    "SendNotificationRequest": {
      "description": "Details of the message to send.",
      "required": [
        "channelRegistrationId",
        "to",
        "type"
      ],
      "type": "object",
      "properties": {
        "channelRegistrationId": {
          "description": "The Channel Registration ID for the Business Identifier.",
          "type": "string"
        },
        "to": {
          "description": "The native external platform user identifiers of the recipient.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "16315551234"
          ]
        },
        "type": {
          "$ref": "#/definitions/CommunicationMessageType"
        },
        "content": {
          "description": "Message content.",
          "type": "string",
          "example": "Come on everyone, lets go for lunch together."
        },
        "mediaUri": {
          "description": "A media url for the file. Required if the type is one of the supported media types, e.g. image",
          "type": "string",
          "example": "https://IMAGE_URL"
        },
        "template": {
          "$ref": "#/definitions/MessageTemplate"
        }
      }
    },
    "TemplateResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Get the template's Name",
          "type": "string"
        },
        "language": {
          "description": "Get the template's language",
          "type": "string"
        },
        "channelType": {
          "$ref": "#/definitions/ChannelType"
        },
        "status": {
          "$ref": "#/definitions/TemplateStatus"
        },
        "whatsApp": {
          "$ref": "#/definitions/TemplateResponseWhatsApp"
        }
      }
    },
    "TemplateResponseWhatsApp": {
      "description": "The WhatsApp-specific template response contract",
      "type": "object",
      "properties": {
        "content": {
          "description": "WhatsApp platform's template content\r\nThis is the payload returned from WhatsApp API."
        }
      }
    },
    "TemplateStatus": {
      "description": "The aggregated template status.",
      "enum": [
        "approved",
        "rejected",
        "pending",
        "paused"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TemplateStatus",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "Version of API to invoke.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "description": "The communication resource, for example https://my-resource.communication.azure.com",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
      }
    ]
  }
}
