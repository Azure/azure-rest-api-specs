{
  "swagger": "2.0",
  "info": {
    "title": "CommunicationMessagesClient",
    "version": "2024-02-01",
    "description": "Azure Communication Messages Service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The communication resource, for example https://my-resource.communication.azure.com",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Template"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Stream"
    }
  ],
  "paths": {
    "/messages/channels/{channelId}/templates": {
      "get": {
        "operationId": "TemplateOperations_List",
        "tags": [
          "Template"
        ],
        "summary": "List all templates for given ACS channel",
        "description": "List all templates for given ACS channel",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "channelId",
            "in": "path",
            "description": "The registration ID of the channel.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "description": "The max page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ListTemplatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Gets a list of templates": {
            "$ref": "./examples/Template_GetTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/messages/notifications/:send": {
      "post": {
        "operationId": "NotificationMessagesOperations_SendMessage",
        "tags": [
          "Notifications"
        ],
        "summary": "Sends a notification message from Business to User.",
        "description": "Sends a notification message from Business to User.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Details of the message to send.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendNotificationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/SendMessageResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Sends a notification message": {
            "$ref": "./examples/NotificationMessages_SendMessage.json"
          }
        }
      }
    },
    "/messages/streams/{id}": {
      "get": {
        "operationId": "StreamOperations_DownloadMedia",
        "tags": [
          "Stream"
        ],
        "summary": "Download the Media payload from a User to Business message.",
        "description": "Download the Media payload from a User to Business message.",
        "produces": [
          "application/octect-stream",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Media Identifier contained in the User to Business message event.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Download a media": {
            "$ref": "./examples/Stream_DownloadMedia.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "CommunicationMessageType": {
      "type": "string",
      "description": "The type of message. Supports text, image, template.",
      "enum": [
        "text",
        "image",
        "template"
      ],
      "x-ms-enum": {
        "name": "CommunicationMessageType",
        "modelAsString": true,
        "values": [
          {
            "name": "text",
            "value": "text",
            "description": "Text message type."
          },
          {
            "name": "image",
            "value": "image",
            "description": "Image message type."
          },
          {
            "name": "template",
            "value": "template",
            "description": "Template message type."
          }
        ]
      }
    },
    "CommunicationMessagesChannel": {
      "type": "string",
      "description": "The Communication Messages Channel.",
      "enum": [
        "whatsApp"
      ],
      "x-ms-enum": {
        "name": "CommunicationMessagesChannel",
        "modelAsString": true,
        "values": [
          {
            "name": "whatsApp",
            "value": "whatsApp",
            "description": "The Communication Messages Channel is WhatsApp."
          }
        ]
      }
    },
    "ListTemplatesResponse": {
      "type": "object",
      "description": "Paged collection of MessageTemplateResponse items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MessageTemplateResponse items on this page",
          "items": {
            "$ref": "#/definitions/MessageTemplateResponse"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MessageReceipt": {
      "type": "object",
      "description": "Receipt of the sending one message.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id."
        },
        "to": {
          "type": "string",
          "description": "The native external platform user identifier of the recipient."
        }
      },
      "required": [
        "messageId",
        "to"
      ]
    },
    "MessageTemplate": {
      "type": "object",
      "description": "The template object used to create templates.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the template."
        },
        "language": {
          "type": "string",
          "description": "The codes for the supported languages for templates."
        },
        "values": {
          "type": "object",
          "description": "The template values.",
          "additionalProperties": {
            "$ref": "#/definitions/MessageTemplateValue"
          }
        },
        "bindings": {
          "$ref": "#/definitions/MessageTemplateBindings",
          "description": "The binding object to link values to the template specific locations"
        }
      },
      "required": [
        "name",
        "language"
      ]
    },
    "MessageTemplateBindings": {
      "type": "object",
      "description": "The binding object to link values to the template specific locations",
      "properties": {
        "whatsApp": {
          "$ref": "#/definitions/WhatsAppMessageTemplateBindings",
          "description": "The template bindings for WhatsApp"
        }
      }
    },
    "MessageTemplateParameterLocation": {
      "type": "object",
      "description": "The message template's location value information.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The [Optional] name of the location."
        },
        "address": {
          "type": "string",
          "description": "The [Optional] address of the location."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude of the location."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The longitude of the location."
        }
      }
    },
    "MessageTemplateResponse": {
      "type": "object",
      "description": "The Message Template Response.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Get the template's Name"
        },
        "language": {
          "type": "string",
          "description": "Get the template's language"
        },
        "channelType": {
          "$ref": "#/definitions/CommunicationMessagesChannel",
          "description": "The Communication Messages Channel."
        },
        "status": {
          "$ref": "#/definitions/MessageTemplateStatus",
          "description": "The aggregated template status."
        },
        "whatsApp": {
          "$ref": "#/definitions/WhatsAppMessageTemplateResponse",
          "description": "The WhatsApp-specific template response contract"
        }
      }
    },
    "MessageTemplateStatus": {
      "type": "string",
      "description": "The aggregated template status.",
      "enum": [
        "approved",
        "rejected",
        "pending",
        "paused"
      ],
      "x-ms-enum": {
        "name": "MessageTemplateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "approved",
            "value": "approved",
            "description": "Message template is approved."
          },
          {
            "name": "rejected",
            "value": "rejected",
            "description": "Message template is rejected."
          },
          {
            "name": "pending",
            "value": "pending",
            "description": "Message template is pending."
          },
          {
            "name": "paused",
            "value": "paused",
            "description": "Message template is paused."
          }
        ]
      }
    },
    "MessageTemplateValue": {
      "type": "object",
      "description": "The class describes a parameter of a template.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/MessageTemplateValueKind",
          "description": "The template value kind."
        },
        "text": {
          "$ref": "#/definitions/MessageTemplateValueText",
          "description": "The message template's text value information."
        },
        "image": {
          "$ref": "#/definitions/MessageTemplateValueMedia",
          "description": "The message template's media value information.\nCould be an image, document or\nvideo."
        },
        "document": {
          "$ref": "#/definitions/MessageTemplateValueMedia",
          "description": "The message template's media value information.\nCould be an image, document or\nvideo."
        },
        "video": {
          "$ref": "#/definitions/MessageTemplateValueMedia",
          "description": "The message template's media value information.\nCould be an image, document or\nvideo."
        },
        "location": {
          "$ref": "#/definitions/MessageTemplateParameterLocation",
          "description": "The message template's location value information."
        },
        "quickAction": {
          "$ref": "#/definitions/MessageTemplateValueQuickAction",
          "description": "The message template's quick action value information."
        }
      },
      "required": [
        "kind"
      ]
    },
    "MessageTemplateValueKind": {
      "type": "string",
      "description": "The template value kind.",
      "enum": [
        "text",
        "image",
        "document",
        "video",
        "location",
        "quick_action"
      ],
      "x-ms-enum": {
        "name": "MessageTemplateValueKind",
        "modelAsString": true,
        "values": [
          {
            "name": "text",
            "value": "text",
            "description": "Message parameter type is text."
          },
          {
            "name": "image",
            "value": "image",
            "description": "Message parameter type is image."
          },
          {
            "name": "document",
            "value": "document",
            "description": "Message parameter type is document."
          },
          {
            "name": "video",
            "value": "video",
            "description": "Message parameter type is video."
          },
          {
            "name": "location",
            "value": "location",
            "description": "Message parameter type is location."
          },
          {
            "name": "quick_action",
            "value": "quick_action",
            "description": "Message parameter type is quick action."
          }
        ]
      }
    },
    "MessageTemplateValueMedia": {
      "type": "object",
      "description": "The message template's media value information.\nCould be an image, document or\nvideo.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The (public) URL of the media."
        },
        "caption": {
          "type": "string",
          "description": "The [optional] caption of the media object."
        },
        "fileName": {
          "type": "string",
          "description": "The [optional] filename of the media file."
        }
      }
    },
    "MessageTemplateValueQuickAction": {
      "type": "object",
      "description": "The message template's quick action value information.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The [Optional] quick action text"
        },
        "payload": {
          "type": "string",
          "description": "The [Optional] quick action payload"
        }
      }
    },
    "MessageTemplateValueText": {
      "type": "object",
      "description": "The message template's text value information.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text value."
        }
      },
      "required": [
        "text"
      ]
    },
    "SendMessageResult": {
      "type": "object",
      "description": "Result of the send message operation.",
      "properties": {
        "receipts": {
          "type": "array",
          "description": "Receipts of the send message operation.",
          "items": {
            "$ref": "#/definitions/MessageReceipt"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "receipts"
      ]
    },
    "SendNotificationRequest": {
      "type": "object",
      "description": "Details of the message to send.",
      "properties": {
        "channelRegistrationId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The Channel Registration ID for the Business Identifier."
        },
        "to": {
          "type": "array",
          "description": "The native external platform user identifiers of the recipient.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/CommunicationMessageType",
          "description": "The type of message. Supports text, image, template."
        },
        "content": {
          "type": "string",
          "description": "Message content."
        },
        "mediaUri": {
          "type": "string",
          "description": "A media url for the file. Required if the type is one of the supported media\ntypes, e.g. image"
        },
        "template": {
          "$ref": "#/definitions/MessageTemplate",
          "description": "The template object used to create templates."
        }
      },
      "required": [
        "channelRegistrationId",
        "to",
        "type"
      ]
    },
    "WhatsAppMessageTemplateBindings": {
      "type": "object",
      "description": "The template bindings for WhatsApp",
      "properties": {
        "header": {
          "type": "array",
          "description": "The header template bindings",
          "items": {
            "$ref": "#/definitions/WhatsAppMessageTemplateBindingsComponent"
          },
          "x-ms-identifiers": []
        },
        "body": {
          "type": "array",
          "description": "The body template bindings",
          "items": {
            "$ref": "#/definitions/WhatsAppMessageTemplateBindingsComponent"
          },
          "x-ms-identifiers": []
        },
        "footer": {
          "type": "array",
          "description": "The footer template bindings",
          "items": {
            "$ref": "#/definitions/WhatsAppMessageTemplateBindingsComponent"
          },
          "x-ms-identifiers": []
        },
        "button": {
          "type": "array",
          "description": "The button template bindings",
          "items": {
            "$ref": "#/definitions/WhatsAppMessageTemplateBindingsButton"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WhatsAppMessageTemplateBindingsButton": {
      "type": "object",
      "description": "The template bindings component button for WhatsApp",
      "properties": {
        "subType": {
          "$ref": "#/definitions/WhatsAppMessageTemplateValueSubType",
          "description": "The WhatsApp button sub type"
        },
        "refValue": {
          "type": "string",
          "description": "The reference to the value in the\nMicrosoft.Azure.Communication.CrossPlatformMessages.Contract.Model.VNext.Notifications.Requests.MessageTemplate.Values\ndictionary."
        }
      },
      "required": [
        "refValue"
      ]
    },
    "WhatsAppMessageTemplateBindingsComponent": {
      "type": "object",
      "description": "The template bindings component for WhatsApp",
      "properties": {
        "refValue": {
          "type": "string",
          "description": "The reference to the value in the\nMicrosoft.Azure.Communication.CrossPlatformMessages.Contract.Model.VNext.Notifications.Requests.MessageTemplate.Values\ndictionary."
        }
      },
      "required": [
        "refValue"
      ]
    },
    "WhatsAppMessageTemplateResponse": {
      "type": "object",
      "description": "The WhatsApp-specific template response contract",
      "properties": {
        "content": {
          "description": "WhatsApp platform's template content\nThis is the payload returned from WhatsApp\nAPI."
        }
      }
    },
    "WhatsAppMessageTemplateValueSubType": {
      "type": "string",
      "description": "The WhatsApp button sub type.",
      "enum": [
        "quickReply",
        "url"
      ],
      "x-ms-enum": {
        "name": "WhatsAppMessageTemplateValueSubType",
        "modelAsString": true,
        "values": [
          {
            "name": "quickReply",
            "value": "quickReply",
            "description": "The WhatsApp button sub type is quick reply."
          },
          {
            "name": "url",
            "value": "url",
            "description": "The WhatsApp button sub type is url."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
