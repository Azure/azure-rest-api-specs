parameters:
  "service-dir":
    default: "sdk/keyvault"

emit:
  - "@azure-tools/typespec-autorest"

linter:
  extends:
    - "@azure-tools/typespec-azure-rulesets/data-plane"

options:
  "@azure-tools/typespec-autorest":
    azure-resource-provider-folder: "data-plane"
    emitter-output-dir: "{project-root}/.."
    output-file: "{azure-resource-provider-folder}/Microsoft.KeyVault/{version-status}/{version}/keys.json"
  # Uncomment this line and add "@azure-tools/typespec-python" to your package.json to generate Python code
  "@azure-tools/typespec-python":
    flavor: azure
    "basic-setup-py": true
    "package-version": "4.10.0b1"
    "package-dir": "azure-keyvault-keys"
    "package-name": "azure-keyvault-keys"
    "output-path": "./azure/keyvault/keys/_generated"
  # Uncomment this line and add "@azure-tools/typespec-java" to your package.json to generate Java code
  # "@azure-tools/typespec-java": true
  # Uncomment this line and add "@azure-tools/typespec-csharp" to your package.json to generate C# code
  # "@azure-tools/typespec-csharp": true
  "@azure-tools/typespec-ts":
    package-dir: "keyvault-keys"
    generateMetadata: true
    generateTest: false
    src-folder: ""
    experimentalExtensibleEnums: true
    isModularLibrary: true
    packageDetails:
      name: "@azure/keyvault-keys"
      description: "Azure Key Vault Keys"
    flavor: azure
  "@azure-tools/typespec-go":
    service-dir: "sdk/security/keyvault"
    package-dir: "azkeys"
    module: "github.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azkeys"
    module-version: "0.0.1"
    emitter-output-dir: "{project-root}"
    override-client-name: "Client"
    single-client: true
    api-version: "7.5"
    inject-spans: true
