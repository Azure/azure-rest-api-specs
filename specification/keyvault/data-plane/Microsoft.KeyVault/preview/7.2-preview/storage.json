{
  "swagger": "2.0",
  "info": {
    "title": "KeyVaultClient",
    "description": "The key vault client performs cryptographic key operations and vault operations against the Key Vault service.",
    "version": "7.2-preview"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{vaultBaseUrl}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "name": "vaultBaseUrl",
        "description": "The vault name, for example https://myvault.vault.azure.net.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetStorageAccounts",
        "description": "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.",
        "parameters": [
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of storage accounts along with a link to the next page of storage accounts.",
            "schema": {
              "$ref": "#/definitions/StorageListResult"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Storage account": {
            "$ref": "./examples/listStorageAccount.json"
          }
        }
      }
    },
    "/deletedstorage": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedStorageAccounts",
        "summary": "Lists deleted storage accounts for the specified vault.",
        "description": "The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.",
        "parameters": [
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.",
            "schema": {
              "$ref": "#/definitions/DeletedStorageListResult"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Deleted Storage Accounts": {
            "$ref": "./examples/listDeletedStorageAccount.json"
          }
        }
      }
    },
    "/deletedstorage/{storage-account-name}": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedStorageAccount",
        "summary": "Gets the specified deleted storage account.",
        "description": "The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted storage account and information on when it will be purged, and how to recover the deleted storage account.",
            "schema": {
              "$ref": "#/definitions/DeletedStorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Storage": {
            "$ref": "./examples/getDeletedStorageAccount.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "PurgeDeletedStorageAccount",
        "summary": "Permanently deletes the specified storage account.",
        "description": "The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content signaling that the storage account was purged forever."
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Purge Deleted Storage Account": {
            "$ref": "./examples/purgeStorageAccount.json"
          }
        }
      }
    },
    "/deletedstorage/{storage-account-name}/recover": {
      "post": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "RecoverDeletedStorageAccount",
        "summary": "Recovers the deleted storage account.",
        "description": "Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A storage bundle of the original storage account and its attributes.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Recover Deleted Storage Account": {
            "$ref": "./examples/recoverStorageAccount.json"
          }
        }
      }
    },
    "/storage/{storage-account-name}/backup": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "BackupStorageAccount",
        "summary": "Backs up the specified storage account.",
        "description": "Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backup blob containing the backed up storage account.",
            "schema": {
              "$ref": "#/definitions/BackupStorageResult"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Backup Storage Account": {
            "$ref": "./examples/backupStorageAccount.json"
          }
        }
      }
    },
    "/storage/restore": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "RestoreStorageAccount",
        "summary": "Restores a backed up storage account to a vault.",
        "description": "Restores a backed up storage account to a vault. This operation requires the storage/restore permission.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/StorageRestoreParameters"
            },
            "description": "The parameters to restore the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Restored storage account bundle in the vault.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Restore Storage Account": {
            "$ref": "./examples/restoreStorageAccount.json"
          }
        }
      }
    },
    "/storage/{storage-account-name}": {
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "DeleteStorageAccount",
        "description": "Deletes a storage account. This operation requires the storage/delete permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted storage account and information on when the storage account will be deleted, and how to recover the deleted storage account.",
            "schema": {
              "$ref": "#/definitions/DeletedStorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Storage account": {
            "$ref": "./examples/deleteStorageAccount.json"
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetStorageAccount",
        "description": "Gets information about a specified storage account. This operation requires the storage/get permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved storage account.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Storage account": {
            "$ref": "./examples/getStorageAccount.json"
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "SetStorageAccount",
        "description": "Creates or updates a new storage account. This operation requires the storage/set permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCreateParameters"
            },
            "description": "The parameters to create a storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created storage account.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Set Storage account": {
            "$ref": "./examples/setStorageAccount.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "UpdateStorageAccount",
        "description": "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountUpdateParameters"
            },
            "description": "The parameters to update a storage account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated storage account.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Update Storage account": {
            "$ref": "./examples/updateStorageAccount.json"
          }
        }
      }
    },
    "/storage/{storage-account-name}/regeneratekey": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "RegenerateStorageAccountKey",
        "description": "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountRegenerteKeyParameters"
            },
            "description": "The parameters to regenerate storage account key."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated storage account.",
            "schema": {
              "$ref": "#/definitions/StorageBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate Storage account key": {
            "$ref": "./examples/regenerateStorageAccountKey.json"
          }
        }
      }
    },
    "/storage/{storage-account-name}/sas": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetSasDefinitions",
        "description": "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.",
            "schema": {
              "$ref": "#/definitions/SasDefinitionListResult"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Storage Sas Definition": {
            "$ref": "./examples/listStorageSasDefinition.json"
          }
        }
      }
    },
    "/deletedstorage/{storage-account-name}/sas": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedSasDefinitions",
        "summary": "Lists deleted SAS definitions for the specified vault and storage account.",
        "description": "The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of deleted SAS definitions for the storage account, along with a link to the next page of deleted SAS definitions.",
            "schema": {
              "$ref": "#/definitions/DeletedSasDefinitionListResult"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Deleted Storage Sas Definitions": {
            "$ref": "./examples/listDeletedStorageSasDefinition.json"
          }
        }
      }
    },
    "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedSasDefinition",
        "summary": "Gets the specified deleted sas definition.",
        "description": "The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted SAS definition and information on when the it will be purged, and how to recover the deleted SAS definition.",
            "schema": {
              "$ref": "#/definitions/DeletedSasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Storage Sas Definition": {
            "$ref": "./examples/getDeletedStorageSasDefinition.json"
          }
        }
      }
    },
    "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover": {
      "post": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "RecoverDeletedSasDefinition",
        "summary": "Recovers the deleted SAS definition.",
        "description": "Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A SAS definition bundle of the original SAS definition and its attributes.",
            "schema": {
              "$ref": "#/definitions/SasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Recover Deleted Storage Sas Definition": {
            "$ref": "./examples/recoverStorageSasDefinition.json"
          }
        }
      }
    },
    "/storage/{storage-account-name}/sas/{sas-definition-name}": {
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "DeleteSasDefinition",
        "description": "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted SAS definition and information on when the SAS definition will be deleted, and how to recover the deleted SAS definition.",
            "schema": {
              "$ref": "#/definitions/DeletedSasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Storage Sas Definition": {
            "$ref": "./examples/deleteStorageSasDefinition.json"
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetSasDefinition",
        "description": "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved SAS definition.",
            "schema": {
              "$ref": "#/definitions/SasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Storage Sas Definition": {
            "$ref": "./examples/getStorageSasDefinition.json"
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "SetSasDefinition",
        "description": "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/SasDefinitionCreateParameters"
            },
            "description": "The parameters to create a SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created SAS definition.",
            "schema": {
              "$ref": "#/definitions/SasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Set Storage Sas definition": {
            "$ref": "./examples/setStorageSasDefinition.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "UpdateSasDefinition",
        "description": "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/SasDefinitionUpdateParameters"
            },
            "description": "The parameters to update a SAS definition."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated SAS definition.",
            "schema": {
              "$ref": "#/definitions/SasDefinitionBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Update Storage Sas definition": {
            "$ref": "./examples/updateStorageSasDefinition.json"
          }
        }
      }
    }
  },
  "definitions": {
    "StorageRestoreParameters": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "storageBundleBackup",
          "format": "base64url",
          "description": "The backup blob associated with a storage account."
        }
      },
      "description": "The secret restore parameters.",
      "required": [
        "value"
      ]
    },
    "StorageAccountAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "the enabled state of the object."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        },
        "recoverableDays": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription",
            "CustomizedRecoverable+Purgeable",
            "CustomizedRecoverable",
            "CustomizedRecoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Purgeable",
                "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
              },
              {
                "value": "Recoverable+Purgeable",
                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
              },
              {
                "value": "Recoverable",
                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
              },
              {
                "value": "Recoverable+ProtectedSubscription",
                "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
              },
              {
                "value": "CustomizedRecoverable+Purgeable",
                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
              },
              {
                "value": "CustomizedRecoverable",
                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
              },
              {
                "value": "CustomizedRecoverable+ProtectedSubscription",
                "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
              }
            ]
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The storage account management attributes."
    },
    "StorageBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The storage account id.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The storage account resource id.",
          "readOnly": true
        },
        "activeKeyName": {
          "type": "string",
          "description": "The current active storage account key name.",
          "readOnly": true
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user.",
          "readOnly": true
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The storage account attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs",
          "readOnly": true
        }
      },
      "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
    },
    "DeletedStorageBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/StorageBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted storage account."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account was deleted, in UTC"
        }
      },
      "description": "A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "StorageAccountCreateParameters": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Storage account resource id."
        },
        "activeKeyName": {
          "type": "string",
          "description": "Current active storage account key name."
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user."
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format."
        },
        "attributes": {
          "x-ms-client-name": "StorageAccountAttributes",
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The attributes of the storage account."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The storage account create parameters.",
      "required": [
        "resourceId",
        "activeKeyName",
        "autoRegenerateKey"
      ]
    },
    "StorageAccountUpdateParameters": {
      "properties": {
        "activeKeyName": {
          "type": "string",
          "description": "The current active storage account key name."
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user."
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format."
        },
        "attributes": {
          "x-ms-client-name": "StorageAccountAttributes",
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The attributes of the storage account."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The storage account update parameters."
    },
    "StorageAccountRegenerteKeyParameters": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The storage account key name."
        }
      },
      "description": "The storage account key regenerate parameters.",
      "required": [
        "keyName"
      ]
    },
    "StorageAccountItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Storage identifier.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Storage account resource Id.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The storage account management attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs.",
          "readOnly": true
        }
      },
      "description": "The storage account item containing storage account metadata."
    },
    "DeletedStorageAccountItem": {
      "allOf": [
        {
          "$ref": "#/definitions/StorageAccountItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted storage account."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account was deleted, in UTC"
        }
      },
      "description": "The deleted storage account item containing metadata about the deleted storage account."
    },
    "StorageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of storage accounts in the key vault along with a link to the next page of storage accounts."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of storage accounts."
        }
      },
      "description": "The storage accounts list result."
    },
    "DeletedStorageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedStorageAccountItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of the deleted storage accounts in the vault along with a link to the next page of deleted storage accounts"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted storage accounts."
        }
      },
      "description": "The deleted storage account list result"
    },
    "SasDefinitionAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "the enabled state of the object."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        },
        "recoverableDays": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription",
            "CustomizedRecoverable+Purgeable",
            "CustomizedRecoverable",
            "CustomizedRecoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The SAS definition management attributes."
    },
    "SasDefinitionBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The SAS definition id.",
          "readOnly": true
        },
        "sid": {
          "x-ms-client-name": "SecretId",
          "type": "string",
          "description": "Storage account SAS definition secret id.",
          "readOnly": true
        },
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
          "readOnly": true
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The SAS definition attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs",
          "readOnly": true
        }
      },
      "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
    },
    "DeletedSasDefinitionBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/SasDefinitionBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition was deleted, in UTC"
        }
      },
      "description": "A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "SasDefinitionItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The storage SAS identifier.",
          "readOnly": true
        },
        "sid": {
          "x-ms-client-name": "SecretId",
          "type": "string",
          "description": "The storage account SAS definition secret id.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The SAS definition management attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs.",
          "readOnly": true
        }
      },
      "description": "The SAS definition item containing storage SAS definition metadata."
    },
    "DeletedSasDefinitionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/SasDefinitionItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition was deleted, in UTC"
        }
      },
      "description": "The deleted SAS definition item containing metadata about the deleted SAS definition."
    },
    "SasDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasDefinitionItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of SAS definitions."
        }
      },
      "description": "The storage account SAS definition list result."
    },
    "DeletedSasDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedSasDefinitionItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of the deleted SAS definitions in the vault along with a link to the next page of deleted sas definitions"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted SAS definitions."
        }
      },
      "description": "The deleted SAS definition list result"
    },
    "SasDefinitionCreateParameters": {
      "properties": {
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          }
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition."
        },
        "attributes": {
          "x-ms-client-name": "SasDefinitionAttributes",
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The attributes of the SAS definition."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The SAS definition create parameters.",
      "required": [
        "templateUri",
        "sasType",
        "validityPeriod"
      ]
    },
    "SasDefinitionUpdateParameters": {
      "properties": {
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          }
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition."
        },
        "attributes": {
          "x-ms-client-name": "SasDefinitionAttributes",
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The attributes of the SAS definition."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The SAS definition update parameters."
    },
    "BackupStorageResult": {
      "properties": {
        "value": {
          "type": "string",
          "format": "base64url",
          "readOnly": true,
          "description": "The backup blob containing the backed up storage account."
        }
      },
      "description": "The backup storage result, containing the backup blob."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}
