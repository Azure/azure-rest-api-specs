parameters:
  "service-dir":
    default: "sdk/keyvault"

emit:
  - "@azure-tools/typespec-autorest"

linter:
  extends:
    - "@azure-tools/typespec-azure-rulesets/data-plane"

options:
  "@azure-tools/typespec-autorest":
    # This library is meant for SDK generation only, so we don't want to actually emit Swaggers
    azure-resource-provider-folder: "data-plane"
    emitter-output-dir: "{project-root}/.."
    output-file: "{azure-resource-provider-folder}/Microsoft.KeyVault/{version-status}/{version}/administration.json"
  # Uncomment this line and add "@azure-tools/typespec-python" to your package.json to generate Python code
  "@azure-tools/typespec-python":
    flavor: azure
    "basic-setup-py": true
    "package-version": "4.5.0b1"
    "package-dir": "azure-keyvault-administration"
    "package-name": "azure-keyvault-administration"
    "output-path": "./azure/keyvault/administration/_generated"
  # Uncomment this line and add "@azure-tools/typespec-java" to your package.json to generate Java code
  # "@azure-tools/typespec-java": true
  # Uncomment this line and add "@azure-tools/typespec-csharp" to your package.json to generate C# code
  # "@azure-tools/typespec-csharp": true
  "@azure-tools/typespec-ts":
    package-dir: "keyvault-admin"
    generateMetadata: true
    generateTest: false
    src-folder: ""
    experimentalExtensibleEnums: true
    isModularLibrary: true
    packageDetails:
      name: "@azure/keyvault-admin"
      description: "Azure Key Vault Administration"
    flavor: azure
