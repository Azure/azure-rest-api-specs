{
  "swagger": "2.0",
  "info": {
    "version": "2016-10-01",
    "title": "StorSimpleManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Retrieves all the managers in a subscription.",
        "operationId": "Managers_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of StorSimple managers.",
            "schema": {
              "$ref": "#/definitions/ManagerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersList": {
            "$ref": "./examples/ManagersList.json"
          }
        }
      }
    },
    "/providers/Microsoft.StorSimple/operations": {
      "get": {
        "tags": [
          "AvailableProviderOperations"
        ],
        "description": "List of AvailableProviderOperations",
        "operationId": "AvailableProviderOperations_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailableProviderOperations"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Retrieves all the managers in a resource group.",
        "operationId": "Managers_ListByResourceGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of StorSimple managers.",
            "schema": {
              "$ref": "#/definitions/ManagerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListByResourceGroup": {
            "$ref": "./examples/ManagersListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the properties of the specified manager name.",
        "operationId": "Managers_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager.",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGet": {
            "$ref": "./examples/ManagersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "description": "Creates or updates the manager.",
        "operationId": "Managers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Manager",
            "in": "body",
            "description": "The manager.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully updated",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "201": {
            "description": "The StorSimple manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersCreateOrUpdate": {
            "$ref": "./examples/ManagersCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "description": "Deletes the manager.",
        "operationId": "Managers_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully deleted"
          },
          "204": {
            "description": "The StorSimple manager is already in a deleted state"
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersDelete": {
            "$ref": "./examples/ManagersDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "description": "Updates the StorSimple Manager.",
        "operationId": "Managers_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The manager update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerPatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully updated",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersUpdate": {
            "$ref": "./examples/ManagersUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Retrieves all the access control records in a manager.",
        "operationId": "AccessControlRecords_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of access control records.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecordList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "AccessControlRecordsListByManager": {
            "$ref": "./examples/AccessControlRecordsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Returns the properties of the specified access control record name.",
        "operationId": "AccessControlRecords_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "Name of access control record to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The access control record.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AccessControlRecordsGet": {
            "$ref": "./examples/AccessControlRecordsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Creates or Updates an access control record.",
        "operationId": "AccessControlRecords_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessControlRecord",
            "in": "body",
            "description": "The access control record to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the access control record.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the access control record."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AccessControlRecordsCreateOrUpdate": {
            "$ref": "./examples/AccessControlRecordsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Deletes the access control record.",
        "operationId": "AccessControlRecords_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the access control record."
          },
          "204": {
            "description": "Successfully deleted the access control record."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AccessControlRecordsDelete": {
            "$ref": "./examples/AccessControlRecordsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "description": "Retrieves all the alerts in a manager.",
        "operationId": "Alerts_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of alerts.",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/AlertFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AlertsListByManager": {
            "$ref": "./examples/AlertsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "description": "Retrieves all the backups in a manager.",
        "operationId": "Backups_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backups.",
            "schema": {
              "$ref": "#/definitions/BackupList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BackupsListByManager": {
            "$ref": "./examples/BackupsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/certificates/{certificateName}": {
      "put": {
        "tags": [
          "Managers"
        ],
        "description": "Upload Vault Cred Certificate.\r\nReturns UploadCertificateResponse",
        "operationId": "Managers_UploadRegistrationCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateName",
            "in": "path",
            "description": "Certificate Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadCertificateRequestrequest",
            "in": "body",
            "description": "UploadCertificateRequest Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadCertificateRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Upload Vault Certificate",
            "schema": {
              "$ref": "#/definitions/UploadCertificateResponse"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersUploadRegistrationCertificate": {
            "$ref": "./examples/ManagersUploadRegistrationCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "description": "Clear the alerts.",
        "operationId": "Alerts_Clear",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The clear alert request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClearAlertRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully cleared the alerts."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AlertsClear": {
            "$ref": "./examples/AlertsClear.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Retrieves all the devices in a manager.",
        "operationId": "Devices_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of devices.",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListByManager": {
            "$ref": "./examples/DevicesListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the properties of the specified device name.",
        "operationId": "Devices_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The device.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGet": {
            "$ref": "./examples/DevicesGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "description": "Deletes the device.",
        "operationId": "Devices_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the device."
          },
          "204": {
            "description": "Successfully deleted the device."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesDelete": {
            "$ref": "./examples/DevicesDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "description": "Patches the device.",
        "operationId": "Devices_Patch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "devicePatch",
            "in": "body",
            "description": "Patch representation of the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched the device.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "202": {
            "description": "Accepted the request to patch the device."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesPatch": {
            "$ref": "./examples/DevicesPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the alert settings of the specified device name.",
        "operationId": "Devices_GetAlertSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The alert settings.",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGetAlertSettings": {
            "$ref": "./examples/DevicesGetAlertSettings.json"
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "description": "Creates or updates the alert settings",
        "operationId": "Devices_CreateOrUpdateAlertSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "alertSettings",
            "in": "body",
            "description": "The alert settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the network settings.",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the network settings."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesCreateOrUpdateAlertSettings": {
            "$ref": "./examples/DevicesCreateOrUpdateAlertSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "description": "Retrieves all the backups in a device. Can be used to get the backups for failover also.",
        "operationId": "Backups_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forFailover",
            "in": "query",
            "description": "Set to true if you need backups which can be used for failover.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backups.",
            "schema": {
              "$ref": "#/definitions/BackupList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BackupsListByDevice": {
            "$ref": "./examples/BackupsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}": {
      "delete": {
        "tags": [
          "Backups"
        ],
        "description": "Deletes the backup.",
        "operationId": "Backups_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup."
          },
          "204": {
            "description": "Successfully deleted the backup."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupsDelete": {
            "$ref": "./examples/BackupsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone": {
      "post": {
        "tags": [
          "Backups"
        ],
        "description": "Clones the given backup element to a new disk or share with given details.",
        "operationId": "Backups_Clone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "elementName",
            "in": "path",
            "description": "The backup element name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneRequest",
            "in": "body",
            "description": "The clone request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cloned."
          },
          "202": {
            "description": "Accepted the request to clone."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupsClone": {
            "$ref": "./examples/BackupsClone.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "description": "Retrieves all the backup schedule groups in a device.",
        "operationId": "BackupScheduleGroups_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backup schedule groups.",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroupList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "BackupScheduleGroupsListByDevice": {
            "$ref": "./examples/BackupScheduleGroupsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}": {
      "get": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "description": "Returns the properties of the specified backup schedule group name.",
        "operationId": "BackupScheduleGroups_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backup schedule group.",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "BackupScheduleGroupsGet": {
            "$ref": "./examples/BackupScheduleGroupsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "description": "Creates or Updates the backup schedule Group.",
        "operationId": "BackupScheduleGroups_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroup",
            "in": "body",
            "description": "The schedule group to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the backup schedule group.",
            "schema": {
              "$ref": "#/definitions/BackupScheduleGroup"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the backup schedule group."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupScheduleGroupsCreateOrUpdate": {
            "$ref": "./examples/BackupScheduleGroupsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BackupScheduleGroups"
        ],
        "description": "Deletes the backup schedule group.",
        "operationId": "BackupScheduleGroups_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleGroupName",
            "in": "path",
            "description": "The name of the schedule group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup schedule group."
          },
          "204": {
            "description": "Successfully deleted the backup schedule group."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupScheduleGroupsDelete": {
            "$ref": "./examples/BackupScheduleGroupsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings": {
      "get": {
        "tags": [
          "ChapSettings"
        ],
        "description": "Retrieves all the chap settings in a device.",
        "operationId": "ChapSettings_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of chap settings.",
            "schema": {
              "$ref": "#/definitions/ChapSettingsList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ChapSettingsListByDevice": {
            "$ref": "./examples/ChapSettingsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}": {
      "get": {
        "tags": [
          "ChapSettings"
        ],
        "description": "Returns the properties of the specified chap setting name.",
        "operationId": "ChapSettings_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The user name of chap to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The chap setting.",
            "schema": {
              "$ref": "#/definitions/ChapSettings"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ChapSettingsGet": {
            "$ref": "./examples/ChapSettingsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ChapSettings"
        ],
        "description": "Creates or updates the chap setting.",
        "operationId": "ChapSettings_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The chap user name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapSetting",
            "in": "body",
            "description": "The chap setting to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChapSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the chap setting.",
            "schema": {
              "$ref": "#/definitions/ChapSettings"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the chap setting."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ChapSettingsCreateOrUpdate": {
            "$ref": "./examples/ChapSettingsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ChapSettings"
        ],
        "description": "Deletes the chap setting.",
        "operationId": "ChapSettings_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chapUserName",
            "in": "path",
            "description": "The chap user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the chap setting."
          },
          "204": {
            "description": "Successfully deleted the chap setting."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ChapSettingsDelete": {
            "$ref": "./examples/ChapSettingsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Deactivates the device.",
        "operationId": "Devices_Deactivate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to deactivate the device."
          },
          "204": {
            "description": "Successfully deactivated the device."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesDeactivate": {
            "$ref": "./examples/DevicesDeactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/disks": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Retrieves all the iSCSI disks in a device.",
        "operationId": "IscsiDisks_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of iSCSI disks.",
            "schema": {
              "$ref": "#/definitions/ISCSIDiskList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiDisksListByDevice": {
            "$ref": "./examples/IscsiDisksListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/download": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Downloads updates on the device.",
        "operationId": "Devices_DownloadUpdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to download updates."
          },
          "204": {
            "description": "Successfully downloaded updates."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesDownloadUpdates": {
            "$ref": "./examples/DevicesDownloadUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failover": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Fails over the device to another device.",
        "operationId": "Devices_Failover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverRequest",
            "in": "body",
            "description": "The failover request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to failover the device."
          },
          "204": {
            "description": "Successfully completed failover of the device."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesFailover": {
            "$ref": "./examples/DevicesFailover.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failoverTargets": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Retrieves all the devices which can be used as failover targets for the given device.",
        "operationId": "Devices_ListFailoverTarget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of devices for failover.",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListFailoverTarget": {
            "$ref": "./examples/DevicesListFailoverTarget.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "description": "Retrieves all the file servers in a device.",
        "operationId": "FileServers_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of file servers.",
            "schema": {
              "$ref": "#/definitions/FileServerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileServersListByDevice": {
            "$ref": "./examples/FileServersListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "description": "Returns the properties of the specified file server name.",
        "operationId": "FileServers_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The file server.",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "FileServersGet": {
            "$ref": "./examples/FileServersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FileServers"
        ],
        "description": "Creates or updates the file server.",
        "operationId": "FileServers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServer",
            "in": "body",
            "description": "The file server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the file server.",
            "schema": {
              "$ref": "#/definitions/FileServer"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the file server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "FileServersCreateOrUpdate": {
            "$ref": "./examples/FileServersCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "FileServers"
        ],
        "description": "Deletes the file server.",
        "operationId": "FileServers_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the file server."
          },
          "204": {
            "description": "Successfully deleted the file server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "FileServersDelete": {
            "$ref": "./examples/FileServersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup": {
      "post": {
        "tags": [
          "FileServers"
        ],
        "description": "Backup the file server now.",
        "operationId": "FileServers_BackupNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to backup the file server."
          },
          "204": {
            "description": "Successfully completed backup of the file server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "FileServersBackupNow": {
            "$ref": "./examples/FileServersBackupNow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "description": "Gets the file server metrics.",
        "operationId": "FileServers_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The name of the file server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileServersListMetrics": {
            "$ref": "./examples/FileServersListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "description": "Retrieves metric definitions of all metrics aggregated at the file server.",
        "operationId": "FileServers_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The name of the file server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileServersListMetricDefinition": {
            "$ref": "./examples/FileServersListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "description": "Retrieves all the file shares in a file server.",
        "operationId": "FileShares_ListByFileServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of file shares.",
            "schema": {
              "$ref": "#/definitions/FileShareList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileSharesListByFileServer": {
            "$ref": "./examples/FileSharesListByFileServer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "description": "Returns the properties of the specified file share name.",
        "operationId": "FileShares_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The file share.",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "FileSharesGet": {
            "$ref": "./examples/FileSharesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FileShares"
        ],
        "description": "Creates or updates the file share.",
        "operationId": "FileShares_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileShare",
            "in": "body",
            "description": "The file share.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the file share.",
            "schema": {
              "$ref": "#/definitions/FileShare"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the file share."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "FileSharesCreateOrUpdate": {
            "$ref": "./examples/FileSharesCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "FileShares"
        ],
        "description": "Deletes the file share.",
        "operationId": "FileShares_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the file share."
          },
          "204": {
            "description": "Successfully deleted the file share."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "FileSharesDelete": {
            "$ref": "./examples/FileSharesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "description": "Gets the file share metrics",
        "operationId": "FileShares_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileSharesListMetrics": {
            "$ref": "./examples/FileSharesListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "description": "Retrieves metric definitions of all metrics aggregated at the file share.",
        "operationId": "FileShares_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileServerName",
            "in": "path",
            "description": "The file server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The file share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileSharesListMetricDefinition": {
            "$ref": "./examples/FileSharesListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/install": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Installs the updates on the device.",
        "operationId": "Devices_InstallUpdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to install updates."
          },
          "204": {
            "description": "Successfully installed updates."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesInstallUpdates": {
            "$ref": "./examples/DevicesInstallUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Retrieves all the iSCSI in a device.",
        "operationId": "IscsiServers_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of iSCSI servers.",
            "schema": {
              "$ref": "#/definitions/ISCSIServerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiServersListByDevice": {
            "$ref": "./examples/IscsiServersListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Returns the properties of the specified iSCSI server name.",
        "operationId": "IscsiServers_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The iSCSI server.",
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "IscsiServersGet": {
            "$ref": "./examples/IscsiServersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Creates or updates the iSCSI server.",
        "operationId": "IscsiServers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServer",
            "in": "body",
            "description": "The iSCSI server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the iSCSI server.",
            "schema": {
              "$ref": "#/definitions/ISCSIServer"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the iSCSI server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IscsiServersCreateOrUpdate": {
            "$ref": "./examples/IscsiServersCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Deletes the iSCSI server.",
        "operationId": "IscsiServers_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the iSCSI server."
          },
          "204": {
            "description": "Successfully deleted the iSCSI server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IscsiServersDelete": {
            "$ref": "./examples/IscsiServersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup": {
      "post": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Backup the iSCSI server now.",
        "operationId": "IscsiServers_BackupNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to backup the iSCSI server."
          },
          "204": {
            "description": "Successfully completed backup of the iSCSI server."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IscsiServersBackupNow": {
            "$ref": "./examples/IscsiServersBackupNow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Retrieves all the disks in a iSCSI server.",
        "operationId": "IscsiDisks_ListByIscsiServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of iSCSI disks.",
            "schema": {
              "$ref": "#/definitions/ISCSIDiskList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiDisksListByIscsiServer": {
            "$ref": "./examples/IscsiDisksListByIscsiServer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Returns the properties of the specified iSCSI disk name.",
        "operationId": "IscsiDisks_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The iSCSI disk.",
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "IscsiDisksGet": {
            "$ref": "./examples/IscsiDisksGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Creates or updates the iSCSI disk.",
        "operationId": "IscsiDisks_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiDisk",
            "in": "body",
            "description": "The iSCSI disk.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the iSCSI disk.",
            "schema": {
              "$ref": "#/definitions/ISCSIDisk"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the iSCSI disk."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IscsiDisksCreateOrUpdate": {
            "$ref": "./examples/IscsiDisksCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Deletes the iSCSI disk.",
        "operationId": "IscsiDisks_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The disk name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the iSCSI disk."
          },
          "204": {
            "description": "Successfully deleted the iSCSI disk."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IscsiDisksDelete": {
            "$ref": "./examples/IscsiDisksDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Gets the iSCSI disk metrics",
        "operationId": "IscsiDisks_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The iSCSI disk name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiDisksListMetrics": {
            "$ref": "./examples/IscsiDisksListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions": {
      "get": {
        "tags": [
          "IscsiDisks"
        ],
        "description": "Retrieves metric definitions for all metric aggregated at the iSCSI disk.",
        "operationId": "IscsiDisks_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskName",
            "in": "path",
            "description": "The iSCSI disk name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiDisksListMetricDefinition": {
            "$ref": "./examples/IscsiDisksListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Gets the iSCSI server metrics",
        "operationId": "IscsiServers_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiServersListMetrics": {
            "$ref": "./examples/IscsiServersListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Retrieves metric definitions for all metrics aggregated at iSCSI server.",
        "operationId": "IscsiServers_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iscsiServerName",
            "in": "path",
            "description": "The iSCSI server name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiServersListMetricDefinition": {
            "$ref": "./examples/IscsiServersListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Retrieves all the jobs in a device.",
        "operationId": "Jobs_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of jobs.",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsListByDevice": {
            "$ref": "./examples/JobsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Returns the properties of the specified job name.",
        "operationId": "Jobs_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Retrieves the device metrics.",
        "operationId": "Devices_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the appliance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListMetrics": {
            "$ref": "./examples/DevicesListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Retrieves metric definition of all metrics aggregated at device.",
        "operationId": "Devices_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the appliance.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListMetricDefinition": {
            "$ref": "./examples/DevicesListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the network settings of the specified device name.",
        "operationId": "Devices_GetNetworkSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The network settings.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGetNetworkSettings": {
            "$ref": "./examples/DevicesGetNetworkSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Scans for updates on the device.",
        "operationId": "Devices_ScanForUpdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to scan for updates."
          },
          "204": {
            "description": "Successfully scanned for updates."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesScanForUpdates": {
            "$ref": "./examples/DevicesScanForUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Creates or updates the security settings.",
        "operationId": "Devices_CreateOrUpdateSecuritySettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securitySettings",
            "in": "body",
            "description": "The security settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the security settings."
          },
          "204": {
            "description": "Successfully updated security settings."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesCreateOrUpdateSecuritySettings": {
            "$ref": "./examples/DevicesCreateOrUpdateSecuritySettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "description": "Sends a test alert email.",
        "operationId": "Alerts_SendTestEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The send test alert email request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTestAlertEmailRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully sent the test email."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AlertsSendTestEmail": {
            "$ref": "./examples/AlertsSendTestEmail.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/shares": {
      "get": {
        "tags": [
          "FileShares"
        ],
        "description": "Retrieves all the file shares in a device.",
        "operationId": "FileShares_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of file shares.",
            "schema": {
              "$ref": "#/definitions/FileShareList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileSharesListByDevice": {
            "$ref": "./examples/FileSharesListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the time settings of the specified device name.",
        "operationId": "Devices_GetTimeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The time settings.",
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGetTimeSettings": {
            "$ref": "./examples/DevicesGetTimeSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the update summary of the specified device name.",
        "operationId": "Devices_GetUpdateSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The update summary.",
            "schema": {
              "$ref": "#/definitions/Updates"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGetUpdateSummary": {
            "$ref": "./examples/DevicesGetUpdateSummary.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the encryption settings of the manager.",
        "operationId": "Managers_GetEncryptionSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The encryption settings.",
            "schema": {
              "$ref": "#/definitions/EncryptionSettings"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetEncryptionSettings": {
            "$ref": "./examples/ManagersGetEncryptionSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the extended information of the specified manager name.",
        "operationId": "Managers_GetExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The manager extended information.",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetExtendedInfo": {
            "$ref": "./examples/ManagersGetExtendedInfo.json"
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "description": "Creates the extended info of the manager.",
        "operationId": "Managers_CreateExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The extended information on the manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersCreateExtendedInfo": {
            "$ref": "./examples/ManagersCreateExtendedInfo.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "description": "Deletes the extended info of the manager.",
        "operationId": "Managers_DeleteExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The extended information on the manager has been successfully deleted"
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersDeleteExtendedInfo": {
            "$ref": "./examples/ManagersDeleteExtendedInfo.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "description": "Updates the extended info of the manager.",
        "operationId": "Managers_UpdateExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ManagerExtendedInfo",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Pass the ETag of ExtendedInfo fetched from GET call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The extended information on the manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersUpdateExtendedInfo": {
            "$ref": "./examples/ManagersUpdateExtendedInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/fileservers": {
      "get": {
        "tags": [
          "FileServers"
        ],
        "description": "Retrieves all the file servers in a manager.",
        "operationId": "FileServers_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of file servers.",
            "schema": {
              "$ref": "#/definitions/FileServerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "FileServersListByManager": {
            "$ref": "./examples/FileServersListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/getEncryptionKey": {
      "post": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the symmetric encryption key of the manager.",
        "operationId": "Managers_GetEncryptionKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The encryption key.",
            "schema": {
              "$ref": "#/definitions/SymmetricEncryptedSecret"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetEncryptionKey": {
            "$ref": "./examples/ManagersGetEncryptionKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/iscsiservers": {
      "get": {
        "tags": [
          "IscsiServers"
        ],
        "description": "Retrieves all the iSCSI servers in a manager.",
        "operationId": "IscsiServers_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of iSCSI servers.",
            "schema": {
              "$ref": "#/definitions/ISCSIServerList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "IscsiServersListByManager": {
            "$ref": "./examples/IscsiServersListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Retrieves all the jobs in a manager.",
        "operationId": "Jobs_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of jobs.",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsListByManager": {
            "$ref": "./examples/JobsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Gets the  manager metrics",
        "operationId": "Managers_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListMetrics": {
            "$ref": "./examples/ManagersListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Retrieves metric definition of all metrics aggregated at manager.",
        "operationId": "Managers_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListMetricDefinition": {
            "$ref": "./examples/ManagersListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Retrieves all the storage account credentials in a manager.",
        "operationId": "StorageAccountCredentials_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of storage account credentials.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "StorageAccountCredentialsListByManager": {
            "$ref": "./examples/StorageAccountCredentialsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Returns the properties of the specified storage account credential name.",
        "operationId": "StorageAccountCredentials_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of storage account credential to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "StorageAccountCredentialsGet": {
            "$ref": "./examples/StorageAccountCredentialsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Creates or updates the storage account credential",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The credential name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccount",
            "in": "body",
            "description": "The storage account credential to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the storage account credential."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageAccountCredentialsCreateOrUpdate": {
            "$ref": "./examples/StorageAccountCredentialsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Deletes the storage account credential",
        "operationId": "StorageAccountCredentials_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "credentialName",
            "in": "path",
            "description": "The name of the storage account credential.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage account credential."
          },
          "204": {
            "description": "Successfully deleted the storage account credential."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageAccountCredentialsDelete": {
            "$ref": "./examples/StorageAccountCredentialsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "description": "Retrieves all the storage domains in a manager.",
        "operationId": "StorageDomains_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of storage domains.",
            "schema": {
              "$ref": "#/definitions/StorageDomainList"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "StorageDomainsListByManager": {
            "$ref": "./examples/StorageDomainsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}": {
      "get": {
        "tags": [
          "StorageDomains"
        ],
        "description": "Returns the properties of the specified storage domain name.",
        "operationId": "StorageDomains_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage domain.",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "StorageDomainsGet": {
            "$ref": "./examples/StorageDomainsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "StorageDomains"
        ],
        "description": "Creates or updates the storage domain.",
        "operationId": "StorageDomains_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageDomain",
            "in": "body",
            "description": "The storageDomain.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the storage domain.",
            "schema": {
              "$ref": "#/definitions/StorageDomain"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the storage domain."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageDomainsCreateOrUpdate": {
            "$ref": "./examples/StorageDomainsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDomains"
        ],
        "description": "Deletes the storage domain.",
        "operationId": "StorageDomains_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageDomainName",
            "in": "path",
            "description": "The storage domain name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage domain."
          },
          "204": {
            "description": "Successfully deleted the storage domain."
          },
          "default": {
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageDomainsDelete": {
            "$ref": "./examples/StorageDomainsDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessControlRecord": {
      "description": "The access control record",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessControlRecordProperties",
          "description": "Properties of AccessControlRecord",
          "x-ms-client-flatten": true
        }
      }
    },
    "AccessControlRecordList": {
      "description": "Collection of AccessControlRecords",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessControlRecord"
          }
        }
      }
    },
    "AccessControlRecordProperties": {
      "description": "Properties of access control record",
      "required": [
        "initiatorName"
      ],
      "type": "object",
      "properties": {
        "initiatorName": {
          "description": "The Iscsi initiator name (IQN)",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Alert class",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Properties of alert",
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertErrorDetails": {
      "description": "Error details for the alert",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error Message",
          "type": "string"
        },
        "occurences": {
          "format": "int32",
          "description": "Number of occurrences.",
          "type": "integer"
        }
      }
    },
    "AlertFilter": {
      "description": "Filters that can be specified on the alert",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the alert",
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "severity": {
          "description": "Severity of the alert",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "sourceType": {
          "description": "Source of the alert",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        },
        "sourceName": {
          "description": "Source name of the alert",
          "type": "string"
        },
        "appearedOnTime": {
          "format": "date-time",
          "description": "UTC time on which the alert appeared",
          "type": "string"
        }
      }
    },
    "AlertList": {
      "description": "Collection of Alerts",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "description": "Id of the next page of alerts",
          "type": "string"
        }
      }
    },
    "AlertProperties": {
      "description": "Properties of alert",
      "required": [
        "title",
        "scope",
        "alertType",
        "appearedAtTime",
        "appearedAtSourceTime",
        "source",
        "severity",
        "status"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Title of the alert",
          "type": "string"
        },
        "scope": {
          "description": "Device or Resource alert",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertScope",
            "modelAsString": false
          }
        },
        "alertType": {
          "description": "Type of the alert",
          "type": "string"
        },
        "appearedAtTime": {
          "format": "date-time",
          "description": "UTC time at which the alert appeared",
          "type": "string"
        },
        "appearedAtSourceTime": {
          "format": "date-time",
          "description": "UTC time at which the alert appeared on the source",
          "type": "string"
        },
        "clearedAtTime": {
          "format": "date-time",
          "description": "UTC time at which the alert got cleared",
          "type": "string"
        },
        "clearedAtSourceTime": {
          "format": "date-time",
          "description": "UTC time at which the alert was cleared on the source",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/AlertSource",
          "description": "Source at which the alert was cleared"
        },
        "recommendation": {
          "description": "Recommendation for acting on the alert",
          "type": "string"
        },
        "resolutionReason": {
          "description": "Reason for resolving the alert",
          "type": "string"
        },
        "severity": {
          "description": "Severity of the alert",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current status of the alert",
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails",
          "description": "ErrorDetails of the alert"
        },
        "detailedInformation": {
          "description": "Other information about the alert",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AlertSettings": {
      "description": "AlertSettings on the device which represents how alerts will be processed",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertSettingsProperties",
          "description": "Properties of AlertSettings",
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertSettingsProperties": {
      "description": "Class containing the properties of AlertSettings",
      "required": [
        "emailNotification",
        "notificationToServiceOwners",
        "alertNotificationCulture"
      ],
      "type": "object",
      "properties": {
        "emailNotification": {
          "description": "Value indicating whether user/admins will receive emails when an alert condition occurs on the system",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertEmailNotificationStatus",
            "modelAsString": false
          }
        },
        "notificationToServiceOwners": {
          "description": "Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServiceOwnersAlertNotificationStatus",
            "modelAsString": false
          }
        },
        "alertNotificationCulture": {
          "description": "Culture setting to be used while building alert emails. For eg: \"en-US\"",
          "type": "string"
        },
        "additionalRecipientEmailList": {
          "description": "List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlertSource": {
      "description": "source at which the alert can be raised",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the source.",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone.",
          "type": "string"
        },
        "alertSourceType": {
          "description": "Source type of the alert.",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        }
      }
    },
    "AsymmetricEncryptedSecret": {
      "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
      "required": [
        "value",
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
          "type": "string"
        },
        "encryptionCertificateThumbprint": {
          "description": "Thumbprint certificate that was used to encrypt \"Value\"",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "Algorithm used to encrypt \"Value\"",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        }
      }
    },
    "AvailableProviderOperation": {
      "description": "Class represents provider operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the operation being performed on this particular object\r\nReturn value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\nEg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n    Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/AvailableProviderOperationDisplay",
          "description": "Gets or sets Display information\r\nContains the localized display information for this particular operation/action"
        },
        "origin": {
          "description": "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/AvailableProviderOperationProperties",
          "description": "Gets or sets Properties\r\nReserved for future use",
          "x-ms-client-flatten": true
        }
      }
    },
    "AvailableProviderOperationDisplay": {
      "description": "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services.",
          "type": "string"
        },
        "resource": {
          "description": "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section.",
          "type": "string"
        },
        "operation": {
          "description": "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views.",
          "type": "string"
        }
      }
    },
    "AvailableProviderOperationProperties": {
      "description": "Class represents Properties in AvailableProviderOperations",
      "type": "object",
      "properties": {}
    },
    "AvailableProviderOperations": {
      "description": "Class for set of operations used for discovery of available provider operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableProviderOperation"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "Backup": {
      "description": "The backup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupProperties",
          "description": "Properties of backup",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupElement": {
      "description": "Class represents BackupElement",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupElementProperties",
          "description": "The Properties of backup element",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupElementProperties": {
      "description": "The backup element properties",
      "required": [
        "sizeInBytes",
        "endpointName",
        "dataPolicy"
      ],
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "description": "The size in bytes.",
          "type": "integer"
        },
        "endpointName": {
          "description": "The name of the endpoint.",
          "type": "string"
        },
        "dataPolicy": {
          "description": "The data policy of backed up endpoint.",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        }
      }
    },
    "BackupFilter": {
      "description": "Backup OData filter class",
      "type": "object",
      "properties": {
        "initiatedBy": {
          "description": "Gets or sets InitiatedBy",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InitiatedBy",
            "modelAsString": false
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Gets or sets CreatedTime",
          "type": "string"
        }
      }
    },
    "BackupList": {
      "description": "Collection of backups",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Backup"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "BackupProperties": {
      "description": "Class represents Backup properties",
      "required": [
        "sizeInBytes",
        "initiatedBy",
        "deviceId",
        "elements"
      ],
      "type": "object",
      "properties": {
        "targetId": {
          "description": "The path id of the target FileServer or IscsiServer for which the backup was taken.",
          "type": "string"
        },
        "targetType": {
          "description": "Type of target, FileServer or IscsiServer",
          "type": "string"
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "The backup size in bytes.",
          "type": "integer"
        },
        "createdTime": {
          "format": "date-time",
          "description": "The time when the backup was created.",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "The time when the backup will expire.",
          "type": "string"
        },
        "initiatedBy": {
          "description": "Indicates how the backup was initiated \"Manual | Scheduled\".",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InitiatedBy",
            "modelAsString": false
          }
        },
        "deviceId": {
          "description": "The Device Identifier.",
          "type": "string"
        },
        "elements": {
          "description": "The backup elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupElement"
          }
        }
      }
    },
    "BackupScheduleGroup": {
      "description": "The Backup Schedule Group",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupScheduleGroupProperties",
          "description": "Properties of BackupScheduleGroup",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupScheduleGroupList": {
      "description": "The list response of backup schedule groups",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupScheduleGroup"
          }
        }
      }
    },
    "BackupScheduleGroupProperties": {
      "description": "The Backup Schedule Group Properties",
      "required": [
        "startTime"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "#/definitions/Time",
          "description": "The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules."
        }
      }
    },
    "BaseModel": {
      "description": "Base class for models",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ChapProperties": {
      "description": "Chap properties",
      "required": [
        "password"
      ],
      "type": "object",
      "properties": {
        "password": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The chap password."
        }
      }
    },
    "ChapSettings": {
      "description": "Challenge-Handshake Authentication Protocol (CHAP) setting",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ChapProperties",
          "description": "Chap properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ChapSettingsList": {
      "description": "Collection of Chap setting entities",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The chap settings entity collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChapSettings"
          }
        }
      }
    },
    "ClearAlertRequest": {
      "description": "Request for clearing the alert",
      "required": [
        "alerts"
      ],
      "type": "object",
      "properties": {
        "resolutionMessage": {
          "description": "Resolution message while clearing the request",
          "type": "string"
        },
        "alerts": {
          "description": "List of alert Ids to be cleared",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CloneRequest": {
      "description": "Clone Job Request Model.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloneRequestProperties",
          "description": "CloneJob Properties are encapsulated in this object.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloneRequestProperties": {
      "description": "Properties of CloneRequest",
      "required": [
        "targetDeviceId",
        "targetAccessPointId",
        "newEndpointName"
      ],
      "type": "object",
      "properties": {
        "targetDeviceId": {
          "description": "DeviceId of the device which will act as the Clone target",
          "type": "string"
        },
        "targetAccessPointId": {
          "description": "Access point Id on which clone job will performed.",
          "type": "string"
        },
        "newEndpointName": {
          "description": "Name of new endpoint which will created as part of clone job.",
          "type": "string"
        },
        "share": {
          "$ref": "#/definitions/FileShare",
          "description": "Share Object."
        },
        "disk": {
          "$ref": "#/definitions/ISCSIDisk",
          "description": "Disk Object"
        }
      }
    },
    "Device": {
      "description": "Represents a StorSimple device object along with its properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProperties",
          "description": "Collection of properties for the device",
          "x-ms-client-flatten": true
        }
      }
    },
    "DeviceDetails": {
      "description": "Class containing more granular details about the device",
      "type": "object",
      "properties": {
        "endpointCount": {
          "format": "int32",
          "description": "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
          "type": "integer"
        },
        "totalStorageInBytes": {
          "format": "int64",
          "description": "Total storage available on the device in bytes.",
          "type": "integer"
        },
        "totalLocalStorageInBytes": {
          "format": "int64",
          "description": "Total local storage capacity in device in bytes.",
          "type": "integer"
        },
        "provisionedStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned on the device including both local and cloud",
          "type": "integer"
        },
        "provisionedLocalStorageInBytes": {
          "format": "int64",
          "description": "Storage in bytes that has been provisioned locally on the device",
          "type": "integer"
        },
        "usingStorageInBytes": {
          "format": "int64",
          "description": "Storage that is being currently used in bytes including both local and cloud",
          "type": "integer"
        },
        "usingLocalStorageInBytes": {
          "format": "int64",
          "description": "Local Storage that is being currently used in bytes",
          "type": "integer"
        },
        "totalBackupSizeInBytes": {
          "format": "int64",
          "description": "Total size taken up by backups in bytes",
          "type": "integer"
        },
        "availableStorageInBytes": {
          "format": "int64",
          "description": "Total pending available storage on the device in bytes",
          "type": "integer"
        },
        "availableLocalStorageInBytes": {
          "format": "int64",
          "description": "Local pending storage available on the device in bytes",
          "type": "integer"
        }
      }
    },
    "DeviceList": {
      "description": "Collection of Devices",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        }
      }
    },
    "DevicePatch": {
      "description": "Class that represents the Input for the PATCH call on Device. Currently the only patchable property on device is \"DeviceDescription\"",
      "type": "object",
      "properties": {
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        }
      }
    },
    "DeviceProperties": {
      "description": "Encases all the properties of the Device",
      "type": "object",
      "properties": {
        "activationTime": {
          "format": "date-time",
          "description": "The UTC time at which the device was activated",
          "type": "string"
        },
        "allowedDeviceOperations": {
          "description": "Operations that are allowed on the device based on its current state",
          "type": "array",
          "items": {
            "enum": [
              "None",
              "Delete",
              "DeleteWithWarning",
              "DRSource",
              "DRTarget",
              "Browsable",
              "ReadOnlyForDR",
              "Deactivate"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DeviceOperation",
              "modelAsString": false
            }
          }
        },
        "culture": {
          "description": "Language culture setting on the device. For eg: \"en-US\"",
          "type": "string"
        },
        "deviceCapabilities": {
          "description": "Device can be configured either as FileServer or IscsiServer",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "FileServer",
              "IscsiServer"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "SupportedDeviceCapabilities",
              "modelAsString": false
            }
          }
        },
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        },
        "domainName": {
          "description": "Fully qualified name of the domain to which the device is attached",
          "type": "string"
        },
        "deviceSoftwareVersion": {
          "description": "Version number of the software running on the device",
          "type": "string"
        },
        "friendlySoftwareName": {
          "description": "Friendly name for the software version",
          "type": "string"
        },
        "deviceConfigurationStatus": {
          "description": "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete, \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending",
          "enum": [
            "Complete",
            "Pending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceConfigurationStatus",
            "modelAsString": false
          }
        },
        "modelDescription": {
          "description": "Name of the device model",
          "type": "string"
        },
        "status": {
          "description": "Current status of the device",
          "enum": [
            "Unknown",
            "Online",
            "Offline",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Deleted",
            "ReadyToSetup",
            "Deactivated",
            "Deactivating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": false
          }
        },
        "type": {
          "description": "Type of the device",
          "enum": [
            "Invalid",
            "Appliance",
            "VirtualAppliance",
            "Series9000OnPremVirtualAppliance",
            "Series9000VirtualAppliance",
            "Series9000PhysicalAppliance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": false
          }
        },
        "details": {
          "$ref": "#/definitions/DeviceDetails",
          "description": "subclass containing more storage-related information about the device. This field will be populated only if the get call is made with $expand = details."
        }
      }
    },
    "EncryptionSettings": {
      "description": "The EncryptionSettings",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EncryptionSettingsProperties",
          "description": "Properties of the EncryptionSettings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EncryptionSettingsProperties": {
      "description": "The properties of EncryptionSettings",
      "required": [
        "encryptionStatus",
        "keyRolloverStatus"
      ],
      "type": "object",
      "properties": {
        "encryptionStatus": {
          "description": "The encryption status which indicates if encryption is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        },
        "keyRolloverStatus": {
          "description": "The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyRolloverStatus",
            "modelAsString": false
          }
        }
      }
    },
    "Error": {
      "required": [
        "errorCode",
        "message"
      ],
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/Message"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      }
    },
    "FailoverRequest": {
      "description": "The Failover request object.",
      "type": "object",
      "properties": {
        "accesspointIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetDeviceId": {
          "type": "string"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "keepSourceDevice": {
          "type": "boolean"
        }
      }
    },
    "FileServer": {
      "description": "The file server.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileServerProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FileServerList": {
      "description": "Collection of file servers",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileServer"
          }
        }
      }
    },
    "FileServerProperties": {
      "description": "The file server properties.",
      "required": [
        "domainName",
        "storageDomainId",
        "backupScheduleGroupId"
      ],
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Domain of the file server",
          "type": "string"
        },
        "storageDomainId": {
          "description": "The storage domain id.",
          "type": "string"
        },
        "backupScheduleGroupId": {
          "description": "The backup policy id.",
          "type": "string"
        },
        "description": {
          "description": "The description of the file server",
          "type": "string"
        }
      }
    },
    "FileShare": {
      "description": "The File Share.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileShareProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FileShareList": {
      "description": "Collection of file shares",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileShare"
          }
        }
      }
    },
    "FileShareProperties": {
      "description": "The File Share.",
      "required": [
        "shareStatus",
        "dataPolicy",
        "adminUser",
        "provisionedCapacityInBytes",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for file share",
          "type": "string"
        },
        "shareStatus": {
          "description": "The Share Status",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareStatus",
            "modelAsString": false
          }
        },
        "dataPolicy": {
          "description": "The data policy",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        },
        "adminUser": {
          "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
          "type": "string"
        },
        "provisionedCapacityInBytes": {
          "format": "int64",
          "description": "The total provisioned capacity in Bytes",
          "type": "integer"
        },
        "usedCapacityInBytes": {
          "format": "int64",
          "description": "The used capacity in Bytes.",
          "type": "integer",
          "readOnly": true
        },
        "localUsedCapacityInBytes": {
          "format": "int64",
          "description": "The local used capacity in Bytes.",
          "type": "integer",
          "readOnly": true
        },
        "monitoringStatus": {
          "description": "The monitoring status",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        }
      }
    },
    "IPConfig": {
      "description": "Details related to the IP address configuration",
      "required": [
        "ipAddress",
        "gateway"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IP address of the network adapter, either ipv4 or ipv6.",
          "type": "string"
        },
        "prefixLength": {
          "format": "int32",
          "description": "The prefix length of the network adapter.",
          "type": "integer"
        },
        "gateway": {
          "description": "The gateway of the network adapter.",
          "type": "string"
        }
      }
    },
    "ISCSIDisk": {
      "description": "The iSCSI disk.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ISCSIDiskProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ISCSIDiskList": {
      "description": "Collection of Iscsi disk",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISCSIDisk"
          }
        }
      }
    },
    "ISCSIDiskProperties": {
      "description": "The iSCSI disk properties.",
      "required": [
        "diskStatus",
        "accessControlRecords",
        "dataPolicy",
        "provisionedCapacityInBytes",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "The description.",
          "type": "string"
        },
        "diskStatus": {
          "description": "The disk status.",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskStatus",
            "modelAsString": false
          }
        },
        "accessControlRecords": {
          "description": "The access control records.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataPolicy": {
          "description": "The data policy.",
          "enum": [
            "Invalid",
            "Local",
            "Tiered",
            "Cloud"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": false
          }
        },
        "provisionedCapacityInBytes": {
          "format": "int64",
          "description": "The provisioned capacity in bytes.",
          "type": "integer"
        },
        "usedCapacityInBytes": {
          "format": "int64",
          "description": "The used capacity in bytes.",
          "type": "integer",
          "readOnly": true
        },
        "localUsedCapacityInBytes": {
          "format": "int64",
          "description": "The local used capacity in bytes.",
          "type": "integer",
          "readOnly": true
        },
        "monitoringStatus": {
          "description": "The monitoring.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        }
      }
    },
    "ISCSIServer": {
      "description": "The iSCSI server.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ISCSIServerProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ISCSIServerList": {
      "description": "Collection of Iscsi servers",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISCSIServer"
          }
        }
      }
    },
    "ISCSIServerProperties": {
      "description": "The iSCSI server properties.",
      "required": [
        "storageDomainId",
        "backupScheduleGroupId"
      ],
      "type": "object",
      "properties": {
        "storageDomainId": {
          "description": "The storage domain id.",
          "type": "string"
        },
        "backupScheduleGroupId": {
          "description": "The backup policy id.",
          "type": "string"
        },
        "description": {
          "description": "The description.",
          "type": "string"
        },
        "chapId": {
          "description": "The chap id.",
          "type": "string"
        },
        "reverseChapId": {
          "description": "The reverse chap id.",
          "type": "string"
        }
      }
    },
    "Item": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Job": {
      "description": "The Job.",
      "required": [
        "status",
        "percentComplete"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "status": {
          "description": "Current status of the job",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The UTC time at which the job was started",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The UTC time at which the job completed",
          "type": "string"
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the job that is already complete",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "The Error details."
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Other properties of the job",
          "x-ms-client-flatten": true
        }
      }
    },
    "JobErrorDetails": {
      "description": "The job error information containing List of JobErrorItem.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "errorDetails": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          }
        },
        "code": {
          "description": "The code intended for programmatic access",
          "type": "string"
        },
        "message": {
          "description": "The message intended to describe the error in detail",
          "type": "string"
        }
      }
    },
    "JobErrorItem": {
      "description": "The job error items.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "recommendations": {
          "description": "The recommended actions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "The code intended for programmatic access",
          "type": "string"
        },
        "message": {
          "description": "The message intended to describe the error in detail",
          "type": "string"
        }
      }
    },
    "JobFilter": {
      "description": "Filters that can be specified for the job",
      "required": [
        "jobType",
        "status"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "The job type.",
          "enum": [
            "Backup",
            "Clone",
            "Failover",
            "DownloadUpdates",
            "InstallUpdates"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "The job status.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time of the job.",
          "type": "string"
        }
      }
    },
    "JobList": {
      "description": "Collection of jobs",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "JobProperties": {
      "description": "properties for the job",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "Type of the job",
          "enum": [
            "Backup",
            "Clone",
            "Failover",
            "DownloadUpdates",
            "InstallUpdates"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "targetId": {
          "description": "Id of the object that is created by the job",
          "type": "string"
        },
        "entityId": {
          "description": "The entity identifier for which the job ran.",
          "type": "string"
        },
        "entityType": {
          "description": "The entity type for which the job ran.",
          "type": "string"
        },
        "jobStages": {
          "description": "The job stages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStage"
          }
        },
        "deviceId": {
          "description": "The device id in which the job is currently running",
          "type": "string"
        },
        "isCancellable": {
          "description": "Represents whether the job is cancellable or not",
          "type": "boolean"
        },
        "stats": {
          "$ref": "#/definitions/JobStats",
          "description": "stats properties for the job"
        },
        "targetType": {
          "description": "The target type of the backup.",
          "enum": [
            "FileServer",
            "DiskServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TargetType",
            "modelAsString": false
          }
        },
        "sourceDeviceId": {
          "description": "The source device identifier of the failover job.",
          "type": "string"
        },
        "backupPointInTime": {
          "format": "date-time",
          "description": "The time of the backup used for the failover.",
          "type": "string"
        },
        "downloadProgress": {
          "$ref": "#/definitions/UpdateDownloadProgress",
          "description": "The download progress."
        },
        "installProgress": {
          "$ref": "#/definitions/UpdateInstallProgress",
          "description": "The install progress."
        }
      }
    },
    "JobStage": {
      "description": "Contains details about the multiple job stages of a job",
      "required": [
        "stageStatus"
      ],
      "type": "object",
      "properties": {
        "message": {
          "description": "The message of the job stage.",
          "type": "string"
        },
        "stageStatus": {
          "description": "The stage status.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "detail": {
          "description": "The details of the stage.",
          "type": "string"
        },
        "errorCode": {
          "description": "The error code of the stage if any.",
          "type": "string"
        }
      }
    },
    "JobStats": {
      "description": "Stats that are available for all jobs in common",
      "type": "object",
      "properties": {
        "completedWorkItemCount": {
          "format": "int32",
          "description": "Completed work item count.",
          "type": "integer"
        },
        "totalWorkItemCount": {
          "format": "int32",
          "description": "Total work item count.",
          "type": "integer"
        },
        "estimatedTimeRemaining": {
          "format": "int32",
          "description": "The estimated time remaining.",
          "type": "integer"
        }
      }
    },
    "Manager": {
      "description": "The StorSimple Manager",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerProperties",
          "description": "List of properties of the Manager",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Manager",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfo": {
      "description": "The extended info of the manager.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerExtendedInfoProperties",
          "description": "The extended info properties.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "ETag of the Resource",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfoProperties": {
      "description": "Properties of the ManagerExtendedInfo",
      "required": [
        "integrityKey",
        "algorithm"
      ],
      "type": "object",
      "properties": {
        "version": {
          "description": "Represents the version of the ExtendedInfo object being persisted",
          "type": "string"
        },
        "integrityKey": {
          "description": "Represents the CIK of the resource",
          "type": "string"
        },
        "encryptionKey": {
          "description": "Represents the CEK of the resource",
          "type": "string"
        },
        "encryptionKeyThumbprint": {
          "description": "Represents the Cert thumbprint that was used to encrypt the CEK",
          "type": "string"
        },
        "portalCertificateThumbprint": {
          "description": "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
          "type": "string"
        },
        "algorithm": {
          "description": "Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used",
          "type": "string"
        }
      }
    },
    "ManagerIntrinsicSettings": {
      "description": "Intrinsic settings which refers to the type of the StorSimple manager",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Refers to the type of the StorSimple Manager",
          "enum": [
            "GardaV1",
            "HelsinkiV1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerType",
            "modelAsString": false
          }
        }
      }
    },
    "ManagerList": {
      "description": "List of StorSimple Managers under a particular resourceGroup",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Managers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Manager"
          }
        }
      }
    },
    "ManagerPatch": {
      "description": "The StorSimple Manager patch.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags attached to the StorSimple Manager.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagerProperties": {
      "description": "The properties of the Manager",
      "type": "object",
      "properties": {
        "cisIntrinsicSettings": {
          "$ref": "#/definitions/ManagerIntrinsicSettings",
          "description": "Specifies if the Manager is Garda or Helsinki"
        },
        "sku": {
          "$ref": "#/definitions/ManagerSku",
          "description": "Specifies the Sku"
        },
        "provisioningState": {
          "description": "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagerSku": {
      "description": "The Sku.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Refers to the sku name which should be \"Standard\"",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerSkuType",
            "modelAsString": false
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "MetricAvailablity": {
      "description": "Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain",
      "required": [
        "timeGrain",
        "retention"
      ],
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The time grain, specifies the aggregation interval for the metric.",
          "type": "string"
        },
        "retention": {
          "description": "The retention period for the metric at the specified timegrain",
          "type": "string"
        }
      }
    },
    "MetricData": {
      "description": "The metric data.",
      "required": [
        "timeStamp",
        "sum",
        "count",
        "average",
        "minimum",
        "maximum"
      ],
      "type": "object",
      "properties": {
        "timeStamp": {
          "format": "date-time",
          "description": "The time when the metric data is fetched",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "The sum of all the samples available in the given instance of time for the specific metric data",
          "type": "number"
        },
        "count": {
          "format": "int32",
          "description": "The count of samples of the metric data available for the given instance",
          "type": "integer"
        },
        "average": {
          "format": "double",
          "description": "The average of all sample for the given instance",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "description": "The minimum of all samples available",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "The maximum of all samples available",
          "type": "number"
        }
      }
    },
    "MetricDefinition": {
      "description": "Monitoring metric definition represents the metadata of the metrics.",
      "required": [
        "name",
        "unit",
        "primaryAggregationType",
        "resourceId",
        "metricAvailabilities",
        "dimensions",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The metric name"
        },
        "unit": {
          "description": "The metric unit",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "primaryAggregationType": {
          "description": "The metric aggregation type",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "resourceId": {
          "description": "The metric source id",
          "type": "string"
        },
        "metricAvailabilities": {
          "description": "The available metric granularities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAvailablity"
          }
        },
        "dimensions": {
          "description": "The supported dimensions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "type": {
          "description": "The metric definition type",
          "type": "string"
        }
      }
    },
    "MetricDefinitionList": {
      "description": "List of metric definition",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of metric definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          }
        }
      }
    },
    "MetricDimension": {
      "description": "Metric dimension",
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Metric dimension name",
          "type": "string"
        },
        "value": {
          "description": "Metric dimension values",
          "type": "string"
        }
      }
    },
    "MetricFilter": {
      "description": "class representing the filters to be passed while fetching metrics",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricNameFilter",
          "description": "filter for name property"
        },
        "startTime": {
          "format": "date-time",
          "description": "starttime for fetching metrics",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "endtime for fetching metrics",
          "type": "string"
        },
        "timeGrain": {
          "description": "timegrain of the metrics",
          "type": "string"
        }
      }
    },
    "MetricList": {
      "description": "Collection of metrics",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metrics"
          }
        }
      }
    },
    "MetricName": {
      "description": "The name of the metric",
      "required": [
        "value",
        "localizedValue"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Name of the metric",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name of the metric",
          "type": "string"
        }
      }
    },
    "MetricNameFilter": {
      "description": "Class representing the name filter to be passed while fetching metrics",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "string"
        }
      }
    },
    "Metrics": {
      "description": "Monitoring metric",
      "required": [
        "resourceId",
        "startTime",
        "endTime",
        "timeGrain",
        "primaryAggregation",
        "name",
        "dimensions",
        "unit",
        "type",
        "values"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The id of metric source",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The metric start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The metric end time",
          "type": "string"
        },
        "timeGrain": {
          "description": "The time grain, time grain indicates frequency of the metric data",
          "type": "string"
        },
        "primaryAggregation": {
          "description": "The metric aggregation type",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metrics"
        },
        "dimensions": {
          "description": "The Metric dimension which indicates the source of the metric",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "unit": {
          "description": "The unit of the metric data",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "type": {
          "description": "The Type of the metric data",
          "type": "string"
        },
        "values": {
          "description": "The metric data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricData"
          }
        }
      }
    },
    "NetworkAdapter": {
      "description": "Represents a networkAdapter in a particular node.",
      "required": [
        "networkAdapterName",
        "dhcpStatus"
      ],
      "type": "object",
      "properties": {
        "networkAdapterName": {
          "description": "The name of the network adapter.",
          "type": "string"
        },
        "iPv4Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "The ipv4 configuration of the network adapter."
        },
        "iPv6Info": {
          "$ref": "#/definitions/IPConfig",
          "description": "The ipv6 configuration of the network adapter."
        },
        "dhcpStatus": {
          "description": "Represents state of DHCP.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DhcpStatus",
            "modelAsString": false
          }
        },
        "linkSpeed": {
          "format": "int64",
          "description": "The speed of the network adapter.",
          "type": "integer"
        }
      }
    },
    "NetworkSettings": {
      "description": "The NetworkSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "Properties of the given NetworkSettings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "The properties of NetworkSettings",
      "required": [
        "primaryDnsServer",
        "nodeNetworks"
      ],
      "type": "object",
      "properties": {
        "primaryDnsServer": {
          "description": "The Primary DNS server for the device",
          "type": "string"
        },
        "secondaryDnsServer": {
          "description": "The secondary DNS server for the device",
          "type": "string"
        },
        "nodeNetworks": {
          "description": "The NetworkAdapters under each node of the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeNetwork"
          }
        }
      }
    },
    "NodeNetwork": {
      "description": "Represents a single node in a device.",
      "required": [
        "networkAdapters"
      ],
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "The array of network adapters in the node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          }
        }
      }
    },
    "RawCertificateData": {
      "description": "Raw Certificate Data From IDM",
      "required": [
        "certificate"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "Specify the Authentication type",
          "enum": [
            "Invalid",
            "AccessControlService",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": false
          }
        },
        "certificate": {
          "description": "Gets or sets the base64 encoded certificate raw data string",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "The Azure Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The Resource Id",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The Resource Name",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The Resource type",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The Geo location of the Manager",
          "type": "string"
        },
        "tags": {
          "description": "Tags attached to the Manager",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceCertificateAndAADDetails": {
      "description": "Resource Certificate And AAD Details from IDM",
      "required": [
        "certificate",
        "resourceId",
        "aadAuthority",
        "aadTenantId",
        "servicePrincipalClientId",
        "servicePrincipalObjectId",
        "azureManagementEndpointAudience",
        "subject",
        "validFrom",
        "validTo",
        "thumbprint",
        "friendlyName",
        "issuer"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "Specify the Authentication type",
          "enum": [
            "Invalid",
            "AccessControlService",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": false
          }
        },
        "certificate": {
          "description": "Gets or sets the base64 encoded certificate raw data string",
          "type": "string"
        },
        "resourceId": {
          "format": "int64",
          "description": "Gets or Sets the ResourceId",
          "type": "integer"
        },
        "aadAuthority": {
          "description": "AAD tenant authority",
          "type": "string"
        },
        "aadTenantId": {
          "description": "AAD tenant Id",
          "type": "string"
        },
        "servicePrincipalClientId": {
          "description": "AAD service principal clientId",
          "type": "string"
        },
        "servicePrincipalObjectId": {
          "description": "AAD service principal ObjectId",
          "type": "string"
        },
        "azureManagementEndpointAudience": {
          "description": "Azure Management Endpoint Audience",
          "type": "string"
        },
        "subject": {
          "description": "Certificate Subject Name",
          "type": "string"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Certificate Validity start Date time",
          "type": "string"
        },
        "validTo": {
          "format": "date-time",
          "description": "Certificate Validity End Date time",
          "type": "string"
        },
        "thumbprint": {
          "description": "Certificate thumbprint",
          "type": "string"
        },
        "friendlyName": {
          "description": "Certificate friendly name",
          "type": "string"
        },
        "issuer": {
          "description": "Certificate issuer",
          "type": "string"
        }
      }
    },
    "SecuritySettings": {
      "description": "The SecuritySettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "Properties of the SecuritySettings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "The properties of SecuritySettings",
      "required": [
        "deviceAdminPassword"
      ],
      "type": "object",
      "properties": {
        "deviceAdminPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the  local web UI of the device. Actual password could have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters"
        }
      }
    },
    "SendTestAlertEmailRequest": {
      "description": "Request for sending test alert email",
      "required": [
        "emailList"
      ],
      "type": "object",
      "properties": {
        "emailList": {
          "description": "List of emails to send the test alerts",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "Credential properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "Collection of Storage account credential entities",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          }
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "Storage account properties",
      "required": [
        "cloudType",
        "endPoint",
        "login",
        "enableSSL"
      ],
      "type": "object",
      "properties": {
        "cloudType": {
          "description": "The cloud service provider",
          "enum": [
            "Azure",
            "S3",
            "S3_RRS",
            "OpenStack",
            "HP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloudType",
            "modelAsString": false
          }
        },
        "endPoint": {
          "description": "The storage endpoint",
          "type": "string"
        },
        "login": {
          "description": "The storage account login",
          "type": "string"
        },
        "location": {
          "description": "The storage account's geo location",
          "type": "string"
        },
        "enableSSL": {
          "description": "SSL needs to be enabled or not",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslStatus",
            "modelAsString": false
          }
        },
        "accessKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The details of the storage account password"
        }
      }
    },
    "StorageDomain": {
      "description": "The storage domain.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageDomainProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageDomainList": {
      "description": "Collection of storage domains",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageDomain"
          }
        }
      }
    },
    "StorageDomainProperties": {
      "description": "The storage domain properties.",
      "required": [
        "storageAccountCredentialIds",
        "encryptionStatus"
      ],
      "type": "object",
      "properties": {
        "storageAccountCredentialIds": {
          "description": "The storage account credentials.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptionKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The encryption key used to encrypt the data. This is a user secret."
        },
        "encryptionStatus": {
          "description": "The encryption status \"Enabled | Disabled\".",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        }
      }
    },
    "SymmetricEncryptedSecret": {
      "description": "This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, \"Value\" is a secret and the \"valueThumbprint\" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
      "required": [
        "value",
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none",
          "type": "string"
        },
        "valueCertificateThumbprint": {
          "description": "Thumbprint cert that was used to encrypt \"Value\"",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "Algorithm used to encrypt \"Value\"",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        }
      }
    },
    "Time": {
      "description": "The Time.",
      "required": [
        "hour",
        "minute"
      ],
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "description": "The hour.",
          "maximum": 23,
          "minimum": 0,
          "type": "integer"
        },
        "minute": {
          "format": "int32",
          "description": "The minute.",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "TimeSettings": {
      "description": "The TimeSettings of a device",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeSettingsProperties",
          "description": "Properties of the TimeSettings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TimeSettingsProperties": {
      "description": "The properties of TimeSettings",
      "required": [
        "timeZone",
        "primaryTimeServer"
      ],
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "The timezone of device, like '(UTC -06:00) Central America'",
          "type": "string"
        },
        "primaryTimeServer": {
          "description": "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.",
          "type": "string"
        },
        "secondaryTimeServer": {
          "description": "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.",
          "type": "string"
        }
      }
    },
    "UpdateDownloadProgress": {
      "description": "details available during the download",
      "type": "object",
      "properties": {
        "downloadPhase": {
          "description": "The download phase.",
          "enum": [
            "Unknown",
            "Initializing",
            "Downloading",
            "Verifying"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DownloadPhase",
            "modelAsString": false
          }
        },
        "percentComplete": {
          "format": "int32",
          "description": "Percentage of completion.",
          "type": "integer"
        },
        "totalBytesToDownload": {
          "format": "double",
          "description": "Total bytes to download.",
          "type": "number"
        },
        "totalBytesDownloaded": {
          "format": "double",
          "description": "Total bytes downloaded.",
          "type": "number"
        },
        "numberOfUpdatesToDownload": {
          "format": "int32",
          "description": "Number of updates to download.",
          "type": "integer"
        },
        "numberOfUpdatesDownloaded": {
          "format": "int32",
          "description": "Number of updates downloaded.",
          "type": "integer"
        }
      }
    },
    "UpdateInstallProgress": {
      "description": "Class representing the progress during installation of updates",
      "type": "object",
      "properties": {
        "percentComplete": {
          "format": "int32",
          "description": "Percentage of completion.",
          "type": "integer"
        },
        "numberOfUpdatesToInstall": {
          "format": "int32",
          "description": "Number of updates to install.",
          "type": "integer"
        },
        "numberOfUpdatesInstalled": {
          "format": "int32",
          "description": "Number of updates installed.",
          "type": "integer"
        }
      }
    },
    "Updates": {
      "description": "The updates profile",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatesProperties",
          "description": "Update properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdatesProperties": {
      "description": "Properties of the update profile",
      "type": "object",
      "properties": {
        "deviceVersion": {
          "description": "The current Device version.",
          "type": "string"
        },
        "deviceLastScannedTime": {
          "format": "date-time",
          "description": "The last time when the device did an update scan.",
          "type": "string"
        },
        "regularUpdatesAvailable": {
          "description": "Set to true if regular updates were detected for the current version of the device.",
          "type": "boolean"
        },
        "rebootRequiredForInstall": {
          "description": "Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.",
          "type": "boolean"
        },
        "totalItemsPendingForDownload": {
          "format": "int32",
          "description": "The total number of items pending for download.",
          "type": "integer"
        },
        "totalItemsPendingForInstall": {
          "format": "int32",
          "description": "The total number of items pending for install.",
          "type": "integer"
        },
        "status": {
          "description": "The current update operation.",
          "enum": [
            "Idle",
            "Scanning",
            "Downloading",
            "Installing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateOperation",
            "modelAsString": false
          }
        },
        "lastCompletedScanTime": {
          "format": "date-time",
          "description": "The time when the last scan job was completed (success|cancelled|failed) on the device.",
          "type": "string"
        },
        "lastCompletedDownloadJobTime": {
          "format": "date-time",
          "description": "The time when the last Download job was completed (success|cancelled|failed) on the device.",
          "type": "string"
        },
        "lastCompletedInstallJobTime": {
          "format": "date-time",
          "description": "The time when the last Install job was completed (success|cancelled|failed) on the device.",
          "type": "string"
        },
        "inProgressDownloadJobId": {
          "description": "If a download is in progress, this field contains the JobId of that particular download job",
          "type": "string"
        },
        "inProgressInstallJobId": {
          "description": "If an install is in progress, this field contains the JobId of that particular install job",
          "type": "string"
        },
        "inProgressScanStartedTime": {
          "format": "date-time",
          "description": "The time when the currently running scan (if any) started",
          "type": "string"
        },
        "inProgressDownloadJobStartedTime": {
          "format": "date-time",
          "description": "The time when the currently running download (if any) started",
          "type": "string"
        },
        "inProgressInstallJobStartedTime": {
          "format": "date-time",
          "description": "The time when the currently running install (if any) started",
          "type": "string"
        }
      }
    },
    "UploadCertificateRequest": {
      "description": "Upload Certificate Request to IDM",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RawCertificateData",
          "x-ms-client-flatten": true
        },
        "contractVersion": {
          "description": "Gets ContractVersion",
          "enum": [
            "InvalidVersion",
            "V2011_09",
            "V2012_02",
            "V2012_05",
            "V2012_12",
            "V2013_04",
            "V2013_10",
            "V2013_11",
            "V2014_04",
            "V2014_06",
            "V2014_07",
            "V2014_09",
            "V2014_10",
            "V2014_12",
            "V2015_01",
            "V2015_02",
            "V2015_04",
            "V2015_05",
            "V2015_06",
            "V2015_07",
            "V2015_08",
            "V2015_10",
            "V2015_12",
            "V2016_01",
            "V2016_02",
            "V2016_04",
            "V2016_05",
            "V2016_07",
            "V2016_08"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ContractVersions",
            "modelAsString": false
          }
        }
      }
    },
    "UploadCertificateResponse": {
      "description": "Upload Certificate Response from IDM",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceCertificateAndAADDetails",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The api version",
      "required": true,
      "type": "string"
    },
    "managerNameParameter": {
      "name": "managerName",
      "in": "path",
      "description": "The manager name",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 2,
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The resource group name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription id",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
