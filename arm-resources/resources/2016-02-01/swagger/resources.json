{
  "swagger": "2.0",
  "info": {
    "title": "ResourceManagementClient",
    "version": "2016-02-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Delete",
        "description": "Delete deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CheckExistence",
        "description": "Checks whether deployment exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_CreateOrUpdate",
        "description": "Create a named template deployment using a template.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Additional parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Get",
        "description": "Get a deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Cancel",
        "description": "Cancel a currently running template deployment.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_Validate",
        "description": "Validate a deployment template.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Deployment to validate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentValidateResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_ExportTemplate",
        "description": "Exports a deployment template.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentExportResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "operationId": "Deployments_List",
        "description": "Get a list of deployments.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to filter by. The name is case insensitive."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters. If null is passed returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DeploymentExtendedFilter"
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Unregister",
        "description": "Unregisters provider from a subscription.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace of the resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register": {
      "post": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Register",
        "description": "Registers provider to be used with a subscription.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace of the resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_List",
        "description": "Gets a list of resource providers.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters. If null is passed returns all deployments."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProviderListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Get",
        "description": "Gets a resource provider.",
        "parameters": [
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace of the resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_ListResources",
        "description": "Get all of the resources under a subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Query parameters. If null is passed returns all resource groups."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters. If null is passed returns all resource groups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}": {
      "head": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_CheckExistence",
        "description": "Checks whether resource group exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to check. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_CreateOrUpdate",
        "description": "Create a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to be created or updated.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            },
            "description": "Parameters supplied to the create or update resource group service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Delete",
        "description": "Delete resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to be deleted. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Get",
        "description": "Get a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to get. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_Patch",
        "description": "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource groups, though if a field is unspecified current value will be carried over. ",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to be created or updated. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            },
            "description": "Parameters supplied to the update state resource group service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate": {
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_ExportTemplate",
        "description": "Captures the specified resource group as a template.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group to be created or updated.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportTemplateRequest"
            },
            "description": "Parameters supplied to the export template resource group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroupExportResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "operationId": "ResourceGroups_List",
        "description": "Gets a collection of resource groups.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters. If null is passed returns all resource groups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/ResourceGroupFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources": {
      "post": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_MoveResources",
        "description": "Move resources from one resource group to another. The resources being moved should all be in the same resource group.",
        "parameters": [
          {
            "name": "sourceResourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Source resource group name.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcesMoveInfo"
            },
            "description": "move resources' parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_List",
        "description": "Get all of the resources under a subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters. If null is passed returns all resource groups."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/GenericResourceFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}": {
      "head": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CheckExistence",
        "description": "Checks whether resource exists.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Delete",
        "description": "Delete resource and all of its resources. ",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_CreateOrUpdate",
        "description": "Create a resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericResource"
            },
            "description": "Create or update resource parameters."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "Resources_Get",
        "description": "Returns a resource belonging to a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource identity."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_DeleteValue",
        "description": "Delete a subscription resource tag value.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value of the tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdateValue",
        "description": "Create a subscription resource tag value.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "name": "tagValue",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The value of the tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagValue"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagValue"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_CreateOrUpdate",
        "description": "Create a subscription resource tag.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagDetails"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Delete",
        "description": "Delete a subscription resource tag.",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_List",
        "description": "Get a list of subscription resource tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_Get",
        "description": "Get a list of deployments operations.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation Id."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentOperation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "tags": [
          "DeploymentOperations"
        ],
        "operationId": "DeploymentOperations_List",
        "description": "Gets a list of deployments operations.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deployment."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Query parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentOperationsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "DeploymentExtendedFilter": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state."
        }
      },
      "description": "Deployment filter."
    },
    "GenericResourceFilter": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the resource type."
        },
        "tagname": {
          "type": "string",
          "description": "Gets or sets the tag name."
        },
        "tagvalue": {
          "type": "string",
          "description": "Gets or sets the tag value."
        },
        "expand": {
          "type": "string",
          "description": "Gets or sets the expand value."
        }
      },
      "description": "Resource filter."
    },
    "ResourceGroupFilter": {
      "properties": {
        "tagName": {
          "type": "string",
          "description": "Gets or sets the tag name."
        },
        "tagValue": {
          "type": "string",
          "description": "Gets or sets the tag value."
        }
      },
      "description": "Resource group filter."
    },
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI referencing the template."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included it must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the template."
    },
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI referencing the template."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included it must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment paramaters."
    },
    "DeploymentProperties": {
      "properties": {
        "template": {
          "type": "object",
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        },
        "templateLink": {
          "$ref": "#/definitions/TemplateLink",
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        },
        "parameters": {
          "type": "object",
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        },
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink",
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        },
        "mode": {
          "type": "string",
          "description": "Gets or sets the deployment mode.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "$ref": "#/definitions/DebugSetting",
          "description": "Gets or sets the debug setting of the deployment."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DebugSetting": {
      "properties": {
        "detailLevel": {
          "x-ms-client-flatten": true,
          "type": "string",
          "description": "Gets or sets the debug detail level."
        }
      }
    },
    "Deployment": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties",
          "description": "Gets or sets the deployment properties."
        }
      },
      "description": "Deployment operation parameters."
    },
    "DeploymentExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "Gets or sets the template content."
        }
      }
    },
    "ResourceManagementErrorWithDetails": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code returned from the server."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message returned from the server."
        },
        "target": {
          "type": "string",
          "description": "Gets or sets the target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceManagementErrorWithDetails"
          },
          "description": "Gets or sets validation error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the resource type."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the collection of locations where this resource type can be created in."
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the api version."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the properties."
        }
      },
      "description": "Resource type managed by the resource provider."
    },
    "Provider": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the provider id."
        },
        "namespace": {
          "type": "string",
          "description": "Gets or sets the namespace of the provider."
        },
        "registrationState": {
          "type": "string",
          "description": "Gets or sets the registration state of the provider."
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          },
          "description": "Gets or sets the collection of provider resource types."
        }
      },
      "description": "Resource provider information."
    },
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicDependency"
          },
          "description": "Gets the list of dependencies."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the ID of the dependency."
        },
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the dependency resource type."
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the dependency resource name."
        }
      },
      "description": "Deployment dependency information."
    },
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the state of the provisioning."
        },
        "correlationId": {
          "type": "string",
          "description": "Gets or sets the correlation ID of the deployment."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the timestamp of the template deployment."
        },
        "outputs": {
          "type": "object",
          "description": "Gets or sets key/value pairs that represent deploymentoutput."
        },
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "description": "Gets the list of resource providers needed for the deployment."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dependency"
          },
          "description": "Gets the list of deployment dependencies."
        },
        "template": {
          "type": "object",
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        },
        "templateLink": {
          "$ref": "#/definitions/TemplateLink",
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        },
        "parameters": {
          "type": "object",
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        },
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink",
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        },
        "mode": {
          "type": "string",
          "description": "Gets or sets the deployment mode.",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          }
        },
        "debugSetting": {
          "$ref": "#/definitions/DebugSetting",
          "description": "Gets or sets the debug setting of the deployment."
        }
      },
      "description": "Deployment properties with additional details."
    },
    "DeploymentValidateResult": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ResourceManagementErrorWithDetails",
          "description": "Gets or sets validation error."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "Gets or sets the template deployment properties."
        }
      },
      "description": "Information from validate template deployment response."
    },
    "DeploymentExtended": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the ID of the deployment."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the deployment."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended",
          "description": "Gets or sets deployment properties."
        }
      },
      "required": [
        "name"
      ],
      "description": "Deployment information."
    },
    "DeploymentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentExtended"
          },
          "description": "Gets or sets the list of deployments."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "List of deployments."
    },
    "ProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "description": "Gets or sets the list of resource providers."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "List of resource providers."
    },
    "GenericResource": {
      "properties": {
        "plan": {
          "$ref": "#/definitions/Plan",
          "description": "Gets or sets the plan of the resource."
        },
        "properties": {
          "type": "object",
          "description": "Gets or sets the resource properties."
        },
        "kind": {
          "type": "string",
          "description": "Gets or sets the kind of the resource."
        },
        "managedBy": {
          "type": "string",
          "description": "Gets or sets the managedBy property of the resource."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the sku of the resource."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Gets or sets the identity of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Resource information."
    },
    "Plan": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the plan ID."
        },
        "publisher": {
          "type": "string",
          "description": "Gets or sets the publisher ID."
        },
        "product": {
          "type": "string",
          "description": "Gets or sets the offer ID."
        },
        "promotionCode": {
          "type": "string",
          "description": "Gets or sets the promotion code."
        }
      },
      "description": "Plan for the resource."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the sku name."
        },
        "tier": {
          "type": "string",
          "description": "Gets or sets the sku tier."
        },
        "size": {
          "type": "string",
          "description": "Gets or sets the sku size."
        },
        "family": {
          "type": "string",
          "description": "Gets or sets the sku family."
        },
        "model": {
          "type": "string",
          "description": "Gets or sets the sku model."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the sku capacity."
        }
      },
      "description": "Sku for the resource."
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of resource."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      },
      "description": "Identity for the resource."
    },
    "ResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericResource"
          },
          "description": "Gets or sets the list of resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "required": [
        "nextLink"
      ],
      "description": "List of resource groups."
    },
    "ResourceGroup": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the ID of the resource group."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Name of the resource group."
        },
        "properties": {
          "$ref": "#/definitions/ResourceGroupProperties"
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the tags attached to the resource group."
        }
      },
      "required": [
        "location"
      ],
      "description": "Resource group information."
    },
    "ResourceGroupProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets resource group provisioning state."
        }
      },
      "description": "The resource group properties."
    },
    "ResourceGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          },
          "description": "Gets or sets the list of resource groups."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "required": [
        "nextLink"
      ],
      "description": "List of resource groups."
    },
    "ResourcesMoveInfo": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the ids of the resources."
        },
        "targetResourceGroup": {
          "type": "string",
          "description": "The target resource group."
        }
      },
      "description": "Parameters of move resources."
    },
    "ExportTemplateRequest": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the ids of the resources. The only supported string currently is '*' (all resources). Future api updates will support exporting specific resources."
        },
        "options": {
          "type": "string",
          "description": "The export template options. Supported values include 'IncludeParameterDefaultValue', 'IncludeComments' or 'IncludeParameterDefaultValue, IncludeComments"
        }
      },
      "description": "Export resource group template request parameters."
    },
    "TagCount": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of count."
        },
        "value": {
          "type": "string",
          "description": "Value of count."
        }
      },
      "description": "Tag count."
    },
    "TagValue": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the tag ID."
        },
        "tagValue": {
          "type": "string",
          "description": "Gets or sets the tag value."
        },
        "count": {
          "$ref": "#/definitions/TagCount",
          "description": "Gets or sets the tag value count."
        }
      },
      "description": "Tag information."
    },
    "TagDetails": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the tag ID."
        },
        "tagName": {
          "type": "string",
          "description": "Gets or sets the tag name."
        },
        "count": {
          "$ref": "#/definitions/TagCount",
          "description": "Gets or sets the tag count."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagValue"
          },
          "description": "Gets or sets the list of tag values."
        }
      },
      "description": "Tag details."
    },
    "TagsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDetails"
          },
          "description": "Gets or sets the list of tags."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "required": [
        "nextLink"
      ],
      "description": "List of subscription tags."
    },
    "TargetResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the ID of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the type of the resource."
        }
      },
      "description": "Target resource."
    },
    "HttpMessage": {
      "properties": {
        "content": {
          "type": "object",
          "description": "Gets or sets HTTP message content."
        }
      }
    },
    "DeploymentOperationProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the state of the provisioning."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the date and time of the operation."
        },
        "serviceRequestId": {
          "type": "string",
          "description": "Gets or sets deployment operation service request id."
        },
        "statusCode": {
          "type": "string",
          "description": "Gets or sets operation status code."
        },
        "statusMessage": {
          "type": "object",
          "description": "Gets or sets operation status message."
        },
        "targetResource": {
          "$ref": "#/definitions/TargetResource",
          "description": "Gets or sets the target resource."
        },
        "request": {
          "$ref": "#/definitions/HttpMessage",
          "description": "Gets or sets the HTTP request message."
        },
        "response": {
          "$ref": "#/definitions/HttpMessage",
          "description": "Gets or sets the HTTP response message."
        }
      },
      "description": "Deployment operation properties."
    },
    "DeploymentOperation": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets full deployment operation id."
        },
        "operationId": {
          "type": "string",
          "description": "Gets or sets deployment operation id."
        },
        "properties": {
          "$ref": "#/definitions/DeploymentOperationProperties",
          "description": "Gets or sets deployment properties."
        }
      },
      "description": "Deployment operation information."
    },
    "DeploymentOperationsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentOperation"
          },
          "description": "Gets or sets the list of deployments."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "List of deployment operations."
    },
    "ResourceProviderOperationDisplayProperties": {
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Gets or sets operation description."
        },
        "provider": {
          "type": "string",
          "description": "Gets or sets operation provider."
        },
        "resource": {
          "type": "string",
          "description": "Gets or sets operation resource."
        },
        "operation": {
          "type": "string",
          "description": "Gets or sets operation."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets operation description."
        }
      },
      "description": "Resource provider operation's display properties."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "createdTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Created time of the resource."
        },
        "changedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Changed time of the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceGroupExportResult": {
      "properties": {
        "template": {
          "type": "object",
          "description": "Gets or sets the template content."
        },
        "error": {
          "$ref": "#/definitions/ResourceManagementErrorWithDetails",
          "description": "Gets or sets the error."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}