{
  "swagger": "2.0",
  "info": {
    "version": "2016-05-15",
    "title": "DevTestLabsClient",
    "description": "The DevTest Labs Client."
  },
  "host": "management.azure.com",
  "schemes": [ "https" ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs": {
      "get": {
        "tags": [ "Lab" ],
        "description": "List labs in a subscription.",
        "operationId": "Lab_ListBySubscription",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=storageDetails)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Lab]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Lab"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules": {
      "get": {
        "tags": [ "GlobalSchedule" ],
        "description": "List schedules in a subscription.",
        "operationId": "GlobalSchedule_ListBySubscription",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Schedule]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Schedule"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs": {
      "get": {
        "tags": [ "Lab" ],
        "description": "List labs in a resource group.",
        "operationId": "Lab_ListByResourceGroup",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=storageDetails)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Lab]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Lab"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources": {
      "get": {
        "tags": [ "ArtifactSource" ],
        "description": "List artifact sources in a given lab.",
        "operationId": "ArtifactSource_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[ArtifactSource]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/ArtifactSource"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates": {
      "get": {
        "tags": [ "ArmTemplate" ],
        "description": "List azure resource manager templates in a given artifact source.",
        "operationId": "ArmTemplate_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[ArmTemplate]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/ArmTemplate"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/{name}": {
      "get": {
        "tags": [ "ArmTemplate" ],
        "description": "Get azure resource manager template.",
        "operationId": "ArmTemplate_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the azure Resource Manager template.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ArmTemplate" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts": {
      "get": {
        "tags": [ "Artifact" ],
        "description": "List artifacts in a given artifact source.",
        "operationId": "Artifact_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=title)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Artifact]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Artifact"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}": {
      "get": {
        "tags": [ "Artifact" ],
        "description": "Get artifact.",
        "operationId": "Artifact_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=title)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Artifact" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate": {
      "post": {
        "tags": [ "Artifact" ],
        "description": "Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.",
        "operationId": "Artifact_GenerateArmTemplate",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generateArmTemplateRequest",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GenerateArmTemplateRequest" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ArmTemplateInfo" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}": {
      "get": {
        "tags": [ "ArtifactSource" ],
        "description": "Get artifact source.",
        "operationId": "ArtifactSource_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "ArtifactSource" ],
        "description": "Create or replace an existing artifact source.",
        "operationId": "ArtifactSource_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSource",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "ArtifactSource" ],
        "description": "Delete artifact source.",
        "operationId": "ArtifactSource_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "ArtifactSource" ],
        "description": "Modify properties of artifact sources.",
        "operationId": "ArtifactSource_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSource",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ArtifactSource" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}": {
      "get": {
        "tags": [ "Cost" ],
        "description": "Get cost.",
        "operationId": "Cost_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the cost.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=labCostDetails)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LabCost" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Cost" ],
        "description": "Create or replace an existing cost.",
        "operationId": "Cost_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the cost.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labCost",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LabCost" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LabCost" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/LabCost" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages": {
      "get": {
        "tags": [ "CustomImage" ],
        "description": "List custom images in a given lab.",
        "operationId": "CustomImage_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[CustomImage]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/CustomImage"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}": {
      "get": {
        "tags": [ "CustomImage" ],
        "description": "Get custom image.",
        "operationId": "CustomImage_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the custom image.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomImage" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "CustomImage" ],
        "description": "Create or replace an existing custom image. This operation can take a while to complete.",
        "operationId": "CustomImage_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the custom image.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customImage",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomImage" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomImage" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/CustomImage" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "CustomImage" ],
        "description": "Delete custom image. This operation can take a while to complete.",
        "operationId": "CustomImage_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the custom image.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas": {
      "get": {
        "tags": [ "Formula" ],
        "description": "List formulas in a given lab.",
        "operationId": "Formula_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Formula]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Formula"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}": {
      "get": {
        "tags": [ "Formula" ],
        "description": "Get formula.",
        "operationId": "Formula_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the formula.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Formula" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Formula" ],
        "description": "Create or replace an existing Formula. This operation can take a while to complete.",
        "operationId": "Formula_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the formula.",
            "required": true,
            "type": "string"
          },
          {
            "name": "formula",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Formula" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Formula" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Formula" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "Formula" ],
        "description": "Delete formula.",
        "operationId": "Formula_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the formula.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages": {
      "get": {
        "tags": [ "GalleryImage" ],
        "description": "List gallery images in a given lab.",
        "operationId": "GalleryImage_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=author)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[GalleryImage]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/GalleryImage"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels": {
      "get": {
        "tags": [ "NotificationChannel" ],
        "description": "List notificationchannels in a given lab.",
        "operationId": "NotificationChannel_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[NotificationChannel]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/NotificationChannel"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}": {
      "get": {
        "tags": [ "NotificationChannel" ],
        "description": "Get notificationchannel.",
        "operationId": "NotificationChannel_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the notificationChannel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "NotificationChannel" ],
        "description": "Create or replace an existing notificationChannel.",
        "operationId": "NotificationChannel_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the notificationChannel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationChannel",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "NotificationChannel" ],
        "description": "Delete notificationchannel.",
        "operationId": "NotificationChannel_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the notificationChannel.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "NotificationChannel" ],
        "description": "Modify properties of notificationchannels.",
        "operationId": "NotificationChannel_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the notificationChannel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationChannel",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/NotificationChannel" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify": {
      "post": {
        "tags": [ "NotificationChannel" ],
        "description": "Send notification to provided channel.",
        "operationId": "NotificationChannel_Notify",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the notificationChannel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "notifyParameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/NotifyParameters" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies": {
      "post": {
        "tags": [ "PolicySet" ],
        "description": "Evaluates lab policy.",
        "operationId": "PolicySet_EvaluatePolicies",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "evaluatePoliciesRequest",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EvaluatePoliciesRequest" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EvaluatePoliciesResponse" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies": {
      "get": {
        "tags": [ "Policy" ],
        "description": "List policies in a given policy set.",
        "operationId": "Policy_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Policy]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Policy"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}": {
      "get": {
        "tags": [ "Policy" ],
        "description": "Get policy.",
        "operationId": "Policy_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Policy" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Policy" ],
        "description": "Create or replace an existing policy.",
        "operationId": "Policy_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Policy" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Policy" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Policy" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "Policy" ],
        "description": "Delete policy.",
        "operationId": "Policy_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "Policy" ],
        "description": "Modify properties of policies.",
        "operationId": "Policy_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "The name of the policy set.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Policy" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Policy" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules": {
      "get": {
        "tags": [ "Schedule" ],
        "description": "List schedules in a given lab.",
        "operationId": "Schedule_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Schedule]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Schedule"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}": {
      "get": {
        "tags": [ "Schedule" ],
        "description": "Get schedule.",
        "operationId": "Schedule_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Schedule" ],
        "description": "Create or replace an existing schedule.",
        "operationId": "Schedule_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "Schedule" ],
        "description": "Delete schedule.",
        "operationId": "Schedule_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "Schedule" ],
        "description": "Modify properties of schedules.",
        "operationId": "Schedule_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute": {
      "post": {
        "tags": [ "Schedule" ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "operationId": "Schedule_Execute",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/listApplicable": {
      "post": {
        "tags": [ "Schedule" ],
        "description": "Lists all applicable schedules",
        "operationId": "Schedule_ListApplicable",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Schedule]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners": {
      "get": {
        "tags": [ "ServiceRunner" ],
        "description": "List service runners in a given lab.",
        "operationId": "ServiceRunner_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[ServiceRunner]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/ServiceRunner"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}": {
      "get": {
        "tags": [ "ServiceRunner" ],
        "description": "Get service runner.",
        "operationId": "ServiceRunner_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the service runner.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ServiceRunner" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "ServiceRunner" ],
        "description": "Create or replace an existing Service runner.",
        "operationId": "ServiceRunner_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the service runner.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceRunner",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ServiceRunner" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ServiceRunner" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/ServiceRunner" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "ServiceRunner" ],
        "description": "Delete service runner.",
        "operationId": "ServiceRunner_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the service runner.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users": {
      "get": {
        "tags": [ "User" ],
        "description": "List user profiles in a given lab.",
        "operationId": "User_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[User]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/User"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}": {
      "get": {
        "tags": [ "User" ],
        "description": "Get user profile.",
        "operationId": "User_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "User" ],
        "description": "Create or replace an existing user profile.",
        "operationId": "User_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/User" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "User" ],
        "description": "Delete user profile. This operation can take a while to complete.",
        "operationId": "User_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [ "User" ],
        "description": "Modify properties of user profiles.",
        "operationId": "User_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/User" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks": {
      "get": {
        "tags": [ "Disk" ],
        "description": "List disks in a given user profile.",
        "operationId": "Disk_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Disk]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Disk"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}": {
      "get": {
        "tags": [ "Disk" ],
        "description": "Get disk.",
        "operationId": "Disk_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the disk.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Disk" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Disk" ],
        "description": "Create or replace an existing disk. This operation can take a while to complete.",
        "operationId": "Disk_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the disk.",
            "required": true,
            "type": "string"
          },
          {
            "name": "disk",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Disk" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Disk" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Disk" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "Disk" ],
        "description": "Delete disk. This operation can take a while to complete.",
        "operationId": "Disk_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the disk.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attachDisk": {
      "post": {
        "tags": [ "Disk" ],
        "description": "Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.",
        "operationId": "Disk_AttachDisk",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the disk.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachDiskProperties",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AttachDiskProperties" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detachDisk": {
      "post": {
        "tags": [ "Disk" ],
        "description": "Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.",
        "operationId": "Disk_DetachDisk",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the disk.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detachDiskProperties",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DetachDiskProperties" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments": {
      "get": {
        "tags": [ "Environment" ],
        "description": "List environments in a given user profile.",
        "operationId": "Environment_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[DtlEnvironment]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/DtlEnvironment"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}": {
      "get": {
        "tags": [ "Environment" ],
        "description": "Get environment.",
        "operationId": "Environment_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DtlEnvironment" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Environment" ],
        "description": "Create or replace an existing environment. This operation can take a while to complete.",
        "operationId": "Environment_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dtlEnvironment",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DtlEnvironment" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DtlEnvironment" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/DtlEnvironment" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "Environment" ],
        "description": "Delete environment. This operation can take a while to complete.",
        "operationId": "Environment_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets": {
      "get": {
        "tags": [ "Secret" ],
        "description": "List secrets in a given user profile.",
        "operationId": "Secret_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=value)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Secret]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Secret"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}": {
      "get": {
        "tags": [ "Secret" ],
        "description": "Get secret.",
        "operationId": "Secret_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=value)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Secret" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Secret" ],
        "description": "Create or replace an existing secret.",
        "operationId": "Secret_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Secret" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Secret" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Secret" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "Secret" ],
        "description": "Delete secret.",
        "operationId": "Secret_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines": {
      "get": {
        "tags": [ "VirtualMachine" ],
        "description": "List virtual machines in a given lab.",
        "operationId": "VirtualMachine_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[LabVirtualMachine]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/LabVirtualMachine"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}": {
      "get": {
        "tags": [ "VirtualMachine" ],
        "description": "Get virtual machine.",
        "operationId": "VirtualMachine_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "VirtualMachine" ],
        "description": "Create or replace an existing Virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachine",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "VirtualMachine" ],
        "description": "Delete virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [ "VirtualMachine" ],
        "description": "Modify properties of virtual machines.",
        "operationId": "VirtualMachine_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachine",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LabVirtualMachine" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Attach a new or existing data disk to virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_AddDataDisk",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataDiskProperties",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DataDiskProperties" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Apply artifacts to virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_ApplyArtifacts",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applyArtifactsRequest",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ApplyArtifactsRequest" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Take ownership of an existing virtual machine This operation can take a while to complete.",
        "operationId": "VirtualMachine_Claim",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Detach the specified disk from the virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_DetachDataDisk",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detachDataDiskProperties",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DetachDataDiskProperties" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/listApplicableSchedules": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Lists all applicable schedules",
        "operationId": "VirtualMachine_ListApplicableSchedules",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ApplicableSchedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Start a virtual machine. This operation can take a while to complete.",
        "operationId": "VirtualMachine_Start",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop": {
      "post": {
        "tags": [ "VirtualMachine" ],
        "description": "Stop a virtual machine This operation can take a while to complete.",
        "operationId": "VirtualMachine_Stop",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules": {
      "get": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "List schedules in a given virtual machine.",
        "operationId": "VirtualMachineSchedule_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Schedule]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Schedule"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}": {
      "get": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "Get schedule.",
        "operationId": "VirtualMachineSchedule_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "Create or replace an existing schedule.",
        "operationId": "VirtualMachineSchedule_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "Delete schedule.",
        "operationId": "VirtualMachineSchedule_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "Modify properties of schedules.",
        "operationId": "VirtualMachineSchedule_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute": {
      "post": {
        "tags": [ "VirtualMachineSchedule" ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "operationId": "VirtualMachineSchedule_Execute",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "The name of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks": {
      "get": {
        "tags": [ "VirtualNetwork" ],
        "description": "List virtual networks in a given lab.",
        "operationId": "VirtualNetwork_List",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[VirtualNetwork]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/VirtualNetwork"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}": {
      "get": {
        "tags": [ "VirtualNetwork" ],
        "description": "Get virtual network.",
        "operationId": "VirtualNetwork_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "VirtualNetwork" ],
        "description": "Create or replace an existing virtual network. This operation can take a while to complete.",
        "operationId": "VirtualNetwork_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetwork",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "VirtualNetwork" ],
        "description": "Delete virtual network. This operation can take a while to complete.",
        "operationId": "VirtualNetwork_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual network.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [ "VirtualNetwork" ],
        "description": "Modify properties of virtual networks.",
        "operationId": "VirtualNetwork_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the virtual network.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetwork",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/VirtualNetwork" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}": {
      "get": {
        "tags": [ "Lab" ],
        "description": "Get lab.",
        "operationId": "Lab_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=storageDetails)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Lab" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "Lab" ],
        "description": "Create or replace an existing lab. This operation can take a while to complete.",
        "operationId": "Lab_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lab",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Lab" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Lab" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Lab" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [ "Lab" ],
        "description": "Delete lab. This operation can take a while to complete.",
        "operationId": "Lab_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "202": { "description": "Accepted" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [ "Lab" ],
        "description": "Modify properties of labs.",
        "operationId": "Lab_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lab",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Lab" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Lab" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm": {
      "post": {
        "tags": [ "Lab" ],
        "description": "Claim a random claimable virtual machine in the lab. This operation can take a while to complete.",
        "operationId": "Lab_ClaimAnyVm",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment": {
      "post": {
        "tags": [ "Lab" ],
        "description": "Create virtual machines in a lab. This operation can take a while to complete.",
        "operationId": "Lab_CreateEnvironment",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachineCreationParameter",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LabVirtualMachineCreationParameter" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportLabResourceUsage": {
      "post": {
        "tags": [ "Lab" ],
        "description": "Exports the lab resource usage into a storage account This operation can take a while to complete.",
        "operationId": "Lab_ExportLabResourceUsage",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportLabResourceUsageParameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ExportLabResourceUsageParameters" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri": {
      "post": {
        "tags": [ "Lab" ],
        "description": "Generate a URI for uploading custom disk images to a Lab.",
        "operationId": "Lab_GenerateUploadUri",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generateUploadUriParameter",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GenerateUploadUriParameter" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GenerateUploadUriResponse" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds": {
      "post": {
        "tags": [ "Lab" ],
        "description": "List disk images available for custom image creation.",
        "operationId": "Lab_ListVhds",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[LabVhd]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules": {
      "get": {
        "tags": [ "GlobalSchedule" ],
        "description": "List schedules in a resource group.",
        "operationId": "GlobalSchedule_ListByResourceGroup",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation.",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseWithContinuation[Schedule]" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-pageable": { "nextLinkName": "nextLink" },
        "x-ms-odata": "#/definitions/Schedule"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}": {
      "get": {
        "tags": [ "GlobalSchedule" ],
        "description": "Get schedule.",
        "operationId": "GlobalSchedule_GetResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "put": {
        "tags": [ "GlobalSchedule" ],
        "description": "Create or replace an existing schedule.",
        "operationId": "GlobalSchedule_CreateOrUpdateResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "201": {
            "description": "Created",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "delete": {
        "tags": [ "GlobalSchedule" ],
        "description": "Delete schedule.",
        "operationId": "GlobalSchedule_DeleteResource",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      },
      "patch": {
        "tags": [ "GlobalSchedule" ],
        "description": "Modify properties of schedules.",
        "operationId": "GlobalSchedule_PatchResource",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute": {
      "post": {
        "tags": [ "GlobalSchedule" ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "operationId": "GlobalSchedule_Execute",
        "consumes": [],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          { "$ref": "#/parameters/subscriptionId" },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the schedule.",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/api-version" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "202": { "description": "Accepted" },
          "default": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/CloudError" }
          }
        },
        "security": [ { "oauth2": [ "user_impersonation" ] } ],
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ApplicableSchedule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicableScheduleProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "ApplicableScheduleProperties": {
      "type": "object",
      "properties": {
        "labVmsShutdown": {
          "$ref": "#/definitions/Schedule",
          "description": "The auto-shutdown schedule, if one has been set at the lab or lab resource level."
        },
        "labVmsStartup": {
          "$ref": "#/definitions/Schedule",
          "description": "The auto-startup schedule, if one has been set at the lab or lab resource level."
        }
      }
    },
    "ApplyArtifactsRequest": {
      "description": "Request body for applying artifacts to a virtual machine.",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "The list of artifacts to apply.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArtifactInstallProperties" }
        }
      }
    },
    "ArmTemplate": {
      "description": "An Azure Resource Manager template.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArmTemplateProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "ArmTemplateInfo": {
      "description": "Information about a generated ARM template.",
      "type": "object",
      "properties": {
        "template": {
          "description": "The template's contents.",
          "type": "object"
        },
        "parameters": {
          "description": "The parameters of the ARM template.",
          "type": "object"
        }
      }
    },
    "ArmTemplateParameterProperties": {
      "description": "Properties of an Azure Resource Manager template parameter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the template parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the template parameter.",
          "type": "string"
        }
      }
    },
    "ArmTemplateProperties": {
      "description": "Properties of an Azure Resource Manager template.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name of the ARM template.",
          "type": "string"
        },
        "description": {
          "description": "The description of the ARM template.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the ARM template.",
          "type": "string"
        },
        "icon": {
          "description": "The URI to the icon of the ARM template.",
          "type": "string"
        },
        "contents": {
          "description": "The contents of the ARM template.",
          "type": "object"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the armTemplate.",
          "type": "string"
        },
        "parametersValueFilesInfo": {
          "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
          "type": "array",
          "items": { "$ref": "#/definitions/ParametersValueFileInfo" }
        }
      }
    },
    "Artifact": {
      "description": "An artifact.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "ArtifactDeploymentStatusProperties": {
      "description": "Properties of an artifact deployment.",
      "type": "object",
      "properties": {
        "deploymentStatus": {
          "description": "The deployment status of the artifact.",
          "type": "string"
        },
        "artifactsApplied": {
          "format": "int32",
          "description": "The total count of the artifacts that were successfully applied.",
          "type": "integer"
        },
        "totalArtifacts": {
          "format": "int32",
          "description": "The total count of the artifacts that were tentatively applied.",
          "type": "integer"
        }
      }
    },
    "ArtifactInstallProperties": {
      "description": "Properties of an artifact.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The artifact's identifier.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the artifact.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArtifactParameterProperties" }
        },
        "status": {
          "description": "The status of the artifact.",
          "type": "string"
        },
        "deploymentStatusMessage": {
          "description": "The status message from the deployment.",
          "type": "string"
        },
        "vmExtensionStatusMessage": {
          "description": "The status message from the virtual machine extension.",
          "type": "string"
        },
        "installTime": {
          "format": "date-time",
          "description": "The time that the artifact starts to install on the virtual machine.",
          "type": "string"
        }
      }
    },
    "ArtifactParameterProperties": {
      "description": "Properties of an artifact parameter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the artifact parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the artifact parameter.",
          "type": "string"
        }
      }
    },
    "ArtifactProperties": {
      "description": "Properties of an artifact.",
      "type": "object",
      "properties": {
        "title": {
          "description": "The artifact's title.",
          "type": "string"
        },
        "description": {
          "description": "The artifact's description.",
          "type": "string"
        },
        "publisher": {
          "description": "The artifact's publisher.",
          "type": "string"
        },
        "filePath": {
          "description": "The file path to the artifact.",
          "type": "string"
        },
        "icon": {
          "description": "The URI to the artifact icon.",
          "type": "string"
        },
        "targetOsType": {
          "description": "The artifact's target OS.",
          "type": "string"
        },
        "parameters": {
          "description": "The artifact's parameters.",
          "type": "object"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The artifact's creation date.",
          "type": "string"
        }
      }
    },
    "ArtifactSource": {
      "description": "Properties of an artifact source.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactSourceProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "ArtifactSourceProperties": {
      "description": "Properties of an artifact source.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The artifact source's display name.",
          "type": "string"
        },
        "uri": {
          "description": "The artifact source's URI.",
          "type": "string"
        },
        "sourceType": {
          "description": "The artifact source's type.",
          "enum": [ "VsoGit", "GitHub" ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceControlType",
            "modelAsString": true
          }
        },
        "folderPath": {
          "description": "The folder containing artifacts.",
          "type": "string"
        },
        "armTemplateFolderPath": {
          "description": "The folder containing Azure Resource Manager templates.",
          "type": "string"
        },
        "branchRef": {
          "description": "The artifact source's branch reference.",
          "type": "string"
        },
        "securityToken": {
          "description": "The security token to authenticate to the artifact source.",
          "type": "string"
        },
        "status": {
          "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The artifact source's creation date.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "AttachDiskProperties": {
      "type": "object",
      "properties": {
        "leasedByLabVmId": {
          "description": "The resource ID of the Lab virtual machine to which the disk is attached.",
          "type": "string"
        }
      }
    },
    "AttachNewDataDiskOptions": {
      "description": "Properties to attach new disk to the Virtual Machine.",
      "type": "object",
      "properties": {
        "diskSizeGiB": {
          "format": "int32",
          "description": "Size of the disk to be attached in GibiBytes.",
          "type": "integer"
        },
        "diskName": {
          "description": "The name of the disk to be attached.",
          "type": "string"
        },
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "enum": [ "Standard", "Premium" ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        }
      }
    },
    "BulkCreationParameters": {
      "type": "object",
      "properties": {
        "instanceCount": {
          "format": "int32",
          "description": "The number of virtual machine instances to create.",
          "type": "integer"
        }
      }
    },
    "CloudError": {
      "type": "object",
      "properties": { "error": { "$ref": "#/definitions/CloudErrorBody" } },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "message": { "type": "string" },
        "target": { "type": "string" },
        "details": {
          "type": "array",
          "items": { "$ref": "#/definitions/CloudErrorBody" }
        }
      },
      "x-ms-external": true
    },
    "ComputeDataDisk": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets data disk name.",
          "type": "string"
        },
        "diskUri": {
          "description": "When backed by a blob, the URI of underlying blob.",
          "type": "string"
        },
        "managedDiskId": {
          "description": "When backed by managed disk, this is the ID of the compute disk resource.",
          "type": "string"
        },
        "diskSizeGiB": {
          "format": "int32",
          "description": "Gets data disk size in GiB.",
          "type": "integer"
        }
      }
    },
    "ComputeVmInstanceViewStatus": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets the status Code.",
          "type": "string"
        },
        "displayStatus": {
          "description": "Gets the short localizable label for the status.",
          "type": "string"
        }
      }
    },
    "ComputeVmProperties": {
      "type": "object",
      "properties": {
        "statuses": {
          "description": "Gets the statuses of the virtual machine.",
          "type": "array",
          "items": { "$ref": "#/definitions/ComputeVmInstanceViewStatus" }
        },
        "osType": {
          "description": "Gets the OS type of the virtual machine.",
          "type": "string"
        },
        "vmSize": {
          "description": "Gets the size of the virtual machine.",
          "type": "string"
        },
        "networkInterfaceId": {
          "description": "Gets the network interface ID of the virtual machine.",
          "type": "string"
        },
        "osDiskId": {
          "description": "Gets OS disk blob uri for the virtual machine.",
          "type": "string"
        },
        "dataDiskIds": {
          "description": "Gets data disks blob uri for the virtual machine.",
          "type": "array",
          "items": { "type": "string" }
        },
        "dataDisks": {
          "description": "Gets all data disks attached to the virtual machine.",
          "type": "array",
          "items": { "$ref": "#/definitions/ComputeDataDisk" }
        }
      }
    },
    "CostThresholdProperties": {
      "description": "Properties of a cost threshold item.",
      "type": "object",
      "properties": {
        "thresholdId": {
          "description": "The ID of the cost threshold item.",
          "type": "string"
        },
        "percentageThreshold": {
          "$ref": "#/definitions/PercentageCostThresholdProperties",
          "description": "The value of the percentage cost threshold."
        },
        "displayOnChart": {
          "description": "Indicates whether this threshold will be displayed on cost charts.",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "CostThresholdStatus",
            "modelAsString": true
          }
        },
        "sendNotificationWhenExceeded": {
          "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "CostThresholdStatus",
            "modelAsString": true
          }
        },
        "NotificationSent": {
          "description": "Indicates the datetime when notifications were last sent for this threshold.",
          "type": "string"
        }
      }
    },
    "CustomImage": {
      "description": "A custom image.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomImageProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "CustomImageProperties": {
      "description": "Properties of a custom image.",
      "type": "object",
      "properties": {
        "vm": {
          "$ref": "#/definitions/CustomImagePropertiesFromVm",
          "description": "The virtual machine from which the image is to be created."
        },
        "vhd": {
          "$ref": "#/definitions/CustomImagePropertiesCustom",
          "description": "The VHD from which the image is to be created."
        },
        "description": {
          "description": "The description of the custom image.",
          "type": "string"
        },
        "author": {
          "description": "The author of the custom image.",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of the custom image.",
          "type": "string"
        },
        "managedImageId": {
          "description": "The Managed Image Id backing the custom image.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "CustomImagePropertiesCustom": {
      "description": "Properties for creating a custom image from a VHD.",
      "type": "object",
      "properties": {
        "imageName": {
          "description": "The image name.",
          "type": "string"
        },
        "sysPrep": {
          "description": "Indicates whether sysprep has been run on the VHD.",
          "type": "boolean"
        },
        "osType": {
          "description": "The OS type of the custom image (i.e. Windows, Linux)",
          "enum": [ "Windows", "Linux", "None" ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomImageOsType",
            "modelAsString": true
          }
        }
      }
    },
    "CustomImagePropertiesFromVm": {
      "description": "Properties for creating a custom image from a virtual machine.",
      "type": "object",
      "properties": {
        "sourceVmId": {
          "description": "The source vm identifier.",
          "type": "string"
        },
        "windowsOsInfo": {
          "$ref": "#/definitions/WindowsOsInfo",
          "description": "The Windows OS information of the VM."
        },
        "linuxOsInfo": {
          "$ref": "#/definitions/LinuxOsInfo",
          "description": "The Linux OS information of the VM."
        }
      }
    },
    "DataDiskProperties": {
      "description": "Request body for adding a new or existing data disk to a virtual machine.",
      "type": "object",
      "properties": {
        "attachNewDataDiskOptions": {
          "$ref": "#/definitions/AttachNewDataDiskOptions",
          "description": "Specifies options to attach a new disk to the virtual machine."
        },
        "existingLabDiskId": {
          "description": "Specifies the existing lab disk id to attach to virtual machine.",
          "type": "string"
        },
        "hostCaching": {
          "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
          "enum": [ "None", "ReadOnly", "ReadWrite" ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostCachingOptions",
            "modelAsString": true
          }
        }
      }
    },
    "DayDetails": {
      "description": "Properties of a daily schedule.",
      "type": "object",
      "properties": {
        "time": {
          "description": "The time of day the schedule will occur.",
          "type": "string"
        }
      }
    },
    "DetachDataDiskProperties": {
      "description": "Request body for detaching data disk from a virtual machine.",
      "type": "object",
      "properties": {
        "existingLabDiskId": {
          "description": "Specifies the disk resource ID to detach from virtual machine.",
          "type": "string"
        }
      }
    },
    "DetachDiskProperties": {
      "type": "object",
      "properties": {
        "leasedByLabVmId": {
          "description": "The resource ID of the Lab VM to which the disk is attached.",
          "type": "string"
        }
      }
    },
    "Disk": {
      "description": "A Disk.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiskProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "DiskProperties": {
      "type": "object",
      "properties": {
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "enum": [ "Standard", "Premium" ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        },
        "diskSizeGiB": {
          "format": "int32",
          "description": "The size of the disk in GibiBytes.",
          "type": "integer"
        },
        "leasedByLabVmId": {
          "description": "The resource ID of the VM to which this disk is leased.",
          "type": "string"
        },
        "diskBlobName": {
          "description": "When backed by a blob, the name of the VHD blob without extension.",
          "type": "string"
        },
        "diskUri": {
          "description": "When backed by a blob, the URI of underlying blob.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the disk.",
          "type": "string"
        },
        "hostCaching": {
          "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
          "type": "string"
        },
        "managedDiskId": {
          "description": "When backed by managed disk, this is the ID of the compute disk resource.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "DtlEnvironment": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "EnvironmentDeploymentProperties": {
      "description": "Properties of an environment deployment.",
      "type": "object",
      "properties": {
        "armTemplateId": {
          "description": "The Azure Resource Manager template's identifier.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the Azure Resource Manager template.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArmTemplateParameterProperties" }
        }
      }
    },
    "EnvironmentProperties": {
      "description": "Properties of an environment.",
      "type": "object",
      "properties": {
        "deploymentProperties": {
          "$ref": "#/definitions/EnvironmentDeploymentProperties",
          "description": "The deployment properties of the environment."
        },
        "armTemplateDisplayName": {
          "description": "The display name of the Azure Resource Manager template that produced the environment.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "The identifier  of the resource group containing the environment's resources.",
          "type": "string"
        },
        "createdByUser": {
          "description": "The creator of the environment.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "EvaluatePoliciesProperties": {
      "description": "Properties for evaluating a policy set.",
      "type": "object",
      "properties": {
        "factName": {
          "description": "The fact name.",
          "type": "string"
        },
        "factData": {
          "description": "The fact data.",
          "type": "string"
        },
        "valueOffset": {
          "description": "The value offset.",
          "type": "string"
        }
      }
    },
    "EvaluatePoliciesRequest": {
      "description": "Request body for evaluating a policy set.",
      "type": "object",
      "properties": {
        "policies": {
          "description": "Policies to evaluate.",
          "type": "array",
          "items": { "$ref": "#/definitions/EvaluatePoliciesProperties" }
        }
      }
    },
    "EvaluatePoliciesResponse": {
      "description": "Response body for evaluating a policy set.",
      "type": "object",
      "properties": {
        "results": {
          "description": "Results of evaluating a policy set.",
          "type": "array",
          "items": { "$ref": "#/definitions/PolicySetResult" }
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "eventName": {
          "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
          "enum": [ "AutoShutdown", "Cost" ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationChannelEventType",
            "modelAsString": true
          }
        }
      }
    },
    "ExportLabResourceUsageParameters": {
      "type": "object",
      "properties": {
        "blobStorageAbsoluteSasUri": {
          "description": "The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to.",
          "type": "string"
        },
        "usageStartDate": {
          "description": "The start time of the usage.",
          "type": "string"
        }
      }
    },
    "ExternalSubnet": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        }
      }
    },
    "Formula": {
      "description": "A formula for creating a VM, specifying an image base and other parameters",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FormulaProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "FormulaProperties": {
      "description": "Properties of a formula.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the formula.",
          "type": "string"
        },
        "author": {
          "description": "The author of the formula.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the formula.",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of the formula.",
          "type": "string"
        },
        "formulaContent": {
          "$ref": "#/definitions/LabVirtualMachineCreationParameter",
          "description": "The content of the formula."
        },
        "vm": {
          "$ref": "#/definitions/FormulaPropertiesFromVm",
          "description": "Information about a VM from which a formula is to be created."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "FormulaPropertiesFromVm": {
      "description": "Information about a VM from which a formula is to be created.",
      "type": "object",
      "properties": {
        "labVmId": {
          "description": "The identifier of the VM from which a formula is to be created.",
          "type": "string"
        }
      }
    },
    "GalleryImage": {
      "description": "A gallery image.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GalleryImageProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "GalleryImageProperties": {
      "description": "Properties of a gallery image.",
      "type": "object",
      "properties": {
        "author": {
          "description": "The author of the gallery image.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the gallery image.",
          "type": "string"
        },
        "description": {
          "description": "The description of the gallery image.",
          "type": "string"
        },
        "imageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The image reference of the gallery image."
        },
        "icon": {
          "description": "The icon of the gallery image.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether this gallery image is enabled.",
          "type": "boolean"
        }
      }
    },
    "GalleryImageReference": {
      "description": "The reference information for an Azure Marketplace image.",
      "type": "object",
      "properties": {
        "offer": {
          "description": "The offer of the gallery image.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the gallery image.",
          "type": "string"
        },
        "sku": {
          "description": "The SKU of the gallery image.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the gallery image.",
          "type": "string"
        },
        "version": {
          "description": "The version of the gallery image.",
          "type": "string"
        }
      }
    },
    "GenerateArmTemplateRequest": {
      "description": "Parameters for generating an ARM template for deploying artifacts.",
      "type": "object",
      "properties": {
        "virtualMachineName": {
          "description": "The resource name of the virtual machine.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the ARM template.",
          "type": "array",
          "items": { "$ref": "#/definitions/ParameterInfo" }
        },
        "location": {
          "description": "The location of the virtual machine.",
          "type": "string"
        },
        "fileUploadOptions": {
          "description": "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
          "enum": [ "UploadFilesAndGenerateSasTokens", "None" ],
          "type": "string",
          "x-ms-enum": {
            "name": "FileUploadOptions",
            "modelAsString": true
          }
        }
      }
    },
    "GenerateUploadUriParameter": {
      "description": "Properties for generating an upload URI.",
      "type": "object",
      "properties": {
        "blobName": {
          "description": "The blob name of the upload URI.",
          "type": "string"
        }
      }
    },
    "GenerateUploadUriResponse": {
      "description": "Reponse body for generating an upload URI.",
      "type": "object",
      "properties": {
        "uploadUri": {
          "description": "The upload URI for the VHD.",
          "type": "string"
        }
      }
    },
    "HourDetails": {
      "description": "Properties of an hourly schedule.",
      "type": "object",
      "properties": {
        "minute": {
          "format": "int32",
          "description": "Minutes of the hour the schedule will run.",
          "type": "integer"
        }
      }
    },
    "IdentityProperties": {
      "description": "IdentityProperties",
      "type": "object",
      "properties": {
        "type": {
          "description": "Managed identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant identifier of resource.",
          "type": "string"
        },
        "clientSecretUrl": {
          "description": "The client secret URL of the identity.",
          "type": "string"
        }
      }
    },
    "InboundNatRule": {
      "type": "object",
      "properties": {
        "transportProtocol": {
          "description": "The transport protocol for the endpoint.",
          "enum": [ "Tcp", "Udp" ],
          "type": "string",
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "format": "int32",
          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.",
          "type": "integer"
        },
        "backendPort": {
          "format": "int32",
          "description": "The port to which the external traffic will be redirected.",
          "type": "integer"
        }
      }
    },
    "Lab": {
      "description": "A lab.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "LabCost": {
      "description": "A cost item.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabCostProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "LabCostDetailsProperties": {
      "description": "The properties of a lab cost item.",
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "description": "The date of the cost item.",
          "type": "string"
        },
        "cost": {
          "format": "double",
          "description": "The cost component of the cost item.",
          "type": "number"
        },
        "costType": {
          "description": "The type of the cost.",
          "enum": [ "Unavailable", "Reported", "Projected" ],
          "type": "string",
          "x-ms-enum": {
            "name": "CostType",
            "modelAsString": true
          }
        }
      }
    },
    "LabCostProperties": {
      "description": "Properties of a cost item.",
      "type": "object",
      "properties": {
        "targetCost": {
          "$ref": "#/definitions/TargetCostProperties",
          "description": "The target cost properties"
        },
        "labCostSummary": {
          "$ref": "#/definitions/LabCostSummaryProperties",
          "description": "The lab cost summary component of the cost data."
        },
        "labCostDetails": {
          "description": "The lab cost details component of the cost data.",
          "type": "array",
          "items": { "$ref": "#/definitions/LabCostDetailsProperties" }
        },
        "resourceCosts": {
          "description": "The resource cost component of the cost data.",
          "type": "array",
          "items": { "$ref": "#/definitions/LabResourceCostProperties" }
        },
        "currencyCode": {
          "description": "The currency code of the cost.",
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "The start time of the cost data.",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "description": "The end time of the cost data.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the cost.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "LabCostSummaryProperties": {
      "type": "object",
      "properties": {
        "estimatedLabCost": {
          "format": "double",
          "description": "The cost component of the cost item.",
          "type": "number"
        }
      }
    },
    "LabProperties": {
      "description": "Properties of a lab.",
      "type": "object",
      "properties": {
        "defaultStorageAccount": {
          "description": "The lab's default storage account.",
          "type": "string"
        },
        "defaultPremiumStorageAccount": {
          "description": "The lab's default premium storage account.",
          "type": "string"
        },
        "artifactsStorageAccount": {
          "description": "The lab's artifact storage account.",
          "type": "string"
        },
        "premiumDataDiskStorageAccount": {
          "description": "The lab's premium data disk storage account.",
          "type": "string"
        },
        "vaultName": {
          "description": "The lab's Key vault.",
          "type": "string"
        },
        "labStorageType": {
          "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
          "enum": [ "Standard", "Premium" ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the lab.",
          "type": "string"
        },
        "storageDetails": {
          "$ref": "#/definitions/LabStorageProperties",
          "description": "The storage properties."
        },
        "premiumDataDisks": {
          "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
          "enum": [ "Disabled", "Enabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "PremiumDataDisk",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "LabResourceCostProperties": {
      "description": "The properties of a resource cost item.",
      "type": "object",
      "properties": {
        "resourcename": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "resourceUId": {
          "description": "The unique identifier of the resource.",
          "type": "string"
        },
        "resourceCost": {
          "format": "double",
          "description": "The cost component of the resource cost item.",
          "type": "number"
        },
        "resourceType": {
          "description": "The logical resource type (ex. virtualmachine, storageaccount)",
          "type": "string"
        },
        "resourceOwner": {
          "description": "The owner of the resource (ex. janedoe@microsoft.com)",
          "type": "string"
        },
        "resourcePricingTier": {
          "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)",
          "type": "string"
        },
        "resourceStatus": {
          "description": "The status of the resource (ex. Active)",
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource",
          "type": "string"
        },
        "externalResourceId": {
          "description": "The ID of the external resource",
          "type": "string"
        }
      }
    },
    "LabStorageProperties": {
      "type": "object",
      "properties": {
        "defaultStorageAccount": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The default storage account properties."
        },
        "defaultPremiumStorageAccount": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The default premium storage account properties."
        },
        "artifactsStorageAccount": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The artifacts storage account properties."
        },
        "premiumDataDiskStorageAccount": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The premium data disk storage account properties."
        }
      }
    },
    "LabVhd": {
      "description": "Properties of a VHD in the lab.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The URI to the VHD.",
          "type": "string"
        }
      }
    },
    "LabVirtualMachine": {
      "description": "A virtual machine.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabVirtualMachineProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "LabVirtualMachineCreationParameter": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabVirtualMachineCreationParameterProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "LabVirtualMachineCreationParameterProperties": {
      "type": "object",
      "properties": {
        "bulkCreationParameters": {
          "$ref": "#/definitions/BulkCreationParameters",
          "description": "The number of virtual machine instances to create."
        },
        "notes": {
          "description": "The notes of the virtual machine.",
          "type": "string"
        },
        "ownerObjectId": {
          "description": "The object identifier of the owner of the virtual machine.",
          "type": "string"
        },
        "createdByUserId": {
          "description": "The object identifier of the creator of the virtual machine.",
          "type": "string"
        },
        "createdByUser": {
          "description": "The email address of creator of the virtual machine.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the virtual machine.",
          "type": "string"
        },
        "computeId": {
          "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
          "type": "string"
        },
        "customImageId": {
          "description": "The custom image identifier of the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the virtual machine.",
          "type": "string"
        },
        "size": {
          "description": "The size of the virtual machine.",
          "type": "string"
        },
        "userName": {
          "description": "The user name of the virtual machine.",
          "type": "string"
        },
        "password": {
          "description": "The password of the virtual machine administrator.",
          "type": "string"
        },
        "sshKey": {
          "description": "The SSH key of the virtual machine administrator.",
          "type": "string"
        },
        "isAuthenticationWithSshKey": {
          "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
          "type": "boolean"
        },
        "fqdn": {
          "description": "The fully-qualified domain name of the virtual machine.",
          "type": "string"
        },
        "labSubnetName": {
          "description": "The lab subnet name of the virtual machine.",
          "type": "string"
        },
        "labVirtualNetworkId": {
          "description": "The lab virtual network identifier of the virtual machine.",
          "type": "string"
        },
        "disallowPublicIpAddress": {
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "type": "boolean"
        },
        "artifacts": {
          "description": "The artifacts to be installed on the virtual machine.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArtifactInstallProperties" }
        },
        "artifactDeploymentStatus": {
          "$ref": "#/definitions/ArtifactDeploymentStatusProperties",
          "description": "The artifact deployment status for the virtual machine."
        },
        "galleryImageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine."
        },
        "computeVm": {
          "$ref": "#/definitions/ComputeVmProperties",
          "description": "The compute virtual machine properties."
        },
        "networkInterface": {
          "$ref": "#/definitions/NetworkInterfaceProperties",
          "description": "The network interface properties."
        },
        "applicableSchedule": {
          "$ref": "#/definitions/ApplicableSchedule",
          "description": "The applicable schedule for the virtual machine."
        },
        "expirationDate": {
          "description": "The expiration date for VM.",
          "type": "string"
        },
        "allowClaim": {
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "type": "boolean"
        },
        "storageType": {
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "type": "string"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "enum": [ "FromCustomImage", "FromGalleryImage" ],
          "type": "string",
          "x-ms-enum": {
            "name": "VirtualMachineCreationSource",
            "modelAsString": true
          }
        },
        "environmentId": {
          "description": "The resource ID of the environment that contains this virtual machine, if any.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "LabVirtualMachineProperties": {
      "description": "Properties of a virtual machine.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes of the virtual machine.",
          "type": "string"
        },
        "ownerObjectId": {
          "description": "The object identifier of the owner of the virtual machine.",
          "type": "string"
        },
        "createdByUserId": {
          "description": "The object identifier of the creator of the virtual machine.",
          "type": "string"
        },
        "createdByUser": {
          "description": "The email address of creator of the virtual machine.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the virtual machine.",
          "type": "string"
        },
        "computeId": {
          "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
          "type": "string"
        },
        "customImageId": {
          "description": "The custom image identifier of the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the virtual machine.",
          "type": "string"
        },
        "size": {
          "description": "The size of the virtual machine.",
          "type": "string"
        },
        "userName": {
          "description": "The user name of the virtual machine.",
          "type": "string"
        },
        "password": {
          "description": "The password of the virtual machine administrator.",
          "type": "string"
        },
        "sshKey": {
          "description": "The SSH key of the virtual machine administrator.",
          "type": "string"
        },
        "isAuthenticationWithSshKey": {
          "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
          "type": "boolean"
        },
        "fqdn": {
          "description": "The fully-qualified domain name of the virtual machine.",
          "type": "string"
        },
        "labSubnetName": {
          "description": "The lab subnet name of the virtual machine.",
          "type": "string"
        },
        "labVirtualNetworkId": {
          "description": "The lab virtual network identifier of the virtual machine.",
          "type": "string"
        },
        "disallowPublicIpAddress": {
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "type": "boolean"
        },
        "artifacts": {
          "description": "The artifacts to be installed on the virtual machine.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArtifactInstallProperties" }
        },
        "artifactDeploymentStatus": {
          "$ref": "#/definitions/ArtifactDeploymentStatusProperties",
          "description": "The artifact deployment status for the virtual machine."
        },
        "galleryImageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine."
        },
        "computeVm": {
          "$ref": "#/definitions/ComputeVmProperties",
          "description": "The compute virtual machine properties."
        },
        "networkInterface": {
          "$ref": "#/definitions/NetworkInterfaceProperties",
          "description": "The network interface properties."
        },
        "applicableSchedule": {
          "$ref": "#/definitions/ApplicableSchedule",
          "description": "The applicable schedule for the virtual machine."
        },
        "expirationDate": {
          "description": "The expiration date for VM.",
          "type": "string"
        },
        "allowClaim": {
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "type": "boolean"
        },
        "storageType": {
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "type": "string"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "enum": [ "FromCustomImage", "FromGalleryImage" ],
          "type": "string",
          "x-ms-enum": {
            "name": "VirtualMachineCreationSource",
            "modelAsString": true
          }
        },
        "environmentId": {
          "description": "The resource ID of the environment that contains this virtual machine, if any.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "LinuxOsInfo": {
      "description": "Information about a Linux OS.",
      "type": "object",
      "properties": {
        "linuxOsState": {
          "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
          "enum": [ "NonDeprovisioned", "DeprovisionRequested", "DeprovisionApplied" ],
          "type": "string",
          "x-ms-enum": {
            "name": "LinuxOsState",
            "modelAsString": true
          }
        }
      }
    },
    "NetworkInterfaceProperties": {
      "description": "Properties of a network interface.",
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "description": "The resource ID of the virtual network.",
          "type": "string"
        },
        "subnetId": {
          "description": "The resource ID of the sub net.",
          "type": "string"
        },
        "publicIpAddressId": {
          "description": "The resource ID of the public IP address.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "The public IP address.",
          "type": "string"
        },
        "privateIpAddress": {
          "description": "The private IP address.",
          "type": "string"
        },
        "dnsName": {
          "description": "The DNS name.",
          "type": "string"
        },
        "rdpAuthority": {
          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
          "type": "string"
        },
        "sshAuthority": {
          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
          "type": "string"
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SharedPublicIpAddressConfiguration",
          "description": "The configuration for sharing a public IP address across multiple virtual machines."
        }
      }
    },
    "NotificationChannel": {
      "description": "A notification.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationChannelProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "NotificationChannelProperties": {
      "description": "Properties of a schedule.",
      "type": "object",
      "properties": {
        "webHookUrl": {
          "description": "The webhook URL to send notifications to.",
          "type": "string"
        },
        "description": {
          "description": "Description of notification.",
          "type": "string"
        },
        "events": {
          "description": "The list of event for which this notification is enabled.",
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the notification channel.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "NotificationSettings": {
      "description": "Notification settings for a schedule.",
      "type": "object",
      "properties": {
        "status": {
          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
          "enum": [ "Disabled", "Enabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationStatus",
            "modelAsString": true
          }
        },
        "timeInMinutes": {
          "format": "int32",
          "description": "Time in minutes before event at which notification will be sent.",
          "type": "integer"
        },
        "webhookUrl": {
          "description": "The webhook URL to which the notification will be sent.",
          "type": "string"
        }
      }
    },
    "NotifyParameters": {
      "description": "Properties for generating a Notification.",
      "type": "object",
      "properties": {
        "eventName": {
          "description": "The type of event (i.e. AutoShutdown, Cost)",
          "enum": [ "AutoShutdown", "Cost" ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationChannelEventType",
            "modelAsString": true
          }
        },
        "jsonPayload": {
          "description": "Properties for the notification in json format.",
          "type": "string"
        }
      }
    },
    "ParameterInfo": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "value": { "type": "string" }
      }
    },
    "ParametersValueFileInfo": {
      "type": "object",
      "properties": {
        "fileName": {
          "description": "File name.",
          "type": "string"
        },
        "parametersValueInfo": {
          "description": "Parameters value information in the file.",
          "type": "object"
        }
      }
    },
    "PercentageCostThresholdProperties": {
      "type": "object",
      "properties": {
        "thresholdValue": {
          "format": "double",
          "description": "The cost threshold value.",
          "type": "number"
        }
      }
    },
    "Policy": {
      "description": "A Policy.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "PolicyProperties": {
      "description": "Properties of a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the policy.",
          "type": "string"
        },
        "status": {
          "description": "The status of the policy.",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true
          }
        },
        "factName": {
          "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
          "enum": [ "UserOwnedLabVmCount", "UserOwnedLabPremiumVmCount", "LabVmCount", "LabPremiumVmCount", "LabVmSize", "GalleryImage", "UserOwnedLabVmCountInSubnet", "LabTargetCost" ],
          "type": "string",
          "x-ms-enum": {
            "name": "PolicyFactName",
            "modelAsString": true
          }
        },
        "factData": {
          "description": "The fact data of the policy.",
          "type": "string"
        },
        "threshold": {
          "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
          "type": "string"
        },
        "evaluatorType": {
          "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
          "enum": [ "AllowedValuesPolicy", "MaxValuePolicy" ],
          "type": "string",
          "x-ms-enum": {
            "name": "PolicyEvaluatorType",
            "modelAsString": true
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the policy.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "PolicySetResult": {
      "description": "Result of a policy set evaluation.",
      "type": "object",
      "properties": {
        "hasError": {
          "description": "A value indicating whether this policy set evaluation has discovered violations.",
          "type": "boolean"
        },
        "policyViolations": {
          "description": "The list of policy violations.",
          "type": "array",
          "items": { "$ref": "#/definitions/PolicyViolation" }
        }
      }
    },
    "PolicyViolation": {
      "description": "Policy violation.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code of the policy violation.",
          "type": "string"
        },
        "message": {
          "description": "The message of the policy violation.",
          "type": "string"
        }
      }
    },
    "Port": {
      "type": "object",
      "properties": {
        "transportProtocol": {
          "description": "Protocol type of the port.",
          "enum": [ "Tcp", "Udp" ],
          "type": "string",
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "backendPort": {
          "format": "int32",
          "description": "Backend port of the target virtual machine.",
          "type": "integer"
        }
      }
    },
    "ResponseWithContinuation[ArmTemplate]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArmTemplate" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Artifact]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Artifact" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[ArtifactSource]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/ArtifactSource" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[CustomImage]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/CustomImage" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Disk]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Disk" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[DtlEnvironment]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/DtlEnvironment" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Formula]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Formula" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[GalleryImage]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/GalleryImage" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Lab]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Lab" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[LabVhd]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/LabVhd" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[LabVirtualMachine]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/LabVirtualMachine" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[NotificationChannel]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/NotificationChannel" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Policy]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Policy" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Schedule]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Schedule" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[Secret]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/Secret" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[ServiceRunner]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/ServiceRunner" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[User]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "ResponseWithContinuation[VirtualNetwork]": {
      "description": "The response of a list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Results of the list operation.",
          "type": "array",
          "items": { "$ref": "#/definitions/VirtualNetwork" }
        },
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        }
      }
    },
    "Schedule": {
      "description": "A schedule.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduleProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "ScheduleProperties": {
      "description": "Properties of a schedule.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the schedule (i.e. Enabled, Disabled)",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true
          }
        },
        "taskType": {
          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
          "type": "string"
        },
        "weeklyRecurrence": {
          "$ref": "#/definitions/WeekDetails",
          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence."
        },
        "dailyRecurrence": {
          "$ref": "#/definitions/DayDetails",
          "description": "If the schedule will occur once each day of the week, specify the daily recurrence."
        },
        "hourlyRecurrence": {
          "$ref": "#/definitions/HourDetails",
          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence."
        },
        "timeZoneId": {
          "description": "The time zone ID (e.g. Pacific Standard time).",
          "type": "string"
        },
        "notificationSettings": {
          "$ref": "#/definitions/NotificationSettings",
          "description": "Notification settings."
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the schedule.",
          "type": "string"
        },
        "targetResourceId": {
          "description": "The resource ID to which the schedule belongs",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "Secret": {
      "description": "A secret.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecretProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "SecretProperties": {
      "description": "Properties of a secret.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret for secret creation.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "ServiceRunner": {
      "description": "A container for a managed identity to execute DevTest lab services.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "The identity of the resource."
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "SharedPublicIpAddressConfiguration": {
      "description": "Properties of a virtual machine that determine how it is connected to a load balancer.",
      "type": "object",
      "properties": {
        "inboundNatRules": {
          "description": "The incoming NAT rules",
          "type": "array",
          "items": { "$ref": "#/definitions/InboundNatRule" }
        }
      }
    },
    "ShutdownNotificationContent": {
      "type": "object",
      "properties": {
        "skipUrl": {
          "description": "The URL to skip auto-shutdown.",
          "type": "string"
        },
        "delayUrl60": {
          "description": "The URL to delay shutdown by 60 minutes.",
          "type": "string"
        },
        "delayUrl120": {
          "description": "The URL to delay shutdown by 2 hours.",
          "type": "string"
        },
        "vmName": {
          "description": "The virtual machine to be shut down.",
          "type": "string"
        },
        "guid": {
          "description": "The GUID for the virtual machine to be shut down.",
          "type": "string"
        },
        "owner": {
          "description": "The owner of the virtual machine.",
          "type": "string"
        },
        "eventType": {
          "description": "The event for which a notification will be sent.",
          "type": "string"
        },
        "text": {
          "description": "The text for the notification.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription ID for the schedule.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "The resource group name for the schedule.",
          "type": "string"
        },
        "labName": {
          "description": "The lab for the schedule.",
          "type": "string"
        }
      }
    },
    "StorageProperties": {
      "type": "object",
      "properties": {
        "statusOfPrimary": {
          "description": "Gets the status of the storage account",
          "type": "string"
        },
        "id": {
          "description": "Gets the resource ID of the storage account",
          "type": "string"
        },
        "accountType": {
          "description": "Gets the account type of the storage account",
          "type": "string"
        }
      }
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        },
        "labSubnetName": {
          "description": "The name of the subnet as seen in the lab.",
          "type": "string"
        },
        "allowPublicIp": {
          "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
          "enum": [ "Default", "Deny", "Allow" ],
          "type": "string",
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true
          }
        }
      }
    },
    "SubnetOverride": {
      "description": "Property overrides on a subnet of a virtual network.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        },
        "labSubnetName": {
          "description": "The name given to the subnet within the lab.",
          "type": "string"
        },
        "useInVmCreationPermission": {
          "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
          "enum": [ "Default", "Deny", "Allow" ],
          "type": "string",
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true
          }
        },
        "usePublicIpAddressPermission": {
          "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
          "enum": [ "Default", "Deny", "Allow" ],
          "type": "string",
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true
          }
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SubnetSharedPublicIpAddressConfiguration",
          "description": "Properties that virtual machines on this subnet will share."
        },
        "virtualNetworkPoolName": {
          "description": "The virtual network pool associated with this subnet.",
          "type": "string"
        }
      }
    },
    "SubnetSharedPublicIpAddressConfiguration": {
      "type": "object",
      "properties": {
        "allowedPorts": {
          "description": "Backend ports that virtual machines on this subnet are allowed to expose",
          "type": "array",
          "items": { "$ref": "#/definitions/Port" }
        }
      }
    },
    "SubscriptionNotification": {
      "type": "object",
      "properties": {
        "registrationDate": { "type": "string" },
        "state": {
          "enum": [ "NotDefined", "Registered", "Unregistered", "Warned", "Suspended", "Deleted" ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionNotificationState",
            "modelAsString": true
          }
        },
        "properties": { "$ref": "#/definitions/SubscriptionNotificationProperties" }
      }
    },
    "SubscriptionNotificationProperties": {
      "type": "object",
      "properties": { "tenantId": { "type": "string" } }
    },
    "TargetCostProperties": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Target cost status",
          "enum": [ "Enabled", "Disabled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "TargetCostStatus",
            "modelAsString": true
          }
        },
        "target": {
          "format": "int32",
          "description": "Lab target cost",
          "type": "integer"
        },
        "costThresholds": {
          "description": "Cost thresholds.",
          "type": "array",
          "items": { "$ref": "#/definitions/CostThresholdProperties" }
        },
        "cycleStartDateTime": {
          "description": "Reporting cycle start date.",
          "type": "string"
        },
        "cycleEndDateTime": {
          "description": "Reporting cycle end date.",
          "type": "string"
        },
        "cycleType": {
          "description": "Reporting cycle type.",
          "enum": [ "CalendarMonth", "Custom" ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReportingCycleType",
            "modelAsString": true
          }
        }
      }
    },
    "User": {
      "description": "Profile of a lab user.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "UserIdentity": {
      "description": "Identity attributes of a lab user.",
      "type": "object",
      "properties": {
        "principalName": {
          "description": "Set to the principal name / UPN of the client JWT making the request.",
          "type": "string"
        },
        "principalId": {
          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.",
          "type": "string"
        },
        "tenantId": {
          "description": "Set to the tenant ID of the client JWT making the request.",
          "type": "string"
        },
        "objectId": {
          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.",
          "type": "string"
        },
        "appId": {
          "description": "Set to the app Id of the client JWT making the request.",
          "type": "string"
        }
      }
    },
    "UserProperties": {
      "description": "Properties of a lab user profile.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The identity of the user."
        },
        "secretStore": {
          "$ref": "#/definitions/UserSecretStore",
          "description": "The secret store of the user."
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the user profile.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "UserSecretStore": {
      "description": "Properties of a user's secret store.",
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "description": "The URI of the user's Key vault.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "The ID of the user's Key vault.",
          "type": "string"
        }
      }
    },
    "VirtualNetwork": {
      "description": "A virtual network.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      },
      "x-ms-azure-resource": true
    },
    "VirtualNetworkProperties": {
      "description": "Properties of a virtual network.",
      "type": "object",
      "properties": {
        "allowedSubnets": {
          "description": "The allowed subnets of the virtual network.",
          "type": "array",
          "items": { "$ref": "#/definitions/Subnet" }
        },
        "description": {
          "description": "The description of the virtual network.",
          "type": "string"
        },
        "externalProviderResourceId": {
          "description": "The Microsoft.Network resource identifier of the virtual network.",
          "type": "string"
        },
        "externalSubnets": {
          "description": "The external subnet properties.",
          "type": "array",
          "items": { "$ref": "#/definitions/ExternalSubnet" }
        },
        "subnetOverrides": {
          "description": "The subnet overrides of the virtual network.",
          "type": "array",
          "items": { "$ref": "#/definitions/SubnetOverride" }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The creation date of the virtual network.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      }
    },
    "WeekDetails": {
      "description": "Properties of a weekly schedule.",
      "type": "object",
      "properties": {
        "weekdays": {
          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
          "type": "array",
          "items": { "type": "string" }
        },
        "time": {
          "description": "The time of the day the schedule will occur.",
          "type": "string"
        }
      }
    },
    "WindowsOsInfo": {
      "description": "Information about a Windows OS.",
      "type": "object",
      "properties": {
        "windowsOsState": {
          "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
          "enum": [ "NonSysprepped", "SysprepRequested", "SysprepApplied" ],
          "type": "string",
          "x-ms-enum": {
            "name": "WindowsOsState",
            "modelAsString": true
          }
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "Client API version.",
      "required": true,
      "type": "string",
      "default": "2016-05-15"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Implicit Grant",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": { "user_impersonation": "Access Microsoft Azure" }
    }
  },
  "security": [ { "oauth2": [ "user_impersonation" ] } ]
}
